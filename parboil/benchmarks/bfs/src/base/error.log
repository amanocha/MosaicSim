** Creating AST consumer for: /home/aninda/ispass2020/parboil/benchmarks/bfs/src/base/decades_base/main_big_pp.cpp
LinkageSpecDecl 0x5b06a88 </home/ts20/share/llvm9/llvm-project/build/projects/openmp/runtime/src/omp.h:24:5, line:356:5> line:24:12 C
|-EnumDecl 0x5b06ad8 <line:45:13, line:50:5> line:45:18 omp_sched_t
| |-EnumConstantDecl 0x5b06bd8 <line:46:2, col:21> col:2 omp_sched_static 'omp_sched_t'
| | `-ImplicitCastExpr 0x5b06dc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b06bc0 <col:21> 'int'
| |     `-IntegerLiteral 0x5b06ba0 <col:21> 'int' 1
| |-EnumConstantDecl 0x5b06c60 <line:47:2, col:22> col:2 omp_sched_dynamic 'omp_sched_t'
| | `-ImplicitCastExpr 0x5b06dd8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b06c48 <col:22> 'int'
| |     `-IntegerLiteral 0x5b06c28 <col:22> 'int' 2
| |-EnumConstantDecl 0x5b06ce8 <line:48:2, col:21> col:2 omp_sched_guided 'omp_sched_t'
| | `-ImplicitCastExpr 0x5b06df0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b06cd0 <col:21> 'int'
| |     `-IntegerLiteral 0x5b06cb0 <col:21> 'int' 3
| `-EnumConstantDecl 0x5b06d70 <line:49:2, col:19> col:2 omp_sched_auto 'omp_sched_t'
|   `-ImplicitCastExpr 0x5b06e08 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5b06d58 <col:19> 'int'
|       `-IntegerLiteral 0x5b06d38 <col:19> 'int' 4
|-TypedefDecl 0x5b06e78 <line:45:5, line:50:7> col:7 referenced omp_sched_t 'enum omp_sched_t':'omp_sched_t'
| `-ElaboratedType 0x5b06e20 'enum omp_sched_t' sugar
|   `-EnumType 0x5b06b80 'omp_sched_t'
|     `-Enum 0x5b06ad8 'omp_sched_t'
|-FunctionDecl 0x5b06fc8 <line:53:5, col:41> col:17 omp_set_num_threads 'void (int)' extern
| `-ParmVarDecl 0x5b06f00 <col:38> col:41 'int'
|-FunctionDecl 0x5b07160 <line:54:5, col:37> col:17 omp_set_dynamic 'void (int)' extern
| `-ParmVarDecl 0x5b070d0 <col:34> col:37 'int'
|-FunctionDecl 0x5b072b0 <line:55:5, col:36> col:17 omp_set_nested 'void (int)' extern
| `-ParmVarDecl 0x5b07220 <col:33> col:36 'int'
|-FunctionDecl 0x5b07400 <line:56:5, col:47> col:17 omp_set_max_active_levels 'void (int)' extern
| `-ParmVarDecl 0x5b07370 <col:44> col:47 'int'
|-FunctionDecl 0x5b07678 <line:57:5, col:51> col:17 omp_set_schedule 'void (omp_sched_t, int)' extern
| |-ParmVarDecl 0x5b074e0 <col:35> col:46 'omp_sched_t':'omp_sched_t'
| `-ParmVarDecl 0x5b07560 <col:48> col:51 'int'
|-FunctionDecl 0x5b077f0 <line:60:5, col:41> col:16 omp_get_num_threads 'int ()' extern
|-FunctionDecl 0x5b33ba0 <line:61:5, col:37> col:16 omp_get_dynamic 'int ()' extern
|-FunctionDecl 0x5b33ce0 <line:62:5, col:36> col:16 omp_get_nested 'int ()' extern
|-FunctionDecl 0x5b33e20 <line:63:5, col:41> col:16 omp_get_max_threads 'int ()' extern
|-FunctionDecl 0x5b33f60 <line:64:5, col:40> col:16 omp_get_thread_num 'int ()' extern
|-FunctionDecl 0x5b340a0 <line:65:5, col:39> col:16 omp_get_num_procs 'int ()' extern
|-FunctionDecl 0x5b341e0 <line:66:5, col:37> col:16 omp_in_parallel 'int ()' extern
|-FunctionDecl 0x5b34320 <line:67:5, col:34> col:16 omp_in_final 'int ()' extern
|-FunctionDecl 0x5b34460 <line:68:5, col:42> col:16 omp_get_active_level 'int ()' extern
|-FunctionDecl 0x5b345a0 <line:69:5, col:35> col:16 omp_get_level 'int ()' extern
|-FunctionDecl 0x5b34720 <line:70:5, col:48> col:16 omp_get_ancestor_thread_num 'int (int)' extern
| `-ParmVarDecl 0x5b34658 <col:45> col:48 'int'
|-FunctionDecl 0x5b34878 <line:71:5, col:38> col:16 omp_get_team_size 'int (int)' extern
| `-ParmVarDecl 0x5b347e0 <col:35> col:38 'int'
|-FunctionDecl 0x5b349c0 <line:72:5, col:42> col:16 omp_get_thread_limit 'int ()' extern
|-FunctionDecl 0x5b34b20 <line:73:5, col:47> col:16 omp_get_max_active_levels 'int ()' extern
|-FunctionDecl 0x5b34de8 <line:74:5, col:55> col:17 omp_get_schedule 'void (omp_sched_t *, int *)' extern
| |-ParmVarDecl 0x5b34c28 <col:35, col:47> col:48 'omp_sched_t *'
| `-ParmVarDecl 0x5b34cd0 <col:50, col:54> col:55 'int *'
|-FunctionDecl 0x5b34f38 <line:75:5, col:47> col:16 omp_get_max_task_priority 'int ()' extern
|-CXXRecordDecl 0x5b34fd8 <line:78:13, line:80:5> line:78:20 struct omp_lock_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5b350f8 <col:13, col:20> col:20 implicit struct omp_lock_t
| `-FieldDecl 0x5b351a0 <line:79:9, col:16> col:16 _lk 'void *'
|-TypedefDecl 0x5b35268 <line:78:5, line:80:7> col:7 referenced omp_lock_t 'struct omp_lock_t':'omp_lock_t'
| `-ElaboratedType 0x5b35210 'struct omp_lock_t' sugar
|   `-RecordType 0x5b35070 'omp_lock_t'
|     `-CXXRecord 0x5b34fd8 'omp_lock_t'
|-FunctionDecl 0x5b35458 <line:82:5, col:44> col:17 omp_init_lock 'void (omp_lock_t *)' extern
| `-ParmVarDecl 0x5b35368 <col:32, col:43> col:44 'omp_lock_t *'
|-FunctionDecl 0x5b355a0 <line:83:5, col:43> col:17 omp_set_lock 'void (omp_lock_t *)' extern
| `-ParmVarDecl 0x5b35510 <col:31, col:42> col:43 'omp_lock_t *'
|-FunctionDecl 0x5b356e8 <line:84:5, col:45> col:17 omp_unset_lock 'void (omp_lock_t *)' extern
| `-ParmVarDecl 0x5b35658 <col:33, col:44> col:45 'omp_lock_t *'
|-FunctionDecl 0x5b35830 <line:85:5, col:47> col:17 omp_destroy_lock 'void (omp_lock_t *)' extern
| `-ParmVarDecl 0x5b357a0 <col:35, col:46> col:47 'omp_lock_t *'
|-FunctionDecl 0x5b359e0 <line:86:5, col:43> col:16 omp_test_lock 'int (omp_lock_t *)' extern
| `-ParmVarDecl 0x5b358e8 <col:31, col:42> col:43 'omp_lock_t *'
|-CXXRecordDecl 0x5b35a88 <line:89:13, line:91:5> line:89:20 struct omp_nest_lock_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5b35bb8 <col:13, col:20> col:20 implicit struct omp_nest_lock_t
| `-FieldDecl 0x5b35c60 <line:90:9, col:16> col:16 _lk 'void *'
|-TypedefDecl 0x5b35d28 <line:89:5, line:91:7> col:7 referenced omp_nest_lock_t 'struct omp_nest_lock_t':'omp_nest_lock_t'
| `-ElaboratedType 0x5b35cd0 'struct omp_nest_lock_t' sugar
|   `-RecordType 0x5b35b30 'omp_nest_lock_t'
|     `-CXXRecord 0x5b35a88 'omp_nest_lock_t'
|-FunctionDecl 0x5b35f18 <line:93:5, col:54> col:17 omp_init_nest_lock 'void (omp_nest_lock_t *)' extern
| `-ParmVarDecl 0x5b35e28 <col:37, col:53> col:54 'omp_nest_lock_t *'
|-FunctionDecl 0x5b36060 <line:94:5, col:53> col:17 omp_set_nest_lock 'void (omp_nest_lock_t *)' extern
| `-ParmVarDecl 0x5b35fd0 <col:36, col:52> col:53 'omp_nest_lock_t *'
|-FunctionDecl 0x5b361a8 <line:95:5, col:55> col:17 omp_unset_nest_lock 'void (omp_nest_lock_t *)' extern
| `-ParmVarDecl 0x5b36118 <col:38, col:54> col:55 'omp_nest_lock_t *'
|-FunctionDecl 0x5b362f0 <line:96:5, col:57> col:17 omp_destroy_nest_lock 'void (omp_nest_lock_t *)' extern
| `-ParmVarDecl 0x5b36260 <col:40, col:56> col:57 'omp_nest_lock_t *'
|-FunctionDecl 0x5b364a0 <line:97:5, col:53> col:16 omp_test_nest_lock 'int (omp_nest_lock_t *)' extern
| `-ParmVarDecl 0x5b363a8 <col:36, col:52> col:53 'omp_nest_lock_t *'
|-EnumDecl 0x5b36548 <line:100:13, line:114:5> line:100:18 omp_sync_hint_t
| |-EnumConstantDecl 0x5b36648 <line:101:9, col:30> col:9 referenced omp_sync_hint_none 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37758 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b36630 <col:30> 'int'
| |     `-IntegerLiteral 0x5b36610 <col:30> 'int' 0
| |-EnumConstantDecl 0x5b366d0 <line:102:9, col:30> col:9 omp_lock_hint_none 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37770 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b366b8 <col:30> 'int'
| |     `-DeclRefExpr 0x5b36698 <col:30> 'int' EnumConstant 0x5b36648 'omp_sync_hint_none' 'omp_sync_hint_t'
| |-EnumConstantDecl 0x5b36758 <line:103:9, col:37> col:9 referenced omp_sync_hint_uncontended 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37788 <col:37> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b36740 <col:37> 'int'
| |     `-IntegerLiteral 0x5b36720 <col:37> 'int' 1
| |-EnumConstantDecl 0x5b367e0 <line:104:9, col:37> col:9 omp_lock_hint_uncontended 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b377a0 <col:37> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b367c8 <col:37> 'int'
| |     `-DeclRefExpr 0x5b367a8 <col:37> 'int' EnumConstant 0x5b36758 'omp_sync_hint_uncontended' 'omp_sync_hint_t'
| |-EnumConstantDecl 0x5b368c8 <line:105:9, col:40> col:9 referenced omp_sync_hint_contended 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b377b8 <col:35, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b368b0 <col:35, col:40> 'int'
| |     `-ParenExpr 0x5b36890 <col:35, col:40> 'int'
| |       `-BinaryOperator 0x5b36870 <col:36, col:39> 'int' '<<'
| |         |-IntegerLiteral 0x5b36830 <col:36> 'int' 1
| |         `-IntegerLiteral 0x5b36850 <col:39> 'int' 1
| |-EnumConstantDecl 0x5b36950 <line:106:9, col:35> col:9 omp_lock_hint_contended 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b377d0 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b36938 <col:35> 'int'
| |     `-DeclRefExpr 0x5b36918 <col:35> 'int' EnumConstant 0x5b368c8 'omp_sync_hint_contended' 'omp_sync_hint_t'
| |-EnumConstantDecl 0x5b36a38 <line:107:9, col:45> col:9 referenced omp_sync_hint_nonspeculative 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b377e8 <col:40, col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b36a20 <col:40, col:45> 'int'
| |     `-ParenExpr 0x5b36a00 <col:40, col:45> 'int'
| |       `-BinaryOperator 0x5b369e0 <col:41, col:44> 'int' '<<'
| |         |-IntegerLiteral 0x5b369a0 <col:41> 'int' 1
| |         `-IntegerLiteral 0x5b369c0 <col:44> 'int' 2
| |-EnumConstantDecl 0x5b36ac0 <line:108:9, col:40> col:9 omp_lock_hint_nonspeculative 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37800 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b36aa8 <col:40> 'int'
| |     `-DeclRefExpr 0x5b36a88 <col:40> 'int' EnumConstant 0x5b36a38 'omp_sync_hint_nonspeculative' 'omp_sync_hint_t'
| |-EnumConstantDecl 0x5b373c8 <line:109:9, col:42> col:9 referenced omp_sync_hint_speculative 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37818 <col:37, col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b373b0 <col:37, col:42> 'int'
| |     `-ParenExpr 0x5b37390 <col:37, col:42> 'int'
| |       `-BinaryOperator 0x5b37370 <col:38, col:41> 'int' '<<'
| |         |-IntegerLiteral 0x5b36b10 <col:38> 'int' 1
| |         `-IntegerLiteral 0x5b37350 <col:41> 'int' 3
| |-EnumConstantDecl 0x5b37450 <line:110:9, col:37> col:9 omp_lock_hint_speculative 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37830 <col:37> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b37438 <col:37> 'int'
| |     `-DeclRefExpr 0x5b37418 <col:37> 'int' EnumConstant 0x5b373c8 'omp_sync_hint_speculative' 'omp_sync_hint_t'
| |-EnumConstantDecl 0x5b37538 <line:111:9, col:35> col:9 kmp_lock_hint_hle 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37848 <col:29, col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b37520 <col:29, col:35> 'int'
| |     `-ParenExpr 0x5b37500 <col:29, col:35> 'int'
| |       `-BinaryOperator 0x5b374e0 <col:30, col:33> 'int' '<<'
| |         |-IntegerLiteral 0x5b374a0 <col:30> 'int' 1
| |         `-IntegerLiteral 0x5b374c0 <col:33> 'int' 16
| |-EnumConstantDecl 0x5b37620 <line:112:9, col:35> col:9 kmp_lock_hint_rtm 'omp_sync_hint_t'
| | `-ImplicitCastExpr 0x5b37860 <col:29, col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b37608 <col:29, col:35> 'int'
| |     `-ParenExpr 0x5b375e8 <col:29, col:35> 'int'
| |       `-BinaryOperator 0x5b375c8 <col:30, col:33> 'int' '<<'
| |         |-IntegerLiteral 0x5b37588 <col:30> 'int' 1
| |         `-IntegerLiteral 0x5b375a8 <col:33> 'int' 17
| `-EnumConstantDecl 0x5b37708 <line:113:9, col:40> col:9 kmp_lock_hint_adaptive 'omp_sync_hint_t'
|   `-ImplicitCastExpr 0x5b37878 <col:34, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5b376f0 <col:34, col:40> 'int'
|       `-ParenExpr 0x5b376d0 <col:34, col:40> 'int'
|         `-BinaryOperator 0x5b376b0 <col:35, col:38> 'int' '<<'
|           |-IntegerLiteral 0x5b37670 <col:35> 'int' 1
|           `-IntegerLiteral 0x5b37690 <col:38> 'int' 18
|-TypedefDecl 0x5b378e8 <line:100:5, line:114:7> col:7 referenced omp_sync_hint_t 'enum omp_sync_hint_t':'omp_sync_hint_t'
| `-ElaboratedType 0x5b37890 'enum omp_sync_hint_t' sugar
|   `-EnumType 0x5b365f0 'omp_sync_hint_t'
|     `-Enum 0x5b36548 'omp_sync_hint_t'
|-TypedefDecl 0x5b37990 <line:117:5, col:29> col:29 referenced omp_lock_hint_t 'omp_sync_hint_t':'omp_sync_hint_t'
| `-TypedefType 0x5b37960 'omp_sync_hint_t' sugar
|   |-Typedef 0x5b378e8 'omp_sync_hint_t'
|   `-ElaboratedType 0x5b37890 'enum omp_sync_hint_t' sugar
|     `-EnumType 0x5b365f0 'omp_sync_hint_t'
|       `-Enum 0x5b36548 'omp_sync_hint_t'
|-FunctionDecl 0x5b37ba8 <line:120:5, col:70> col:17 omp_init_lock_with_hint 'void (omp_lock_t *, omp_lock_hint_t)' extern
| |-ParmVarDecl 0x5b379f8 <col:41, col:52> col:53 'omp_lock_t *'
| `-ParmVarDecl 0x5b37a90 <col:55> col:70 'omp_lock_hint_t':'omp_sync_hint_t'
|-FunctionDecl 0x5b37df8 <line:121:5, col:80> col:17 omp_init_nest_lock_with_hint 'void (omp_nest_lock_t *, omp_lock_hint_t)' extern
| |-ParmVarDecl 0x5b37c68 <col:46, col:62> col:63 'omp_nest_lock_t *'
| `-ParmVarDecl 0x5b37ce0 <col:65> col:80 'omp_lock_hint_t':'omp_sync_hint_t'
|-FunctionDecl 0x5b37f70 <line:124:5, col:38> col:19 omp_get_wtime 'double ()' extern
|-FunctionDecl 0x5b380b0 <line:125:5, col:38> col:19 omp_get_wtick 'double ()' extern
|-FunctionDecl 0x5b381f0 <line:128:5, col:44> col:16 omp_get_default_device 'int ()' extern
|-FunctionDecl 0x5b39370 <line:129:5, col:44> col:17 omp_set_default_device 'void (int)' extern
| `-ParmVarDecl 0x5b382a8 <col:41> col:44 'int'
|-FunctionDecl 0x5b394b8 <line:130:5, col:43> col:16 omp_is_initial_device 'int ()' extern
|-FunctionDecl 0x5b395f8 <line:131:5, col:41> col:16 omp_get_num_devices 'int ()' extern
|-FunctionDecl 0x5b39738 <line:132:5, col:39> col:16 omp_get_num_teams 'int ()' extern
|-FunctionDecl 0x5b39878 <line:133:5, col:38> col:16 omp_get_team_num 'int ()' extern
|-FunctionDecl 0x5b399b8 <line:134:5, col:42> col:16 omp_get_cancellation 'int ()' extern
|-NamespaceDecl 0x5b39a58 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/x86_64-redhat-linux/bits/c++config.h:2190:1, line:2198:1> line:2190:11 std
| |-TypedefDecl 0x5b39ae0 <line:2192:3, col:29> col:29 size_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b39b50 <line:2193:3, col:20> col:20 ptrdiff_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| `-TypedefDecl 0x5b39bf8 <line:2196:3, col:29> col:29 nullptr_t 'decltype(nullptr)':'nullptr_t'
|   `-DecltypeType 0x5b39bc0 'decltype(nullptr)' sugar
|     |-CXXNullPtrLiteralExpr 0x5b39ba8 <col:20> 'nullptr_t'
|     `-BuiltinType 0x5acaa90 'nullptr_t'
|-TypedefDecl 0x5b39c68 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/stddef.h:46:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-LinkageSpecDecl 0x5b39ce0 </usr/include/stdlib.h:34:1, line:964:1> line:34:8 C
| |-TypedefDecl 0x5b39d48 </usr/include/bits/types.h:30:1, col:23> col:23 referenced __u_char 'unsigned char'
| | `-BuiltinType 0x5aca360 'unsigned char'
| |-TypedefDecl 0x5b39db8 <line:31:1, col:28> col:28 referenced __u_short 'unsigned short'
| | `-BuiltinType 0x5aca380 'unsigned short'
| |-TypedefDecl 0x5b39e28 <line:32:1, col:22> col:22 referenced __u_int 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b39e98 <line:33:1, col:27> col:27 referenced __u_long 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b39f08 <line:36:1, col:21> col:21 __int8_t 'signed char'
| | `-BuiltinType 0x5aca2c0 'signed char'
| |-TypedefDecl 0x5b39f78 <line:37:1, col:23> col:23 __uint8_t 'unsigned char'
| | `-BuiltinType 0x5aca360 'unsigned char'
| |-TypedefDecl 0x5b39fe8 <line:38:1, col:26> col:26 __int16_t 'short'
| | `-BuiltinType 0x5aca2e0 'short'
| |-TypedefDecl 0x5b3a058 <line:39:1, col:28> col:28 __uint16_t 'unsigned short'
| | `-BuiltinType 0x5aca380 'unsigned short'
| |-TypedefDecl 0x5b3a0c8 <line:40:1, col:20> col:20 __int32_t 'int'
| | `-BuiltinType 0x5aca300 'int'
| |-TypedefDecl 0x5b3a138 <line:41:1, col:22> col:22 __uint32_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b3a1a8 <line:43:1, col:25> col:25 __int64_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3a218 <line:44:1, col:27> col:27 __uint64_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3a288 <line:52:1, col:18> col:18 referenced __quad_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3a2f8 <line:53:1, col:27> col:27 referenced __u_quad_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3b6b0 <line:133:1, col:27> col:27 referenced __dev_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3b720 <line:134:1, col:22> col:22 referenced __uid_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b3b790 <line:135:1, col:22> col:22 referenced __gid_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b3b800 <line:136:1, col:27> col:27 referenced __ino_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3b870 <line:137:1, col:27> col:27 referenced __ino64_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3b8e0 <line:138:1, col:22> col:22 referenced __mode_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b3b950 <line:139:1, col:27> col:27 referenced __nlink_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3b9c0 <line:140:1, col:18> col:18 referenced __off_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3ba30 <line:141:1, col:18> col:18 referenced __off64_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3baa0 <line:142:1, col:13> col:13 referenced __pid_t 'int'
| | `-BuiltinType 0x5aca300 'int'
| |-CXXRecordDecl 0x5b3baf8 <line:143:9, col:32> col:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | `-FieldDecl 0x5b3bcb0 <col:18, col:29> col:22 __val 'int [2]'
| |-TypedefDecl 0x5b3bd78 <col:1, col:34> col:34 referenced __fsid_t 'struct __fsid_t':'__fsid_t'
| | `-ElaboratedType 0x5b3bd20 'struct __fsid_t' sugar
| |   `-RecordType 0x5b3bb90 '__fsid_t'
| |     `-CXXRecord 0x5b3baf8 ''
| |-TypedefDecl 0x5b3be00 <line:144:1, col:18> col:18 referenced __clock_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3be70 <line:145:1, col:27> col:27 __rlim_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3bee0 <line:146:1, col:27> col:27 __rlim64_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3bf50 <line:147:1, col:22> col:22 referenced __id_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b3bfc0 <line:148:1, col:18> col:18 referenced __time_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3c030 <line:149:1, col:22> col:22 referenced __useconds_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-TypedefDecl 0x5b3c0a0 <line:150:1, col:18> col:18 referenced __suseconds_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3c110 <line:152:1, col:13> col:13 referenced __daddr_t 'int'
| | `-BuiltinType 0x5aca300 'int'
| |-TypedefDecl 0x5b3c180 <line:153:1, col:13> col:13 referenced __key_t 'int'
| | `-BuiltinType 0x5aca300 'int'
| |-TypedefDecl 0x5b3c1f0 <line:156:1, col:13> col:13 referenced __clockid_t 'int'
| | `-BuiltinType 0x5aca300 'int'
| |-TypedefDecl 0x5b3c260 <line:159:1, col:16> col:16 referenced __timer_t 'void *'
| | `-PointerType 0x5acaa60 'void *'
| |   `-BuiltinType 0x5aca260 'void'
| |-TypedefDecl 0x5b3c2d0 <line:162:1, col:18> col:18 referenced __blksize_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3c340 <line:167:1, col:18> col:18 referenced __blkcnt_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3c3b0 <line:168:1, col:18> col:18 referenced __blkcnt64_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3c420 <line:171:1, col:27> col:27 referenced __fsblkcnt_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3c490 <line:172:1, col:27> col:27 referenced __fsblkcnt64_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3c500 <line:175:1, col:27> col:27 referenced __fsfilcnt_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3c570 <line:176:1, col:27> col:27 referenced __fsfilcnt64_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3c5e0 <line:179:1, col:18> col:18 __fsword_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3c650 <line:181:1, col:18> col:18 referenced __ssize_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3def8 <line:184:1, col:18> col:18 referenced __syscall_slong_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3df68 <line:186:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| | `-BuiltinType 0x5aca3c0 'unsigned long'
| |-TypedefDecl 0x5b3dff0 <line:190:1, col:19> col:19 referenced __loff_t '__off64_t':'long'
| | `-TypedefType 0x5b3dfc0 '__off64_t' sugar
| |   |-Typedef 0x5b3ba30 '__off64_t'
| |   `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3e0d8 <line:191:1, col:19> col:19 __qaddr_t '__quad_t *'
| | `-PointerType 0x5b3e0a0 '__quad_t *'
| |   `-TypedefType 0x5b3e050 '__quad_t' sugar
| |     |-Typedef 0x5b3a288 '__quad_t'
| |     `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3e148 <line:192:1, col:15> col:15 referenced __caddr_t 'char *'
| | `-PointerType 0x5acaf10 'char *'
| |   `-BuiltinType 0x5aca2a0 'char'
| |-TypedefDecl 0x5b3e1b8 <line:195:1, col:18> col:18 __intptr_t 'long'
| | `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5b3e228 <line:198:1, col:22> col:22 __socklen_t 'unsigned int'
| | `-BuiltinType 0x5aca3a0 'unsigned int'
| |-CXXRecordDecl 0x5b3e280 </usr/include/bits/waitstatus.h:66:1, line:97:3> line:66:7 union wait definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5b3e398 <col:1, col:7> col:7 implicit union wait
| | |-FieldDecl 0x5b3e440 <line:68:5, col:9> col:9 w_status 'int'
| | |-CXXRecordDecl 0x5b3e490 <line:69:5, line:83:7> line:69:5 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b3e5f8 <line:72:2, col:27> col:15 __w_termsig 'unsigned int'
| | | | `-ConstantExpr 0x5b3e5e0 <col:27> 'int'
| | | |   `-IntegerLiteral 0x5b3e5a8 <col:27> 'int' 7
| | | |-FieldDecl 0x5b3e698 <line:73:2, col:28> col:15 __w_coredump 'unsigned int'
| | | | `-ConstantExpr 0x5b3e680 <col:28> 'int'
| | | |   `-IntegerLiteral 0x5b3e648 <col:28> 'int' 1
| | | |-FieldDecl 0x5b3e738 <line:74:2, col:27> col:15 __w_retcode 'unsigned int'
| | | | `-ConstantExpr 0x5b3e720 <col:27> 'int'
| | | |   `-IntegerLiteral 0x5b3e6e8 <col:27> 'int' 8
| | | `-FieldDecl 0x5b3e7d8 <line:75:2, col:15> col:14 'unsigned int'
| | |   `-ConstantExpr 0x5b3e7c0 <col:15> 'int'
| | |     `-IntegerLiteral 0x5b3e788 <col:15> 'int' 16
| | |-FieldDecl 0x5b3e898 <line:69:5, line:83:9> col:9 __wait_terminated 'struct (anonymous struct at /usr/include/bits/waitstatus.h:69:5)':'wait::(anonymous struct at /usr/include/bits/waitstatus.h:69:5)'
| | |-CXXRecordDecl 0x5b3e900 <line:84:5, line:96:7> line:84:5 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b3ea68 <line:87:2, col:27> col:15 __w_stopval 'unsigned int'
| | | | `-ConstantExpr 0x5b3ea50 <col:27> 'int'
| | | |   `-IntegerLiteral 0x5b3ea18 <col:27> 'int' 8
| | | |-FieldDecl 0x5b3eb08 <line:88:2, col:27> col:15 __w_stopsig 'unsigned int'
| | | | `-ConstantExpr 0x5b3eaf0 <col:27> 'int'
| | | |   `-IntegerLiteral 0x5b3eab8 <col:27> 'int' 8
| | | `-FieldDecl 0x5b3eba8 <line:89:2, col:15> col:14 'unsigned int'
| | |   `-ConstantExpr 0x5b3eb90 <col:15> 'int'
| | |     `-IntegerLiteral 0x5b3eb58 <col:15> 'int' 16
| | `-FieldDecl 0x5b3ec68 <line:84:5, line:96:9> col:9 __wait_stopped 'struct (anonymous struct at /usr/include/bits/waitstatus.h:84:5)':'wait::(anonymous struct at /usr/include/bits/waitstatus.h:84:5)'
| |-CXXRecordDecl 0x5b3ece8 </usr/include/stdlib.h:97:9, line:101:3> line:97:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5b3ee20 <line:99:5, col:9> col:9 quot 'int'
| | `-FieldDecl 0x5b3ee88 <line:100:5, col:9> col:9 rem 'int'
| |-TypedefDecl 0x5b40ba8 <line:97:1, line:101:5> col:5 referenced div_t 'struct div_t':'div_t'
| | `-ElaboratedType 0x5b40b50 'struct div_t' sugar
| |   `-RecordType 0x5b3ed80 'div_t'
| |     `-CXXRecord 0x5b3ece8 ''
| |-CXXRecordDecl 0x5b40c18 <line:105:9, line:109:3> line:105:9 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x5b40d50 <line:107:5, col:14> col:14 referenced quot 'long'
| | |-FieldDecl 0x5b40db8 <line:108:5, col:14> col:14 referenced rem 'long'
| | |-CXXDestructorDecl 0x5b952a0 <line:105:9> col:9 implicit referenced ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x5b953c0 <col:9> col:9 implicit  'void ()' inline default trivial noexcept-unevaluated 0x5b953c0
| | |-CXXConstructorDecl 0x5b954c8 <col:9> col:9 implicit constexpr  'void (const ldiv_t &)' inline default trivial noexcept-unevaluated 0x5b954c8
| | | `-ParmVarDecl 0x5b955d8 <col:9> col:9 'const ldiv_t &'
| | `-CXXConstructorDecl 0x5b95678 <col:9> col:9 implicit used constexpr  'void (ldiv_t &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x5b95788 <col:9> col:9 used 'ldiv_t &&'
| |   |-CXXCtorInitializer Field 0x5b40d50 'quot' 'long'
| |   | `-ImplicitCastExpr 0x5b958d0 <col:9> 'long' <LValueToRValue>
| |   |   `-MemberExpr 0x5b958a0 <col:9> 'long' xvalue .quot 0x5b40d50
| |   |     `-CXXStaticCastExpr 0x5b95870 <col:9> 'ldiv_t' xvalue static_cast<ldiv_t &&> <NoOp>
| |   |       `-DeclRefExpr 0x5b95840 <col:9> 'ldiv_t' lvalue ParmVar 0x5b95788 '' 'ldiv_t &&'
| |   |-CXXCtorInitializer Field 0x5b40db8 'rem' 'long'
| |   | `-ImplicitCastExpr 0x5b959a0 <col:9> 'long' <LValueToRValue>
| |   |   `-MemberExpr 0x5b95970 <col:9> 'long' xvalue .rem 0x5b40db8
| |   |     `-CXXStaticCastExpr 0x5b95940 <col:9> 'ldiv_t' xvalue static_cast<ldiv_t &&> <NoOp>
| |   |       `-DeclRefExpr 0x5b95910 <col:9> 'ldiv_t' lvalue ParmVar 0x5b95788 '' 'ldiv_t &&'
| |   `-CompoundStmt 0x5b959f0 <col:9>
| |-TypedefDecl 0x5b40e78 <col:1, line:109:5> col:5 referenced ldiv_t 'struct ldiv_t':'ldiv_t'
| | `-ElaboratedType 0x5b40e20 'struct ldiv_t' sugar
| |   `-RecordType 0x5b40cb0 'ldiv_t'
| |     `-CXXRecord 0x5b40c18 ''
| |-CXXRecordDecl 0x5b40ee8 <line:117:23, line:121:3> line:117:23 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5b41020 <line:119:5, col:19> col:19 referenced quot 'long long'
| | |-FieldDecl 0x5b41088 <line:120:5, col:19> col:19 referenced rem 'long long'
| | |-CXXConstructorDecl 0x5b96010 <line:117:23> col:23 implicit used  'void () noexcept' inline default trivial
| | | `-CompoundStmt 0x5b96448 <col:23>
| | |-CXXConstructorDecl 0x5b96118 <col:23> col:23 implicit constexpr  'void (const lldiv_t &)' inline default trivial noexcept-unevaluated 0x5b96118
| | | `-ParmVarDecl 0x5b96228 <col:23> col:23 'const lldiv_t &'
| | `-CXXConstructorDecl 0x5b962c8 <col:23> col:23 implicit used constexpr  'void (lldiv_t &&) noexcept' inline default trivial
| |   |-ParmVarDecl 0x5b963d8 <col:23> col:23 used 'lldiv_t &&'
| |   |-CXXCtorInitializer Field 0x5b41020 'quot' 'long long'
| |   | `-ImplicitCastExpr 0x5b96860 <col:23> 'long long' <LValueToRValue>
| |   |   `-MemberExpr 0x5b96830 <col:23> 'long long' xvalue .quot 0x5b41020
| |   |     `-CXXStaticCastExpr 0x5b96800 <col:23> 'lldiv_t' xvalue static_cast<lldiv_t &&> <NoOp>
| |   |       `-DeclRefExpr 0x5b967d0 <col:23> 'lldiv_t' lvalue ParmVar 0x5b963d8 '' 'lldiv_t &&'
| |   |-CXXCtorInitializer Field 0x5b41088 'rem' 'long long'
| |   | `-ImplicitCastExpr 0x5b96930 <col:23> 'long long' <LValueToRValue>
| |   |   `-MemberExpr 0x5b96900 <col:23> 'long long' xvalue .rem 0x5b41088
| |   |     `-CXXStaticCastExpr 0x5b968d0 <col:23> 'lldiv_t' xvalue static_cast<lldiv_t &&> <NoOp>
| |   |       `-DeclRefExpr 0x5b968a0 <col:23> 'lldiv_t' lvalue ParmVar 0x5b963d8 '' 'lldiv_t &&'
| |   `-CompoundStmt 0x5b96980 <col:23>
| |-TypedefDecl 0x5b41148 <col:15, line:121:5> col:5 referenced lldiv_t 'struct lldiv_t':'lldiv_t'
| | `-ElaboratedType 0x5b410f0 'struct lldiv_t' sugar
| |   `-RecordType 0x5b40f80 'lldiv_t'
| |     `-CXXRecord 0x5b40ee8 ''
| |-FunctionDecl 0x5b412e0 <line:139:1, col:52> col:15 __ctype_get_mb_cur_max 'size_t () throw()' extern
| |-FunctionDecl 0x5b414b8 <line:144:1, line:145:74> line:144:15 atof 'double (const char *) throw()' extern
| | |-ParmVarDecl 0x5b41398 <col:21, col:33> col:33 __nptr 'const char *'
| | |-PureAttr 0x5b41560 <line:145:31>
| | `-NonNullAttr 0x5b415a0 <col:58, col:72> 1
| |-FunctionDecl 0x5b41708 <line:147:1, line:148:74> line:147:12 atoi 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x5b415e0 <col:18, col:30> col:30 __nptr 'const char *'
| | |-PureAttr 0x5b417b0 <line:148:31>
| | `-NonNullAttr 0x5b417f0 <col:58, col:72> 1
| |-FunctionDecl 0x5b41958 <line:150:1, line:151:74> line:150:17 atol 'long (const char *) throw()' extern
| | |-ParmVarDecl 0x5b41830 <col:23, col:35> col:35 __nptr 'const char *'
| | |-PureAttr 0x5b41a00 <line:151:31>
| | `-NonNullAttr 0x5b41a40 <col:58, col:72> 1
| |-FunctionDecl 0x5b433e8 <line:157:15, line:158:74> line:157:36 atoll 'long long (const char *) throw()' extern
| | |-ParmVarDecl 0x5b41a80 <col:43, col:55> col:55 __nptr 'const char *'
| | |-PureAttr 0x5b43490 <line:158:31>
| | `-NonNullAttr 0x5b434d0 <col:58, col:72> 1
| |-FunctionDecl 0x5b43708 <line:164:1, line:166:47> line:164:15 strtod 'double (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x5b43510 <col:23, col:46> col:46 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b435c0 <line:165:9, col:27> col:27 __endptr 'char **__restrict'
| | `-NonNullAttr 0x5b437b8 <line:166:31, col:45> 1
| |-FunctionDecl 0x5b439e8 <line:172:1, line:173:77> line:172:14 strtof 'float (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x5b43820 <col:22, col:45> col:45 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b438a0 <line:173:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x5b43a98 <col:61, col:75> 1
| |-FunctionDecl 0x5b43cc8 <line:175:1, line:177:47> line:175:20 strtold 'long double (const char *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x5b43b00 <col:29, col:52> col:52 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b43b80 <line:176:8, col:26> col:26 __endptr 'char **__restrict'
| | `-NonNullAttr 0x5b43d78 <line:177:31, col:45> 1
| |-FunctionDecl 0x5b44038 <line:183:1, line:185:47> line:183:17 strtol 'long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x5b43de0 <col:25, col:48> col:48 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b43e60 <line:184:4, col:22> col:22 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b43ee0 <col:32, col:36> col:36 __base 'int'
| | `-NonNullAttr 0x5b440f0 <line:185:31, col:45> 1
| |-FunctionDecl 0x5b44bf8 <line:187:1, line:189:47> line:187:26 strtoul 'unsigned long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x5b44160 <col:35, col:58> col:58 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b441e0 <line:188:7, col:25> col:25 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b44260 <col:35, col:39> col:39 __base 'int'
| | `-NonNullAttr 0x5b44cb0 <line:189:31, col:45> 1
| |-FunctionDecl 0x5b44f78 <line:195:1, line:197:47> line:195:22 strtoq 'long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x5b44d20 <col:30, col:53> col:53 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b44da0 <line:196:9, col:27> col:27 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b44e20 <col:37, col:41> col:41 __base 'int'
| | `-NonNullAttr 0x5b45030 <line:197:31, col:45> 1
| |-FunctionDecl 0x5b452f8 <line:200:1, line:202:47> line:200:31 strtouq 'unsigned long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x5b450a0 <col:40, col:63> col:63 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b45120 <line:201:12, col:30> col:30 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b451a0 <col:40, col:44> col:44 __base 'int'
| | `-NonNullAttr 0x5b453b0 <line:202:31, col:45> 1
| |-FunctionDecl 0x5b455f0 <line:209:1, line:211:47> line:209:22 strtoll 'long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x5b45420 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b454a0 <line:210:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b45520 <col:38, col:42> col:42 __base 'int'
| | `-NonNullAttr 0x5b456a8 <line:211:31, col:45> 1
| |-FunctionDecl 0x5b458e0 <line:214:1, line:216:47> line:214:31 strtoull 'unsigned long long (const char *__restrict, char **__restrict, int) throw()' extern
| | |-ParmVarDecl 0x5b45710 <col:41, col:64> col:64 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b45790 <line:215:6, col:24> col:24 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b45810 <col:34, col:38> col:38 __base 'int'
| | `-NonNullAttr 0x5b45998 <line:216:31, col:45> 1
| |-CXXRecordDecl 0x5b459e8 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 struct __locale_struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5b45b80 <col:9, col:16> col:16 implicit struct __locale_struct
| | |-CXXRecordDecl 0x5b45c10 parent 0x5aca208 <line:30:3, col:10> col:10 struct __locale_data
| | |-FieldDecl 0x5b45e50 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| | |-FieldDecl 0x5b45f00 <line:33:3, col:29> col:29 __ctype_b 'const unsigned short *'
| | |-FieldDecl 0x5b45f68 <line:34:3, col:14> col:14 __ctype_tolower 'const int *'
| | |-FieldDecl 0x5b45fd0 <line:35:3, col:14> col:14 __ctype_toupper 'const int *'
| | `-FieldDecl 0x5b460c0 <line:38:3, col:25> col:15 __names 'const char *[13]'
| |-TypedefDecl 0x5b461f0 <line:27:1, line:39:4> col:4 referenced __locale_t 'struct __locale_struct *'
| | `-PointerType 0x5b461a0 'struct __locale_struct *'
| |   `-ElaboratedType 0x5b46130 'struct __locale_struct' sugar
| |     `-RecordType 0x5b45a80 '__locale_struct'
| |       `-CXXRecord 0x5b459e8 '__locale_struct'
| |-TypedefDecl 0x5b46290 <line:42:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| | `-TypedefType 0x5b46260 '__locale_t' sugar
| |   |-Typedef 0x5b461f0 '__locale_t'
| |   `-PointerType 0x5b461a0 'struct __locale_struct *'
| |     `-ElaboratedType 0x5b46130 'struct __locale_struct' sugar
| |       `-RecordType 0x5b45a80 '__locale_struct'
| |         `-CXXRecord 0x5b459e8 '__locale_struct'
| |-FunctionDecl 0x5b46608 </usr/include/stdlib.h:239:1, line:241:68> line:239:17 strtol_l 'long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b46300 <col:27, col:50> col:50 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b46380 <line:240:6, col:24> col:24 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b46400 <col:34, col:38> col:38 __base 'int'
| | |-ParmVarDecl 0x5b46478 <line:241:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b466c8 <col:49, col:66> 1 4
| |-FunctionDecl 0x5b46a38 <line:243:1, line:246:50> line:243:26 strtoul_l 'unsigned long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b46730 <col:37, col:60> col:60 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b467b0 <line:244:9, col:27> col:27 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b46830 <line:245:9, col:13> col:13 __base 'int'
| | |-ParmVarDecl 0x5b468a8 <col:21, col:32> col:32 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b46af8 <line:246:31, col:48> 1 4
| |-FunctionDecl 0x5b46e98 <line:249:1, line:252:50> line:249:22 strtoll_l 'long long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b46b90 <col:33, col:56> col:56 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b46c10 <line:250:5, col:23> col:23 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b46c90 <col:33, col:37> col:37 __base 'int'
| | |-ParmVarDecl 0x5b46d08 <line:251:5, col:16> col:16 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b46f58 <line:252:31, col:48> 1 4
| |-FunctionDecl 0x5b472c8 <line:255:1, line:258:50> line:255:31 strtoull_l 'unsigned long long (const char *__restrict, char **__restrict, int, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b46fc0 <col:43, col:66> col:66 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b47040 <line:256:8, col:26> col:26 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b470c0 <line:257:8, col:12> col:12 __base 'int'
| | |-ParmVarDecl 0x5b47138 <col:20, col:31> col:31 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b47388 <line:258:31, col:48> 1 4
| |-FunctionDecl 0x5b47658 <line:260:1, line:262:50> line:260:15 strtod_l 'double (const char *__restrict, char **__restrict, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b473f0 <col:25, col:48> col:48 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b47470 <line:261:4, col:22> col:22 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b474e8 <col:32, col:43> col:43 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b47710 <line:262:31, col:48> 1 3
| |-FunctionDecl 0x5b479e8 <line:264:1, line:266:50> line:264:14 strtof_l 'float (const char *__restrict, char **__restrict, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b47780 <col:24, col:47> col:47 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b47800 <line:265:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b47878 <col:38, col:49> col:49 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b47aa0 <line:266:31, col:48> 1 3
| |-FunctionDecl 0x5b47d88 <line:268:1, line:271:50> line:268:20 strtold_l 'long double (const char *__restrict, char **__restrict, __locale_t) throw()' extern
| | |-ParmVarDecl 0x5b47b10 <col:31, col:54> col:54 __nptr 'const char *__restrict'
| | |-ParmVarDecl 0x5b47ba0 <line:269:10, col:28> col:28 __endptr 'char **__restrict'
| | |-ParmVarDecl 0x5b47c18 <line:270:10, col:21> col:21 __loc '__locale_t':'struct __locale_struct *'
| | `-NonNullAttr 0x5b47e40 <line:271:31, col:48> 1 3
| |-FunctionDecl 0x5b47fb8 <line:305:1, col:41> col:14 l64a 'char *(long) throw()' extern
| | `-ParmVarDecl 0x5b47eb0 <col:20, col:29> col:29 __n 'long'
| |-FunctionDecl 0x5b48138 <line:308:1, line:309:74> line:308:17 a64l 'long (const char *) throw()' extern
| | |-ParmVarDecl 0x5b48078 <col:23, col:35> col:35 __s 'const char *'
| | |-PureAttr 0x5b481e0 <line:309:31>
| | `-NonNullAttr 0x5b48220 <col:58, col:72> 1
| |-LinkageSpecDecl 0x5b48268 </usr/include/sys/types.h:27:1, line:273:1> line:27:8 C
| | |-TypedefDecl 0x5b482f0 <line:33:1, col:18> col:18 u_char '__u_char':'unsigned char'
| | | `-TypedefType 0x5b482c0 '__u_char' sugar
| | |   |-Typedef 0x5b39d48 '__u_char'
| | |   `-BuiltinType 0x5aca360 'unsigned char'
| | |-TypedefDecl 0x5b48380 <line:34:1, col:19> col:19 u_short '__u_short':'unsigned short'
| | | `-TypedefType 0x5b48350 '__u_short' sugar
| | |   |-Typedef 0x5b39db8 '__u_short'
| | |   `-BuiltinType 0x5aca380 'unsigned short'
| | |-TypedefDecl 0x5b48410 <line:35:1, col:17> col:17 u_int '__u_int':'unsigned int'
| | | `-TypedefType 0x5b483e0 '__u_int' sugar
| | |   |-Typedef 0x5b39e28 '__u_int'
| | |   `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b484a0 <line:36:1, col:18> col:18 u_long '__u_long':'unsigned long'
| | | `-TypedefType 0x5b48470 '__u_long' sugar
| | |   |-Typedef 0x5b39e98 '__u_long'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b48508 <line:37:1, col:18> col:18 quad_t '__quad_t':'long'
| | | `-TypedefType 0x5b3e050 '__quad_t' sugar
| | |   |-Typedef 0x5b3a288 '__quad_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b48590 <line:38:1, col:20> col:20 u_quad_t '__u_quad_t':'unsigned long'
| | | `-TypedefType 0x5b48560 '__u_quad_t' sugar
| | |   |-Typedef 0x5b3a2f8 '__u_quad_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b48620 <line:39:1, col:18> col:18 fsid_t '__fsid_t':'__fsid_t'
| | | `-TypedefType 0x5b485f0 '__fsid_t' sugar
| | |   |-Typedef 0x5b3bd78 '__fsid_t'
| | |   `-ElaboratedType 0x5b3bd20 'struct __fsid_t' sugar
| | |     `-RecordType 0x5b3bb90 '__fsid_t'
| | |       `-CXXRecord 0x5b3baf8 ''
| | |-TypedefDecl 0x5b486b0 <line:44:1, col:18> col:18 loff_t '__loff_t':'long'
| | | `-TypedefType 0x5b48680 '__loff_t' sugar
| | |   |-Typedef 0x5b3dff0 '__loff_t'
| | |   `-TypedefType 0x5b3dfc0 '__off64_t' sugar
| | |     |-Typedef 0x5b3ba30 '__off64_t'
| | |     `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b48740 <line:48:1, col:17> col:17 ino_t '__ino_t':'unsigned long'
| | | `-TypedefType 0x5b48710 '__ino_t' sugar
| | |   |-Typedef 0x5b3b800 '__ino_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b487d0 <line:55:1, col:19> col:19 ino64_t '__ino64_t':'unsigned long'
| | | `-TypedefType 0x5b487a0 '__ino64_t' sugar
| | |   |-Typedef 0x5b3b870 '__ino64_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b48860 <line:60:1, col:17> col:17 dev_t '__dev_t':'unsigned long'
| | | `-TypedefType 0x5b48830 '__dev_t' sugar
| | |   |-Typedef 0x5b3b6b0 '__dev_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b488f0 <line:65:1, col:17> col:17 gid_t '__gid_t':'unsigned int'
| | | `-TypedefType 0x5b488c0 '__gid_t' sugar
| | |   |-Typedef 0x5b3b790 '__gid_t'
| | |   `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b48980 <line:70:1, col:18> col:18 mode_t '__mode_t':'unsigned int'
| | | `-TypedefType 0x5b48950 '__mode_t' sugar
| | |   |-Typedef 0x5b3b8e0 '__mode_t'
| | |   `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b48a10 <line:75:1, col:19> col:19 nlink_t '__nlink_t':'unsigned long'
| | | `-TypedefType 0x5b489e0 '__nlink_t' sugar
| | |   |-Typedef 0x5b3b950 '__nlink_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b48aa0 <line:80:1, col:17> col:17 uid_t '__uid_t':'unsigned int'
| | | `-TypedefType 0x5b48a70 '__uid_t' sugar
| | |   |-Typedef 0x5b3b720 '__uid_t'
| | |   `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b48b30 <line:86:1, col:17> col:17 off_t '__off_t':'long'
| | | `-TypedefType 0x5b48b00 '__off_t' sugar
| | |   |-Typedef 0x5b3b9c0 '__off_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b48bb0 <line:93:1, col:19> col:19 off64_t '__off64_t':'long'
| | | `-TypedefType 0x5b3dfc0 '__off64_t' sugar
| | |   |-Typedef 0x5b3ba30 '__off64_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b48c40 <line:98:1, col:17> col:17 pid_t '__pid_t':'int'
| | | `-TypedefType 0x5b48c10 '__pid_t' sugar
| | |   |-Typedef 0x5b3baa0 '__pid_t'
| | |   `-BuiltinType 0x5aca300 'int'
| | |-TypedefDecl 0x5b48cd0 <line:104:1, col:16> col:16 id_t '__id_t':'unsigned int'
| | | `-TypedefType 0x5b48ca0 '__id_t' sugar
| | |   |-Typedef 0x5b3bf50 '__id_t'
| | |   `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b48d60 <line:109:1, col:19> col:19 ssize_t '__ssize_t':'long'
| | | `-TypedefType 0x5b48d30 '__ssize_t' sugar
| | |   |-Typedef 0x5b3c650 '__ssize_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b48df0 <line:115:1, col:19> col:19 daddr_t '__daddr_t':'int'
| | | `-TypedefType 0x5b48dc0 '__daddr_t' sugar
| | |   |-Typedef 0x5b3c110 '__daddr_t'
| | |   `-BuiltinType 0x5aca300 'int'
| | |-TypedefDecl 0x5b48e80 <line:116:1, col:19> col:19 caddr_t '__caddr_t':'char *'
| | | `-TypedefType 0x5b48e50 '__caddr_t' sugar
| | |   |-Typedef 0x5b3e148 '__caddr_t'
| | |   `-PointerType 0x5acaf10 'char *'
| | |     `-BuiltinType 0x5aca2a0 'char'
| | |-TypedefDecl 0x5b48f10 <line:122:1, col:17> col:17 key_t '__key_t':'int'
| | | `-TypedefType 0x5b48ee0 '__key_t' sugar
| | |   |-Typedef 0x5b3c180 '__key_t'
| | |   `-BuiltinType 0x5aca300 'int'
| | |-TypedefDecl 0x5b48fa0 </usr/include/time.h:59:1, col:19> col:19 clock_t '__clock_t':'long'
| | | `-TypedefType 0x5b48f70 '__clock_t' sugar
| | |   |-Typedef 0x5b3be00 '__clock_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b49030 <line:75:1, col:18> col:18 time_t '__time_t':'long'
| | | `-TypedefType 0x5b49000 '__time_t' sugar
| | |   |-Typedef 0x5b3bfc0 '__time_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b490c0 <line:91:1, col:21> col:21 clockid_t '__clockid_t':'int'
| | | `-TypedefType 0x5b49090 '__clockid_t' sugar
| | |   |-Typedef 0x5b3c1f0 '__clockid_t'
| | |   `-BuiltinType 0x5aca300 'int'
| | |-TypedefDecl 0x5b49150 <line:103:1, col:19> col:19 timer_t '__timer_t':'void *'
| | | `-TypedefType 0x5b49120 '__timer_t' sugar
| | |   |-Typedef 0x5b3c260 '__timer_t'
| | |   `-PointerType 0x5acaa60 'void *'
| | |     `-BuiltinType 0x5aca260 'void'
| | |-TypedefDecl 0x5b491e0 </usr/include/sys/types.h:136:1, col:22> col:22 useconds_t '__useconds_t':'unsigned int'
| | | `-TypedefType 0x5b491b0 '__useconds_t' sugar
| | |   |-Typedef 0x5b3c030 '__useconds_t'
| | |   `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b49270 <line:140:1, col:23> col:23 suseconds_t '__suseconds_t':'long'
| | | `-TypedefType 0x5b49240 '__suseconds_t' sugar
| | |   |-Typedef 0x5b3c0a0 '__suseconds_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b492e0 <line:150:1, col:27> col:27 ulong 'unsigned long'
| | | `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b49350 <line:151:1, col:28> col:28 ushort 'unsigned short'
| | | `-BuiltinType 0x5aca380 'unsigned short'
| | |-TypedefDecl 0x5b493c0 <line:152:1, col:22> col:22 uint 'unsigned int'
| | | `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b49440 <line:194:1, col:13> col:13 int8_t 'signed char'
| | | |-BuiltinType 0x5aca2c0 'signed char'
| | | `-ModeAttr 0x5b494a8 <col:36, col:52> __QI__
| | |-TypedefDecl 0x5b49518 <line:195:1, col:13> col:13 int16_t 'short'
| | | |-BuiltinType 0x5aca2e0 'short'
| | | `-ModeAttr 0x5b49580 <col:37, col:53> __HI__
| | |-TypedefDecl 0x5b495f0 <line:196:1, col:13> col:13 referenced int32_t 'int'
| | | |-BuiltinType 0x5aca300 'int'
| | | `-ModeAttr 0x5b49658 <col:37, col:53> __SI__
| | |-TypedefDecl 0x5b496c8 <line:197:1, col:13> col:13 int64_t 'long'
| | | |-BuiltinType 0x5aca320 'long'
| | | `-ModeAttr 0x5b49730 <col:37, col:53> __DI__
| | |-TypedefDecl 0x5b497a0 <line:200:1, col:22> col:22 u_int8_t 'unsigned char'
| | | |-BuiltinType 0x5aca360 'unsigned char'
| | | `-ModeAttr 0x5b49808 <col:47, col:63> __QI__
| | |-TypedefDecl 0x5b49878 <line:201:1, col:22> col:22 u_int16_t 'unsigned short'
| | | |-BuiltinType 0x5aca380 'unsigned short'
| | | `-ModeAttr 0x5b498e0 <col:48, col:64> __HI__
| | |-TypedefDecl 0x5b49950 <line:202:1, col:22> col:22 u_int32_t 'unsigned int'
| | | |-BuiltinType 0x5aca3a0 'unsigned int'
| | | `-ModeAttr 0x5b499b8 <col:48, col:64> __SI__
| | |-TypedefDecl 0x5b49a28 <line:203:1, col:22> col:22 u_int64_t 'unsigned long'
| | | |-BuiltinType 0x5aca3c0 'unsigned long'
| | | `-ModeAttr 0x5b49a90 <col:48, col:64> __DI__
| | |-TypedefDecl 0x5b49b00 <line:205:1, col:13> col:13 register_t 'long'
| | | |-BuiltinType 0x5aca320 'long'
| | | `-ModeAttr 0x5b49b68 <col:40, col:58> __word__
| | |-TypedefDecl 0x5b3c6d8 </usr/include/bits/sigset.h:23:1, col:13> col:13 __sig_atomic_t 'int'
| | | `-BuiltinType 0x5aca300 'int'
| | |-CXXRecordDecl 0x5b3c730 <line:28:9, line:31:3> line:28:9 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | `-FieldDecl 0x5b3c9f0 <line:30:5, col:70> col:23 __val 'unsigned long [16]'
| | |-TypedefDecl 0x5b3cab8 <line:28:1, line:31:5> col:5 referenced __sigset_t 'struct __sigset_t':'__sigset_t'
| | | `-ElaboratedType 0x5b3ca60 'struct __sigset_t' sugar
| | |   `-RecordType 0x5b3c7c0 '__sigset_t'
| | |     `-CXXRecord 0x5b3c730 ''
| | |-TypedefDecl 0x5b3cb60 </usr/include/sys/select.h:37:1, col:20> col:20 sigset_t '__sigset_t':'__sigset_t'
| | | `-TypedefType 0x5b3cb30 '__sigset_t' sugar
| | |   |-Typedef 0x5b3cab8 '__sigset_t'
| | |   `-ElaboratedType 0x5b3ca60 'struct __sigset_t' sugar
| | |     `-RecordType 0x5b3c7c0 '__sigset_t'
| | |       `-CXXRecord 0x5b3c730 ''
| | |-CXXRecordDecl 0x5b3cbb8 </usr/include/time.h:120:1, line:124:3> line:120:8 struct timespec definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b3ccd8 <col:1, col:8> col:8 implicit struct timespec
| | | |-FieldDecl 0x5b3cd78 <line:122:5, col:14> col:14 tv_sec '__time_t':'long'
| | | `-FieldDecl 0x5b3ce00 <line:123:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
| | |-CXXRecordDecl 0x5b3ce68 </usr/include/bits/time.h:30:1, line:34:3> line:30:8 struct timeval definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b3cf88 <col:1, col:8> col:8 implicit struct timeval
| | | |-FieldDecl 0x5b3d028 <line:32:5, col:14> col:14 tv_sec '__time_t':'long'
| | | `-FieldDecl 0x5b3d088 <line:33:5, col:19> col:19 tv_usec '__suseconds_t':'long'
| | |-TypedefDecl 0x5b3d108 </usr/include/sys/select.h:54:1, col:18> col:18 referenced __fd_mask 'long'
| | | `-BuiltinType 0x5aca320 'long'
| | |-CXXRecordDecl 0x5b3d160 <line:64:9, line:75:3> line:64:9 struct definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | `-FieldDecl 0x5b3d478 <line:69:5, col:61> col:15 fds_bits '__fd_mask [16]'
| | |-TypedefDecl 0x5b3d538 <line:64:1, line:75:5> col:5 referenced fd_set 'struct fd_set':'fd_set'
| | | `-ElaboratedType 0x5b3d4e0 'struct fd_set' sugar
| | |   `-RecordType 0x5b3d1f0 'fd_set'
| | |     `-CXXRecord 0x5b3d160 ''
| | |-TypedefDecl 0x5b3d5b8 <line:82:1, col:19> col:19 fd_mask '__fd_mask':'long'
| | | `-TypedefType 0x5b3d280 '__fd_mask' sugar
| | |   |-Typedef 0x5b3d108 '__fd_mask'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-LinkageSpecDecl 0x5b3d630 <line:96:1, line:131:1> line:96:8 C
| | | |-FunctionDecl 0x5b4f470 <line:106:1, line:109:42> line:106:12 select 'int (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, struct timeval *__restrict)' extern
| | | | |-ParmVarDecl 0x5b4f010 <col:20, col:24> col:24 __nfds 'int'
| | | | |-ParmVarDecl 0x5b4f108 <col:32, col:51> col:51 __readfds 'fd_set *__restrict'
| | | | |-ParmVarDecl 0x5b4f180 <line:107:6, col:25> col:25 __writefds 'fd_set *__restrict'
| | | | |-ParmVarDecl 0x5b4f1f8 <line:108:6, col:25> col:25 __exceptfds 'fd_set *__restrict'
| | | | `-ParmVarDecl 0x5b4f310 <line:109:6, col:33> col:33 __timeout 'struct timeval *__restrict'
| | | `-FunctionDecl 0x5b4fa20 <line:118:1, line:122:45> line:118:12 pselect 'int (int, fd_set *__restrict, fd_set *__restrict, fd_set *__restrict, const struct timespec *__restrict, const __sigset_t *__restrict)' extern
| | |   |-ParmVarDecl 0x5b4f550 <col:21, col:25> col:25 __nfds 'int'
| | |   |-ParmVarDecl 0x5b4f5c8 <col:33, col:52> col:52 __readfds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x5b4f640 <line:119:7, col:26> col:26 __writefds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x5b4f6b8 <line:120:7, col:26> col:26 __exceptfds 'fd_set *__restrict'
| | |   |-ParmVarDecl 0x5b4f7d0 <line:121:7, col:41> col:41 __timeout 'const struct timespec *__restrict'
| | |   `-ParmVarDecl 0x5b4f8a8 <line:122:7, col:36> col:36 __sigmask 'const __sigset_t *__restrict'
| | |-LinkageSpecDecl 0x5b4fb10 </usr/include/sys/sysmacros.h:29:1, line:63:1> line:29:8 C
| | | |-FunctionDecl 0x5b4fc78 <line:32:1, line:33:41> line:32:21 gnu_dev_major 'unsigned int (unsigned long long) throw()' extern
| | | | |-ParmVarDecl 0x5b4fb78 <col:36, col:59> col:59 __dev 'unsigned long long'
| | | | `-ConstAttr 0x5b4fd20 <line:33:31>
| | | |-FunctionDecl 0x5b4fe18 <line:35:1, line:36:41> line:35:21 gnu_dev_minor 'unsigned int (unsigned long long) throw()' extern
| | | | |-ParmVarDecl 0x5b4fd78 <col:36, col:59> col:59 __dev 'unsigned long long'
| | | | `-ConstAttr 0x5b4fec0 <line:36:31>
| | | `-FunctionDecl 0x5b500d8 <line:38:1, line:40:41> line:38:31 gnu_dev_makedev 'unsigned long long (unsigned int, unsigned int) throw()' extern
| | |   |-ParmVarDecl 0x5b4ff18 <col:48, col:61> col:61 __major 'unsigned int'
| | |   |-ParmVarDecl 0x5b4ff98 <line:39:13, col:26> col:26 __minor 'unsigned int'
| | |   `-ConstAttr 0x5b50188 <line:40:31>
| | |-TypedefDecl 0x5b50200 </usr/include/sys/types.h:228:1, col:21> col:21 blksize_t '__blksize_t':'long'
| | | `-TypedefType 0x5b501d0 '__blksize_t' sugar
| | |   |-Typedef 0x5b3c2d0 '__blksize_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b50290 <line:235:1, col:20> col:20 blkcnt_t '__blkcnt_t':'long'
| | | `-TypedefType 0x5b50260 '__blkcnt_t' sugar
| | |   |-Typedef 0x5b3c340 '__blkcnt_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b50320 <line:239:1, col:22> col:22 fsblkcnt_t '__fsblkcnt_t':'unsigned long'
| | | `-TypedefType 0x5b502f0 '__fsblkcnt_t' sugar
| | |   |-Typedef 0x5b3c420 '__fsblkcnt_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b503b0 <line:243:1, col:22> col:22 fsfilcnt_t '__fsfilcnt_t':'unsigned long'
| | | `-TypedefType 0x5b50380 '__fsfilcnt_t' sugar
| | |   |-Typedef 0x5b3c500 '__fsfilcnt_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b50440 <line:262:1, col:22> col:22 blkcnt64_t '__blkcnt64_t':'long'
| | | `-TypedefType 0x5b50410 '__blkcnt64_t' sugar
| | |   |-Typedef 0x5b3c3b0 '__blkcnt64_t'
| | |   `-BuiltinType 0x5aca320 'long'
| | |-TypedefDecl 0x5b504d0 <line:263:1, col:24> col:24 fsblkcnt64_t '__fsblkcnt64_t':'unsigned long'
| | | `-TypedefType 0x5b504a0 '__fsblkcnt64_t' sugar
| | |   |-Typedef 0x5b3c490 '__fsblkcnt64_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b50560 <line:264:1, col:24> col:24 fsfilcnt64_t '__fsfilcnt64_t':'unsigned long'
| | | `-TypedefType 0x5b50530 '__fsfilcnt64_t' sugar
| | |   |-Typedef 0x5b3c570 '__fsfilcnt64_t'
| | |   `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-TypedefDecl 0x5b505d0 </usr/include/bits/pthreadtypes.h:60:1, col:27> col:27 pthread_t 'unsigned long'
| | | `-BuiltinType 0x5aca3c0 'unsigned long'
| | |-CXXRecordDecl 0x5b50628 <line:63:1, line:67:1> line:63:7 union pthread_attr_t definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b50748 <col:1, col:7> col:7 implicit union pthread_attr_t
| | | |-FieldDecl 0x5b50868 <line:65:3, col:17> col:8 __size 'char [56]'
| | | `-FieldDecl 0x5b508d0 <line:66:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x5b50990 <line:69:1, col:30> col:30 pthread_attr_t 'union pthread_attr_t':'pthread_attr_t'
| | | `-ElaboratedType 0x5b50940 'union pthread_attr_t' sugar
| | |   `-RecordType 0x5b506c0 'pthread_attr_t'
| | |     `-CXXRecord 0x5b50628 'pthread_attr_t'
| | |-CXXRecordDecl 0x5b509e8 <line:75:9, line:79:1> line:75:16 struct __pthread_internal_list definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b50b08 <col:9, col:16> col:16 implicit struct __pthread_internal_list
| | | |-FieldDecl 0x5b50c50 <line:77:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| | | `-FieldDecl 0x5b50cc8 <line:78:3, col:35> col:35 __next 'struct __pthread_internal_list *'
| | |-TypedefDecl 0x5b50d88 <line:75:1, line:79:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'__pthread_internal_list'
| | | `-ElaboratedType 0x5b50d30 'struct __pthread_internal_list' sugar
| | |   `-RecordType 0x5b50a80 '__pthread_internal_list'
| | |     `-CXXRecord 0x5b509e8 '__pthread_internal_list'
| | |-CXXRecordDecl 0x5b50df8 <line:90:9, line:128:1> line:90:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b50f18 <line:92:3, line:125:3> line:92:10 struct __pthread_mutex_s definition
| | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-CXXRecordDecl 0x5b524a8 <col:3, col:10> col:10 implicit struct __pthread_mutex_s
| | | | |-FieldDecl 0x5b52550 <line:94:5, col:9> col:9 __lock 'int'
| | | | |-FieldDecl 0x5b525b8 <line:95:5, col:18> col:18 __count 'unsigned int'
| | | | |-FieldDecl 0x5b52620 <line:96:5, col:9> col:9 __owner 'int'
| | | | |-FieldDecl 0x5b52688 <line:98:5, col:18> col:18 __nusers 'unsigned int'
| | | | |-FieldDecl 0x5b526f0 <line:102:5, col:9> col:9 __kind 'int'
| | | | |-FieldDecl 0x5b52758 <line:104:5, col:11> col:11 __spins 'short'
| | | | |-FieldDecl 0x5b527c0 <line:105:5, col:11> col:11 __elision 'short'
| | | | `-FieldDecl 0x5b52840 <line:106:5, col:22> col:22 __list '__pthread_list_t':'__pthread_internal_list'
| | | |-FieldDecl 0x5b52908 <line:92:3, line:125:5> col:5 __data 'struct __pthread_mutex_s':'pthread_mutex_t::__pthread_mutex_s'
| | | |-FieldDecl 0x5b52a08 <line:126:3, col:17> col:8 __size 'char [40]'
| | | `-FieldDecl 0x5b52a70 <line:127:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x5b52d08 <line:90:1, line:128:3> col:3 pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| | | `-ElaboratedType 0x5b52cb0 'union pthread_mutex_t' sugar
| | |   `-RecordType 0x5b50e90 'pthread_mutex_t'
| | |     `-CXXRecord 0x5b50df8 ''
| | |-CXXRecordDecl 0x5b52d78 <line:130:9, line:134:1> line:130:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b52f28 <line:132:3, col:16> col:8 __size 'char [4]'
| | | `-FieldDecl 0x5b52f90 <line:133:3, col:7> col:7 __align 'int'
| | |-TypedefDecl 0x5b53058 <line:130:1, line:134:3> col:3 pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| | | `-ElaboratedType 0x5b53000 'union pthread_mutexattr_t' sugar
| | |   `-RecordType 0x5b52e10 'pthread_mutexattr_t'
| | |     `-CXXRecord 0x5b52d78 ''
| | |-CXXRecordDecl 0x5b530c8 <line:139:9, line:154:1> line:139:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b531e8 <line:141:3, line:151:3> line:141:3 struct definition
| | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-FieldDecl 0x5b53320 <line:143:5, col:9> col:9 __lock 'int'
| | | | |-FieldDecl 0x5b53388 <line:144:5, col:18> col:18 __futex 'unsigned int'
| | | | |-FieldDecl 0x5b533f0 <line:145:19, col:42> col:42 __total_seq 'unsigned long long'
| | | | |-FieldDecl 0x5b55098 <line:146:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | | | |-FieldDecl 0x5b55100 <line:147:19, col:42> col:42 __woken_seq 'unsigned long long'
| | | | |-FieldDecl 0x5b55168 <line:148:5, col:11> col:11 __mutex 'void *'
| | | | |-FieldDecl 0x5b551d0 <line:149:5, col:18> col:18 __nwaiters 'unsigned int'
| | | | `-FieldDecl 0x5b55238 <line:150:5, col:18> col:18 __broadcast_seq 'unsigned int'
| | | |-FieldDecl 0x5b552f8 <line:141:3, line:151:5> col:5 __data 'struct (anonymous struct at /usr/include/bits/pthreadtypes.h:141:3)':'pthread_cond_t::(anonymous struct at /usr/include/bits/pthreadtypes.h:141:3)'
| | | |-FieldDecl 0x5b553f8 <line:152:3, col:17> col:8 __size 'char [48]'
| | | `-FieldDecl 0x5b55460 <line:153:17, col:31> col:31 __align 'long long'
| | |-TypedefDecl 0x5b55628 <line:139:1, line:154:3> col:3 pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| | | `-ElaboratedType 0x5b555d0 'union pthread_cond_t' sugar
| | |   `-RecordType 0x5b53160 'pthread_cond_t'
| | |     `-CXXRecord 0x5b530c8 ''
| | |-CXXRecordDecl 0x5b55698 <line:156:9, line:160:1> line:156:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b55810 <line:158:3, col:16> col:8 __size 'char [4]'
| | | `-FieldDecl 0x5b55878 <line:159:3, col:7> col:7 __align 'int'
| | |-TypedefDecl 0x5b55938 <line:156:1, line:160:3> col:3 pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| | | `-ElaboratedType 0x5b558e0 'union pthread_condattr_t' sugar
| | |   `-RecordType 0x5b55730 'pthread_condattr_t'
| | |     `-CXXRecord 0x5b55698 ''
| | |-TypedefDecl 0x5b559c0 <line:164:1, col:22> col:22 pthread_key_t 'unsigned int'
| | | `-BuiltinType 0x5aca3a0 'unsigned int'
| | |-TypedefDecl 0x5b55a30 <line:168:1, col:13> col:13 pthread_once_t 'int'
| | | `-BuiltinType 0x5aca300 'int'
| | |-CXXRecordDecl 0x5b55a88 <line:174:9, line:214:1> line:174:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-CXXRecordDecl 0x5b55ba8 <line:177:3, line:193:3> line:177:3 struct definition
| | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | | | |-DefaultConstructor exists trivial needs_implicit
| | | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | | `-Destructor simple irrelevant trivial needs_implicit
| | | | |-FieldDecl 0x5b55ce0 <line:179:5, col:9> col:9 __lock 'int'
| | | | |-FieldDecl 0x5b55d48 <line:180:5, col:18> col:18 __nr_readers 'unsigned int'
| | | | |-FieldDecl 0x5b55db0 <line:181:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | | | |-FieldDecl 0x5b55e18 <line:182:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | | | |-FieldDecl 0x5b55e80 <line:183:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | | | |-FieldDecl 0x5b55ee8 <line:184:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | | | |-FieldDecl 0x5b55f50 <line:185:5, col:9> col:9 __writer 'int'
| | | | |-FieldDecl 0x5b55fb8 <line:186:5, col:9> col:9 __shared 'int'
| | | | |-FieldDecl 0x5b56020 <line:187:5, col:23> col:23 __pad1 'unsigned long'
| | | | |-FieldDecl 0x5b57ce8 <line:188:5, col:23> col:23 __pad2 'unsigned long'
| | | | `-FieldDecl 0x5b57d50 <line:191:5, col:18> col:18 __flags 'unsigned int'
| | | |-FieldDecl 0x5b57e18 <line:177:3, line:193:5> col:5 __data 'struct (anonymous struct at /usr/include/bits/pthreadtypes.h:177:3)':'pthread_rwlock_t::(anonymous struct at /usr/include/bits/pthreadtypes.h:177:3)'
| | | |-FieldDecl 0x5b57ed8 <line:212:3, col:17> col:8 __size 'char [56]'
| | | `-FieldDecl 0x5b57f40 <line:213:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x5b58118 <line:174:1, line:214:3> col:3 pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| | | `-ElaboratedType 0x5b580c0 'union pthread_rwlock_t' sugar
| | |   `-RecordType 0x5b55b20 'pthread_rwlock_t'
| | |     `-CXXRecord 0x5b55a88 ''
| | |-CXXRecordDecl 0x5b58188 <line:216:9, line:220:1> line:216:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b58338 <line:218:3, col:16> col:8 __size 'char [8]'
| | | `-FieldDecl 0x5b583a0 <line:219:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x5b58468 <line:216:1, line:220:3> col:3 pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| | | `-ElaboratedType 0x5b58410 'union pthread_rwlockattr_t' sugar
| | |   `-RecordType 0x5b58220 'pthread_rwlockattr_t'
| | |     `-CXXRecord 0x5b58188 ''
| | |-TypedefDecl 0x5b584f0 <line:226:1, col:22> col:22 pthread_spinlock_t 'volatile int'
| | | `-QualType 0x5aca304 'volatile int' volatile
| | |   `-BuiltinType 0x5aca300 'int'
| | |-CXXRecordDecl 0x5b58548 <line:231:9, line:235:1> line:231:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b586f8 <line:233:3, col:17> col:8 __size 'char [32]'
| | | `-FieldDecl 0x5b58760 <line:234:3, col:12> col:12 __align 'long'
| | |-TypedefDecl 0x5b58828 <line:231:1, line:235:3> col:3 pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| | | `-ElaboratedType 0x5b587d0 'union pthread_barrier_t' sugar
| | |   `-RecordType 0x5b585e0 'pthread_barrier_t'
| | |     `-CXXRecord 0x5b58548 ''
| | |-CXXRecordDecl 0x5b58898 <line:237:9, line:241:1> line:237:9 union definition
| | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | | |-DefaultConstructor exists trivial needs_implicit
| | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveConstructor exists simple trivial needs_implicit
| | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | | |-MoveAssignment exists simple trivial needs_implicit
| | | | `-Destructor simple irrelevant trivial needs_implicit
| | | |-FieldDecl 0x5b58a10 <line:239:3, col:16> col:8 __size 'char [4]'
| | | `-FieldDecl 0x5b58a78 <line:240:3, col:7> col:7 __align 'int'
| | `-TypedefDecl 0x5b58b38 <line:237:1, line:241:3> col:3 pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| |   `-ElaboratedType 0x5b58ae0 'union pthread_barrierattr_t' sugar
| |     `-RecordType 0x5b58930 'pthread_barrierattr_t'
| |       `-CXXRecord 0x5b58898 ''
| |-FunctionDecl 0x5b59500 </usr/include/stdlib.h:321:1, col:38> col:17 random 'long () throw()' extern
| |-FunctionDecl 0x5b596b0 <line:324:1, col:50> col:13 srandom 'void (unsigned int) throw()' extern
| | `-ParmVarDecl 0x5b595b8 <col:22, col:35> col:35 __seed 'unsigned int'
| |-FunctionDecl 0x5b599b8 <line:330:1, line:331:64> line:330:14 initstate 'char *(unsigned int, char *, size_t) throw()' extern
| | |-ParmVarDecl 0x5b59770 <col:25, col:38> col:38 __seed 'unsigned int'
| | |-ParmVarDecl 0x5b597f0 <col:46, col:52> col:52 __statebuf 'char *'
| | |-ParmVarDecl 0x5b59868 <line:331:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b59a70 <col:48, col:62> 2
| |-FunctionDecl 0x5b59c08 <line:335:1, col:83> col:14 setstate 'char *(char *) throw()' extern
| | |-ParmVarDecl 0x5b59ae0 <col:24, col:30> col:30 __statebuf 'char *'
| | `-NonNullAttr 0x5b59cb0 <col:67, col:81> 1
| |-CXXRecordDecl 0x5b59d08 <line:343:1, line:352:3> line:343:8 struct random_data definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5b59e28 <col:1, col:8> col:8 implicit struct random_data
| | |-FieldDecl 0x5b59f18 <line:345:5, col:14> col:14 fptr 'int32_t *'
| | |-FieldDecl 0x5b59f78 <line:346:5, col:14> col:14 rptr 'int32_t *'
| | |-FieldDecl 0x5b59fd8 <line:347:5, col:14> col:14 state 'int32_t *'
| | |-FieldDecl 0x5b5a040 <line:348:5, col:9> col:9 rand_type 'int'
| | |-FieldDecl 0x5b5a0a8 <line:349:5, col:9> col:9 rand_deg 'int'
| | |-FieldDecl 0x5b5a110 <line:350:5, col:9> col:9 rand_sep 'int'
| | `-FieldDecl 0x5b5a170 <line:351:5, col:14> col:14 end_ptr 'int32_t *'
| |-FunctionDecl 0x5b5a920 <line:354:1, line:355:82> line:354:12 random_r 'int (struct random_data *__restrict, int32_t *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5a290 <col:22, col:53> col:53 __buf 'struct random_data *__restrict'
| | |-ParmVarDecl 0x5b5a308 <line:355:8, col:28> col:28 __result 'int32_t *__restrict'
| | `-NonNullAttr 0x5b5a9d0 <col:63, col:80> 1 2
| |-FunctionDecl 0x5b5ac18 <line:357:1, line:358:47> line:357:12 srandom_r 'int (unsigned int, struct random_data *) throw()' extern
| | |-ParmVarDecl 0x5b5aa40 <col:23, col:36> col:36 __seed 'unsigned int'
| | |-ParmVarDecl 0x5b5aad0 <col:44, col:64> col:64 __buf 'struct random_data *'
| | `-NonNullAttr 0x5b5acc8 <line:358:31, col:45> 2
| |-FunctionDecl 0x5b5b048 <line:360:1, line:363:50> line:360:12 initstate_r 'int (unsigned int, char *__restrict, size_t, struct random_data *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5ad30 <col:25, col:38> col:38 __seed 'unsigned int'
| | |-ParmVarDecl 0x5b5adb0 <col:46, col:63> col:63 __statebuf 'char *__restrict'
| | |-ParmVarDecl 0x5b5ae28 <line:361:4, col:11> col:11 __statelen 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b5aeb8 <line:362:4, col:35> col:35 __buf 'struct random_data *__restrict'
| | `-NonNullAttr 0x5b5b108 <line:363:31, col:48> 2 4
| |-FunctionDecl 0x5b5b368 <line:365:1, line:367:50> line:365:12 setstate_r 'int (char *__restrict, struct random_data *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5b170 <col:24, col:41> col:41 __statebuf 'char *__restrict'
| | |-ParmVarDecl 0x5b5b200 <line:366:10, col:41> col:41 __buf 'struct random_data *__restrict'
| | `-NonNullAttr 0x5b5b418 <line:367:31, col:48> 1 2
| |-FunctionDecl 0x5b5b538 <line:374:1, col:31> col:12 rand 'int () throw()' extern
| |-FunctionDecl 0x5b5b688 <line:376:1, col:48> col:13 srand 'void (unsigned int) throw()' extern
| | `-ParmVarDecl 0x5b5b5f0 <col:20, col:33> col:33 __seed 'unsigned int'
| |-FunctionDecl 0x5b5b878 <line:381:1, col:49> col:12 rand_r 'int (unsigned int *) throw()' extern
| | `-ParmVarDecl 0x5b5b770 <col:20, col:34> col:34 __seed 'unsigned int *'
| |-FunctionDecl 0x5b5ba08 <line:389:1, col:37> col:15 drand48 'double () throw()' extern
| |-FunctionDecl 0x5b5bcc8 <line:390:1, col:96> col:15 erand48 'double (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x5b5bba0 <col:24, col:52> col:43 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x5b5bd70 <col:80, col:94> 1
| |-FunctionDecl 0x5b5be70 <line:393:1, col:39> col:17 lrand48 'long () throw()' extern
| |-FunctionDecl 0x5b5c098 <line:394:1, line:395:47> line:394:17 nrand48 'long (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x5b5bf70 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x5b5c140 <line:395:31, col:45> 1
| |-FunctionDecl 0x5b5c240 <line:398:1, col:39> col:17 mrand48 'long () throw()' extern
| |-FunctionDecl 0x5b5c400 <line:399:1, line:400:47> line:399:17 jrand48 'long (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x5b5c340 <col:26, col:54> col:45 __xsubi 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x5b5c4a8 <line:400:31, col:45> 1
| |-FunctionDecl 0x5b5c610 <line:403:1, col:49> col:13 srand48 'void (long) throw()' extern
| | `-ParmVarDecl 0x5b5c510 <col:22, col:31> col:31 __seedval 'long'
| |-FunctionDecl 0x5b5c838 <line:404:1, line:405:47> line:404:28 seed48 'unsigned short *(unsigned short *) throw()' extern
| | |-ParmVarDecl 0x5b5c718 <col:36, col:66> col:55 __seed16v 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x5b5c8e0 <line:405:31, col:45> 1
| |-FunctionDecl 0x5b5cb60 <line:406:1, col:94> col:13 lcong48 'void (unsigned short *) throw()' extern
| | |-ParmVarDecl 0x5b5ca40 <col:22, col:50> col:41 __param 'unsigned short *':'unsigned short *'
| | `-NonNullAttr 0x5b5cc08 <col:78, col:92> 1
| |-CXXRecordDecl 0x5b5cc58 <line:412:1, line:419:3> line:412:8 struct drand48_data definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5b5cd78 <col:1, col:8> col:8 implicit struct drand48_data
| | |-FieldDecl 0x5b5ce68 <line:414:5, col:29> col:24 __x 'unsigned short [3]'
| | |-FieldDecl 0x5b5cf18 <line:415:5, col:33> col:24 __old_x 'unsigned short [3]'
| | |-FieldDecl 0x5b5cf80 <line:416:5, col:24> col:24 __c 'unsigned short'
| | |-FieldDecl 0x5b5cfe8 <line:417:5, col:24> col:24 __init 'unsigned short'
| | `-FieldDecl 0x5b5d050 <line:418:5, col:28> col:28 __a 'unsigned long long'
| |-FunctionDecl 0x5b5d388 <line:422:1, line:423:82> line:422:12 drand48_r 'int (struct drand48_data *__restrict, double *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5d170 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x5b5d220 <line:423:9, col:28> col:28 __result 'double *__restrict'
| | `-NonNullAttr 0x5b5d438 <col:63, col:80> 1 2
| |-FunctionDecl 0x5b5d768 <line:424:1, line:426:82> line:424:12 erand48_r 'int (unsigned short *, struct drand48_data *__restrict, double *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5d4e8 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x5b5d578 <line:425:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x5b5d5f8 <line:426:9, col:28> col:28 __result 'double *__restrict'
| | `-NonNullAttr 0x5b5d820 <col:63, col:80> 1 2
| |-FunctionDecl 0x5b5e6d8 <line:429:1, line:431:50> line:429:12 lrand48_r 'int (struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5d8a0 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x5b5e570 <line:430:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x5b5e788 <line:431:31, col:48> 1 2
| |-FunctionDecl 0x5b5eab8 <line:432:1, line:435:50> line:432:12 nrand48_r 'int (unsigned short *, struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5e838 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x5b5e8c8 <line:433:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x5b5e948 <line:434:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x5b5eb70 <line:435:31, col:48> 1 2
| |-FunctionDecl 0x5b5ed58 <line:438:1, line:440:50> line:438:12 mrand48_r 'int (struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5ebf0 <col:23, col:55> col:55 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x5b5ec70 <line:439:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x5b5ee08 <line:440:31, col:48> 1 2
| |-FunctionDecl 0x5b5f0b8 <line:441:1, line:444:50> line:441:12 jrand48_r 'int (unsigned short *, struct drand48_data *__restrict, long *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b5eeb8 <col:23, col:51> col:42 __xsubi 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x5b5ef48 <line:442:9, col:41> col:41 __buffer 'struct drand48_data *__restrict'
| | |-ParmVarDecl 0x5b5efc8 <line:443:9, col:30> col:30 __result 'long *__restrict'
| | `-NonNullAttr 0x5b5f170 <line:444:31, col:48> 1 2
| |-FunctionDecl 0x5b5f3b8 <line:447:1, line:448:47> line:447:12 srand48_r 'int (long, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0x5b5f1e0 <col:23, col:32> col:32 __seedval 'long'
| | |-ParmVarDecl 0x5b5f270 <col:43, col:64> col:64 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0x5b5f468 <line:448:31, col:45> 2
| |-FunctionDecl 0x5b60788 <line:450:1, line:451:83> line:450:12 seed48_r 'int (unsigned short *, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0x5b60590 <col:22, col:52> col:41 __seed16v 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x5b60620 <line:451:8, col:29> col:29 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0x5b60838 <col:64, col:81> 1 2
| |-FunctionDecl 0x5b60a98 <line:453:1, line:455:50> line:453:12 lcong48_r 'int (unsigned short *, struct drand48_data *) throw()' extern
| | |-ParmVarDecl 0x5b608e8 <col:23, col:51> col:42 __param 'unsigned short *':'unsigned short *'
| | |-ParmVarDecl 0x5b60978 <line:454:9, col:30> col:30 __buffer 'struct drand48_data *'
| | `-NonNullAttr 0x5b60b48 <line:455:31, col:48> 1 2
| |-FunctionDecl 0x5b60ca8 <line:465:1, col:73> col:14 malloc 'void *(size_t) throw()' extern
| | |-ParmVarDecl 0x5b60ba8 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x5b60d50 <col:62> malloc
| |-FunctionDecl 0x5b60f38 <line:467:1, line:468:42> line:467:14 calloc 'void *(size_t, size_t) throw()' extern
| | |-ParmVarDecl 0x5b60da0 <col:22, col:29> col:29 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b60e18 <col:38, col:45> col:45 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x5b60fe8 <line:468:31> malloc
| |-FunctionDecl 0x5b611d8 <line:479:1, line:480:54> line:479:14 realloc 'void *(void *, size_t) throw()' extern
| | |-ParmVarDecl 0x5b61040 <col:23, col:29> col:29 __ptr 'void *'
| | |-ParmVarDecl 0x5b610b8 <col:36, col:43> col:43 __size 'size_t':'unsigned long'
| | `-WarnUnusedResultAttr 0x5b61288 <line:480:31> warn_unused_result
| |-FunctionDecl 0x5b613e0 <line:482:1, col:39> col:13 free 'void (void *) throw()' extern
| | `-ParmVarDecl 0x5b612e0 <col:19, col:25> col:25 __ptr 'void *'
| |-FunctionDecl 0x5b615a0 <line:487:1, col:40> col:13 cfree 'void (void *) throw()' extern
| | `-ParmVarDecl 0x5b614a0 <col:20, col:26> col:26 __ptr 'void *'
| |-LinkageSpecDecl 0x5b61668 </usr/include/alloca.h:26:1, line:38:1> line:26:8 C
| | `-FunctionDecl 0x5b61768 <line:32:1, col:44> col:14 alloca 'void *(size_t) throw()' extern
| |   `-ParmVarDecl 0x5b616c8 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| |-FunctionDecl 0x5b618c0 </usr/include/stdlib.h:497:1, col:73> col:14 valloc 'void *(size_t) throw()' extern
| | |-ParmVarDecl 0x5b61820 <col:22, col:29> col:29 __size 'size_t':'unsigned long'
| | `-RestrictAttr 0x5b61968 <col:62> malloc
| |-FunctionDecl 0x5b61c38 <line:502:1, line:503:47> line:502:12 posix_memalign 'int (void **, size_t, size_t) throw()' extern
| | |-ParmVarDecl 0x5b619f0 <col:28, col:35> col:35 __memptr 'void **'
| | |-ParmVarDecl 0x5b61a68 <col:45, col:52> col:52 __alignment 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b61ae0 <col:65, col:72> col:72 __size 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b61cf0 <line:503:31, col:45> 1
| |-FunctionDecl 0x5b61e98 <line:508:1, line:509:62> line:508:14 aligned_alloc 'void *(size_t, size_t) throw()' extern
| | |-ParmVarDecl 0x5b61d58 <col:29, col:36> col:36 __alignment 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b61dd0 <col:49, col:56> col:56 __size 'size_t':'unsigned long'
| | |-RestrictAttr 0x5b61f48 <line:509:31> malloc
| | `-AllocSizeAttr 0x5b61f88 <col:43, col:60> 2
| |-FunctionDecl 0x5b62100 <line:514:1, col:64> col:13 abort 'void () __attribute__((noreturn)) throw()' extern
| |-FunctionDecl 0x5b623f8 <line:518:1, col:84> col:12 atexit 'int (void (*)()) throw()' extern
| | |-ParmVarDecl 0x5b622d8 <col:20, col:40> col:27 __func 'void (*)()'
| | `-NonNullAttr 0x5b624a0 <col:68, col:82> 1
| |-LinkageSpecDecl 0x5b635c0 <line:523:1, line:524:71> line:523:8 C++
| | `-FunctionDecl 0x5b63818 <col:14, line:524:71> line:523:18 at_quick_exit 'int (void (*)()) throw()'
| |   |-ParmVarDecl 0x5b636b8 <col:33, col:53> col:40 __func 'void (*)()'
| |   |-AsmLabelAttr 0x5b638b8 <line:524:22> "at_quick_exit"
| |   `-NonNullAttr 0x5b63918 <col:55, col:69> 1
| |-FunctionDecl 0x5b63d08 <line:534:1, line:535:47> line:534:12 on_exit 'int (void (*)(int, void *), void *) throw()' extern
| | |-ParmVarDecl 0x5b63b48 <col:21, col:62> col:28 __func 'void (*)(int, void *)'
| | |-ParmVarDecl 0x5b63bc8 <col:65, col:71> col:71 __arg 'void *'
| | `-NonNullAttr 0x5b63db8 <line:535:31, col:45> 1
| |-FunctionDecl 0x5b63f50 <line:542:1, col:71> col:13 exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0x5b63e20 <col:19, col:23> col:23 __status 'int'
| |-FunctionDecl 0x5b640a8 <line:548:1, col:77> col:13 quick_exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0x5b64010 <col:25, col:29> col:29 __status 'int'
| |-FunctionDecl 0x5b64200 <line:556:1, col:72> col:13 _Exit 'void (int) __attribute__((noreturn)) throw()' extern
| | `-ParmVarDecl 0x5b64168 <col:20, col:24> col:24 __status 'int'
| |-FunctionDecl 0x5b643e8 <line:563:1, col:83> col:14 getenv 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0x5b642c0 <col:22, col:34> col:34 __name 'const char *'
| | `-NonNullAttr 0x5b64490 <col:67, col:81> 1
| |-FunctionDecl 0x5b645d0 <line:569:1, line:570:47> line:569:14 secure_getenv 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0x5b64500 <col:29, col:41> col:41 __name 'const char *'
| | `-NonNullAttr 0x5b64678 <line:570:31, col:45> 1
| |-FunctionDecl 0x5b64808 <line:577:1, col:77> col:12 putenv 'int (char *) throw()' extern
| | |-ParmVarDecl 0x5b646e0 <col:20, col:26> col:26 __string 'char *'
| | `-NonNullAttr 0x5b648b0 <col:61, col:75> 1
| |-FunctionDecl 0x5b64b78 <line:583:1, line:584:47> line:583:12 setenv 'int (const char *, const char *, int) throw()' extern
| | |-ParmVarDecl 0x5b64920 <col:20, col:32> col:32 __name 'const char *'
| | |-ParmVarDecl 0x5b649a0 <col:40, col:52> col:52 __value 'const char *'
| | |-ParmVarDecl 0x5b64a20 <col:61, col:65> col:65 __replace 'int'
| | `-NonNullAttr 0x5b64c30 <line:584:31, col:45> 2
| |-FunctionDecl 0x5b64d60 <line:587:1, col:83> col:12 unsetenv 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x5b64ca0 <col:22, col:34> col:34 __name 'const char *'
| | `-NonNullAttr 0x5b64e08 <col:67, col:81> 1
| |-FunctionDecl 0x5b64f00 <line:594:1, col:35> col:12 clearenv 'int () throw()' extern
| |-FunctionDecl 0x5b65078 <line:605:1, col:81> col:14 mktemp 'char *(char *) throw()' extern
| | |-ParmVarDecl 0x5b64fb8 <col:22, col:28> col:28 __template 'char *'
| | `-NonNullAttr 0x5b65120 <col:65, col:79> 1
| |-FunctionDecl 0x5b65248 <line:619:1, col:71> col:12 mkstemp 'int (char *)' extern
| | |-ParmVarDecl 0x5b65190 <col:21, col:27> col:27 __template 'char *'
| | `-NonNullAttr 0x5b652f0 <col:55, col:69> 1
| |-FunctionDecl 0x5b65418 <line:629:1, col:73> col:12 mkstemp64 'int (char *)' extern
| | |-ParmVarDecl 0x5b65360 <col:23, col:29> col:29 __template 'char *'
| | `-NonNullAttr 0x5b654c0 <col:57, col:71> 1
| |-FunctionDecl 0x5b656e0 <line:641:1, col:89> col:12 mkstemps 'int (char *, int)' extern
| | |-ParmVarDecl 0x5b65530 <col:22, col:28> col:28 __template 'char *'
| | |-ParmVarDecl 0x5b655e0 <col:40, col:44> col:44 __suffixlen 'int'
| | `-NonNullAttr 0x5b65790 <col:73, col:87> 1
| |-FunctionDecl 0x5b65940 <line:651:1, line:652:38> line:651:12 mkstemps64 'int (char *, int)' extern
| | |-ParmVarDecl 0x5b65800 <col:24, col:30> col:30 __template 'char *'
| | |-ParmVarDecl 0x5b65880 <col:42, col:46> col:46 __suffixlen 'int'
| | `-NonNullAttr 0x5b659f0 <line:652:22, col:36> 1
| |-FunctionDecl 0x5b65b20 <line:662:1, col:82> col:14 mkdtemp 'char *(char *) throw()' extern
| | |-ParmVarDecl 0x5b65a60 <col:23, col:29> col:29 __template 'char *'
| | `-NonNullAttr 0x5b65bc8 <col:66, col:80> 1
| |-FunctionDecl 0x5b65d70 <line:673:1, col:85> col:12 mkostemp 'int (char *, int)' extern
| | |-ParmVarDecl 0x5b65c30 <col:22, col:28> col:28 __template 'char *'
| | |-ParmVarDecl 0x5b65cb0 <col:40, col:44> col:44 __flags 'int'
| | `-NonNullAttr 0x5b65e20 <col:69, col:83> 1
| |-FunctionDecl 0x5b65fd0 <line:683:1, col:87> col:12 mkostemp64 'int (char *, int)' extern
| | |-ParmVarDecl 0x5b65e90 <col:24, col:30> col:30 __template 'char *'
| | |-ParmVarDecl 0x5b65f10 <col:42, col:46> col:46 __flags 'int'
| | `-NonNullAttr 0x5b66080 <col:71, col:85> 1
| |-FunctionDecl 0x5b66300 <line:693:1, line:694:38> line:693:12 mkostemps 'int (char *, int, int)' extern
| | |-ParmVarDecl 0x5b660f0 <col:23, col:29> col:29 __template 'char *'
| | |-ParmVarDecl 0x5b66170 <col:41, col:45> col:45 __suffixlen 'int'
| | |-ParmVarDecl 0x5b661f0 <col:58, col:62> col:62 __flags 'int'
| | `-NonNullAttr 0x5b663b8 <line:694:22, col:36> 1
| |-FunctionDecl 0x5b66630 <line:705:1, line:706:38> line:705:12 mkostemps64 'int (char *, int, int)' extern
| | |-ParmVarDecl 0x5b66420 <col:25, col:31> col:31 __template 'char *'
| | |-ParmVarDecl 0x5b664a0 <col:43, col:47> col:47 __suffixlen 'int'
| | |-ParmVarDecl 0x5b66520 <col:60, col:64> col:64 __flags 'int'
| | `-NonNullAttr 0x5b666e8 <line:706:22, col:36> 1
| |-FunctionDecl 0x5b667e8 <line:716:1, col:41> col:12 system 'int (const char *)' extern
| | `-ParmVarDecl 0x5b66750 <col:20, col:32> col:32 __command 'const char *'
| |-FunctionDecl 0x5b66968 <line:723:1, line:724:47> line:723:14 canonicalize_file_name 'char *(const char *) throw()' extern
| | |-ParmVarDecl 0x5b668a8 <col:38, col:50> col:50 __name 'const char *'
| | `-NonNullAttr 0x5b66a10 <line:724:31, col:45> 1
| |-FunctionDecl 0x5b66c28 <line:733:1, line:734:46> line:733:14 realpath 'char *(const char *__restrict, char *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b66a80 <col:24, col:47> col:47 __name 'const char *__restrict'
| | `-ParmVarDecl 0x5b66b00 <line:734:10, col:27> col:27 __resolved 'char *__restrict'
| |-TypedefDecl 0x5b66f20 <line:741:1, col:57> col:15 referenced __compar_fn_t 'int (*)(const void *, const void *)'
| | `-PointerType 0x5b66eb0 'int (*)(const void *, const void *)'
| |   `-ParenType 0x5b66e50 'int (const void *, const void *)' sugar
| |     `-FunctionProtoType 0x5b66e10 'int (const void *, const void *)' cdecl
| |       |-BuiltinType 0x5aca300 'int'
| |       |-PointerType 0x5b66ce0 'const void *'
| |       | `-QualType 0x5aca261 'const void' const
| |       |   `-BuiltinType 0x5aca260 'void'
| |       `-PointerType 0x5b66ce0 'const void *'
| |         `-QualType 0x5aca261 'const void' const
| |           `-BuiltinType 0x5aca260 'void'
| |-TypedefDecl 0x5b66fb0 <line:744:1, col:23> col:23 comparison_fn_t '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-TypedefType 0x5b66f80 '__compar_fn_t' sugar
| |   |-Typedef 0x5b66f20 '__compar_fn_t'
| |   `-PointerType 0x5b66eb0 'int (*)(const void *, const void *)'
| |     `-ParenType 0x5b66e50 'int (const void *, const void *)' sugar
| |       `-FunctionProtoType 0x5b66e10 'int (const void *, const void *)' cdecl
| |         |-BuiltinType 0x5aca300 'int'
| |         |-PointerType 0x5b66ce0 'const void *'
| |         | `-QualType 0x5aca261 'const void' const
| |         |   `-BuiltinType 0x5aca260 'void'
| |         `-PointerType 0x5b66ce0 'const void *'
| |           `-QualType 0x5aca261 'const void' const
| |             `-BuiltinType 0x5aca260 'void'
| |-TypedefDecl 0x5b672a8 <line:748:1, col:67> col:15 referenced __compar_d_fn_t 'int (*)(const void *, const void *, void *)'
| | `-PointerType 0x5b67230 'int (*)(const void *, const void *, void *)'
| |   `-ParenType 0x5b671d0 'int (const void *, const void *, void *)' sugar
| |     `-FunctionProtoType 0x5b67190 'int (const void *, const void *, void *)' cdecl
| |       |-BuiltinType 0x5aca300 'int'
| |       |-PointerType 0x5b66ce0 'const void *'
| |       | `-QualType 0x5aca261 'const void' const
| |       |   `-BuiltinType 0x5aca260 'void'
| |       |-PointerType 0x5b66ce0 'const void *'
| |       | `-QualType 0x5aca261 'const void' const
| |       |   `-BuiltinType 0x5aca260 'void'
| |       `-PointerType 0x5acaa60 'void *'
| |         `-BuiltinType 0x5aca260 'void'
| |-FunctionDecl 0x5b676f0 <line:754:1, line:756:44> line:754:14 bsearch 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)' extern
| | |-ParmVarDecl 0x5b67318 <col:23, col:35> col:35 __key 'const void *'
| | |-ParmVarDecl 0x5b67398 <col:42, col:54> col:54 __base 'const void *'
| | |-ParmVarDecl 0x5b67410 <line:755:9, col:16> col:16 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b67488 <col:25, col:32> col:32 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b67500 <col:40, col:54> col:54 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-NonNullAttr 0x5b677b8 <line:756:22, col:42> 1 2 5
| |-FunctionDecl 0x5b67b18 <line:760:1, line:761:65> line:760:13 qsort 'void (void *, size_t, size_t, __compar_fn_t)' extern
| | |-ParmVarDecl 0x5b67828 <col:20, col:26> col:26 __base 'void *'
| | |-ParmVarDecl 0x5b678a0 <col:34, col:41> col:41 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b67918 <col:50, col:57> col:57 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b67990 <line:761:6, col:20> col:20 __compar '__compar_fn_t':'int (*)(const void *, const void *)'
| | `-NonNullAttr 0x5b67bd8 <col:46, col:63> 1 4
| |-FunctionDecl 0x5b67fe8 <line:763:1, line:765:38> line:763:13 qsort_r 'void (void *, size_t, size_t, __compar_d_fn_t, void *)' extern
| | |-ParmVarDecl 0x5b67c40 <col:22, col:28> col:28 __base 'void *'
| | |-ParmVarDecl 0x5b67cb8 <col:36, col:43> col:43 __nmemb 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b67d30 <col:52, col:59> col:59 __size 'size_t':'unsigned long'
| | |-ParmVarDecl 0x5b67dd0 <line:764:8, col:24> col:24 __compar '__compar_d_fn_t':'int (*)(const void *, const void *, void *)'
| | |-ParmVarDecl 0x5b67e50 <col:34, col:40> col:40 __arg 'void *'
| | `-NonNullAttr 0x5b680b0 <line:765:19, col:36> 1 4
| |-FunctionDecl 0x5b681f8 <line:770:1, col:61> col:12 abs 'int (int) throw()' extern
| | |-ParmVarDecl 0x5b68120 <col:17, col:21> col:21 __x 'int'
| | |-ConstAttr 0x5b682a0 <col:51>
| | `-NoThrowAttr 0x5b68310 <col:12> Implicit
| |-FunctionDecl 0x5b68438 <line:771:1, col:72> col:17 labs 'long (long) throw()' extern
| | |-ParmVarDecl 0x5b68338 <col:23, col:32> col:32 __x 'long'
| | |-ConstAttr 0x5b684e0 <col:62>
| | `-NoThrowAttr 0x5b68550 <col:17> Implicit
| |-FunctionDecl 0x5b686a8 <line:775:15, line:776:41> line:775:36 llabs 'long long (long long) throw()' extern
| | |-ParmVarDecl 0x5b68578 <col:43, col:57> col:57 __x 'long long'
| | |-ConstAttr 0x5b68750 <line:776:31>
| | `-NoThrowAttr 0x5b687c0 <line:775:36> Implicit
| |-FunctionDecl 0x5b689a0 <line:784:1, line:785:41> line:784:14 div 'div_t (int, int) throw()' extern
| | |-ParmVarDecl 0x5b68808 <col:19, col:23> col:23 __numer 'int'
| | |-ParmVarDecl 0x5b68888 <col:32, col:36> col:36 __denom 'int'
| | `-ConstAttr 0x5b68a50 <line:785:31>
| |-FunctionDecl 0x5b68c60 <line:786:1, line:787:41> line:786:15 used ldiv 'ldiv_t (long, long) throw()' extern
| | |-ParmVarDecl 0x5b68ac8 <col:21, col:30> col:30 __numer 'long'
| | |-ParmVarDecl 0x5b68b48 <col:39, col:48> col:48 __denom 'long'
| | `-ConstAttr 0x5b68d10 <line:787:31>
| |-FunctionDecl 0x5b68f20 <line:792:15, line:794:41> line:792:30 lldiv 'lldiv_t (long long, long long) throw()' extern
| | |-ParmVarDecl 0x5b68d88 <col:37, col:51> col:51 __numer 'long long'
| | |-ParmVarDecl 0x5b68e08 <line:793:9, col:23> col:23 __denom 'long long'
| | `-ConstAttr 0x5b68fd0 <line:794:31>
| |-FunctionDecl 0x5b69338 <line:807:1, line:808:74> line:807:14 ecvt 'char *(double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b69028 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x5b690a8 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x5b69128 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b691a8 <line:808:6, col:22> col:22 __sign 'int *__restrict'
| | `-NonNullAttr 0x5b693f8 <col:55, col:72> 3 4
| |-FunctionDecl 0x5b69718 <line:813:1, line:814:74> line:813:14 fcvt 'char *(double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b69460 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x5b694e0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x5b69560 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b69620 <line:814:6, col:22> col:22 __sign 'int *__restrict'
| | `-NonNullAttr 0x5b697d8 <col:55, col:72> 3 4
| |-FunctionDecl 0x5b69a98 <line:819:1, line:820:47> line:819:14 gcvt 'char *(double, int, char *) throw()' extern
| | |-ParmVarDecl 0x5b69840 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x5b698c0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x5b69940 <col:50, col:56> col:56 __buf 'char *'
| | `-NonNullAttr 0x5b69b50 <line:820:31, col:45> 3
| |-FunctionDecl 0x5b69ed8 <line:825:1, line:827:50> line:825:14 qecvt 'char *(long double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b69bc0 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x5b69c40 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x5b69cc0 <line:826:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b69d40 <col:32, col:48> col:48 __sign 'int *__restrict'
| | `-NonNullAttr 0x5b69f98 <line:827:31, col:48> 3 4
| |-FunctionDecl 0x5b6a278 <line:828:1, line:830:50> line:828:14 qfcvt 'char *(long double, int, int *__restrict, int *__restrict) throw()' extern
| | |-ParmVarDecl 0x5b6a000 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x5b6a080 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x5b6a100 <line:829:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b6a180 <col:32, col:48> col:48 __sign 'int *__restrict'
| | `-NonNullAttr 0x5b6a338 <line:830:31, col:48> 3 4
| |-FunctionDecl 0x5b6a630 <line:831:1, line:832:47> line:831:14 qgcvt 'char *(long double, int, char *) throw()' extern
| | |-ParmVarDecl 0x5b6a3a0 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x5b6a420 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x5b6a4a0 <col:56, col:62> col:62 __buf 'char *'
| | `-NonNullAttr 0x5b6a6e8 <line:832:31, col:45> 3
| |-FunctionDecl 0x5b6aba8 <line:837:1, line:839:67> line:837:12 ecvt_r 'int (double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6a750 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x5b6a7d0 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x5b6a850 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b6a8d0 <line:838:6, col:22> col:22 __sign 'int *__restrict'
| | |-ParmVarDecl 0x5b6a950 <col:30, col:47> col:47 __buf 'char *__restrict'
| | |-ParmVarDecl 0x5b6a9c8 <line:839:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b6ac78 <col:45, col:65> 3 4 5
| |-FunctionDecl 0x5b6b088 <line:840:1, line:842:67> line:840:12 fcvt_r 'int (double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6ace8 <col:20, col:27> col:27 __value 'double'
| | |-ParmVarDecl 0x5b6ad68 <col:36, col:40> col:40 __ndigit 'int'
| | |-ParmVarDecl 0x5b6ade8 <col:50, col:66> col:66 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b6ae68 <line:841:6, col:22> col:22 __sign 'int *__restrict'
| | |-ParmVarDecl 0x5b6aee8 <col:30, col:47> col:47 __buf 'char *__restrict'
| | |-ParmVarDecl 0x5b6af60 <line:842:6, col:13> col:13 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b6b158 <col:45, col:65> 3 4 5
| |-FunctionDecl 0x5b6c650 <line:844:1, line:847:53> line:844:12 qecvt_r 'int (long double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6b1c8 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x5b6b248 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x5b6b2c8 <line:845:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b6b348 <col:32, col:48> col:48 __sign 'int *__restrict'
| | |-ParmVarDecl 0x5b6b3c8 <line:846:7, col:24> col:24 __buf 'char *__restrict'
| | |-ParmVarDecl 0x5b6b440 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b6c720 <line:847:31, col:51> 3 4 5
| |-FunctionDecl 0x5b6cb38 <line:848:1, line:851:53> line:848:12 qfcvt_r 'int (long double, int, int *__restrict, int *__restrict, char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6c798 <col:21, col:33> col:33 __value 'long double'
| | |-ParmVarDecl 0x5b6c818 <col:42, col:46> col:46 __ndigit 'int'
| | |-ParmVarDecl 0x5b6c898 <line:849:7, col:23> col:23 __decpt 'int *__restrict'
| | |-ParmVarDecl 0x5b6c918 <col:32, col:48> col:48 __sign 'int *__restrict'
| | |-ParmVarDecl 0x5b6c998 <line:850:7, col:24> col:24 __buf 'char *__restrict'
| | |-ParmVarDecl 0x5b6ca10 <col:31, col:38> col:38 __len 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b6cc08 <line:851:31, col:51> 3 4 5
| |-FunctionDecl 0x5b6ce18 <line:859:1, col:55> col:12 mblen 'int (const char *, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6cc78 <col:19, col:31> col:31 __s 'const char *'
| | `-ParmVarDecl 0x5b6ccf0 <col:36, col:43> col:43 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x5b6d138 <line:862:1, line:863:53> line:862:12 mbtowc 'int (wchar_t *__restrict, const char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6cf10 <col:20, col:40> col:40 __pwc 'wchar_t *__restrict'
| | |-ParmVarDecl 0x5b6cf90 <line:863:6, col:29> col:29 __s 'const char *__restrict'
| | `-ParmVarDecl 0x5b6d008 <col:34, col:41> col:41 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x5b6d3a8 <line:866:1, col:55> col:12 wctomb 'int (char *, wchar_t) throw()' extern
| | |-ParmVarDecl 0x5b6d208 <col:20, col:26> col:26 __s 'char *'
| | `-ParmVarDecl 0x5b6d280 <col:31, col:39> col:39 __wchar 'wchar_t'
| |-FunctionDecl 0x5b6d6a0 <line:870:1, line:871:51> line:870:15 mbstowcs 'size_t (wchar_t *__restrict, const char *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6d470 <col:25, col:45> col:45 __pwcs 'wchar_t *__restrict'
| | |-ParmVarDecl 0x5b6d4f0 <line:871:4, col:27> col:27 __s 'const char *__restrict'
| | `-ParmVarDecl 0x5b6d568 <col:32, col:39> col:39 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x5b6d9c0 <line:873:1, line:875:13> line:873:15 wcstombs 'size_t (char *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| | |-ParmVarDecl 0x5b6d770 <col:25, col:42> col:42 __s 'char *__restrict'
| | |-ParmVarDecl 0x5b6d820 <line:874:4, col:30> col:30 __pwcs 'const wchar_t *__restrict'
| | `-ParmVarDecl 0x5b6d898 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| |-FunctionDecl 0x5b6db50 <line:884:1, col:86> col:12 rpmatch 'int (const char *) throw()' extern
| | |-ParmVarDecl 0x5b6da90 <col:21, col:33> col:33 __response 'const char *'
| | `-NonNullAttr 0x5b6dbf8 <col:70, col:84> 1
| |-FunctionDecl 0x5b6df28 <line:895:1, line:898:53> line:895:12 getsubopt 'int (char **__restrict, char *const *__restrict, char **__restrict) throw()' extern
| | |-ParmVarDecl 0x5b6dc60 <col:23, col:41> col:41 __optionp 'char **__restrict'
| | |-ParmVarDecl 0x5b6dd10 <line:896:9, col:33> col:33 __tokens 'char *const *__restrict'
| | |-ParmVarDecl 0x5b6dd90 <line:897:9, col:27> col:27 __valuep 'char **__restrict'
| | `-NonNullAttr 0x5b6dfe0 <line:898:31, col:51> 1 2 3
| |-FunctionDecl 0x5b6e170 <line:904:1, col:81> col:13 setkey 'void (const char *) throw()' extern
| | |-ParmVarDecl 0x5b6e058 <col:21, col:33> col:33 __key 'const char *'
| | `-NonNullAttr 0x5b6e218 <col:65, col:79> 1
| |-FunctionDecl 0x5b6e318 <line:912:1, col:37> col:12 posix_openpt 'int (int)' extern
| | `-ParmVarDecl 0x5b6e280 <col:26, col:30> col:30 __oflag 'int'
| |-FunctionDecl 0x5b6e478 <line:920:1, col:38> col:12 grantpt 'int (int) throw()' extern
| | `-ParmVarDecl 0x5b6e3d8 <col:21, col:25> col:25 __fd 'int'
| |-FunctionDecl 0x5b90f40 <line:924:1, col:39> col:12 unlockpt 'int (int) throw()' extern
| | `-ParmVarDecl 0x5b6e538 <col:22, col:26> col:26 __fd 'int'
| |-FunctionDecl 0x5b91108 <line:929:1, col:40> col:14 ptsname 'char *(int) throw()' extern
| | `-ParmVarDecl 0x5b91000 <col:23, col:27> col:27 __fd 'int'
| |-FunctionDecl 0x5b91418 <line:936:1, line:937:47> line:936:12 ptsname_r 'int (int, char *, size_t) throw()' extern
| | |-ParmVarDecl 0x5b911c8 <col:23, col:27> col:27 __fd 'int'
| | |-ParmVarDecl 0x5b91248 <col:33, col:39> col:39 __buf 'char *'
| | |-ParmVarDecl 0x5b912c0 <col:46, col:53> col:53 __buflen 'size_t':'unsigned long'
| | `-NonNullAttr 0x5b914d0 <line:937:31, col:45> 2
| |-FunctionDecl 0x5b915c8 <line:940:1, col:23> col:12 getpt 'int ()' extern
| `-FunctionDecl 0x5b918b8 <line:947:1, line:948:47> line:947:12 getloadavg 'int (double *, int) throw()' extern
|   |-ParmVarDecl 0x5b916f0 <col:24, col:41> col:31 __loadavg 'double *':'double *'
|   |-ParmVarDecl 0x5b91770 <col:44, col:48> col:48 __nelem 'int'
|   `-NonNullAttr 0x5b91968 <line:948:31, col:45> 1
|-LinkageSpecDecl 0x5b919d8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/std_abs.h:46:1, line:108:1> line:46:8 C++
| `-NamespaceDecl 0x5b91a88 prev 0x5b39a58 <line:48:1, line:107:1> line:48:11 std
|   |-original Namespace 0x5b39a58 'std'
|   |-VisibilityAttr 0x5b91af8 <col:31, col:56> Default
|   |-UsingDecl 0x5b91b58 <line:52:3, col:11> col:11 ::abs
|   |-UsingShadowDecl 0x5b91bb0 <col:11> col:11 implicit Function 0x5b681f8 'abs' 'int (int) throw()'
|   |-FunctionDecl 0x5b91cb0 <line:55:3, line:56:47> col:3 abs 'long (long)' inline
|   | |-ParmVarDecl 0x5b91c18 <col:7, col:12> col:12 used __i 'long'
|   | `-CompoundStmt 0x5b92030 <col:17, col:47>
|   |   `-ReturnStmt 0x5b92020 <col:19, col:44>
|   |     `-CallExpr 0x5b91fe0 <col:26, col:44> 'long'
|   |       |-ImplicitCastExpr 0x5b91fc8 <col:26> 'long (*)(long) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x5b91f08 <col:26> '<builtin fn type>' Function 0x5b91da8 '__builtin_labs' 'long (long) noexcept'
|   |       `-ImplicitCastExpr 0x5b92008 <col:41> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0x5b91f50 <col:41> 'long' lvalue ParmVar 0x5b91c18 '__i' 'long'
|   |-FunctionDecl 0x5b920f8 <line:60:3, line:61:54> col:3 abs 'long long (long long)' inline
|   | |-ParmVarDecl 0x5b92060 <col:7, col:17> col:17 used __x 'long long'
|   | `-CompoundStmt 0x5b92450 <col:22, col:54>
|   |   `-ReturnStmt 0x5b92440 <col:24, col:51>
|   |     `-CallExpr 0x5b92400 <col:31, col:51> 'long long'
|   |       |-ImplicitCastExpr 0x5b923e8 <col:31> 'long long (*)(long long) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x5b92350 <col:31> '<builtin fn type>' Function 0x5b921f0 '__builtin_llabs' 'long long (long long) noexcept'
|   |       `-ImplicitCastExpr 0x5b92428 <col:48> 'long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x5b92370 <col:48> 'long long' lvalue ParmVar 0x5b92060 '__x' 'long long'
|   |-FunctionDecl 0x5b92550 <line:69:3, line:71:33> line:70:3 constexpr abs 'double (double)' inline
|   | |-ParmVarDecl 0x5b92480 <col:7, col:14> col:14 used __x 'double'
|   | `-CompoundStmt 0x5b928e0 <line:71:3, col:33>
|   |   `-ReturnStmt 0x5b928d0 <col:5, col:30>
|   |     `-CallExpr 0x5b92890 <col:12, col:30> 'double'
|   |       |-ImplicitCastExpr 0x5b92878 <col:12> 'double (*)(double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x5b927e0 <col:12> '<builtin fn type>' Function 0x5b92680 '__builtin_fabs' 'double (double) noexcept'
|   |       `-ImplicitCastExpr 0x5b928b8 <col:27> 'double' <LValueToRValue>
|   |         `-DeclRefExpr 0x5b92800 <col:27> 'double' lvalue ParmVar 0x5b92480 '__x' 'double'
|   |-FunctionDecl 0x5b929e0 <line:73:3, line:75:34> line:74:3 constexpr abs 'float (float)' inline
|   | |-ParmVarDecl 0x5b92910 <col:7, col:13> col:13 used __x 'float'
|   | `-CompoundStmt 0x5b92d70 <line:75:3, col:34>
|   |   `-ReturnStmt 0x5b92d60 <col:5, col:31>
|   |     `-CallExpr 0x5b92d20 <col:12, col:31> 'float'
|   |       |-ImplicitCastExpr 0x5b92d08 <col:12> 'float (*)(float) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x5b92c70 <col:12> '<builtin fn type>' Function 0x5b92b10 '__builtin_fabsf' 'float (float) noexcept'
|   |       `-ImplicitCastExpr 0x5b92d48 <col:28> 'float' <LValueToRValue>
|   |         `-DeclRefExpr 0x5b92c90 <col:28> 'float' lvalue ParmVar 0x5b92910 '__x' 'float'
|   |-FunctionDecl 0x5b92e70 <line:77:3, line:79:34> line:78:3 constexpr abs 'long double (long double)' inline
|   | |-ParmVarDecl 0x5b92da0 <col:7, col:19> col:19 used __x 'long double'
|   | `-CompoundStmt 0x5b93210 <line:79:3, col:34>
|   |   `-ReturnStmt 0x5b93200 <col:5, col:31>
|   |     `-CallExpr 0x5b931c0 <col:12, col:31> 'long double'
|   |       |-ImplicitCastExpr 0x5b931a8 <col:12> 'long double (*)(long double) noexcept' <BuiltinFnToFnPtr>
|   |       | `-DeclRefExpr 0x5b93110 <col:12> '<builtin fn type>' Function 0x5b92fb0 '__builtin_fabsl' 'long double (long double) noexcept'
|   |       `-ImplicitCastExpr 0x5b931e8 <col:28> 'long double' <LValueToRValue>
|   |         `-DeclRefExpr 0x5b93130 <col:28> 'long double' lvalue ParmVar 0x5b92da0 '__x' 'long double'
|   |-FunctionDecl 0x5b93310 <line:83:3, line:84:53> col:3 constexpr abs '__int128 (__int128)' inline
|   | |-ParmVarDecl 0x5b93240 <col:7, col:16> col:16 used __x '__int128'
|   | `-CompoundStmt 0x5b93510 <col:21, col:53>
|   |   `-ReturnStmt 0x5b93500 <col:23, col:48>
|   |     `-ConditionalOperator 0x5b934d0 <col:30, col:48> '__int128'
|   |       |-BinaryOperator 0x5b93428 <col:30, col:37> 'bool' '>='
|   |       | |-ImplicitCastExpr 0x5b933f8 <col:30> '__int128' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x5b933b8 <col:30> '__int128' lvalue ParmVar 0x5b93240 '__x' '__int128'
|   |       | `-ImplicitCastExpr 0x5b93410 <col:37> '__int128' <IntegralCast>
|   |       |   `-IntegerLiteral 0x5b933d8 <col:37> 'int' 0
|   |       |-ImplicitCastExpr 0x5b934b8 <col:41> '__int128' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5b93448 <col:41> '__int128' lvalue ParmVar 0x5b93240 '__x' '__int128'
|   |       `-UnaryOperator 0x5b934a0 <col:47, col:48> '__int128' prefix '-'
|   |         `-ImplicitCastExpr 0x5b93488 <col:48> '__int128' <LValueToRValue>
|   |           `-DeclRefExpr 0x5b93468 <col:48> '__int128' lvalue ParmVar 0x5b93240 '__x' '__int128'
|   `-FunctionDecl 0x5b93610 <line:100:3, line:103:34> line:102:3 constexpr abs '__float128 (__float128)' inline
|     |-ParmVarDecl 0x5b93540 <col:7, col:18> col:18 used __x '__float128'
|     `-CompoundStmt 0x5b93810 <line:103:3, col:34>
|       `-ReturnStmt 0x5b93800 <col:5, col:29>
|         `-ConditionalOperator 0x5b937d0 <col:12, col:29> '__float128'
|           |-BinaryOperator 0x5b93728 <col:12, col:18> 'bool' '<'
|           | |-ImplicitCastExpr 0x5b936f8 <col:12> '__float128' <LValueToRValue>
|           | | `-DeclRefExpr 0x5b936b8 <col:12> '__float128' lvalue ParmVar 0x5b93540 '__x' '__float128'
|           | `-ImplicitCastExpr 0x5b93710 <col:18> '__float128' <IntegralToFloating>
|           |   `-IntegerLiteral 0x5b936d8 <col:18> 'int' 0
|           |-UnaryOperator 0x5b93780 <col:22, col:23> '__float128' prefix '-'
|           | `-ImplicitCastExpr 0x5b93768 <col:23> '__float128' <LValueToRValue>
|           |   `-DeclRefExpr 0x5b93748 <col:23> '__float128' lvalue ParmVar 0x5b93540 '__x' '__float128'
|           `-ImplicitCastExpr 0x5b937b8 <col:29> '__float128' <LValueToRValue>
|             `-DeclRefExpr 0x5b93798 <col:29> '__float128' lvalue ParmVar 0x5b93540 '__x' '__float128'
|-LinkageSpecDecl 0x5b93848 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cstdlib:118:1, line:251:1> line:118:8 C++
| |-NamespaceDecl 0x5b938b8 prev 0x5b91a88 <line:120:1, line:176:1> line:120:11 std
| | |-original Namespace 0x5b39a58 'std'
| | |-VisibilityAttr 0x5b93928 <col:31, col:56> Default
| | |-UsingDecl 0x5b93970 <line:124:3, col:11> col:11 ::div_t
| | |-UsingShadowDecl 0x5b939c8 <col:11> col:11 implicit Typedef 0x5b40ba8 'div_t'
| | | `-TypedefType 0x5b687d0 'div_t' sugar
| | |   |-Typedef 0x5b40ba8 'div_t'
| | |   `-ElaboratedType 0x5b40b50 'struct div_t' sugar
| | |     `-RecordType 0x5b3ed80 'div_t'
| | |       `-CXXRecord 0x5b3ece8 ''
| | |-UsingDecl 0x5b93a20 <line:125:3, col:11> col:11 ::ldiv_t
| | |-UsingShadowDecl 0x5b93a78 <col:11> col:11 implicit Typedef 0x5b40e78 'ldiv_t'
| | | `-TypedefType 0x5b68a90 'ldiv_t' sugar
| | |   |-Typedef 0x5b40e78 'ldiv_t'
| | |   `-ElaboratedType 0x5b40e20 'struct ldiv_t' sugar
| | |     `-RecordType 0x5b40cb0 'ldiv_t'
| | |       `-CXXRecord 0x5b40c18 ''
| | |-UsingDecl 0x5b93ad0 <line:127:3, col:11> col:11 ::abort
| | |-UsingShadowDecl 0x5b93b28 <col:11> col:11 implicit Function 0x5b62100 'abort' 'void () __attribute__((noreturn)) throw()'
| | |-UsingDecl 0x5b93b80 <line:128:3, col:11> col:11 ::atexit
| | |-UsingShadowDecl 0x5b93bd8 <col:11> col:11 implicit Function 0x5b623f8 'atexit' 'int (void (*)()) throw()'
| | |-UsingDecl 0x5b93c30 <line:131:3, col:11> col:11 ::at_quick_exit
| | |-UsingShadowDecl 0x5b93c88 <col:11> col:11 implicit Function 0x5b63818 'at_quick_exit' 'int (void (*)()) throw()'
| | |-UsingDecl 0x5b93ce0 <line:134:3, col:11> col:11 ::atof
| | |-UsingShadowDecl 0x5b93d38 <col:11> col:11 implicit Function 0x5b414b8 'atof' 'double (const char *) throw()'
| | |-UsingDecl 0x5b93d90 <line:135:3, col:11> col:11 ::atoi
| | |-UsingShadowDecl 0x5b93de8 <col:11> col:11 implicit Function 0x5b41708 'atoi' 'int (const char *) throw()'
| | |-UsingDecl 0x5b93e40 <line:136:3, col:11> col:11 ::atol
| | |-UsingShadowDecl 0x5b93e98 <col:11> col:11 implicit Function 0x5b41958 'atol' 'long (const char *) throw()'
| | |-UsingDecl 0x5b93ef0 <line:137:3, col:11> col:11 ::bsearch
| | |-UsingShadowDecl 0x5b93f70 <col:11> col:11 implicit Function 0x5b676f0 'bsearch' 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)'
| | |-UsingDecl 0x5b93fc8 <line:138:3, col:11> col:11 ::calloc
| | |-UsingShadowDecl 0x5b94020 <col:11> col:11 implicit Function 0x5b60f38 'calloc' 'void *(size_t, size_t) throw()'
| | |-UsingDecl 0x5b94078 <line:139:3, col:11> col:11 ::div
| | |-UsingShadowDecl 0x5b940d0 <col:11> col:11 implicit Function 0x5b689a0 'div' 'div_t (int, int) throw()'
| | |-UsingDecl 0x5b94128 <line:140:3, col:11> col:11 ::exit
| | |-UsingShadowDecl 0x5b94180 <col:11> col:11 implicit Function 0x5b63f50 'exit' 'void (int) __attribute__((noreturn)) throw()'
| | |-UsingDecl 0x5b941d8 <line:141:3, col:11> col:11 ::free
| | |-UsingShadowDecl 0x5b94230 <col:11> col:11 implicit Function 0x5b613e0 'free' 'void (void *) throw()'
| | |-UsingDecl 0x5b94288 <line:142:3, col:11> col:11 ::getenv
| | |-UsingShadowDecl 0x5b942e0 <col:11> col:11 implicit Function 0x5b643e8 'getenv' 'char *(const char *) throw()'
| | |-UsingDecl 0x5b94338 <line:143:3, col:11> col:11 ::labs
| | |-UsingShadowDecl 0x5b94390 <col:11> col:11 implicit Function 0x5b68438 'labs' 'long (long) throw()'
| | |-UsingDecl 0x5b943e8 <line:144:3, col:11> col:11 ::ldiv
| | |-UsingShadowDecl 0x5b94440 <col:11> col:11 implicit Function 0x5b68c60 'ldiv' 'ldiv_t (long, long) throw()'
| | |-UsingDecl 0x5b94498 <line:145:3, col:11> col:11 ::malloc
| | |-UsingShadowDecl 0x5b944f0 <col:11> col:11 implicit Function 0x5b60ca8 'malloc' 'void *(size_t) throw()'
| | |-UsingDecl 0x5b94548 <line:147:3, col:11> col:11 ::mblen
| | |-UsingShadowDecl 0x5b945a0 <col:11> col:11 implicit Function 0x5b6ce18 'mblen' 'int (const char *, size_t) throw()'
| | |-UsingDecl 0x5b945f8 <line:148:3, col:11> col:11 ::mbstowcs
| | |-UsingShadowDecl 0x5b94650 <col:11> col:11 implicit Function 0x5b6d6a0 'mbstowcs' 'size_t (wchar_t *__restrict, const char *__restrict, size_t) throw()'
| | |-UsingDecl 0x5b946a8 <line:149:3, col:11> col:11 ::mbtowc
| | |-UsingShadowDecl 0x5b94700 <col:11> col:11 implicit Function 0x5b6d138 'mbtowc' 'int (wchar_t *__restrict, const char *__restrict, size_t) throw()'
| | |-UsingDecl 0x5b94758 <line:151:3, col:11> col:11 ::qsort
| | |-UsingShadowDecl 0x5b947b0 <col:11> col:11 implicit Function 0x5b67b18 'qsort' 'void (void *, size_t, size_t, __compar_fn_t)'
| | |-UsingDecl 0x5b94808 <line:154:3, col:11> col:11 ::quick_exit
| | |-UsingShadowDecl 0x5b94860 <col:11> col:11 implicit Function 0x5b640a8 'quick_exit' 'void (int) __attribute__((noreturn)) throw()'
| | |-UsingDecl 0x5b948b8 <line:157:3, col:11> col:11 ::rand
| | |-UsingShadowDecl 0x5b94910 <col:11> col:11 implicit Function 0x5b5b538 'rand' 'int () throw()'
| | |-UsingDecl 0x5b94968 <line:158:3, col:11> col:11 ::realloc
| | |-UsingShadowDecl 0x5b949c0 <col:11> col:11 implicit Function 0x5b611d8 'realloc' 'void *(void *, size_t) throw()'
| | |-UsingDecl 0x5b94a18 <line:159:3, col:11> col:11 ::srand
| | |-UsingShadowDecl 0x5b94a70 <col:11> col:11 implicit Function 0x5b5b688 'srand' 'void (unsigned int) throw()'
| | |-UsingDecl 0x5b94ac8 <line:160:3, col:11> col:11 ::strtod
| | |-UsingShadowDecl 0x5b94b20 <col:11> col:11 implicit Function 0x5b43708 'strtod' 'double (const char *__restrict, char **__restrict) throw()'
| | |-UsingDecl 0x5b94b78 <line:161:3, col:11> col:11 ::strtol
| | |-UsingShadowDecl 0x5b94bd0 <col:11> col:11 implicit Function 0x5b44038 'strtol' 'long (const char *__restrict, char **__restrict, int) throw()'
| | |-UsingDecl 0x5b94c28 <line:162:3, col:11> col:11 ::strtoul
| | |-UsingShadowDecl 0x5b94c80 <col:11> col:11 implicit Function 0x5b44bf8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int) throw()'
| | |-UsingDecl 0x5b94cd8 <line:163:3, col:11> col:11 ::system
| | |-UsingShadowDecl 0x5b94d30 <col:11> col:11 implicit Function 0x5b667e8 'system' 'int (const char *)'
| | |-UsingDecl 0x5b94d88 <line:165:3, col:11> col:11 ::wcstombs
| | |-UsingShadowDecl 0x5b94de0 <col:11> col:11 implicit Function 0x5b6d9c0 'wcstombs' 'size_t (char *__restrict, const wchar_t *__restrict, size_t) throw()'
| | |-UsingDecl 0x5b94e38 <line:166:3, col:11> col:11 ::wctomb
| | |-UsingShadowDecl 0x5b94e90 <col:11> col:11 implicit Function 0x5b6d3a8 'wctomb' 'int (char *, wchar_t) throw()'
| | `-FunctionDecl 0x5b95068 <line:170:3, line:171:52> col:3 div 'ldiv_t (long, long)' inline
| |   |-ParmVarDecl 0x5b94ef8 <col:7, col:12> col:12 used __i 'long'
| |   |-ParmVarDecl 0x5b94f98 <col:17, col:22> col:22 used __j 'long'
| |   `-CompoundStmt 0x5b95a58 <col:27, col:52>
| |     `-ReturnStmt 0x5b95a48 <col:29, col:49>
| |       `-ExprWithCleanups 0x5b95a30 <col:36, col:49> 'ldiv_t':'ldiv_t'
| |         `-CXXConstructExpr 0x5b95a00 <col:36, col:49> 'ldiv_t':'ldiv_t' 'void (ldiv_t &&) noexcept' elidable
| |           `-MaterializeTemporaryExpr 0x5b957f8 <col:36, col:49> 'ldiv_t':'ldiv_t' xvalue
| |             `-CallExpr 0x5b95240 <col:36, col:49> 'ldiv_t':'ldiv_t'
| |               |-ImplicitCastExpr 0x5b95228 <col:36> 'ldiv_t (*)(long, long) throw()' <FunctionToPointerDecay>
| |               | `-DeclRefExpr 0x5b951a0 <col:36> 'ldiv_t (long, long) throw()' lvalue Function 0x5b68c60 'ldiv' 'ldiv_t (long, long) throw()' (UsingShadow 0x5b94440 'ldiv')
| |               |-ImplicitCastExpr 0x5b95270 <col:41> 'long' <LValueToRValue>
| |               | `-DeclRefExpr 0x5b95160 <col:41> 'long' lvalue ParmVar 0x5b94ef8 '__i' 'long'
| |               `-ImplicitCastExpr 0x5b95288 <col:46> 'long' <LValueToRValue>
| |                 `-DeclRefExpr 0x5b95180 <col:46> 'long' lvalue ParmVar 0x5b94f98 '__j' 'long'
| |-NamespaceDecl 0x5b95a90 <line:189:1, line:229:1> line:189:11 __gnu_cxx
| | |-VisibilityAttr 0x5b95b00 <col:37, col:62> Default
| | |-UsingDecl 0x5b95b48 <line:194:3, col:11> col:11 ::lldiv_t
| | |-UsingShadowDecl 0x5b95ba0 <col:11> col:11 implicit Typedef 0x5b41148 'lldiv_t'
| | | `-TypedefType 0x5b68d50 'lldiv_t' sugar
| | |   |-Typedef 0x5b41148 'lldiv_t'
| | |   `-ElaboratedType 0x5b410f0 'struct lldiv_t' sugar
| | |     `-RecordType 0x5b40f80 'lldiv_t'
| | |       `-CXXRecord 0x5b40ee8 ''
| | |-UsingDecl 0x5b95bf8 <line:200:3, col:11> col:11 ::_Exit
| | |-UsingShadowDecl 0x5b95c50 <col:11> col:11 implicit Function 0x5b64200 '_Exit' 'void (int) __attribute__((noreturn)) throw()'
| | |-UsingDecl 0x5b95ca8 <line:204:3, col:11> col:11 ::llabs
| | |-UsingShadowDecl 0x5b95d00 <col:11> col:11 implicit Function 0x5b686a8 'llabs' 'long long (long long) throw()'
| | |-FunctionDecl 0x5b95eb8 <line:206:3, line:208:73> line:207:3 div 'lldiv_t (long long, long long)' inline
| | | |-ParmVarDecl 0x5b95d68 <col:7, col:17> col:17 used __n 'long long'
| | | |-ParmVarDecl 0x5b95de8 <col:22, col:32> col:32 used __d 'long long'
| | | `-CompoundStmt 0x5b969d8 <line:208:3, col:73>
| | |   |-DeclStmt 0x5b96480 <col:5, col:16>
| | |   | `-VarDecl 0x5b95f90 <col:5, col:13> col:13 used __q 'lldiv_t':'lldiv_t' nrvo callinit
| | |   |   `-CXXConstructExpr 0x5b96458 <col:13> 'lldiv_t':'lldiv_t' 'void () noexcept'
| | |   |-BinaryOperator 0x5b96578 <col:18, col:35> 'long long' lvalue '='
| | |   | |-MemberExpr 0x5b964b8 <col:18, col:22> 'long long' lvalue .quot 0x5b41020
| | |   | | `-DeclRefExpr 0x5b96498 <col:18> 'lldiv_t':'lldiv_t' lvalue Var 0x5b95f90 '__q' 'lldiv_t':'lldiv_t'
| | |   | `-BinaryOperator 0x5b96558 <col:29, col:35> 'long long' '/'
| | |   |   |-ImplicitCastExpr 0x5b96528 <col:29> 'long long' <LValueToRValue>
| | |   |   | `-DeclRefExpr 0x5b964e8 <col:29> 'long long' lvalue ParmVar 0x5b95d68 '__n' 'long long'
| | |   |   `-ImplicitCastExpr 0x5b96540 <col:35> 'long long' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x5b96508 <col:35> 'long long' lvalue ParmVar 0x5b95de8 '__d' 'long long'
| | |   |-BinaryOperator 0x5b96748 <col:40, col:56> 'long long' lvalue '='
| | |   | |-MemberExpr 0x5b96688 <col:40, col:44> 'long long' lvalue .rem 0x5b41088
| | |   | | `-DeclRefExpr 0x5b96668 <col:40> 'lldiv_t':'lldiv_t' lvalue Var 0x5b95f90 '__q' 'lldiv_t':'lldiv_t'
| | |   | `-BinaryOperator 0x5b96728 <col:50, col:56> 'long long' '%'
| | |   |   |-ImplicitCastExpr 0x5b966f8 <col:50> 'long long' <LValueToRValue>
| | |   |   | `-DeclRefExpr 0x5b966b8 <col:50> 'long long' lvalue ParmVar 0x5b95d68 '__n' 'long long'
| | |   |   `-ImplicitCastExpr 0x5b96710 <col:56> 'long long' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x5b966d8 <col:56> 'long long' lvalue ParmVar 0x5b95de8 '__d' 'long long'
| | |   `-ReturnStmt 0x5b969c0 <col:61, col:68>
| | |     `-CXXConstructExpr 0x5b96990 <col:68> 'lldiv_t':'lldiv_t' 'void (lldiv_t &&) noexcept' elidable
| | |       `-ImplicitCastExpr 0x5b96788 <col:68> 'lldiv_t':'lldiv_t' xvalue <NoOp>
| | |         `-DeclRefExpr 0x5b96768 <col:68> 'lldiv_t':'lldiv_t' lvalue Var 0x5b95f90 '__q' 'lldiv_t':'lldiv_t'
| | |-UsingDecl 0x5b96a10 <line:210:3, col:11> col:11 ::lldiv
| | |-UsingShadowDecl 0x5b96a68 <col:11> col:11 implicit Function 0x5b68f20 'lldiv' 'lldiv_t (long long, long long) throw()'
| | |-UsingDecl 0x5b96ac0 <line:221:3, col:11> col:11 ::atoll
| | |-UsingShadowDecl 0x5b96b18 <col:11> col:11 implicit Function 0x5b433e8 'atoll' 'long long (const char *) throw()'
| | |-UsingDecl 0x5b96b70 <line:222:3, col:11> col:11 ::strtoll
| | |-UsingShadowDecl 0x5b96bc8 <col:11> col:11 implicit Function 0x5b455f0 'strtoll' 'long long (const char *__restrict, char **__restrict, int) throw()'
| | |-UsingDecl 0x5b96c20 <line:223:3, col:11> col:11 ::strtoull
| | |-UsingShadowDecl 0x5b96c78 <col:11> col:11 implicit Function 0x5b458e0 'strtoull' 'unsigned long long (const char *__restrict, char **__restrict, int) throw()'
| | |-UsingDecl 0x5b96cd0 <line:225:3, col:11> col:11 ::strtof
| | |-UsingShadowDecl 0x5b96d28 <col:11> col:11 implicit Function 0x5b439e8 'strtof' 'float (const char *__restrict, char **__restrict) throw()'
| | |-UsingDecl 0x5b96d80 <line:226:3, col:11> col:11 ::strtold
| | `-UsingShadowDecl 0x5b96dd8 <col:11> col:11 implicit Function 0x5b43cc8 'strtold' 'long double (const char *__restrict, char **__restrict) throw()'
| `-NamespaceDecl 0x5b96e28 prev 0x5b938b8 <line:231:1, line:247:1> line:231:11 std
|   |-original Namespace 0x5b39a58 'std'
|   |-UsingDecl 0x5b96ec0 <line:234:3, col:22> col:22 ::__gnu_cxx::lldiv_t
|   |-UsingShadowDecl 0x5b96f18 <col:22> col:22 implicit Typedef 0x5b41148 'lldiv_t'
|   | `-TypedefType 0x5b68d50 'lldiv_t' sugar
|   |   |-Typedef 0x5b41148 'lldiv_t'
|   |   `-ElaboratedType 0x5b410f0 'struct lldiv_t' sugar
|   |     `-RecordType 0x5b40f80 'lldiv_t'
|   |       `-CXXRecord 0x5b40ee8 ''
|   |-UsingDecl 0x5b973e0 <line:236:3, col:22> col:22 ::__gnu_cxx::_Exit
|   |-UsingShadowDecl 0x5b97438 <col:22> col:22 implicit Function 0x5b64200 '_Exit' 'void (int) __attribute__((noreturn)) throw()'
|   |-UsingDecl 0x5b97498 <line:238:3, col:22> col:22 ::__gnu_cxx::llabs
|   |-UsingShadowDecl 0x5b974f0 <col:22> col:22 implicit Function 0x5b686a8 'llabs' 'long long (long long) throw()'
|   |-UsingDecl 0x5b97550 <line:239:3, col:22> col:22 ::__gnu_cxx::div
|   |-UsingShadowDecl 0x5b975c0 <col:22> col:22 implicit Function 0x5b95eb8 'div' 'lldiv_t (long long, long long)'
|   |-UsingDecl 0x5b97620 <line:240:3, col:22> col:22 ::__gnu_cxx::lldiv
|   |-UsingShadowDecl 0x5b97678 <col:22> col:22 implicit Function 0x5b68f20 'lldiv' 'lldiv_t (long long, long long) throw()'
|   |-UsingDecl 0x5b976d8 <line:242:3, col:22> col:22 ::__gnu_cxx::atoll
|   |-UsingShadowDecl 0x5b97730 <col:22> col:22 implicit Function 0x5b433e8 'atoll' 'long long (const char *) throw()'
|   |-UsingDecl 0x5b97790 <line:243:3, col:22> col:22 ::__gnu_cxx::strtof
|   |-UsingShadowDecl 0x5b977e8 <col:22> col:22 implicit Function 0x5b439e8 'strtof' 'float (const char *__restrict, char **__restrict) throw()'
|   |-UsingDecl 0x5b97848 <line:244:3, col:22> col:22 ::__gnu_cxx::strtoll
|   |-UsingShadowDecl 0x5b978a0 <col:22> col:22 implicit Function 0x5b455f0 'strtoll' 'long long (const char *__restrict, char **__restrict, int) throw()'
|   |-UsingDecl 0x5b97900 <line:245:3, col:22> col:22 ::__gnu_cxx::strtoull
|   |-UsingShadowDecl 0x5b97958 <col:22> col:22 implicit Function 0x5b458e0 'strtoull' 'unsigned long long (const char *__restrict, char **__restrict, int) throw()'
|   |-UsingDecl 0x5b979b8 <line:246:3, col:22> col:22 ::__gnu_cxx::strtold
|   `-UsingShadowDecl 0x5b97a10 <col:22> col:22 implicit Function 0x5b43cc8 'strtold' 'long double (const char *__restrict, char **__restrict) throw()'
|-UsingDecl 0x5b97a80 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/stdlib.h:38:1, col:12> col:12 std::abort
|-UsingShadowDecl 0x5b97ad8 <col:12> col:12 implicit Function 0x5b62100 'abort' 'void () __attribute__((noreturn)) throw()'
|-UsingDecl 0x5b97b30 <line:39:1, col:12> col:12 std::atexit
|-UsingShadowDecl 0x5b97b88 <col:12> col:12 implicit Function 0x5b623f8 'atexit' 'int (void (*)()) throw()'
|-UsingDecl 0x5b97be0 <line:40:1, col:12> col:12 std::exit
|-UsingShadowDecl 0x5b97c38 <col:12> col:12 implicit Function 0x5b63f50 'exit' 'void (int) __attribute__((noreturn)) throw()'
|-UsingDecl 0x5b97c90 <line:43:3, col:14> col:14 std::at_quick_exit
|-UsingShadowDecl 0x5b97ce8 <col:14> col:14 implicit Function 0x5b63818 'at_quick_exit' 'int (void (*)()) throw()'
|-UsingDecl 0x5b97d40 <line:46:3, col:14> col:14 std::quick_exit
|-UsingShadowDecl 0x5b97d98 <col:14> col:14 implicit Function 0x5b640a8 'quick_exit' 'void (int) __attribute__((noreturn)) throw()'
|-UsingDecl 0x5b97df0 <line:51:1, col:12> col:12 std::div_t
|-UsingShadowDecl 0x5b97e48 <col:12> col:12 implicit Typedef 0x5b40ba8 'div_t'
| `-TypedefType 0x5b687d0 'div_t' sugar
|   |-Typedef 0x5b40ba8 'div_t'
|   `-ElaboratedType 0x5b40b50 'struct div_t' sugar
|     `-RecordType 0x5b3ed80 'div_t'
|       `-CXXRecord 0x5b3ece8 ''
|-UsingDecl 0x5b97ea0 <line:52:1, col:12> col:12 std::ldiv_t
|-UsingShadowDecl 0x5b97ef8 <col:12> col:12 implicit Typedef 0x5b40e78 'ldiv_t'
| `-TypedefType 0x5b68a90 'ldiv_t' sugar
|   |-Typedef 0x5b40e78 'ldiv_t'
|   `-ElaboratedType 0x5b40e20 'struct ldiv_t' sugar
|     `-RecordType 0x5b40cb0 'ldiv_t'
|       `-CXXRecord 0x5b40c18 ''
|-UsingDecl 0x5b97f50 <line:54:1, col:12> col:12 std::abs
|-UsingShadowDecl 0x5b97fa8 <col:12> col:12 implicit Function 0x5b681f8 'abs' 'int (int) throw()'
|-UsingShadowDecl 0x5b97ff8 <col:12> col:12 implicit Function 0x5b91cb0 'abs' 'long (long)'
|-UsingShadowDecl 0x5b98048 <col:12> col:12 implicit Function 0x5b920f8 'abs' 'long long (long long)'
|-UsingShadowDecl 0x5b98098 <col:12> col:12 implicit Function 0x5b92550 'abs' 'double (double)'
|-UsingShadowDecl 0x5b980e8 <col:12> col:12 implicit Function 0x5b929e0 'abs' 'float (float)'
|-UsingShadowDecl 0x5b98138 <col:12> col:12 implicit Function 0x5b92e70 'abs' 'long double (long double)'
|-UsingShadowDecl 0x5b98188 <col:12> col:12 implicit Function 0x5b93310 'abs' '__int128 (__int128)'
|-UsingShadowDecl 0x5b981d8 <col:12> col:12 implicit Function 0x5b93610 'abs' '__float128 (__float128)'
|-UsingDecl 0x5b98230 <line:55:1, col:12> col:12 std::atof
|-UsingShadowDecl 0x5b98288 <col:12> col:12 implicit Function 0x5b414b8 'atof' 'double (const char *) throw()'
|-UsingDecl 0x5b982e0 <line:56:1, col:12> col:12 std::atoi
|-UsingShadowDecl 0x5b98338 <col:12> col:12 implicit Function 0x5b41708 'atoi' 'int (const char *) throw()'
|-UsingDecl 0x5b987d0 <line:57:1, col:12> col:12 std::atol
|-UsingShadowDecl 0x5b98828 <col:12> col:12 implicit Function 0x5b41958 'atol' 'long (const char *) throw()'
|-UsingDecl 0x5b98880 <line:58:1, col:12> col:12 std::bsearch
|-UsingShadowDecl 0x5b988d8 <col:12> col:12 implicit Function 0x5b676f0 'bsearch' 'void *(const void *, const void *, size_t, size_t, __compar_fn_t)'
|-UsingDecl 0x5b98930 <line:59:1, col:12> col:12 std::calloc
|-UsingShadowDecl 0x5b98988 <col:12> col:12 implicit Function 0x5b60f38 'calloc' 'void *(size_t, size_t) throw()'
|-UsingDecl 0x5b989e0 <line:60:1, col:12> col:12 std::div
|-UsingShadowDecl 0x5b98a38 <col:12> col:12 implicit Function 0x5b689a0 'div' 'div_t (int, int) throw()'
|-UsingShadowDecl 0x5b98a88 <col:12> col:12 implicit Function 0x5b95068 'div' 'ldiv_t (long, long)'
|-UsingShadowDecl 0x5b98ad8 <col:12> col:12 implicit Function 0x5b95eb8 'div' 'lldiv_t (long long, long long)'
|-UsingDecl 0x5b98b30 <line:61:1, col:12> col:12 std::free
|-UsingShadowDecl 0x5b98b88 <col:12> col:12 implicit Function 0x5b613e0 'free' 'void (void *) throw()'
|-UsingDecl 0x5b98be0 <line:62:1, col:12> col:12 std::getenv
|-UsingShadowDecl 0x5b98c38 <col:12> col:12 implicit Function 0x5b643e8 'getenv' 'char *(const char *) throw()'
|-UsingDecl 0x5b98c90 <line:63:1, col:12> col:12 std::labs
|-UsingShadowDecl 0x5b98ce8 <col:12> col:12 implicit Function 0x5b68438 'labs' 'long (long) throw()'
|-UsingDecl 0x5b98d40 <line:64:1, col:12> col:12 std::ldiv
|-UsingShadowDecl 0x5b98d98 <col:12> col:12 implicit Function 0x5b68c60 'ldiv' 'ldiv_t (long, long) throw()'
|-UsingDecl 0x5b98df0 <line:65:1, col:12> col:12 std::malloc
|-UsingShadowDecl 0x5b98e48 <col:12> col:12 implicit Function 0x5b60ca8 'malloc' 'void *(size_t) throw()'
|-UsingDecl 0x5b98ea0 <line:67:1, col:12> col:12 std::mblen
|-UsingShadowDecl 0x5b98ef8 <col:12> col:12 implicit Function 0x5b6ce18 'mblen' 'int (const char *, size_t) throw()'
|-UsingDecl 0x5b98f50 <line:68:1, col:12> col:12 std::mbstowcs
|-UsingShadowDecl 0x5b98fa8 <col:12> col:12 implicit Function 0x5b6d6a0 'mbstowcs' 'size_t (wchar_t *__restrict, const char *__restrict, size_t) throw()'
|-UsingDecl 0x5b99000 <line:69:1, col:12> col:12 std::mbtowc
|-UsingShadowDecl 0x5b99058 <col:12> col:12 implicit Function 0x5b6d138 'mbtowc' 'int (wchar_t *__restrict, const char *__restrict, size_t) throw()'
|-UsingDecl 0x5b990b0 <line:71:1, col:12> col:12 std::qsort
|-UsingShadowDecl 0x5b99108 <col:12> col:12 implicit Function 0x5b67b18 'qsort' 'void (void *, size_t, size_t, __compar_fn_t)'
|-UsingDecl 0x5b99160 <line:72:1, col:12> col:12 std::rand
|-UsingShadowDecl 0x5b991b8 <col:12> col:12 implicit Function 0x5b5b538 'rand' 'int () throw()'
|-UsingDecl 0x5b99210 <line:73:1, col:12> col:12 std::realloc
|-UsingShadowDecl 0x5b99268 <col:12> col:12 implicit Function 0x5b611d8 'realloc' 'void *(void *, size_t) throw()'
|-UsingDecl 0x5b992c0 <line:74:1, col:12> col:12 std::srand
|-UsingShadowDecl 0x5b99318 <col:12> col:12 implicit Function 0x5b5b688 'srand' 'void (unsigned int) throw()'
|-UsingDecl 0x5b99370 <line:75:1, col:12> col:12 std::strtod
|-UsingShadowDecl 0x5b993c8 <col:12> col:12 implicit Function 0x5b43708 'strtod' 'double (const char *__restrict, char **__restrict) throw()'
|-UsingDecl 0x5b99420 <line:76:1, col:12> col:12 std::strtol
|-UsingShadowDecl 0x5b99478 <col:12> col:12 implicit Function 0x5b44038 'strtol' 'long (const char *__restrict, char **__restrict, int) throw()'
|-UsingDecl 0x5b994d0 <line:77:1, col:12> col:12 std::strtoul
|-UsingShadowDecl 0x5b99528 <col:12> col:12 implicit Function 0x5b44bf8 'strtoul' 'unsigned long (const char *__restrict, char **__restrict, int) throw()'
|-UsingDecl 0x5b99580 <line:78:1, col:12> col:12 std::system
|-UsingShadowDecl 0x5b995d8 <col:12> col:12 implicit Function 0x5b667e8 'system' 'int (const char *)'
|-UsingDecl 0x5b99630 <line:80:1, col:12> col:12 std::wcstombs
|-UsingShadowDecl 0x5b99688 <col:12> col:12 implicit Function 0x5b6d9c0 'wcstombs' 'size_t (char *__restrict, const wchar_t *__restrict, size_t) throw()'
|-UsingDecl 0x5b996e0 <line:81:1, col:12> col:12 std::wctomb
|-UsingShadowDecl 0x5b99738 <col:12> col:12 implicit Function 0x5b6d3a8 'wctomb' 'int (char *, wchar_t) throw()'
|-TypedefDecl 0x5b9ba00 </usr/include/stdint.h:48:1, col:23> col:23 uint8_t 'unsigned char'
| `-BuiltinType 0x5aca360 'unsigned char'
|-TypedefDecl 0x5b9ba70 <line:49:1, col:28> col:28 uint16_t 'unsigned short'
| `-BuiltinType 0x5aca380 'unsigned short'
|-TypedefDecl 0x5b9bae0 <line:51:1, col:22> col:22 uint32_t 'unsigned int'
| `-BuiltinType 0x5aca3a0 'unsigned int'
|-TypedefDecl 0x5b9bb50 <line:55:1, col:27> col:27 uint64_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5b9bbc0 <line:65:1, col:21> col:21 int_least8_t 'signed char'
| `-BuiltinType 0x5aca2c0 'signed char'
|-TypedefDecl 0x5b9bc30 <line:66:1, col:19> col:19 int_least16_t 'short'
| `-BuiltinType 0x5aca2e0 'short'
|-TypedefDecl 0x5b9bca0 <line:67:1, col:13> col:13 int_least32_t 'int'
| `-BuiltinType 0x5aca300 'int'
|-TypedefDecl 0x5b9bd10 <line:69:1, col:18> col:18 int_least64_t 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5b9bd80 <line:76:1, col:23> col:23 uint_least8_t 'unsigned char'
| `-BuiltinType 0x5aca360 'unsigned char'
|-TypedefDecl 0x5b9bdf0 <line:77:1, col:28> col:28 uint_least16_t 'unsigned short'
| `-BuiltinType 0x5aca380 'unsigned short'
|-TypedefDecl 0x5b9be60 <line:78:1, col:22> col:22 uint_least32_t 'unsigned int'
| `-BuiltinType 0x5aca3a0 'unsigned int'
|-TypedefDecl 0x5b9bed0 <line:80:1, col:27> col:27 uint_least64_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5b9bf40 <line:90:1, col:21> col:21 int_fast8_t 'signed char'
| `-BuiltinType 0x5aca2c0 'signed char'
|-TypedefDecl 0x5b9bfb0 <line:92:1, col:18> col:18 int_fast16_t 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5b9c020 <line:93:1, col:18> col:18 int_fast32_t 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5b9c090 <line:94:1, col:18> col:18 int_fast64_t 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5b9c100 <line:103:1, col:23> col:23 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x5aca360 'unsigned char'
|-TypedefDecl 0x5b9c170 <line:105:1, col:27> col:27 uint_fast16_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5b9c1e0 <line:106:1, col:27> col:27 uint_fast32_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5b9c250 <line:107:1, col:27> col:27 uint_fast64_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5b9c2c0 <line:119:1, col:18> col:18 intptr_t 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5b9c330 <line:122:1, col:27> col:27 referenced uintptr_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5b9c3a0 <line:134:1, col:18> col:18 intmax_t 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5b9c410 <line:135:1, col:27> col:27 uintmax_t 'unsigned long'
| `-BuiltinType 0x5aca3c0 'unsigned long'
|-FunctionDecl 0x5b9c508 </home/ts20/share/llvm9/llvm-project/build/projects/openmp/runtime/src/omp.h:139:5, col:44> col:16 omp_get_initial_device 'int ()' extern
|-FunctionDecl 0x5b9c750 <line:140:5, col:46> col:18 omp_target_alloc 'void *(size_t, int)' extern
| |-ParmVarDecl 0x5b9c5b8 <col:35> col:41 'size_t':'unsigned long'
| `-ParmVarDecl 0x5b9c638 <col:43> col:46 'int'
|-FunctionDecl 0x5b9ca10 <line:141:5, col:44> col:17 omp_target_free 'void (void *, int)' extern
| |-ParmVarDecl 0x5b9c818 <col:33, col:38> col:39 'void *'
| `-ParmVarDecl 0x5b9c898 <col:41> col:44 'int'
|-FunctionDecl 0x5b9cc30 <line:142:5, col:49> col:16 omp_target_is_present 'int (void *, int)' extern
| |-ParmVarDecl 0x5b9cad8 <col:38, col:43> col:44 'void *'
| `-ParmVarDecl 0x5b9cb58 <col:46> col:49 'int'
|-FunctionDecl 0x5b9d170 <line:143:5, col:82> col:16 omp_target_memcpy 'int (void *, void *, size_t, size_t, size_t, int, int)' extern
| |-ParmVarDecl 0x5b9ccf8 <col:34, col:39> col:40 'void *'
| |-ParmVarDecl 0x5b9cd78 <col:42, col:47> col:48 'void *'
| |-ParmVarDecl 0x5b9cdf0 <col:50> col:56 'size_t':'unsigned long'
| |-ParmVarDecl 0x5b9ce68 <col:58> col:64 'size_t':'unsigned long'
| |-ParmVarDecl 0x5b9cee0 <col:66> col:72 'size_t':'unsigned long'
| |-ParmVarDecl 0x5b9cf60 <col:74> col:77 'int'
| `-ParmVarDecl 0x5b9cfe0 <col:79> col:82 'int'
|-FunctionDecl 0x5b9d970 <line:144:5, line:145:117> line:144:16 omp_target_memcpy_rect 'int (void *, void *, size_t, int, const size_t *, const size_t *, const size_t *, const size_t *, const size_t *, int, int)' extern
| |-ParmVarDecl 0x5b9d260 <col:39, col:44> col:45 'void *'
| |-ParmVarDecl 0x5b9d2e0 <col:47, col:52> col:53 'void *'
| |-ParmVarDecl 0x5b9d358 <col:55> col:61 'size_t':'unsigned long'
| |-ParmVarDecl 0x5b9d3d8 <col:63> col:66 'int'
| |-ParmVarDecl 0x5b9d4a8 <col:68, col:81> col:82 'const size_t *'
| |-ParmVarDecl 0x5b9d520 <line:145:45, col:58> col:59 'const size_t *'
| |-ParmVarDecl 0x5b9d598 <col:61, col:74> col:75 'const size_t *'
| |-ParmVarDecl 0x5b9d610 <col:77, col:90> col:91 'const size_t *'
| |-ParmVarDecl 0x5b9d688 <col:93, col:106> col:107 'const size_t *'
| |-ParmVarDecl 0x5b9d708 <col:109> col:112 'int'
| `-ParmVarDecl 0x5b9d788 <col:114> col:117 'int'
|-FunctionDecl 0x5b9fde0 <line:146:5, col:76> col:16 omp_target_associate_ptr 'int (void *, void *, size_t, size_t, int)' extern
| |-ParmVarDecl 0x5b9fa90 <col:41, col:46> col:47 'void *'
| |-ParmVarDecl 0x5b9fb10 <col:49, col:54> col:55 'void *'
| |-ParmVarDecl 0x5b9fb88 <col:57> col:63 'size_t':'unsigned long'
| |-ParmVarDecl 0x5b9fc00 <col:65> col:71 'size_t':'unsigned long'
| `-ParmVarDecl 0x5b9fc80 <col:73> col:76 'int'
|-FunctionDecl 0x5b9ffe0 <line:147:5, col:55> col:16 omp_target_disassociate_ptr 'int (void *, int)' extern
| |-ParmVarDecl 0x5b9fec0 <col:44, col:49> col:50 'void *'
| `-ParmVarDecl 0x5b9ff40 <col:52> col:55 'int'
|-FunctionDecl 0x5ba0130 <line:150:5, col:40> col:16 omp_get_device_num 'int ()' extern
|-FunctionDecl 0x5ba0270 <line:153:5, col:39> col:16 kmp_get_stacksize 'int ()' extern
|-FunctionDecl 0x5ba03b8 <line:154:5, col:39> col:17 kmp_set_stacksize 'void (int)' extern
| `-ParmVarDecl 0x5ba0328 <col:36> col:39 'int'
|-FunctionDecl 0x5ba0528 <line:155:5, col:44> col:19 kmp_get_stacksize_s 'size_t ()' extern
|-FunctionDecl 0x5ba06c8 <line:156:5, col:44> col:17 kmp_set_stacksize_s 'void (size_t)' extern
| `-ParmVarDecl 0x5ba05d8 <col:38> col:44 'size_t':'unsigned long'
|-FunctionDecl 0x5ba0810 <line:157:5, col:39> col:16 kmp_get_blocktime 'int ()' extern
|-FunctionDecl 0x5ba0950 <line:158:5, col:37> col:16 kmp_get_library 'int ()' extern
|-FunctionDecl 0x5ba0ac0 <line:159:5, col:39> col:17 kmp_set_blocktime 'void (int)' extern
| `-ParmVarDecl 0x5ba0a30 <col:36> col:39 'int'
|-FunctionDecl 0x5ba0c10 <line:160:5, col:37> col:17 kmp_set_library 'void (int)' extern
| `-ParmVarDecl 0x5ba0b80 <col:34> col:37 'int'
|-FunctionDecl 0x5ba0d50 <line:161:5, col:45> col:17 kmp_set_library_serial 'void ()' extern
|-FunctionDecl 0x5ba0e88 <line:162:5, col:49> col:17 kmp_set_library_turnaround 'void ()' extern
|-FunctionDecl 0x5ba0fc0 <line:163:5, col:49> col:17 kmp_set_library_throughput 'void ()' extern
|-FunctionDecl 0x5ba1108 <line:164:5, col:47> col:17 kmp_set_defaults 'void (const char *)' extern
| `-ParmVarDecl 0x5ba1078 <col:35, col:46> col:47 'const char *'
|-FunctionDecl 0x5ba1258 <line:165:5, col:46> col:17 kmp_set_disp_num_buffers 'void (int)' extern
| `-ParmVarDecl 0x5ba11c8 <col:43> col:46 'int'
|-TypedefDecl 0x5ba1318 <line:168:5, col:20> col:20 referenced kmp_affinity_mask_t 'void *'
| `-PointerType 0x5acaa60 'void *'
|   `-BuiltinType 0x5aca260 'void'
|-FunctionDecl 0x5ba14c0 <line:170:5, col:55> col:16 kmp_set_affinity 'int (kmp_affinity_mask_t *)' extern
| `-ParmVarDecl 0x5ba13c8 <col:34, col:54> col:55 'kmp_affinity_mask_t *'
|-FunctionDecl 0x5ba1610 <line:171:5, col:55> col:16 kmp_get_affinity 'int (kmp_affinity_mask_t *)' extern
| `-ParmVarDecl 0x5ba1578 <col:34, col:54> col:55 'kmp_affinity_mask_t *'
|-FunctionDecl 0x5ba1758 <line:172:5, col:47> col:16 kmp_get_affinity_max_proc 'int ()' extern
|-FunctionDecl 0x5ba18f8 <line:173:5, col:64> col:17 kmp_create_affinity_mask 'void (kmp_affinity_mask_t *)' extern
| `-ParmVarDecl 0x5ba1808 <col:43, col:63> col:64 'kmp_affinity_mask_t *'
|-FunctionDecl 0x5b4afb8 <line:174:5, col:65> col:17 kmp_destroy_affinity_mask 'void (kmp_affinity_mask_t *)' extern
| `-ParmVarDecl 0x5ba19b0 <col:44, col:64> col:65 'kmp_affinity_mask_t *'
|-FunctionDecl 0x5b4b210 <line:175:5, col:70> col:16 kmp_set_affinity_mask_proc 'int (int, kmp_affinity_mask_t *)' extern
| |-ParmVarDecl 0x5b4b078 <col:44> col:47 'int'
| `-ParmVarDecl 0x5b4b0f0 <col:49, col:69> col:70 'kmp_affinity_mask_t *'
|-FunctionDecl 0x5b4b3f0 <line:176:5, col:72> col:16 kmp_unset_affinity_mask_proc 'int (int, kmp_affinity_mask_t *)' extern
| |-ParmVarDecl 0x5b4b2d8 <col:46> col:49 'int'
| `-ParmVarDecl 0x5b4b350 <col:51, col:71> col:72 'kmp_affinity_mask_t *'
|-FunctionDecl 0x5b4b5d0 <line:177:5, col:70> col:16 kmp_get_affinity_mask_proc 'int (int, kmp_affinity_mask_t *)' extern
| |-ParmVarDecl 0x5b4b4b8 <col:44> col:47 'int'
| `-ParmVarDecl 0x5b4b530 <col:49, col:69> col:70 'kmp_affinity_mask_t *'
|-EnumDecl 0x5b4b680 <line:180:13, line:186:5> line:180:18 omp_proc_bind_t
| |-EnumConstantDecl 0x5b4b778 <line:181:9, col:31> col:9 omp_proc_bind_false 'omp_proc_bind_t'
| | `-ImplicitCastExpr 0x5b4b9e8 <col:31> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b4b760 <col:31> 'int'
| |     `-IntegerLiteral 0x5b4b740 <col:31> 'int' 0
| |-EnumConstantDecl 0x5b4b800 <line:182:9, col:30> col:9 omp_proc_bind_true 'omp_proc_bind_t'
| | `-ImplicitCastExpr 0x5b4ba00 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b4b7e8 <col:30> 'int'
| |     `-IntegerLiteral 0x5b4b7c8 <col:30> 'int' 1
| |-EnumConstantDecl 0x5b4b888 <line:183:9, col:32> col:9 omp_proc_bind_master 'omp_proc_bind_t'
| | `-ImplicitCastExpr 0x5b4ba18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b4b870 <col:32> 'int'
| |     `-IntegerLiteral 0x5b4b850 <col:32> 'int' 2
| |-EnumConstantDecl 0x5b4b910 <line:184:9, col:31> col:9 omp_proc_bind_close 'omp_proc_bind_t'
| | `-ImplicitCastExpr 0x5b4ba30 <col:31> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5b4b8f8 <col:31> 'int'
| |     `-IntegerLiteral 0x5b4b8d8 <col:31> 'int' 3
| `-EnumConstantDecl 0x5b4b998 <line:185:9, col:32> col:9 omp_proc_bind_spread 'omp_proc_bind_t'
|   `-ImplicitCastExpr 0x5b4ba48 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5b4b980 <col:32> 'int'
|       `-IntegerLiteral 0x5b4b960 <col:32> 'int' 4
|-TypedefDecl 0x5b4bab8 <line:180:5, line:186:7> col:7 referenced omp_proc_bind_t 'enum omp_proc_bind_t':'omp_proc_bind_t'
| `-ElaboratedType 0x5b4ba60 'enum omp_proc_bind_t' sugar
|   `-EnumType 0x5b4b720 'omp_proc_bind_t'
|     `-Enum 0x5b4b680 'omp_proc_bind_t'
|-FunctionDecl 0x5b4bc48 <line:188:5, col:51> col:28 omp_get_proc_bind 'omp_proc_bind_t ()' extern
|-FunctionDecl 0x5b4bd88 <line:191:5, col:40> col:16 omp_get_num_places 'int ()' extern
|-FunctionDecl 0x5b4bed8 <line:192:5, col:44> col:16 omp_get_place_num_procs 'int (int)' extern
| `-ParmVarDecl 0x5b4be40 <col:41> col:44 'int'
|-FunctionDecl 0x5b4c108 <line:193:5, col:51> col:17 omp_get_place_proc_ids 'void (int, int *)' extern
| |-ParmVarDecl 0x5b4bfb8 <col:41> col:44 'int'
| `-ParmVarDecl 0x5b4c038 <col:46, col:50> col:51 'int *'
|-FunctionDecl 0x5b4c258 <line:194:5, col:39> col:16 omp_get_place_num 'int ()' extern
|-FunctionDecl 0x5b4c398 <line:195:5, col:50> col:16 omp_get_partition_num_places 'int ()' extern
|-FunctionDecl 0x5b4c518 <line:196:5, col:52> col:17 omp_get_partition_place_nums 'void (int *)' extern
| `-ParmVarDecl 0x5b4c450 <col:47, col:51> col:52 'int *'
|-FunctionDecl 0x5b4c6a0 <line:198:5, col:37> col:19 kmp_malloc 'void *(size_t)' extern
| `-ParmVarDecl 0x5b4c5d0 <col:31> col:37 'size_t':'unsigned long'
|-FunctionDecl 0x5b4c8b0 <line:199:5, col:53> col:19 kmp_aligned_malloc 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0x5b4c758 <col:39> col:45 'size_t':'unsigned long'
| `-ParmVarDecl 0x5b4c7d0 <col:47> col:53 'size_t':'unsigned long'
|-FunctionDecl 0x5b4ca88 <line:200:5, col:45> col:19 kmp_calloc 'void *(size_t, size_t)' extern
| |-ParmVarDecl 0x5b4c970 <col:31> col:37 'size_t':'unsigned long'
| `-ParmVarDecl 0x5b4c9e8 <col:39> col:45 'size_t':'unsigned long'
|-FunctionDecl 0x5b4cca0 <line:201:5, col:46> col:19 kmp_realloc 'void *(void *, size_t)' extern
| |-ParmVarDecl 0x5b4cb50 <col:32, col:37> col:38 'void *'
| `-ParmVarDecl 0x5b4cbc8 <col:40> col:46 'size_t':'unsigned long'
|-FunctionDecl 0x5b4cdf8 <line:202:5, col:33> col:17 kmp_free 'void (void *)' extern
| `-ParmVarDecl 0x5b4cd68 <col:27, col:32> col:33 'void *'
|-FunctionDecl 0x5ba7a60 <line:204:5, col:41> col:17 kmp_set_warnings_on 'void ()' extern
|-FunctionDecl 0x5ba7b98 <line:205:5, col:42> col:17 kmp_set_warnings_off 'void ()' extern
|-EnumDecl 0x5ba7c38 <line:208:13, line:213:5> line:208:18 omp_control_tool_result_t
| |-EnumConstantDecl 0x5ba7d50 <line:209:9, col:36> col:9 omp_control_tool_notool 'omp_control_tool_result_t'
| | `-ConstantExpr 0x5ba7d38 <col:35, col:36> 'int'
| |   `-UnaryOperator 0x5ba7d20 <col:35, col:36> 'int' prefix '-'
| |     `-IntegerLiteral 0x5ba7d00 <col:36> 'int' 2
| |-EnumConstantDecl 0x5ba7df0 <line:210:9, col:40> col:9 omp_control_tool_nocallback 'omp_control_tool_result_t'
| | `-ConstantExpr 0x5ba7dd8 <col:39, col:40> 'int'
| |   `-UnaryOperator 0x5ba7dc0 <col:39, col:40> 'int' prefix '-'
| |     `-IntegerLiteral 0x5ba7da0 <col:40> 'int' 1
| |-EnumConstantDecl 0x5ba7e78 <line:211:9, col:36> col:9 omp_control_tool_success 'omp_control_tool_result_t'
| | `-ConstantExpr 0x5ba7e60 <col:36> 'int'
| |   `-IntegerLiteral 0x5ba7e40 <col:36> 'int' 0
| `-EnumConstantDecl 0x5ba7f00 <line:212:9, col:36> col:9 omp_control_tool_ignored 'omp_control_tool_result_t'
|   `-ConstantExpr 0x5ba7ee8 <col:36> 'int'
|     `-IntegerLiteral 0x5ba7ec8 <col:36> 'int' 1
|-TypedefDecl 0x5ba7fa8 <line:208:5, line:213:7> col:7 omp_control_tool_result_t 'enum omp_control_tool_result_t':'omp_control_tool_result_t'
| `-ElaboratedType 0x5ba7f50 'enum omp_control_tool_result_t' sugar
|   `-EnumType 0x5ba7ce0 'omp_control_tool_result_t'
|     `-Enum 0x5ba7c38 'omp_control_tool_result_t'
|-EnumDecl 0x5ba8018 <line:215:13, line:220:5> line:215:18 omp_control_tool_t
| |-EnumConstantDecl 0x5ba8118 <line:216:9, col:34> col:9 omp_control_tool_start 'omp_control_tool_t'
| | `-ImplicitCastExpr 0x5ba8300 <col:34> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8100 <col:34> 'int'
| |     `-IntegerLiteral 0x5ba80e0 <col:34> 'int' 1
| |-EnumConstantDecl 0x5ba81a0 <line:217:9, col:34> col:9 omp_control_tool_pause 'omp_control_tool_t'
| | `-ImplicitCastExpr 0x5ba8318 <col:34> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8188 <col:34> 'int'
| |     `-IntegerLiteral 0x5ba8168 <col:34> 'int' 2
| |-EnumConstantDecl 0x5ba8228 <line:218:9, col:34> col:9 omp_control_tool_flush 'omp_control_tool_t'
| | `-ImplicitCastExpr 0x5ba8330 <col:34> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8210 <col:34> 'int'
| |     `-IntegerLiteral 0x5ba81f0 <col:34> 'int' 3
| `-EnumConstantDecl 0x5ba82b0 <line:219:9, col:32> col:9 omp_control_tool_end 'omp_control_tool_t'
|   `-ImplicitCastExpr 0x5ba8348 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5ba8298 <col:32> 'int'
|       `-IntegerLiteral 0x5ba8278 <col:32> 'int' 4
|-TypedefDecl 0x5ba83b8 <line:215:5, line:220:7> col:7 omp_control_tool_t 'enum omp_control_tool_t':'omp_control_tool_t'
| `-ElaboratedType 0x5ba8360 'enum omp_control_tool_t' sugar
|   `-EnumType 0x5ba80c0 'omp_control_tool_t'
|     `-Enum 0x5ba8018 'omp_control_tool_t'
|-FunctionDecl 0x5ba8630 <line:222:5, col:48> col:16 omp_control_tool 'int (int, int, void *)' extern
| |-ParmVarDecl 0x5ba8440 <col:33> col:36 'int'
| |-ParmVarDecl 0x5ba84c0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5ba8540 <col:43, col:47> col:48 'void *'
|-TypedefDecl 0x5ba8720 <line:225:5, col:23> col:23 referenced omp_uintptr_t 'uintptr_t':'unsigned long'
| `-TypedefType 0x5ba86f0 'uintptr_t' sugar
|   |-Typedef 0x5b9c330 'uintptr_t'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-EnumDecl 0x5ba8778 <line:227:13, line:236:5> line:227:13
| |-EnumConstantDecl 0x5ba8878 <line:228:9, col:31> col:9 OMP_ATK_THREADMODEL 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8c90 <col:31> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8860 <col:31> 'int'
| |     `-IntegerLiteral 0x5ba8840 <col:31> 'int' 1
| |-EnumConstantDecl 0x5ba8900 <line:229:9, col:29> col:9 OMP_ATK_ALIGNMENT 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8ca8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba88e8 <col:29> 'int'
| |     `-IntegerLiteral 0x5ba88c8 <col:29> 'int' 2
| |-EnumConstantDecl 0x5ba8988 <line:230:9, col:26> col:9 OMP_ATK_ACCESS 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8cc0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8970 <col:26> 'int'
| |     `-IntegerLiteral 0x5ba8950 <col:26> 'int' 3
| |-EnumConstantDecl 0x5ba8a10 <line:231:9, col:29> col:9 OMP_ATK_POOL_SIZE 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8cd8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba89f8 <col:29> 'int'
| |     `-IntegerLiteral 0x5ba89d8 <col:29> 'int' 4
| |-EnumConstantDecl 0x5ba8aa8 <line:232:9, col:28> col:9 OMP_ATK_FALLBACK 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8cf0 <col:28> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8a90 <col:28> 'int'
| |     `-IntegerLiteral 0x5ba8a70 <col:28> 'int' 5
| |-EnumConstantDecl 0x5ba8b30 <line:233:9, col:27> col:9 OMP_ATK_FB_DATA 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8d08 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8b18 <col:27> 'int'
| |     `-IntegerLiteral 0x5ba8af8 <col:27> 'int' 6
| |-EnumConstantDecl 0x5ba8bb8 <line:234:9, col:26> col:9 OMP_ATK_PINNED 'omp_alloctrait_key_t'
| | `-ImplicitCastExpr 0x5ba8d20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8ba0 <col:26> 'int'
| |     `-IntegerLiteral 0x5ba8b80 <col:26> 'int' 7
| `-EnumConstantDecl 0x5ba8c40 <line:235:9, col:29> col:9 OMP_ATK_PARTITION 'omp_alloctrait_key_t'
|   `-ImplicitCastExpr 0x5ba8d38 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5ba8c28 <col:29> 'int'
|       `-IntegerLiteral 0x5ba8c08 <col:29> 'int' 8
|-TypedefDecl 0x5ba8da8 <line:227:5, line:236:7> col:7 referenced omp_alloctrait_key_t 'enum omp_alloctrait_key_t':'omp_alloctrait_key_t'
| `-ElaboratedType 0x5ba8d50 'enum omp_alloctrait_key_t' sugar
|   `-EnumType 0x5ba8820 'omp_alloctrait_key_t'
|     `-Enum 0x5ba8778 ''
|-EnumDecl 0x5ba8e18 <line:238:13, line:258:5> line:238:13
| |-EnumConstantDecl 0x5ba8f18 <line:239:9, col:25> col:9 OMP_ATV_FALSE 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba98f8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8f00 <col:25> 'int'
| |     `-IntegerLiteral 0x5ba8ee0 <col:25> 'int' 0
| |-EnumConstantDecl 0x5ba8fa0 <line:240:9, col:24> col:9 OMP_ATV_TRUE 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9910 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba8f88 <col:24> 'int'
| |     `-IntegerLiteral 0x5ba8f68 <col:24> 'int' 1
| |-EnumConstantDecl 0x5ba9028 <line:241:9, col:27> col:9 OMP_ATV_DEFAULT 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9928 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9010 <col:27> 'int'
| |     `-IntegerLiteral 0x5ba8ff0 <col:27> 'int' 2
| |-EnumConstantDecl 0x5ba90b0 <line:242:9, col:29> col:9 OMP_ATV_CONTENDED 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9940 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9098 <col:29> 'int'
| |     `-IntegerLiteral 0x5ba9078 <col:29> 'int' 3
| |-EnumConstantDecl 0x5ba9138 <line:243:9, col:31> col:9 OMP_ATV_UNCONTENDED 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9958 <col:31> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9120 <col:31> 'int'
| |     `-IntegerLiteral 0x5ba9100 <col:31> 'int' 4
| |-EnumConstantDecl 0x5ba91c0 <line:244:9, col:30> col:9 OMP_ATV_SEQUENTIAL 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9970 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba91a8 <col:30> 'int'
| |     `-IntegerLiteral 0x5ba9188 <col:30> 'int' 5
| |-EnumConstantDecl 0x5ba9248 <line:245:9, col:27> col:9 OMP_ATV_PRIVATE 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9988 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9230 <col:27> 'int'
| |     `-IntegerLiteral 0x5ba9210 <col:27> 'int' 6
| |-EnumConstantDecl 0x5ba92d0 <line:246:9, col:23> col:9 OMP_ATV_ALL 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba99a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba92b8 <col:23> 'int'
| |     `-IntegerLiteral 0x5ba9298 <col:23> 'int' 7
| |-EnumConstantDecl 0x5ba9358 <line:247:9, col:26> col:9 OMP_ATV_THREAD 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba99b8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9340 <col:26> 'int'
| |     `-IntegerLiteral 0x5ba9320 <col:26> 'int' 8
| |-EnumConstantDecl 0x5ba93e0 <line:248:9, col:25> col:9 OMP_ATV_PTEAM 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba99d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba93c8 <col:25> 'int'
| |     `-IntegerLiteral 0x5ba93a8 <col:25> 'int' 9
| |-EnumConstantDecl 0x5ba9468 <line:249:9, col:26> col:9 OMP_ATV_CGROUP 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba99e8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9450 <col:26> 'int'
| |     `-IntegerLiteral 0x5ba9430 <col:26> 'int' 10
| |-EnumConstantDecl 0x5ba94f0 <line:250:9, col:34> col:9 OMP_ATV_DEFAULT_MEM_FB 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9a00 <col:34> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba94d8 <col:34> 'int'
| |     `-IntegerLiteral 0x5ba94b8 <col:34> 'int' 11
| |-EnumConstantDecl 0x5ba9578 <line:251:9, col:27> col:9 OMP_ATV_NULL_FB 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9a18 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9560 <col:27> 'int'
| |     `-IntegerLiteral 0x5ba9540 <col:27> 'int' 12
| |-EnumConstantDecl 0x5ba9600 <line:252:9, col:28> col:9 OMP_ATV_ABORT_FB 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9a30 <col:28> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba95e8 <col:28> 'int'
| |     `-IntegerLiteral 0x5ba95c8 <col:28> 'int' 13
| |-EnumConstantDecl 0x5ba9688 <line:253:9, col:32> col:9 OMP_ATV_ALLOCATOR_FB 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5ba9a48 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9670 <col:32> 'int'
| |     `-IntegerLiteral 0x5ba9650 <col:32> 'int' 14
| |-EnumConstantDecl 0x5ba9710 <line:254:9, col:31> col:9 OMP_ATV_ENVIRONMENT 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5baaa90 <col:31> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba96f8 <col:31> 'int'
| |     `-IntegerLiteral 0x5ba96d8 <col:31> 'int' 15
| |-EnumConstantDecl 0x5ba9798 <line:255:9, col:27> col:9 OMP_ATV_NEAREST 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5baaaa8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9780 <col:27> 'int'
| |     `-IntegerLiteral 0x5ba9760 <col:27> 'int' 16
| |-EnumConstantDecl 0x5ba9820 <line:256:9, col:27> col:9 OMP_ATV_BLOCKED 'omp_alloctrait_value_t'
| | `-ImplicitCastExpr 0x5baaac0 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5ba9808 <col:27> 'int'
| |     `-IntegerLiteral 0x5ba97e8 <col:27> 'int' 17
| `-EnumConstantDecl 0x5ba98a8 <line:257:9, col:31> col:9 OMP_ATV_INTERLEAVED 'omp_alloctrait_value_t'
|   `-ImplicitCastExpr 0x5baaad8 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5ba9890 <col:31> 'int'
|       `-IntegerLiteral 0x5ba9870 <col:31> 'int' 18
|-TypedefDecl 0x5baab48 <line:238:5, line:258:7> col:7 omp_alloctrait_value_t 'enum omp_alloctrait_value_t':'omp_alloctrait_value_t'
| `-ElaboratedType 0x5baaaf0 'enum omp_alloctrait_value_t' sugar
|   `-EnumType 0x5ba8ec0 'omp_alloctrait_value_t'
|     `-Enum 0x5ba8e18 ''
|-CXXRecordDecl 0x5baabb8 <line:260:13, line:263:5> line:260:13 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5baad10 <line:261:9, col:30> col:30 key 'omp_alloctrait_key_t':'omp_alloctrait_key_t'
| `-FieldDecl 0x5baad90 <line:262:9, col:23> col:23 value 'omp_uintptr_t':'unsigned long'
|-TypedefDecl 0x5baae58 <line:260:5, line:263:7> col:7 referenced omp_alloctrait_t 'struct omp_alloctrait_t':'omp_alloctrait_t'
| `-ElaboratedType 0x5baae00 'struct omp_alloctrait_t' sugar
|   `-RecordType 0x5baac50 'omp_alloctrait_t'
|     `-CXXRecord 0x5baabb8 ''
|-EnumDecl 0x5baaed8 <line:285:13, line:300:5> line:285:18 omp_allocator_handle_t 'omp_uintptr_t':'unsigned long'
| |-EnumConstantDecl 0x5baaff0 <line:290:7, col:28> col:7 referenced omp_null_allocator 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5baafd8 <col:28> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5baafc0 <col:28> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5baafa0 <col:28> 'int' 0
| |-EnumConstantDecl 0x5bab090 <line:291:7, col:31> col:7 omp_default_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab078 <col:31> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab060 <col:31> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab040 <col:31> 'int' 1
| |-EnumConstantDecl 0x5bab130 <line:292:7, col:33> col:7 omp_large_cap_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab118 <col:33> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab100 <col:33> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab0e0 <col:33> 'int' 2
| |-EnumConstantDecl 0x5bab1d0 <line:293:7, col:29> col:7 omp_const_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab1b8 <col:29> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab1a0 <col:29> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab180 <col:29> 'int' 3
| |-EnumConstantDecl 0x5bab270 <line:294:7, col:31> col:7 omp_high_bw_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab258 <col:31> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab240 <col:31> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab220 <col:31> 'int' 4
| |-EnumConstantDecl 0x5bab310 <line:295:7, col:31> col:7 omp_low_lat_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab2f8 <col:31> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab2e0 <col:31> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab2c0 <col:31> 'int' 5
| |-EnumConstantDecl 0x5bab3b0 <line:296:7, col:30> col:7 omp_cgroup_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab398 <col:30> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab380 <col:30> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab360 <col:30> 'int' 6
| |-EnumConstantDecl 0x5bab450 <line:297:7, col:29> col:7 omp_pteam_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab438 <col:29> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab420 <col:29> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab400 <col:29> 'int' 7
| |-EnumConstantDecl 0x5bab4f0 <line:298:7, col:30> col:7 omp_thread_mem_alloc 'omp_allocator_handle_t'
| | `-ConstantExpr 0x5bab4d8 <col:30> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab4c0 <col:30> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab4a0 <col:30> 'int' 8
| `-EnumConstantDecl 0x5bab598 <line:299:7, col:57> col:7 KMP_ALLOCATOR_MAX_HANDLE 'omp_allocator_handle_t'
|   `-ConstantExpr 0x5bab580 <col:34, col:57> 'unsigned long'
|     `-ParenExpr 0x5bab560 <col:34, col:57> 'unsigned long'
|       `-IntegerLiteral 0x5bab540 <col:35> 'unsigned long' 18446744073709551615
|-TypedefDecl 0x5bab648 <line:285:5, line:300:7> col:7 referenced omp_allocator_handle_t 'enum omp_allocator_handle_t':'omp_allocator_handle_t'
| `-ElaboratedType 0x5bab5f0 'enum omp_allocator_handle_t' sugar
|   `-EnumType 0x5baaf80 'omp_allocator_handle_t'
|     `-Enum 0x5baaed8 'omp_allocator_handle_t'
|-EnumDecl 0x5bab6c8 <line:302:13, line:313:5> line:302:18 omp_memspace_handle_t 'omp_uintptr_t':'unsigned long'
| |-EnumConstantDecl 0x5bab7e0 <line:307:7, col:31> col:7 omp_default_mem_space 'omp_memspace_handle_t'
| | `-ConstantExpr 0x5bab7c8 <col:31> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab7b0 <col:31> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab790 <col:31> 'int' 0
| |-EnumConstantDecl 0x5bab880 <line:308:7, col:33> col:7 omp_large_cap_mem_space 'omp_memspace_handle_t'
| | `-ConstantExpr 0x5bab868 <col:33> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab850 <col:33> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab830 <col:33> 'int' 1
| |-EnumConstantDecl 0x5bab920 <line:309:7, col:29> col:7 omp_const_mem_space 'omp_memspace_handle_t'
| | `-ConstantExpr 0x5bab908 <col:29> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab8f0 <col:29> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab8d0 <col:29> 'int' 2
| |-EnumConstantDecl 0x5bab9c0 <line:310:7, col:31> col:7 omp_high_bw_mem_space 'omp_memspace_handle_t'
| | `-ConstantExpr 0x5bab9a8 <col:31> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5bab990 <col:31> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5bab970 <col:31> 'int' 3
| |-EnumConstantDecl 0x5babaa0 <line:311:7, col:31> col:7 omp_low_lat_mem_space 'omp_memspace_handle_t'
| | `-ConstantExpr 0x5baba48 <col:31> 'omp_uintptr_t':'unsigned long'
| |   `-ImplicitCastExpr 0x5baba30 <col:31> 'omp_uintptr_t':'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x5baba10 <col:31> 'int' 4
| `-EnumConstantDecl 0x5babb48 <line:312:7, col:56> col:7 KMP_MEMSPACE_MAX_HANDLE 'omp_memspace_handle_t'
|   `-ConstantExpr 0x5babb30 <col:33, col:56> 'unsigned long'
|     `-ParenExpr 0x5babb10 <col:33, col:56> 'unsigned long'
|       `-IntegerLiteral 0x5babaf0 <col:34> 'unsigned long' 18446744073709551615
|-TypedefDecl 0x5babbf8 <line:302:5, line:313:7> col:7 referenced omp_memspace_handle_t 'enum omp_memspace_handle_t':'omp_memspace_handle_t'
| `-ElaboratedType 0x5babba0 'enum omp_memspace_handle_t' sugar
|   `-EnumType 0x5bab770 'omp_memspace_handle_t'
|     `-Enum 0x5bab6c8 'omp_memspace_handle_t'
|-FunctionDecl 0x5bac008 <line:315:5, line:316:94> line:315:35 omp_init_allocator 'omp_allocator_handle_t (omp_memspace_handle_t, int, omp_alloctrait_t *)' extern
| |-ParmVarDecl 0x5babcc0 <col:54, col:76> col:76 m 'omp_memspace_handle_t':'omp_memspace_handle_t'
| |-ParmVarDecl 0x5babd40 <line:316:56, col:60> col:60 ntraits 'int'
| `-ParmVarDecl 0x5babee0 <col:69, col:93> col:86 traits 'omp_alloctrait_t *':'omp_alloctrait_t *'
|-FunctionDecl 0x5bac1c8 <line:317:5, col:71> col:17 omp_destroy_allocator 'void (omp_allocator_handle_t)' extern
| `-ParmVarDecl 0x5bac0d0 <col:39, col:62> col:62 allocator 'omp_allocator_handle_t':'omp_allocator_handle_t'
|-FunctionDecl 0x5bac310 <line:319:5, col:67> col:17 omp_set_default_allocator 'void (omp_allocator_handle_t)' extern
| `-ParmVarDecl 0x5bac280 <col:43, col:66> col:66 a 'omp_allocator_handle_t':'omp_allocator_handle_t'
|-FunctionDecl 0x5bac4a8 <line:320:5, col:65> col:35 omp_get_default_allocator 'omp_allocator_handle_t ()' extern
|-FunctionDecl 0x5bac710 <line:322:5, col:87> col:19 omp_alloc 'void *(size_t, omp_allocator_handle_t)' extern
| |-ParmVarDecl 0x5bac558 <col:29, col:36> col:36 size 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bac5d0 <col:42, col:69> col:65 a 'omp_allocator_handle_t':'omp_allocator_handle_t' cinit
|   `-DeclRefExpr 0x5bac638 <col:69> 'omp_allocator_handle_t' EnumConstant 0x5baaff0 'omp_null_allocator' 'omp_allocator_handle_t'
|-FunctionDecl 0x5bac988 <line:323:5, col:83> col:17 omp_free 'void (void *, omp_allocator_handle_t)' extern
| |-ParmVarDecl 0x5bac7d8 <col:26, col:33> col:33 ptr 'void *'
| `-ParmVarDecl 0x5bac850 <col:38, col:65> col:61 a 'omp_allocator_handle_t':'omp_allocator_handle_t' cinit
|   `-DeclRefExpr 0x5bac8b8 <col:65> 'omp_allocator_handle_t' EnumConstant 0x5baaff0 'omp_null_allocator' 'omp_allocator_handle_t'
|-FunctionDecl 0x5bacb40 <line:330:5, col:54> col:17 ompc_set_affinity_format 'void (const char *)' extern
| `-ParmVarDecl 0x5bacab0 <col:42, col:53> col:54 'const char *'
|-FunctionDecl 0x5bacd88 <line:331:5, col:58> col:19 ompc_get_affinity_format 'size_t (char *, size_t)' extern
| |-ParmVarDecl 0x5bacc00 <col:44, col:49> col:50 'char *'
| `-ParmVarDecl 0x5bacc78 <col:52> col:58 'size_t':'unsigned long'
|-FunctionDecl 0x5bacee0 <line:332:5, col:51> col:17 ompc_display_affinity 'void (const char *)' extern
| `-ParmVarDecl 0x5bace50 <col:39, col:50> col:51 'const char *'
|-FunctionDecl 0x5bad1b8 <line:333:5, col:69> col:19 ompc_capture_affinity 'size_t (char *, size_t, const char *)' extern
| |-ParmVarDecl 0x5bacfa0 <col:41, col:46> col:47 'char *'
| |-ParmVarDecl 0x5bad018 <col:49> col:55 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bad098 <col:57, col:68> col:69 'const char *'
|-EnumDecl 0x5bad270 <line:336:13, line:340:5> line:336:18 omp_pause_resource_t
| |-EnumConstantDecl 0x5bad368 <line:337:7, col:26> col:7 omp_pause_resume 'omp_pause_resource_t'
| | `-ImplicitCastExpr 0x5bad4c8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bad350 <col:26> 'int'
| |     `-IntegerLiteral 0x5bad330 <col:26> 'int' 0
| |-EnumConstantDecl 0x5bad3f0 <line:338:7, col:24> col:7 omp_pause_soft 'omp_pause_resource_t'
| | `-ImplicitCastExpr 0x5bad4e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bad3d8 <col:24> 'int'
| |     `-IntegerLiteral 0x5bad3b8 <col:24> 'int' 1
| `-EnumConstantDecl 0x5bad478 <line:339:7, col:24> col:7 omp_pause_hard 'omp_pause_resource_t'
|   `-ImplicitCastExpr 0x5bad4f8 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5bad460 <col:24> 'int'
|       `-IntegerLiteral 0x5bad440 <col:24> 'int' 2
|-TypedefDecl 0x5bad568 <line:336:5, line:340:7> col:7 referenced omp_pause_resource_t 'enum omp_pause_resource_t':'omp_pause_resource_t'
| `-ElaboratedType 0x5bad510 'enum omp_pause_resource_t' sugar
|   `-EnumType 0x5bad310 'omp_pause_resource_t'
|     `-Enum 0x5bad270 'omp_pause_resource_t'
|-FunctionDecl 0x5bad7b0 <line:341:5, col:60> col:16 omp_pause_resource 'int (omp_pause_resource_t, int)' extern
| |-ParmVarDecl 0x5bad610 <col:35> col:55 'omp_pause_resource_t':'omp_pause_resource_t'
| `-ParmVarDecl 0x5bad690 <col:57> col:60 'int'
|-FunctionDecl 0x5bad970 <line:342:5, col:59> col:16 omp_pause_resource_all 'int (omp_pause_resource_t)' extern
| `-ParmVarDecl 0x5bad870 <col:39> col:59 'omp_pause_resource_t':'omp_pause_resource_t'
|-FunctionDecl 0x5badae8 <line:344:5, col:52> col:16 omp_get_supported_active_levels 'int ()' extern
|-TypedefDecl 0x5badba0 <line:352:5, col:17> col:17 omp_int_t 'int'
| `-BuiltinType 0x5aca300 'int'
`-TypedefDecl 0x5badc10 <line:353:5, col:20> col:20 omp_wtime_t 'double'
  `-BuiltinType 0x5aca420 'double'
TypedefDecl 0x5badc80 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/stddef.h:35:1, col:18> col:18 ptrdiff_t 'long'
`-BuiltinType 0x5aca320 'long'
CXXRecordDecl 0x5badcd8 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/__stddef_max_align_t.h:19:9, line:24:1> line:19:9 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5bade48 <line:20:3, col:13> col:13 __clang_max_align_nonce1 'long long'
| `-AlignedAttr 0x5badeb0 <line:21:22, col:56> aligned
|   `-ConstantExpr 0x5bade98 <col:34, col:55> 'unsigned long'
|     `-UnaryExprOrTypeTraitExpr 0x5bade10 <col:34, col:55> 'unsigned long' __alignof 'long long'
`-FieldDecl 0x5badf48 <line:22:3, col:15> col:15 __clang_max_align_nonce2 'long double'
  `-AlignedAttr 0x5badfb0 <line:23:22, col:58> aligned
    `-ConstantExpr 0x5badf98 <col:34, col:57> 'unsigned long'
      `-UnaryExprOrTypeTraitExpr 0x5badf10 <col:34, col:57> 'unsigned long' __alignof 'long double'
TypedefDecl 0x5bae068 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/__stddef_max_align_t.h:19:1, line:24:3> col:3 max_align_t 'struct max_align_t':'max_align_t'
`-ElaboratedType 0x5bae010 'struct max_align_t' sugar
  `-RecordType 0x5badd70 'max_align_t'
    `-CXXRecord 0x5badcd8 ''
LinkageSpecDecl 0x5bae0f8 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/stdatomic.h:24:1, line:171:1> line:24:8 C
|-EnumDecl 0x5bae148 <line:47:9, line:54:1> line:47:14 memory_order
| |-EnumConstantDecl 0x5bae248 <line:48:3, col:26> col:3 memory_order_relaxed 'memory_order'
| | `-ImplicitCastExpr 0x5bae540 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bae230 <col:26> 'int'
| |     `-IntegerLiteral 0x5bae210 <col:26> 'int' 0
| |-EnumConstantDecl 0x5bae2d0 <line:49:3, col:26> col:3 memory_order_consume 'memory_order'
| | `-ImplicitCastExpr 0x5bae558 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bae2b8 <col:26> 'int'
| |     `-IntegerLiteral 0x5bae298 <col:26> 'int' 1
| |-EnumConstantDecl 0x5bae358 <line:50:3, col:26> col:3 memory_order_acquire 'memory_order'
| | `-ImplicitCastExpr 0x5bae570 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bae340 <col:26> 'int'
| |     `-IntegerLiteral 0x5bae320 <col:26> 'int' 2
| |-EnumConstantDecl 0x5bae3e0 <line:51:3, col:26> col:3 memory_order_release 'memory_order'
| | `-ImplicitCastExpr 0x5bae588 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bae3c8 <col:26> 'int'
| |     `-IntegerLiteral 0x5bae3a8 <col:26> 'int' 3
| |-EnumConstantDecl 0x5bae468 <line:52:3, col:26> col:3 memory_order_acq_rel 'memory_order'
| | `-ImplicitCastExpr 0x5bae5a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5bae450 <col:26> 'int'
| |     `-IntegerLiteral 0x5bae430 <col:26> 'int' 4
| `-EnumConstantDecl 0x5bae4f0 <line:53:3, col:26> col:3 memory_order_seq_cst 'memory_order'
|   `-ImplicitCastExpr 0x5bae5b8 <col:26> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5bae4d8 <col:26> 'int'
|       `-IntegerLiteral 0x5bae4b8 <col:26> 'int' 5
|-TypedefDecl 0x5bae628 <line:47:1, line:54:3> col:3 referenced memory_order 'enum memory_order':'memory_order'
| `-ElaboratedType 0x5bae5d0 'enum memory_order' sugar
|   `-EnumType 0x5bae1f0 'memory_order'
|     `-Enum 0x5bae148 'memory_order'
|-FunctionDecl 0x5bae7c8 <line:61:1, col:38> col:6 atomic_thread_fence 'void (memory_order)'
| `-ParmVarDecl 0x5bae6d0 <col:26> col:38 'memory_order':'memory_order'
|-FunctionDecl 0x5bae910 <line:62:1, col:38> col:6 atomic_signal_fence 'void (memory_order)'
| `-ParmVarDecl 0x5bae880 <col:26> col:38 'memory_order':'memory_order'
|-TypedefDecl 0x5baea18 <line:74:1, col:23> col:23 referenced atomic_bool '_Atomic(bool)'
| `-AtomicType 0x5bae9d0 '_Atomic(bool)'
|   `-BuiltinType 0x5aca280 'bool'
|-TypedefDecl 0x5baeaf0 <line:78:1, col:23> col:23 atomic_char '_Atomic(char)'
| `-AtomicType 0x5baea80 '_Atomic(char)'
|   `-BuiltinType 0x5aca2a0 'char'
|-TypedefDecl 0x5baeba8 <line:79:1, col:30> col:30 atomic_schar '_Atomic(signed char)'
| `-AtomicType 0x5baeb60 '_Atomic(signed char)'
|   `-BuiltinType 0x5aca2c0 'signed char'
|-TypedefDecl 0x5baec68 <line:80:1, col:32> col:32 atomic_uchar '_Atomic(unsigned char)'
| `-AtomicType 0x5baec20 '_Atomic(unsigned char)'
|   `-BuiltinType 0x5aca360 'unsigned char'
|-TypedefDecl 0x5baed28 <line:81:1, col:24> col:24 atomic_short '_Atomic(short)'
| `-AtomicType 0x5baece0 '_Atomic(short)'
|   `-BuiltinType 0x5aca2e0 'short'
|-TypedefDecl 0x5baede8 <line:82:1, col:33> col:33 atomic_ushort '_Atomic(unsigned short)'
| `-AtomicType 0x5baeda0 '_Atomic(unsigned short)'
|   `-BuiltinType 0x5aca380 'unsigned short'
|-TypedefDecl 0x5baeea8 <line:83:1, col:22> col:22 atomic_int '_Atomic(int)'
| `-AtomicType 0x5baee60 '_Atomic(int)'
|   `-BuiltinType 0x5aca300 'int'
|-TypedefDecl 0x5baef68 <line:84:1, col:31> col:31 atomic_uint '_Atomic(unsigned int)'
| `-AtomicType 0x5baef20 '_Atomic(unsigned int)'
|   `-BuiltinType 0x5aca3a0 'unsigned int'
|-TypedefDecl 0x5baf028 <line:85:1, col:23> col:23 atomic_long '_Atomic(long)'
| `-AtomicType 0x5baefe0 '_Atomic(long)'
|   `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5baf0e8 <line:86:1, col:32> col:32 atomic_ulong '_Atomic(unsigned long)'
| `-AtomicType 0x5baf0a0 '_Atomic(unsigned long)'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5baf1a8 <line:87:1, col:28> col:28 atomic_llong '_Atomic(long long)'
| `-AtomicType 0x5baf160 '_Atomic(long long)'
|   `-BuiltinType 0x5aca340 'long long'
|-TypedefDecl 0x5baf268 <line:88:1, col:37> col:37 atomic_ullong '_Atomic(unsigned long long)'
| `-AtomicType 0x5baf220 '_Atomic(unsigned long long)'
|   `-BuiltinType 0x5aca3e0 'unsigned long long'
|-TypedefDecl 0x5baf330 <line:89:1, col:33> col:33 atomic_char16_t '_Atomic(uint_least16_t)'
| `-AtomicType 0x5baf2f0 '_Atomic(uint_least16_t)'
|   `-TypedefType 0x5baf2c0 'uint_least16_t' sugar
|     |-Typedef 0x5b9bdf0 'uint_least16_t'
|     `-BuiltinType 0x5aca380 'unsigned short'
|-TypedefDecl 0x5baf400 <line:90:1, col:33> col:33 atomic_char32_t '_Atomic(uint_least32_t)'
| `-AtomicType 0x5baf3c0 '_Atomic(uint_least32_t)'
|   `-TypedefType 0x5baf390 'uint_least32_t' sugar
|     |-Typedef 0x5b9be60 'uint_least32_t'
|     `-BuiltinType 0x5aca3a0 'unsigned int'
|-TypedefDecl 0x5baf4b8 <line:91:1, col:26> col:26 atomic_wchar_t '_Atomic(wchar_t)'
| `-AtomicType 0x5baf470 '_Atomic(wchar_t)'
|   `-BuiltinType 0x5aca7e0 'wchar_t'
|-TypedefDecl 0x5baf580 <line:92:1, col:31> col:31 atomic_int_least8_t '_Atomic(int_least8_t)'
| `-AtomicType 0x5baf540 '_Atomic(int_least8_t)'
|   `-TypedefType 0x5baf510 'int_least8_t' sugar
|     |-Typedef 0x5b9bbc0 'int_least8_t'
|     `-BuiltinType 0x5aca2c0 'signed char'
|-TypedefDecl 0x5baf650 <line:93:1, col:32> col:32 atomic_uint_least8_t '_Atomic(uint_least8_t)'
| `-AtomicType 0x5baf610 '_Atomic(uint_least8_t)'
|   `-TypedefType 0x5baf5e0 'uint_least8_t' sugar
|     |-Typedef 0x5b9bd80 'uint_least8_t'
|     `-BuiltinType 0x5aca360 'unsigned char'
|-TypedefDecl 0x5baf720 <line:94:1, col:32> col:32 atomic_int_least16_t '_Atomic(int_least16_t)'
| `-AtomicType 0x5baf6e0 '_Atomic(int_least16_t)'
|   `-TypedefType 0x5baf6b0 'int_least16_t' sugar
|     |-Typedef 0x5b9bc30 'int_least16_t'
|     `-BuiltinType 0x5aca2e0 'short'
|-TypedefDecl 0x5baf7a0 <line:95:1, col:33> col:33 atomic_uint_least16_t '_Atomic(uint_least16_t)'
| `-AtomicType 0x5baf2f0 '_Atomic(uint_least16_t)'
|   `-TypedefType 0x5baf2c0 'uint_least16_t' sugar
|     |-Typedef 0x5b9bdf0 'uint_least16_t'
|     `-BuiltinType 0x5aca380 'unsigned short'
|-TypedefDecl 0x5baf870 <line:96:1, col:32> col:32 atomic_int_least32_t '_Atomic(int_least32_t)'
| `-AtomicType 0x5baf830 '_Atomic(int_least32_t)'
|   `-TypedefType 0x5baf800 'int_least32_t' sugar
|     |-Typedef 0x5b9bca0 'int_least32_t'
|     `-BuiltinType 0x5aca300 'int'
|-TypedefDecl 0x5baf8f0 <line:97:1, col:33> col:33 atomic_uint_least32_t '_Atomic(uint_least32_t)'
| `-AtomicType 0x5baf3c0 '_Atomic(uint_least32_t)'
|   `-TypedefType 0x5baf390 'uint_least32_t' sugar
|     |-Typedef 0x5b9be60 'uint_least32_t'
|     `-BuiltinType 0x5aca3a0 'unsigned int'
|-TypedefDecl 0x5baf9c0 <line:98:1, col:32> col:32 atomic_int_least64_t '_Atomic(int_least64_t)'
| `-AtomicType 0x5baf980 '_Atomic(int_least64_t)'
|   `-TypedefType 0x5baf950 'int_least64_t' sugar
|     |-Typedef 0x5b9bd10 'int_least64_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb0af0 <line:99:1, col:33> col:33 atomic_uint_least64_t '_Atomic(uint_least64_t)'
| `-AtomicType 0x5bafa50 '_Atomic(uint_least64_t)'
|   `-TypedefType 0x5bafa20 'uint_least64_t' sugar
|     |-Typedef 0x5b9bed0 'uint_least64_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bb0bc0 <line:100:1, col:30> col:30 atomic_int_fast8_t '_Atomic(int_fast8_t)'
| `-AtomicType 0x5bb0b80 '_Atomic(int_fast8_t)'
|   `-TypedefType 0x5bb0b50 'int_fast8_t' sugar
|     |-Typedef 0x5b9bf40 'int_fast8_t'
|     `-BuiltinType 0x5aca2c0 'signed char'
|-TypedefDecl 0x5bb0c90 <line:101:1, col:31> col:31 atomic_uint_fast8_t '_Atomic(uint_fast8_t)'
| `-AtomicType 0x5bb0c50 '_Atomic(uint_fast8_t)'
|   `-TypedefType 0x5bb0c20 'uint_fast8_t' sugar
|     |-Typedef 0x5b9c100 'uint_fast8_t'
|     `-BuiltinType 0x5aca360 'unsigned char'
|-TypedefDecl 0x5bb0d60 <line:102:1, col:31> col:31 atomic_int_fast16_t '_Atomic(int_fast16_t)'
| `-AtomicType 0x5bb0d20 '_Atomic(int_fast16_t)'
|   `-TypedefType 0x5bb0cf0 'int_fast16_t' sugar
|     |-Typedef 0x5b9bfb0 'int_fast16_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb0e30 <line:103:1, col:32> col:32 atomic_uint_fast16_t '_Atomic(uint_fast16_t)'
| `-AtomicType 0x5bb0df0 '_Atomic(uint_fast16_t)'
|   `-TypedefType 0x5bb0dc0 'uint_fast16_t' sugar
|     |-Typedef 0x5b9c170 'uint_fast16_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bb0f00 <line:104:1, col:31> col:31 atomic_int_fast32_t '_Atomic(int_fast32_t)'
| `-AtomicType 0x5bb0ec0 '_Atomic(int_fast32_t)'
|   `-TypedefType 0x5bb0e90 'int_fast32_t' sugar
|     |-Typedef 0x5b9c020 'int_fast32_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb0fd0 <line:105:1, col:32> col:32 atomic_uint_fast32_t '_Atomic(uint_fast32_t)'
| `-AtomicType 0x5bb0f90 '_Atomic(uint_fast32_t)'
|   `-TypedefType 0x5bb0f60 'uint_fast32_t' sugar
|     |-Typedef 0x5b9c1e0 'uint_fast32_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bb10a0 <line:106:1, col:31> col:31 atomic_int_fast64_t '_Atomic(int_fast64_t)'
| `-AtomicType 0x5bb1060 '_Atomic(int_fast64_t)'
|   `-TypedefType 0x5bb1030 'int_fast64_t' sugar
|     |-Typedef 0x5b9c090 'int_fast64_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb1170 <line:107:1, col:32> col:32 atomic_uint_fast64_t '_Atomic(uint_fast64_t)'
| `-AtomicType 0x5bb1130 '_Atomic(uint_fast64_t)'
|   `-TypedefType 0x5bb1100 'uint_fast64_t' sugar
|     |-Typedef 0x5b9c250 'uint_fast64_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bb1240 <line:108:1, col:27> col:27 atomic_intptr_t '_Atomic(intptr_t)'
| `-AtomicType 0x5bb1200 '_Atomic(intptr_t)'
|   `-TypedefType 0x5bb11d0 'intptr_t' sugar
|     |-Typedef 0x5b9c2c0 'intptr_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb12f0 <line:109:1, col:28> col:28 atomic_uintptr_t '_Atomic(uintptr_t)'
| `-AtomicType 0x5bb12b0 '_Atomic(uintptr_t)'
|   `-TypedefType 0x5ba86f0 'uintptr_t' sugar
|     |-Typedef 0x5b9c330 'uintptr_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bb13a0 <line:110:1, col:25> col:25 atomic_size_t '_Atomic(size_t)'
| `-AtomicType 0x5bb1360 '_Atomic(size_t)'
|   `-TypedefType 0x5b411c0 'size_t' sugar
|     |-Typedef 0x5b39c68 'size_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bb1470 <line:111:1, col:28> col:28 atomic_ptrdiff_t '_Atomic(ptrdiff_t)'
| `-AtomicType 0x5bb1430 '_Atomic(ptrdiff_t)'
|   `-TypedefType 0x5bb1400 'ptrdiff_t' sugar
|     |-Typedef 0x5badc80 'ptrdiff_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb1540 <line:112:1, col:27> col:27 atomic_intmax_t '_Atomic(intmax_t)'
| `-AtomicType 0x5bb1500 '_Atomic(intmax_t)'
|   `-TypedefType 0x5bb14d0 'intmax_t' sugar
|     |-Typedef 0x5b9c3a0 'intmax_t'
|     `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bb1610 <line:113:1, col:28> col:28 atomic_uintmax_t '_Atomic(uintmax_t)'
| `-AtomicType 0x5bb15d0 '_Atomic(uintmax_t)'
|   `-TypedefType 0x5bb15a0 'uintmax_t' sugar
|     |-Typedef 0x5b9c410 'uintmax_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-CXXRecordDecl 0x5bb1668 <line:149:9, col:50> col:16 struct atomic_flag definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5bb1788 <col:9, col:16> col:16 implicit struct atomic_flag
| `-FieldDecl 0x5bb1850 <col:30, col:42> col:42 _Value 'atomic_bool':'_Atomic(bool)'
|-TypedefDecl 0x5bb1918 <col:1, col:52> col:52 referenced atomic_flag 'struct atomic_flag':'atomic_flag'
| `-ElaboratedType 0x5bb18c0 'struct atomic_flag' sugar
|   `-RecordType 0x5bb1700 'atomic_flag'
|     `-CXXRecord 0x5bb1668 'atomic_flag'
|-FunctionDecl 0x5bb1b28 <line:155:1, col:53> col:6 atomic_flag_test_and_set 'bool (volatile atomic_flag *)'
| `-ParmVarDecl 0x5bb1a18 <col:31, col:52> col:53 'volatile atomic_flag *'
|-FunctionDecl 0x5bb1d68 <line:156:1, col:76> col:6 atomic_flag_test_and_set_explicit 'bool (volatile atomic_flag *, memory_order)'
| |-ParmVarDecl 0x5bb1be0 <col:40, col:61> col:62 'volatile atomic_flag *'
| `-ParmVarDecl 0x5bb1c58 <col:64> col:76 'memory_order':'memory_order'
|-FunctionDecl 0x5bb1f18 <line:161:1, col:46> col:6 atomic_flag_clear 'void (volatile atomic_flag *)'
| `-ParmVarDecl 0x5bb1e28 <col:24, col:45> col:46 'volatile atomic_flag *'
`-FunctionDecl 0x5bb2158 <line:162:1, col:69> col:6 atomic_flag_clear_explicit 'void (volatile atomic_flag *, memory_order)'
  |-ParmVarDecl 0x5bb1fd0 <col:33, col:54> col:55 'volatile atomic_flag *'
  `-ParmVarDecl 0x5bb2048 <col:57> col:69 'memory_order':'memory_order'
LinkageSpecDecl 0x5bb2228 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:9:1, line:13:1> line:10:8 C
`-FunctionDecl 0x5bb2298 <line:11:1, line:13:1> line:11:6 DECADES_BARRIER 'void ()'
  |-CompoundStmt 0x5bb2378 <col:24, line:13:1>
  `-NoInlineAttr 0x5bb2338 <line:9:16>
LinkageSpecDecl 0x5bb23a8 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:15:1, line:19:1> line:16:8 C
`-FunctionDecl 0x5bb26b0 <line:17:1, line:19:1> line:17:5 DECADES_COMPARE_EXCHANGE_STRONG 'int (atomic_int *, int *, int)'
  |-ParmVarDecl 0x5bb2488 <col:37, col:49> col:49 used addr 'atomic_int *'
  |-ParmVarDecl 0x5bb2508 <col:55, col:60> col:60 used expected 'int *'
  |-ParmVarDecl 0x5bb2588 <col:70, col:74> col:74 used desired 'int'
  |-CompoundStmt 0x5bb2b20 <col:83, line:19:1>
  | `-ReturnStmt 0x5bb2b10 <line:18:3, col:114>
  |   `-ImplicitCastExpr 0x5bb2ae8 <col:10, col:114> 'int' <IntegralCast>
  |     `-AtomicExpr 0x5bb2a90 <col:10, col:114> 'bool'
  |       |-ImplicitCastExpr 0x5bb2a18 <col:47> 'atomic_int *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5bb28e8 <col:47> 'atomic_int *' lvalue ParmVar 0x5bb2488 'addr' 'atomic_int *'
  |       |-ImplicitCastExpr 0x5bb2a60 <col:72> 'int' <IntegralCast>
  |       | `-DeclRefExpr 0x5bb2948 <col:72> 'memory_order' EnumConstant 0x5bae248 'memory_order_relaxed' 'memory_order'
  |       |-ImplicitCastExpr 0x5bb2a30 <col:53> 'int *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5bb2908 <col:53> 'int *' lvalue ParmVar 0x5bb2508 'expected' 'int *'
  |       |-ImplicitCastExpr 0x5bb2a78 <col:94> 'int' <IntegralCast>
  |       | `-DeclRefExpr 0x5bb2968 <col:94> 'memory_order' EnumConstant 0x5bae248 'memory_order_relaxed' 'memory_order'
  |       `-ImplicitCastExpr 0x5bb2a48 <col:63> 'int' <LValueToRValue>
  |         `-DeclRefExpr 0x5bb2928 <col:63> 'int' lvalue ParmVar 0x5bb2588 'desired' 'int'
  `-NoInlineAttr 0x5bb2768 <line:15:16>
LinkageSpecDecl 0x5bb2b58 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:21:1, line:25:1> line:22:8 C
`-FunctionDecl 0x5bb2d60 <line:23:1, line:25:1> line:23:5 DECADES_COMPARE_EXCHANGE_WEAK 'int (atomic_int *, int *, int)'
  |-ParmVarDecl 0x5bb2bb8 <col:35, col:47> col:47 used addr 'atomic_int *'
  |-ParmVarDecl 0x5bb2c38 <col:53, col:58> col:58 used expected 'int *'
  |-ParmVarDecl 0x5bb2cb8 <col:68, col:72> col:72 used desired 'int'
  |-CompoundStmt 0x5bb3160 <col:81, line:25:1>
  | `-ReturnStmt 0x5bb3150 <line:24:3, col:112>
  |   `-ImplicitCastExpr 0x5bb3138 <col:10, col:112> 'int' <IntegralCast>
  |     `-AtomicExpr 0x5bb30e0 <col:10, col:112> 'bool'
  |       |-ImplicitCastExpr 0x5bb3068 <col:45> 'atomic_int *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5bb2f68 <col:45> 'atomic_int *' lvalue ParmVar 0x5bb2bb8 'addr' 'atomic_int *'
  |       |-ImplicitCastExpr 0x5bb30b0 <col:70> 'int' <IntegralCast>
  |       | `-DeclRefExpr 0x5bb2fc8 <col:70> 'memory_order' EnumConstant 0x5bae248 'memory_order_relaxed' 'memory_order'
  |       |-ImplicitCastExpr 0x5bb3080 <col:51> 'int *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5bb2f88 <col:51> 'int *' lvalue ParmVar 0x5bb2c38 'expected' 'int *'
  |       |-ImplicitCastExpr 0x5bb30c8 <col:92> 'int' <IntegralCast>
  |       | `-DeclRefExpr 0x5bb2fe8 <col:92> 'memory_order' EnumConstant 0x5bae248 'memory_order_relaxed' 'memory_order'
  |       `-ImplicitCastExpr 0x5bb3098 <col:61> 'int' <LValueToRValue>
  |         `-DeclRefExpr 0x5bb2fa8 <col:61> 'int' lvalue ParmVar 0x5bb2cb8 'desired' 'int'
  `-NoInlineAttr 0x5bb2e18 <line:21:16>
LinkageSpecDecl 0x5bb3198 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:27:1, line:32:1> line:28:8 C
`-FunctionDecl 0x5bb3420 <line:29:1, line:32:1> line:29:5 DECADES_COMPARE_AND_SWAP 'int (volatile int *, int, int)'
  |-ParmVarDecl 0x5bb3230 <col:30, col:44> col:44 used addr 'volatile int *'
  |-ParmVarDecl 0x5bb32b0 <col:50, col:54> col:54 used to_compare 'int'
  |-ParmVarDecl 0x5bb3330 <col:66, col:70> col:70 used new_val 'int'
  |-CompoundStmt 0x5bb3758 <col:79, line:32:1>
  | |-CallExpr 0x5bb36c0 <line:30:3, col:76> 'int'
  | | |-ImplicitCastExpr 0x5bb36a8 <col:3> 'int (*)(atomic_int *, int *, int)' <FunctionToPointerDecay>
  | | | `-DeclRefExpr 0x5bb3628 <col:3> 'int (atomic_int *, int *, int)' lvalue Function 0x5bb26b0 'DECADES_COMPARE_EXCHANGE_STRONG' 'int (atomic_int *, int *, int)'
  | | |-CStyleCastExpr 0x5bb35a8 <col:35, col:50> 'atomic_int *' <BitCast>
  | | | `-ImplicitCastExpr 0x5bb3590 <col:50> 'volatile int *' <LValueToRValue> part_of_explicit_cast
  | | |   `-DeclRefExpr 0x5bb3560 <col:50> 'volatile int *' lvalue ParmVar 0x5bb3230 'addr' 'volatile int *'
  | | |-UnaryOperator 0x5bb35f0 <col:56, col:57> 'int *' prefix '&' cannot overflow
  | | | `-DeclRefExpr 0x5bb35d0 <col:57> 'int' lvalue ParmVar 0x5bb32b0 'to_compare' 'int'
  | | `-ImplicitCastExpr 0x5bb36f8 <col:69> 'int' <LValueToRValue>
  | |   `-DeclRefExpr 0x5bb3608 <col:69> 'int' lvalue ParmVar 0x5bb3330 'new_val' 'int'
  | `-ReturnStmt 0x5bb3748 <line:31:3, col:10>
  |   `-ImplicitCastExpr 0x5bb3730 <col:10> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x5bb3710 <col:10> 'int' lvalue ParmVar 0x5bb32b0 'to_compare' 'int'
  `-NoInlineAttr 0x5bb34d8 <line:27:16>
LinkageSpecDecl 0x5bb3798 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:34:1, line:44:1> line:35:8 C
`-FunctionDecl 0x5bb3960 <line:36:1, line:44:1> line:36:5 DECADES_FETCH_ADD 'int (volatile int *, int)'
  |-ParmVarDecl 0x5bb3800 <col:23, col:37> col:37 used addr 'volatile int *'
  |-ParmVarDecl 0x5bb3880 <col:43, col:47> col:47 used to_add 'int'
  |-CompoundStmt 0x5bb3d18 <col:55, line:44:1>
  | |-DeclStmt 0x5bb3ad0 <line:37:3, col:10>
  | | `-VarDecl 0x5bb3a68 <col:3, col:7> col:7 used ret 'int'
  | |-CompoundStmt 0x5bb3cb0 <line:39:2, line:42:3>
  | | |-BinaryOperator 0x5bb3bb0 <line:40:5, col:17> 'int' lvalue '='
  | | | |-DeclRefExpr 0x5bb3ae8 <col:5> 'int' lvalue Var 0x5bb3a68 'ret' 'int'
  | | | `-ImplicitCastExpr 0x5bb3b98 <col:11, col:17> 'int' <LValueToRValue>
  | | |   `-ArraySubscriptExpr 0x5bb3b78 <col:11, col:17> 'volatile int' lvalue
  | | |     |-ImplicitCastExpr 0x5bb3b60 <col:11> 'volatile int *' <LValueToRValue>
  | | |     | `-DeclRefExpr 0x5bb3b20 <col:11> 'volatile int *' lvalue ParmVar 0x5bb3800 'addr' 'volatile int *'
  | | |     `-IntegerLiteral 0x5bb3b40 <col:16> 'int' 0
  | | `-CompoundAssignOperator 0x5bb3c80 <line:41:5, col:16> 'volatile int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
  | |   |-ArraySubscriptExpr 0x5bb3c28 <col:5, col:11> 'volatile int' lvalue
  | |   | |-ImplicitCastExpr 0x5bb3c10 <col:5> 'volatile int *' <LValueToRValue>
  | |   | | `-DeclRefExpr 0x5bb3bd0 <col:5> 'volatile int *' lvalue ParmVar 0x5bb3800 'addr' 'volatile int *'
  | |   | `-IntegerLiteral 0x5bb3bf0 <col:10> 'int' 0
  | |   `-ImplicitCastExpr 0x5bb3c68 <col:16> 'int' <LValueToRValue>
  | |     `-DeclRefExpr 0x5bb3c48 <col:16> 'int' lvalue ParmVar 0x5bb3880 'to_add' 'int'
  | `-ReturnStmt 0x5bb3d08 <line:43:3, col:10>
  |   `-ImplicitCastExpr 0x5bb3cf0 <col:10> 'int' <LValueToRValue>
  |     `-DeclRefExpr 0x5bb3cd0 <col:10> 'int' lvalue Var 0x5bb3a68 'ret' 'int'
  `-NoInlineAttr 0x5bb3a10 <line:34:16>
LinkageSpecDecl 0x5bb3d60 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:46:1, line:57:1> line:47:8 C
`-FunctionDecl 0x5bb3fe0 <line:48:1, line:57:1> line:48:5 DECADES_FETCH_ADD_BOUNDED 'int (volatile unsigned char *, int, int)'
  |-ParmVarDecl 0x5bb3df0 <col:31, col:56> col:56 used addr 'volatile unsigned char *'
  |-ParmVarDecl 0x5bb3e70 <col:62, col:66> col:66 used bound 'int'
  |-ParmVarDecl 0x5bb3ef0 <col:73, col:77> col:77 used to_add 'int'
  |-CompoundStmt 0x5bb4460 <col:85, line:57:1>
  | |-DeclStmt 0x5bb4158 <line:49:3, col:20>
  | | `-VarDecl 0x5bb40f0 <col:3, col:17> col:17 used ret 'unsigned char'
  | |-CompoundStmt 0x5bb43e0 <line:51:2, line:55:3>
  | | |-BinaryOperator 0x5bb4220 <line:52:5, col:17> 'unsigned char' lvalue '='
  | | | |-DeclRefExpr 0x5bb4170 <col:5> 'unsigned char' lvalue Var 0x5bb40f0 'ret' 'unsigned char'
  | | | `-ImplicitCastExpr 0x5bb4208 <col:11, col:17> 'unsigned char' <LValueToRValue>
  | | |   `-ArraySubscriptExpr 0x5bb41e8 <col:11, col:17> 'volatile unsigned char' lvalue
  | | |     |-ImplicitCastExpr 0x5bb41d0 <col:11> 'volatile unsigned char *' <LValueToRValue>
  | | |     | `-DeclRefExpr 0x5bb4190 <col:11> 'volatile unsigned char *' lvalue ParmVar 0x5bb3df0 'addr' 'volatile unsigned char *'
  | | |     `-IntegerLiteral 0x5bb41b0 <col:16> 'int' 0
  | | `-IfStmt 0x5bb43c8 <line:53:5, line:54:18>
  | |   |-BinaryOperator 0x5bb42c8 <line:53:9, col:15> 'bool' '<'
  | |   | |-ImplicitCastExpr 0x5bb42b0 <col:9> 'int' <IntegralCast>
  | |   | | `-ImplicitCastExpr 0x5bb4280 <col:9> 'unsigned char' <LValueToRValue>
  | |   | |   `-DeclRefExpr 0x5bb4240 <col:9> 'unsigned char' lvalue Var 0x5bb40f0 'ret' 'unsigned char'
  | |   | `-ImplicitCastExpr 0x5bb4298 <col:15> 'int' <LValueToRValue>
  | |   |   `-DeclRefExpr 0x5bb4260 <col:15> 'int' lvalue ParmVar 0x5bb3e70 'bound' 'int'
  | |   `-CompoundAssignOperator 0x5bb4398 <line:54:7, col:18> 'volatile unsigned char' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
  | |     |-ArraySubscriptExpr 0x5bb4340 <col:7, col:13> 'volatile unsigned char' lvalue
  | |     | |-ImplicitCastExpr 0x5bb4328 <col:7> 'volatile unsigned char *' <LValueToRValue>
  | |     | | `-DeclRefExpr 0x5bb42e8 <col:7> 'volatile unsigned char *' lvalue ParmVar 0x5bb3df0 'addr' 'volatile unsigned char *'
  | |     | `-IntegerLiteral 0x5bb4308 <col:12> 'int' 0
  | |     `-ImplicitCastExpr 0x5bb4380 <col:18> 'int' <LValueToRValue>
  | |       `-DeclRefExpr 0x5bb4360 <col:18> 'int' lvalue ParmVar 0x5bb3ef0 'to_add' 'int'
  | `-ReturnStmt 0x5bb4450 <line:56:3, col:10>
  |   `-ImplicitCastExpr 0x5bb4438 <col:10> 'int' <IntegralCast>
  |     `-ImplicitCastExpr 0x5bb4420 <col:10> 'unsigned char' <LValueToRValue>
  |       `-DeclRefExpr 0x5bb4400 <col:10> 'unsigned char' lvalue Var 0x5bb40f0 'ret' 'unsigned char'
  `-NoInlineAttr 0x5bb4098 <line:46:16>
LinkageSpecDecl 0x5bb44a8 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:59:1, line:70:1> line:60:8 C
`-FunctionDecl 0x5bb4630 <line:61:1, line:70:1> line:61:5 DECADES_FETCH_MIN 'int (volatile int *, int)'
  |-ParmVarDecl 0x5bb4510 <col:23, col:37> col:37 used addr 'volatile int *'
  |-ParmVarDecl 0x5bb4590 <col:43, col:47> col:47 used to_min 'int'
  |-CompoundStmt 0x5bb4bd0 <col:55, line:70:1>
  | |-DeclStmt 0x5bb47a0 <line:62:3, col:10>
  | | `-VarDecl 0x5bb4738 <col:3, col:7> col:7 ret 'int'
  | |-DeclStmt 0x5bb48a0 <line:63:3, col:20>
  | | `-VarDecl 0x5bb47d0 <col:3, col:16> col:7 used value 'int' cinit
  | |   `-ImplicitCastExpr 0x5bb4888 <col:15, col:16> 'int' <LValueToRValue>
  | |     `-UnaryOperator 0x5bb4870 <col:15, col:16> 'volatile int' lvalue prefix '*' cannot overflow
  | |       `-ImplicitCastExpr 0x5bb4858 <col:16> 'volatile int *' <LValueToRValue>
  | |         `-DeclRefExpr 0x5bb4838 <col:16> 'volatile int *' lvalue ParmVar 0x5bb4510 'addr' 'volatile int *'
  | |-WhileStmt 0x5bb4b88 <line:64:3, line:68:3>
  | | |-BinaryOperator 0x5bb4928 <line:64:10, col:19> 'bool' '<'
  | | | |-ImplicitCastExpr 0x5bb48f8 <col:10> 'int' <LValueToRValue>
  | | | | `-DeclRefExpr 0x5bb48b8 <col:10> 'int' lvalue ParmVar 0x5bb4590 'to_min' 'int'
  | | | `-ImplicitCastExpr 0x5bb4910 <col:19> 'int' <LValueToRValue>
  | | |   `-DeclRefExpr 0x5bb48d8 <col:19> 'int' lvalue Var 0x5bb47d0 'value' 'int'
  | | `-CompoundStmt 0x5bb4b70 <col:26, line:68:3>
  | |   `-IfStmt 0x5bb4b58 <line:65:5, line:67:7>
  | |     |-ImplicitCastExpr 0x5bb4ae0 <line:65:9, col:74> 'bool' <IntegralToBoolean>
  | |     | `-CallExpr 0x5bb4a90 <col:9, col:74> 'int'
  | |     |   |-ImplicitCastExpr 0x5bb4a78 <col:9> 'int (*)(atomic_int *, int *, int)' <FunctionToPointerDecay>
  | |     |   | `-DeclRefExpr 0x5bb4a58 <col:9> 'int (atomic_int *, int *, int)' lvalue Function 0x5bb2d60 'DECADES_COMPARE_EXCHANGE_WEAK' 'int (atomic_int *, int *, int)'
  | |     |   |-CStyleCastExpr 0x5bb49d8 <col:39, col:54> 'atomic_int *' <BitCast>
  | |     |   | `-ImplicitCastExpr 0x5bb49c0 <col:54> 'volatile int *' <LValueToRValue> part_of_explicit_cast
  | |     |   |   `-DeclRefExpr 0x5bb4990 <col:54> 'volatile int *' lvalue ParmVar 0x5bb4510 'addr' 'volatile int *'
  | |     |   |-UnaryOperator 0x5bb4a20 <col:60, col:61> 'int *' prefix '&' cannot overflow
  | |     |   | `-DeclRefExpr 0x5bb4a00 <col:61> 'int' lvalue Var 0x5bb47d0 'value' 'int'
  | |     |   `-ImplicitCastExpr 0x5bb4ac8 <col:68> 'int' <LValueToRValue>
  | |     |     `-DeclRefExpr 0x5bb4a38 <col:68> 'int' lvalue ParmVar 0x5bb4590 'to_min' 'int'
  | |     `-CompoundStmt 0x5bb4b40 <col:77, line:67:7>
  | |       `-ReturnStmt 0x5bb4b30 <line:66:2, col:9>
  | |         `-IntegerLiteral 0x5bb4af8 <col:9> 'int' 1
  | `-ReturnStmt 0x5bb4bc0 <line:69:3, col:10>
  |   `-IntegerLiteral 0x5bb4ba0 <col:10> 'int' 0
  `-NoInlineAttr 0x5bb46e0 <line:59:16>
LinkageSpecDecl 0x5bb4c20 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:71:1, line:85:1> line:71:8 C
`-FunctionDecl 0x5bb4da8 <line:72:1, line:85:1> line:72:5 wrapper_FETCH_ADD_MAX 'int (volatile int *, int)'
  |-ParmVarDecl 0x5bb4c88 <col:27, col:41> col:41 used addr 'volatile int *'
  |-ParmVarDecl 0x5bb4d08 <col:47, col:51> col:51 used bound 'int'
  `-CompoundStmt 0x5bb56d0 <col:58, line:85:1>
    |-DeclStmt 0x5bb4ed8 <line:73:3, col:10>
    | `-VarDecl 0x5bb4e70 <col:3, col:7> col:7 ret 'int'
    |-DeclStmt 0x5bb4fd8 <line:74:3, col:20>
    | `-VarDecl 0x5bb4f08 <col:3, col:16> col:7 used value 'int' cinit
    |   `-ImplicitCastExpr 0x5bb4fc0 <col:15, col:16> 'int' <LValueToRValue>
    |     `-UnaryOperator 0x5bb4fa8 <col:15, col:16> 'volatile int' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x5bb4f90 <col:16> 'volatile int *' <LValueToRValue>
    |         `-DeclRefExpr 0x5bb4f70 <col:16> 'volatile int *' lvalue ParmVar 0x5bb4c88 'addr' 'volatile int *'
    |-DeclStmt 0x5bb50e8 <line:75:3, col:26>
    | `-VarDecl 0x5bb5008 <col:3, col:25> col:7 used desired 'int' cinit
    |   `-BinaryOperator 0x5bb50c8 <col:17, col:25> 'int' '+'
    |     |-ImplicitCastExpr 0x5bb50b0 <col:17> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5bb5070 <col:17> 'int' lvalue Var 0x5bb4f08 'value' 'int'
    |     `-IntegerLiteral 0x5bb5090 <col:25> 'int' 1
    |-DeclStmt 0x5bb5180 <line:76:3, col:16>
    | `-VarDecl 0x5bb5118 <col:3, col:7> col:7 new_value 'int'
    |-WhileStmt 0x5bb5688 <line:77:3, line:83:3>
    | |-BinaryOperator 0x5bb5208 <line:77:10, col:18> 'bool' '<'
    | | |-ImplicitCastExpr 0x5bb51d8 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x5bb5198 <col:10> 'int' lvalue Var 0x5bb4f08 'value' 'int'
    | | `-ImplicitCastExpr 0x5bb51f0 <col:18> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x5bb51b8 <col:18> 'int' lvalue ParmVar 0x5bb4d08 'bound' 'int'
    | `-CompoundStmt 0x5bb5660 <col:25, line:83:3>
    |   |-DeclStmt 0x5bb5430 <line:78:5, col:67>
    |   | `-VarDecl 0x5bb5240 <col:5, col:66> col:9 used new_value 'int' cinit
    |   |   `-CallExpr 0x5bb53b0 <col:21, col:66> 'int'
    |   |     |-ImplicitCastExpr 0x5bb5398 <col:21> 'int (*)(volatile int *, int, int)' <FunctionToPointerDecay>
    |   |     | `-DeclRefExpr 0x5bb5350 <col:21> 'int (volatile int *, int, int)' lvalue Function 0x5bb3420 'DECADES_COMPARE_AND_SWAP' 'int (volatile int *, int, int)'
    |   |     |-ImplicitCastExpr 0x5bb53e8 <col:46> 'volatile int *' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x5bb52f0 <col:46> 'volatile int *' lvalue ParmVar 0x5bb4c88 'addr' 'volatile int *'
    |   |     |-ImplicitCastExpr 0x5bb5400 <col:52> 'int' <LValueToRValue>
    |   |     | `-DeclRefExpr 0x5bb5310 <col:52> 'int' lvalue Var 0x5bb4f08 'value' 'int'
    |   |     `-ImplicitCastExpr 0x5bb5418 <col:59> 'int' <LValueToRValue>
    |   |       `-DeclRefExpr 0x5bb5330 <col:59> 'int' lvalue Var 0x5bb5008 'desired' 'int'
    |   |-IfStmt 0x5bb5580 <line:79:5, line:81:18> has_else
    |   | |-BinaryOperator 0x5bb54b8 <line:79:9, col:18> 'bool' '=='
    |   | | |-ImplicitCastExpr 0x5bb5488 <col:9> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x5bb5448 <col:9> 'int' lvalue Var 0x5bb4f08 'value' 'int'
    |   | | `-ImplicitCastExpr 0x5bb54a0 <col:18> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5bb5468 <col:18> 'int' lvalue Var 0x5bb5240 'new_value' 'int'
    |   | |-ReturnStmt 0x5bb54f8 <line:80:6, col:13>
    |   | | `-IntegerLiteral 0x5bb54d8 <col:13> 'int' 1
    |   | `-BinaryOperator 0x5bb5560 <line:81:10, col:18> 'int' lvalue '='
    |   |   |-DeclRefExpr 0x5bb5508 <col:10> 'int' lvalue Var 0x5bb4f08 'value' 'int'
    |   |   `-ImplicitCastExpr 0x5bb5548 <col:18> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5bb5528 <col:18> 'int' lvalue Var 0x5bb5240 'new_value' 'int'
    |   `-BinaryOperator 0x5bb5640 <line:82:5, col:23> 'int' lvalue '='
    |     |-DeclRefExpr 0x5bb55a8 <col:5> 'int' lvalue Var 0x5bb5008 'desired' 'int'
    |     `-BinaryOperator 0x5bb5620 <col:15, col:23> 'int' '+'
    |       |-ImplicitCastExpr 0x5bb5608 <col:15> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5bb55c8 <col:15> 'int' lvalue Var 0x5bb4f08 'value' 'int'
    |       `-IntegerLiteral 0x5bb55e8 <col:23> 'int' 1
    `-ReturnStmt 0x5bb56c0 <line:84:3, col:10>
      `-IntegerLiteral 0x5bb56a0 <col:10> 'int' 0
LinkageSpecDecl 0x5bb5730 </home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:87:1, line:101:1> line:88:8 C
`-FunctionDecl 0x5bb5920 <line:89:1, line:101:1> line:89:7 DECADES_FETCH_ADD_FLOAT 'float (volatile float *, float)'
  |-ParmVarDecl 0x5bb57c0 <col:31, col:47> col:47 used addr 'volatile float *'
  |-ParmVarDecl 0x5bb5840 <col:53, col:59> col:59 used to_add 'float'
  |-CompoundStmt 0x5bb6840 <col:67, line:101:1>
  | |-DeclStmt 0x5bb6240 <line:90:3, line:93:15>
  | | |-CXXRecordDecl 0x5bb5a10 <line:90:3, line:93:3> line:90:3 union definition
  | | | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
  | | | | |-DefaultConstructor exists trivial
  | | | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
  | | | | |-MoveConstructor exists simple trivial
  | | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | | `-Destructor simple irrelevant trivial needs_implicit
  | | | |-FieldDecl 0x5bb5b58 <line:91:5, col:9> col:9 referenced int_val 'int'
  | | | |-FieldDecl 0x5bb5bc0 <line:92:5, col:11> col:11 referenced float_val 'float'
  | | | |-CXXConstructorDecl 0x5bb5d08 <line:90:3> col:3 implicit used  'void () noexcept' inline default trivial
  | | | | `-CompoundStmt 0x5bb6138 <col:3>
  | | | |-CXXConstructorDecl 0x5bb5e08 <col:3> col:3 implicit constexpr  'void (const (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3) &)' inline default trivial noexcept-unevaluated 0x5bb5e08
  | | | | `-ParmVarDecl 0x5bb5f18 <col:3> col:3 'const (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3) &'
  | | | `-CXXConstructorDecl 0x5bb5fb8 <col:3> col:3 implicit constexpr  'void ((anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3) &&)' inline default trivial noexcept-unevaluated 0x5bb5fb8
  | | |   `-ParmVarDecl 0x5bb60c8 <col:3> col:3 '(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3) &&'
  | | |-VarDecl 0x5bb5c88 <col:3, line:93:5> col:5 used value 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' callinit
  | | | `-CXXConstructExpr 0x5bb6148 <col:5> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' 'void () noexcept'
  | | `-VarDecl 0x5bb6190 <line:90:3, line:93:12> col:12 used ret 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' callinit
  | |   `-CXXConstructExpr 0x5bb61f8 <col:12> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' 'void () noexcept'
  | |-DoStmt 0x5bb67a8 <line:95:3, line:98:92>
  | | |-CompoundStmt 0x5bb6560 <line:95:6, line:98:3>
  | | | |-BinaryOperator 0x5bb6340 <line:96:5, col:24> 'float' lvalue '='
  | | | | |-MemberExpr 0x5bb6278 <col:5, col:11> 'float' lvalue .float_val 0x5bb5bc0
  | | | | | `-DeclRefExpr 0x5bb6258 <col:5> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' lvalue Var 0x5bb5c88 'value' 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)'
  | | | | `-ImplicitCastExpr 0x5bb6328 <col:23, col:24> 'float' <LValueToRValue>
  | | | |   `-UnaryOperator 0x5bb6310 <col:23, col:24> 'volatile float' lvalue prefix '*' cannot overflow
  | | | |     `-ImplicitCastExpr 0x5bb62f8 <col:24> 'volatile float *' <LValueToRValue>
  | | | |       `-DeclRefExpr 0x5bb62d8 <col:24> 'volatile float *' lvalue ParmVar 0x5bb57c0 'addr' 'volatile float *'
  | | | `-BinaryOperator 0x5bb6540 <line:97:5, col:39> 'float' lvalue '='
  | | |   |-MemberExpr 0x5bb6450 <col:5, col:9> 'float' lvalue .float_val 0x5bb5bc0
  | | |   | `-DeclRefExpr 0x5bb6430 <col:5> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' lvalue Var 0x5bb6190 'ret' 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)'
  | | |   `-BinaryOperator 0x5bb6520 <col:21, col:39> 'float' '+'
  | | |     |-ImplicitCastExpr 0x5bb64f0 <col:21, col:27> 'float' <LValueToRValue>
  | | |     | `-MemberExpr 0x5bb64a0 <col:21, col:27> 'float' lvalue .float_val 0x5bb5bc0
  | | |     |   `-DeclRefExpr 0x5bb6480 <col:21> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' lvalue Var 0x5bb5c88 'value' 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)'
  | | |     `-ImplicitCastExpr 0x5bb6508 <col:39> 'float' <LValueToRValue>
  | | |       `-DeclRefExpr 0x5bb64d0 <col:39> 'float' lvalue ParmVar 0x5bb5840 'to_add' 'float'
  | | `-UnaryOperator 0x5bb6790 <line:98:12, col:91> 'bool' prefix '!' cannot overflow
  | |   `-ImplicitCastExpr 0x5bb6778 <col:13, col:91> 'bool' <IntegralToBoolean>
  | |     `-CallExpr 0x5bb6728 <col:13, col:91> 'int'
  | |       |-ImplicitCastExpr 0x5bb6710 <col:13> 'int (*)(atomic_int *, int *, int)' <FunctionToPointerDecay>
  | |       | `-DeclRefExpr 0x5bb66f0 <col:13> 'int (atomic_int *, int *, int)' lvalue Function 0x5bb2d60 'DECADES_COMPARE_EXCHANGE_WEAK' 'int (atomic_int *, int *, int)'
  | |       |-CStyleCastExpr 0x5bb6610 <col:43, col:58> 'atomic_int *' <BitCast>
  | |       | `-ImplicitCastExpr 0x5bb65f8 <col:58> 'volatile float *' <LValueToRValue> part_of_explicit_cast
  | |       |   `-DeclRefExpr 0x5bb65c8 <col:58> 'volatile float *' lvalue ParmVar 0x5bb57c0 'addr' 'volatile float *'
  | |       |-UnaryOperator 0x5bb6688 <col:64, col:71> 'int *' prefix '&' cannot overflow
  | |       | `-MemberExpr 0x5bb6658 <col:65, col:71> 'int' lvalue .int_val 0x5bb5b58
  | |       |   `-DeclRefExpr 0x5bb6638 <col:65> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' lvalue Var 0x5bb5c88 'value' 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)'
  | |       `-ImplicitCastExpr 0x5bb6760 <col:80, col:84> 'int' <LValueToRValue>
  | |         `-MemberExpr 0x5bb66c0 <col:80, col:84> 'int' lvalue .int_val 0x5bb5b58
  | |           `-DeclRefExpr 0x5bb66a0 <col:80> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' lvalue Var 0x5bb6190 'ret' 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)'
  | `-ReturnStmt 0x5bb6830 <line:100:3, col:16>
  |   `-ImplicitCastExpr 0x5bb6818 <col:10, col:16> 'float' <LValueToRValue>
  |     `-MemberExpr 0x5bb67e8 <col:10, col:16> 'float' lvalue .float_val 0x5bb5bc0
  |       `-DeclRefExpr 0x5bb67c8 <col:10> 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)' lvalue Var 0x5bb5c88 'value' 'union (anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)':'(anonymous union at /home/aninda/DECADES_compiler/build/include/DECADES/DECADES.h:90:3)'
  `-NoInlineAttr 0x5bb59d0 <line:87:16>
LinkageSpecDecl 0x5bb68d0 </usr/include/stdio.h:29:1, line:943:1> line:29:8 C
|-CXXRecordDecl 0x5bb6920 <line:44:1, col:8> col:8 struct _IO_FILE
|-TypedefDecl 0x5bb6a20 <line:48:1, col:25> col:25 referenced FILE 'struct _IO_FILE':'_IO_FILE'
| `-ElaboratedType 0x5bb69d0 'struct _IO_FILE' sugar
|   `-RecordType 0x5bb69b0 '_IO_FILE'
|     `-CXXRecord 0x5bb8f40 '_IO_FILE'
|-TypedefDecl 0x5bb6a98 <line:64:1, col:25> col:25 __FILE 'struct _IO_FILE':'_IO_FILE'
| `-ElaboratedType 0x5bb69d0 'struct _IO_FILE' sugar
|   `-RecordType 0x5bb69b0 '_IO_FILE'
|     `-CXXRecord 0x5bb8f40 '_IO_FILE'
|-CXXRecordDecl 0x5bb6b50 </usr/include/wchar.h:82:9, line:94:1> line:82:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5bb6c80 <line:84:3, col:7> col:7 __count 'int'
| |-CXXRecordDecl 0x5bb6cd0 <line:85:3, line:93:3> line:85:3 union definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5bb6e00 <line:88:5, col:18> col:18 __wch 'unsigned int'
| | `-FieldDecl 0x5bb6ea8 <line:92:5, col:18> col:10 __wchb 'char [4]'
| `-FieldDecl 0x5bb6f68 <line:85:3, line:93:5> col:5 __value 'union (anonymous union at /usr/include/wchar.h:85:3)':'__mbstate_t::(anonymous union at /usr/include/wchar.h:85:3)'
|-TypedefDecl 0x5bb7048 <line:82:1, line:94:3> col:3 referenced __mbstate_t 'struct __mbstate_t':'__mbstate_t'
| `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
|   `-RecordType 0x5bb6be0 '__mbstate_t'
|     `-CXXRecord 0x5bb6b50 ''
|-CXXRecordDecl 0x5bb70b8 </usr/include/_G_config.h:21:9, line:25:1> line:21:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5bb71e8 <line:23:3, col:11> col:11 __pos '__off_t':'long'
| `-FieldDecl 0x5bb7270 <line:24:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x5bb7338 <line:21:1, line:25:3> col:3 referenced _G_fpos_t 'struct _G_fpos_t':'_G_fpos_t'
| `-ElaboratedType 0x5bb72e0 'struct _G_fpos_t' sugar
|   `-RecordType 0x5bb7150 '_G_fpos_t'
|     `-CXXRecord 0x5bb70b8 ''
|-CXXRecordDecl 0x5bb73a8 <line:26:9, line:30:1> line:26:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5bb74d8 <line:28:3, col:13> col:13 __pos '__off64_t':'long'
| `-FieldDecl 0x5bb7538 <line:29:3, col:15> col:15 __state '__mbstate_t':'__mbstate_t'
|-TypedefDecl 0x5bb75f8 <line:26:1, line:30:3> col:3 referenced _G_fpos64_t 'struct _G_fpos64_t':'_G_fpos64_t'
| `-ElaboratedType 0x5bb75a0 'struct _G_fpos64_t' sugar
|   `-RecordType 0x5bb7440 '_G_fpos64_t'
|     `-CXXRecord 0x5bb73a8 ''
|-TypedefDecl 0x5bb76a0 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/stdarg.h:14:1, col:27> col:27 va_list '__builtin_va_list':'__va_list_tag [1]'
| `-TypedefType 0x5bb7670 '__builtin_va_list' sugar
|   |-Typedef 0x5b06998 '__builtin_va_list'
|   `-ConstantArrayType 0x5b06940 '__va_list_tag [1]' 1 
|     `-RecordType 0x5acb040 '__va_list_tag'
|       `-CXXRecord 0x5acafa8 '__va_list_tag'
|-TypedefDecl 0x5bb7708 <line:32:1, col:27> col:27 referenced __gnuc_va_list '__builtin_va_list':'__va_list_tag [1]'
| `-TypedefType 0x5bb7670 '__builtin_va_list' sugar
|   |-Typedef 0x5b06998 '__builtin_va_list'
|   `-ConstantArrayType 0x5b06940 '__va_list_tag [1]' 1 
|     `-RecordType 0x5acb040 '__va_list_tag'
|       `-CXXRecord 0x5acafa8 '__va_list_tag'
|-CXXRecordDecl 0x5bb7760 </usr/include/libio.h:145:1, col:8> col:8 struct _IO_jump_t
|-CXXRecordDecl 0x5bb7810 prev 0x5bb6920 <col:20, col:27> col:27 struct _IO_FILE
|-TypedefDecl 0x5bb78b0 <line:155:1, col:14> col:14 referenced _IO_lock_t 'void'
| `-BuiltinType 0x5aca260 'void'
|-CXXRecordDecl 0x5bb7908 <line:161:1, line:178:1> line:161:8 struct _IO_marker definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5bb7a28 <col:1, col:8> col:8 implicit struct _IO_marker
| |-FieldDecl 0x5bb8b98 <line:162:3, col:22> col:22 _next 'struct _IO_marker *'
| |-FieldDecl 0x5bb8c70 <line:163:3, col:20> col:20 _sbuf 'struct _IO_FILE *'
| `-FieldDecl 0x5bb8cd8 <line:167:3, col:7> col:7 _pos 'int'
|-EnumDecl 0x5bb8d40 <line:181:1, line:187:1> line:181:6 __codecvt_result
| |-EnumConstantDecl 0x5bb8e00 <line:183:3> col:3 __codecvt_ok '__codecvt_result'
| |-EnumConstantDecl 0x5bb8e50 <line:184:3> col:3 __codecvt_partial '__codecvt_result'
| |-EnumConstantDecl 0x5bb8ea0 <line:185:3> col:3 __codecvt_error '__codecvt_result'
| `-EnumConstantDecl 0x5bb8ef0 <line:186:3> col:3 __codecvt_noconv '__codecvt_result'
|-CXXRecordDecl 0x5bb8f40 prev 0x5bb7810 <line:246:1, line:313:1> line:246:8 referenced struct _IO_FILE definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5bb9038 <col:1, col:8> col:8 implicit struct _IO_FILE
| |-FieldDecl 0x5bb90e0 <line:247:3, col:7> col:7 _flags 'int'
| |-FieldDecl 0x5bb9148 <line:252:3, col:9> col:9 _IO_read_ptr 'char *'
| |-FieldDecl 0x5bb91b0 <line:253:3, col:9> col:9 _IO_read_end 'char *'
| |-FieldDecl 0x5bb9218 <line:254:3, col:9> col:9 _IO_read_base 'char *'
| |-FieldDecl 0x5bb9280 <line:255:3, col:9> col:9 _IO_write_base 'char *'
| |-FieldDecl 0x5bb92e8 <line:256:3, col:9> col:9 _IO_write_ptr 'char *'
| |-FieldDecl 0x5bb9350 <line:257:3, col:9> col:9 _IO_write_end 'char *'
| |-FieldDecl 0x5bb93b8 <line:258:3, col:9> col:9 _IO_buf_base 'char *'
| |-FieldDecl 0x5bb9420 <line:259:3, col:9> col:9 _IO_buf_end 'char *'
| |-FieldDecl 0x5bb9488 <line:261:3, col:9> col:9 _IO_save_base 'char *'
| |-FieldDecl 0x5bb94f0 <line:262:3, col:9> col:9 _IO_backup_base 'char *'
| |-FieldDecl 0x5bb9558 <line:263:3, col:9> col:9 _IO_save_end 'char *'
| |-FieldDecl 0x5bb95d0 <line:265:3, col:22> col:22 _markers 'struct _IO_marker *'
| |-FieldDecl 0x5bb9648 <line:267:3, col:20> col:20 _chain 'struct _IO_FILE *'
| |-FieldDecl 0x5bb96b0 <line:269:3, col:7> col:7 _fileno 'int'
| |-FieldDecl 0x5bb9718 <line:273:3, col:7> col:7 _flags2 'int'
| |-FieldDecl 0x5bb9778 <line:275:3, col:11> col:11 _old_offset '__off_t':'long'
| |-FieldDecl 0x5bb97e0 <line:279:3, col:18> col:18 _cur_column 'unsigned short'
| |-FieldDecl 0x5bb9848 <line:280:3, col:15> col:15 _vtable_offset 'signed char'
| |-FieldDecl 0x5bb9928 <line:281:3, col:19> col:8 _shortbuf 'char [1]'
| |-FieldDecl 0x5bb99d8 <line:285:3, col:15> col:15 _lock '_IO_lock_t *'
| |-FieldDecl 0x5bb9a38 <line:294:3, col:13> col:13 _offset '__off64_t':'long'
| |-FieldDecl 0x5bb9aa0 <line:303:3, col:9> col:9 __pad1 'void *'
| |-FieldDecl 0x5bb9b08 <line:304:3, col:9> col:9 __pad2 'void *'
| |-FieldDecl 0x5bb9f90 <line:305:3, col:9> col:9 __pad3 'void *'
| |-FieldDecl 0x5bb9ff8 <line:306:3, col:9> col:9 __pad4 'void *'
| |-FieldDecl 0x5bba058 <line:307:3, col:10> col:10 __pad5 'size_t':'unsigned long'
| |-FieldDecl 0x5bba0c0 <line:309:3, col:7> col:7 _mode 'int'
| `-FieldDecl 0x5bba318 <line:311:3, col:74> col:8 _unused2 'char [20]'
|-CXXRecordDecl 0x5bba380 <line:319:1, col:8> col:8 struct _IO_FILE_plus
|-VarDecl 0x5bba480 <line:321:1, col:29> col:29 _IO_2_1_stdin_ 'struct _IO_FILE_plus':'_IO_FILE_plus' extern
|-VarDecl 0x5bba508 <line:322:1, col:29> col:29 _IO_2_1_stdout_ 'struct _IO_FILE_plus':'_IO_FILE_plus' extern
|-VarDecl 0x5bba590 <line:323:1, col:29> col:29 _IO_2_1_stderr_ 'struct _IO_FILE_plus':'_IO_FILE_plus' extern
|-TypedefDecl 0x5bba828 <line:339:1, col:77> col:19 referenced __io_read_fn '__ssize_t (void *, char *, size_t)'
| `-FunctionProtoType 0x5bba7b0 '__ssize_t (void *, char *, size_t)' cdecl
|   |-TypedefType 0x5b48d30 '__ssize_t' sugar
|   | |-Typedef 0x5b3c650 '__ssize_t'
|   | `-BuiltinType 0x5aca320 'long'
|   |-PointerType 0x5acaa60 'void *'
|   | `-BuiltinType 0x5aca260 'void'
|   |-PointerType 0x5acaf10 'char *'
|   | `-BuiltinType 0x5aca2a0 'char'
|   `-TypedefType 0x5b411c0 'size_t' sugar
|     |-Typedef 0x5b39c68 'size_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bbaab8 <line:347:1, line:348:16> line:347:19 referenced __io_write_fn '__ssize_t (void *, const char *, size_t)'
| `-FunctionProtoType 0x5bbaa40 '__ssize_t (void *, const char *, size_t)' cdecl
|   |-TypedefType 0x5b48d30 '__ssize_t' sugar
|   | |-Typedef 0x5b3c650 '__ssize_t'
|   | `-BuiltinType 0x5aca320 'long'
|   |-PointerType 0x5acaa60 'void *'
|   | `-BuiltinType 0x5aca260 'void'
|   |-PointerType 0x5acad40 'const char *'
|   | `-QualType 0x5aca2a1 'const char' const
|   |   `-BuiltinType 0x5aca2a0 'char'
|   `-TypedefType 0x5b411c0 'size_t' sugar
|     |-Typedef 0x5b39c68 'size_t'
|     `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bbad70 <line:356:1, col:68> col:13 referenced __io_seek_fn 'int (void *, __off64_t *, int)'
| `-FunctionProtoType 0x5bbacf0 'int (void *, __off64_t *, int)' cdecl
|   |-BuiltinType 0x5aca300 'int'
|   |-PointerType 0x5acaa60 'void *'
|   | `-BuiltinType 0x5aca260 'void'
|   |-PointerType 0x5bbab90 '__off64_t *'
|   | `-TypedefType 0x5b3dfc0 '__off64_t' sugar
|   |   |-Typedef 0x5b3ba30 '__off64_t'
|   |   `-BuiltinType 0x5aca320 'long'
|   `-BuiltinType 0x5aca300 'int'
|-TypedefDecl 0x5bbaeb0 <line:359:1, col:42> col:13 referenced __io_close_fn 'int (void *)'
| `-FunctionProtoType 0x5bbae50 'int (void *)' cdecl
|   |-BuiltinType 0x5aca300 'int'
|   `-PointerType 0x5acaa60 'void *'
|     `-BuiltinType 0x5aca260 'void'
|-TypedefDecl 0x5bbafa0 <line:364:1, col:22> col:22 cookie_read_function_t '__io_read_fn':'__ssize_t (void *, char *, size_t)'
| `-TypedefType 0x5bbaf10 '__io_read_fn' sugar
|   |-Typedef 0x5bba828 '__io_read_fn'
|   `-FunctionProtoType 0x5bba7b0 '__ssize_t (void *, char *, size_t)' cdecl
|     |-TypedefType 0x5b48d30 '__ssize_t' sugar
|     | |-Typedef 0x5b3c650 '__ssize_t'
|     | `-BuiltinType 0x5aca320 'long'
|     |-PointerType 0x5acaa60 'void *'
|     | `-BuiltinType 0x5aca260 'void'
|     |-PointerType 0x5acaf10 'char *'
|     | `-BuiltinType 0x5aca2a0 'char'
|     `-TypedefType 0x5b411c0 'size_t' sugar
|       |-Typedef 0x5b39c68 'size_t'
|       `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bbb030 <line:365:1, col:23> col:23 cookie_write_function_t '__io_write_fn':'__ssize_t (void *, const char *, size_t)'
| `-TypedefType 0x5bbb000 '__io_write_fn' sugar
|   |-Typedef 0x5bbaab8 '__io_write_fn'
|   `-FunctionProtoType 0x5bbaa40 '__ssize_t (void *, const char *, size_t)' cdecl
|     |-TypedefType 0x5b48d30 '__ssize_t' sugar
|     | |-Typedef 0x5b3c650 '__ssize_t'
|     | `-BuiltinType 0x5aca320 'long'
|     |-PointerType 0x5acaa60 'void *'
|     | `-BuiltinType 0x5aca260 'void'
|     |-PointerType 0x5acad40 'const char *'
|     | `-QualType 0x5aca2a1 'const char' const
|     |   `-BuiltinType 0x5aca2a0 'char'
|     `-TypedefType 0x5b411c0 'size_t' sugar
|       |-Typedef 0x5b39c68 'size_t'
|       `-BuiltinType 0x5aca3c0 'unsigned long'
|-TypedefDecl 0x5bbb0c0 <line:366:1, col:22> col:22 cookie_seek_function_t '__io_seek_fn':'int (void *, __off64_t *, int)'
| `-TypedefType 0x5bbb090 '__io_seek_fn' sugar
|   |-Typedef 0x5bbad70 '__io_seek_fn'
|   `-FunctionProtoType 0x5bbacf0 'int (void *, __off64_t *, int)' cdecl
|     |-BuiltinType 0x5aca300 'int'
|     |-PointerType 0x5acaa60 'void *'
|     | `-BuiltinType 0x5aca260 'void'
|     |-PointerType 0x5bbab90 '__off64_t *'
|     | `-TypedefType 0x5b3dfc0 '__off64_t' sugar
|     |   |-Typedef 0x5b3ba30 '__off64_t'
|     |   `-BuiltinType 0x5aca320 'long'
|     `-BuiltinType 0x5aca300 'int'
|-TypedefDecl 0x5bbb150 <line:367:1, col:23> col:23 cookie_close_function_t '__io_close_fn':'int (void *)'
| `-TypedefType 0x5bbb120 '__io_close_fn' sugar
|   |-Typedef 0x5bbaeb0 '__io_close_fn'
|   `-FunctionProtoType 0x5bbae50 'int (void *)' cdecl
|     |-BuiltinType 0x5aca300 'int'
|     `-PointerType 0x5acaa60 'void *'
|       `-BuiltinType 0x5aca260 'void'
|-CXXRecordDecl 0x5bbb1a8 <line:370:9, line:376:1> line:370:9 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5bbb338 <line:372:3, col:17> col:17 read '__io_read_fn *'
| |-FieldDecl 0x5bbb3f8 <line:373:3, col:18> col:18 write '__io_write_fn *'
| |-FieldDecl 0x5bbb4b8 <line:374:3, col:17> col:17 seek '__io_seek_fn *'
| `-FieldDecl 0x5bbb578 <line:375:3, col:18> col:18 close '__io_close_fn *'
|-TypedefDecl 0x5bbb638 <line:370:1, line:376:3> col:3 referenced _IO_cookie_io_functions_t 'struct _IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| `-ElaboratedType 0x5bbb5e0 'struct _IO_cookie_io_functions_t' sugar
|   `-RecordType 0x5bbb240 '_IO_cookie_io_functions_t'
|     `-CXXRecord 0x5bbb1a8 ''
|-TypedefDecl 0x5bbb6e0 <line:377:1, col:35> col:35 cookie_io_functions_t '_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
| `-TypedefType 0x5bbb6b0 '_IO_cookie_io_functions_t' sugar
|   |-Typedef 0x5bbb638 '_IO_cookie_io_functions_t'
|   `-ElaboratedType 0x5bbb5e0 'struct _IO_cookie_io_functions_t' sugar
|     `-RecordType 0x5bbb240 '_IO_cookie_io_functions_t'
|       `-CXXRecord 0x5bbb1a8 ''
|-CXXRecordDecl 0x5bbb738 <line:379:1, col:8> col:8 struct _IO_cookie_file
|-FunctionDecl 0x5bbbb58 <line:382:1, line:383:56> line:382:13 _IO_cookie_init 'void (struct _IO_cookie_file *, int, void *, _IO_cookie_io_functions_t)' extern
| |-ParmVarDecl 0x5bbb8a0 <col:30, col:54> col:54 __cfile 'struct _IO_cookie_file *'
| |-ParmVarDecl 0x5bbb920 <col:63, col:67> col:67 __read_write 'int'
| |-ParmVarDecl 0x5bbb9a0 <line:383:9, col:15> col:15 __cookie 'void *'
| `-ParmVarDecl 0x5bbba18 <col:25, col:51> col:51 __fns '_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
|-LinkageSpecDecl 0x5bbbc38 <line:388:1, line:527:1> line:388:8 C
| |-FunctionDecl 0x5bbbd60 <line:391:1, col:35> col:12 __underflow 'int (_IO_FILE *)' extern
| | `-ParmVarDecl 0x5bbbc98 <col:25, col:34> col:35 '_IO_FILE *'
| |-FunctionDecl 0x5bbbeb0 <line:392:1, col:31> col:12 __uflow 'int (_IO_FILE *)' extern
| | `-ParmVarDecl 0x5bbbe18 <col:21, col:30> col:31 '_IO_FILE *'
| |-FunctionDecl 0x5bbc520 <line:393:1, col:39> col:12 __overflow 'int (_IO_FILE *, int)' extern
| | |-ParmVarDecl 0x5bbc3c0 <col:24, col:33> col:34 '_IO_FILE *'
| | `-ParmVarDecl 0x5bbc440 <col:36> col:39 'int'
| |-FunctionDecl 0x5bbc678 <line:435:1, col:36> col:12 _IO_getc 'int (_IO_FILE *)' extern
| | `-ParmVarDecl 0x5bbc5e0 <col:22, col:32> col:32 __fp '_IO_FILE *'
| |-FunctionDecl 0x5bbc890 <line:436:1, col:45> col:12 _IO_putc 'int (int, _IO_FILE *)' extern
| | |-ParmVarDecl 0x5bbc738 <col:22, col:26> col:26 __c 'int'
| | `-ParmVarDecl 0x5bbc7b0 <col:31, col:41> col:41 __fp '_IO_FILE *'
| |-FunctionDecl 0x5bbca28 <line:437:1, col:45> col:12 _IO_feof 'int (_IO_FILE *) throw()' extern
| | `-ParmVarDecl 0x5bbc950 <col:22, col:32> col:32 __fp '_IO_FILE *'
| |-FunctionDecl 0x5bbcb80 <line:438:1, col:47> col:12 _IO_ferror 'int (_IO_FILE *) throw()' extern
| | `-ParmVarDecl 0x5bbcae0 <col:24, col:34> col:34 __fp '_IO_FILE *'
| |-FunctionDecl 0x5bbccd0 <line:440:1, col:44> col:12 _IO_peekc_locked 'int (_IO_FILE *)' extern
| | `-ParmVarDecl 0x5bbcc38 <col:30, col:40> col:40 __fp '_IO_FILE *'
| |-FunctionDecl 0x5bbce80 <line:446:1, col:47> col:13 _IO_flockfile 'void (_IO_FILE *) throw()' extern
| | `-ParmVarDecl 0x5bbcd88 <col:28, col:37> col:38 '_IO_FILE *'
| |-FunctionDecl 0x5bbcfd0 <line:447:1, col:49> col:13 _IO_funlockfile 'void (_IO_FILE *) throw()' extern
| | `-ParmVarDecl 0x5bbcf38 <col:30, col:39> col:40 '_IO_FILE *'
| |-FunctionDecl 0x5bbd128 <line:448:1, col:49> col:12 _IO_ftrylockfile 'int (_IO_FILE *) throw()' extern
| | `-ParmVarDecl 0x5bbd088 <col:30, col:39> col:40 '_IO_FILE *'
| |-FunctionDecl 0x5bbe5b0 <line:465:1, line:466:35> line:465:12 _IO_vfscanf 'int (_IO_FILE *__restrict, const char *__restrict, __va_list_tag *, int *__restrict)' extern
| | |-ParmVarDecl 0x5bbd1e0 <col:25, col:34> col:46 '_IO_FILE *__restrict'
| | |-ParmVarDecl 0x5bbd260 <col:48, col:59> col:71 'const char *__restrict'
| | |-ParmVarDecl 0x5bbe3e0 <line:466:4> col:18 '__va_list_tag *':'__va_list_tag *'
| | `-ParmVarDecl 0x5bbe460 <col:20, col:24> col:35 'int *__restrict'
| |-FunctionDecl 0x5bbe8a0 <line:467:1, line:468:19> line:467:12 _IO_vfprintf 'int (_IO_FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| | |-ParmVarDecl 0x5bbe680 <col:26, col:35> col:46 '_IO_FILE *__restrict'
| | |-ParmVarDecl 0x5bbe700 <col:48, col:59> col:70 'const char *__restrict'
| | `-ParmVarDecl 0x5bbe778 <line:468:5> col:19 '__va_list_tag *':'__va_list_tag *'
| |-FunctionDecl 0x5bbeb88 <line:469:1, col:54> col:18 _IO_padn '__ssize_t (_IO_FILE *, int, __ssize_t)' extern
| | |-ParmVarDecl 0x5bbe968 <col:28, col:37> col:38 '_IO_FILE *'
| | |-ParmVarDecl 0x5bbe9e8 <col:40> col:43 'int'
| | `-ParmVarDecl 0x5bbea60 <col:45> col:54 '__ssize_t':'long'
| |-FunctionDecl 0x5bbee68 <line:470:1, col:52> col:15 _IO_sgetn 'size_t (_IO_FILE *, void *, size_t)' extern
| | |-ParmVarDecl 0x5bbec50 <col:26, col:35> col:36 '_IO_FILE *'
| | |-ParmVarDecl 0x5bbecd0 <col:38, col:43> col:44 'void *'
| | `-ParmVarDecl 0x5bbed48 <col:46> col:52 'size_t':'unsigned long'
| |-FunctionDecl 0x5bbf1e8 <line:472:1, col:62> col:18 _IO_seekoff '__off64_t (_IO_FILE *, __off64_t, int, int)' extern
| | |-ParmVarDecl 0x5bbef30 <col:31, col:40> col:41 '_IO_FILE *'
| | |-ParmVarDecl 0x5bbefa8 <col:43> col:52 '__off64_t':'long'
| | |-ParmVarDecl 0x5bbf028 <col:54> col:57 'int'
| | `-ParmVarDecl 0x5bbf0a8 <col:59> col:62 'int'
| |-FunctionDecl 0x5bbf518 <line:473:1, col:57> col:18 _IO_seekpos '__off64_t (_IO_FILE *, __off64_t, int)' extern
| | |-ParmVarDecl 0x5bbf2b8 <col:31, col:40> col:41 '_IO_FILE *'
| | |-ParmVarDecl 0x5bbf330 <col:43> col:52 '__off64_t':'long'
| | `-ParmVarDecl 0x5bbf3f0 <col:54> col:57 'int'
| `-FunctionDecl 0x5bbf678 <line:475:1, col:54> col:13 _IO_free_backup_area 'void (_IO_FILE *) throw()' extern
|   `-ParmVarDecl 0x5bbf5e0 <col:35, col:44> col:45 '_IO_FILE *'
|-TypedefDecl 0x5bbf750 prev 0x5bb76a0 </usr/include/stdio.h:79:1, col:24> col:24 va_list '__gnuc_va_list':'__va_list_tag [1]'
| `-TypedefType 0x5bbd2d0 '__gnuc_va_list' sugar
|   |-Typedef 0x5bb7708 '__gnuc_va_list'
|   `-TypedefType 0x5bb7670 '__builtin_va_list' sugar
|     |-Typedef 0x5b06998 '__builtin_va_list'
|     `-ConstantArrayType 0x5b06940 '__va_list_tag [1]' 1 
|       `-RecordType 0x5acb040 '__va_list_tag'
|         `-CXXRecord 0x5acafa8 '__va_list_tag'
|-TypedefDecl 0x5bbf7e0 <line:110:1, col:19> col:19 referenced fpos_t '_G_fpos_t':'_G_fpos_t'
| `-TypedefType 0x5bbf7b0 '_G_fpos_t' sugar
|   |-Typedef 0x5bb7338 '_G_fpos_t'
|   `-ElaboratedType 0x5bb72e0 'struct _G_fpos_t' sugar
|     `-RecordType 0x5bb7150 '_G_fpos_t'
|       `-CXXRecord 0x5bb70b8 ''
|-TypedefDecl 0x5bbf870 <line:116:1, col:21> col:21 referenced fpos64_t '_G_fpos64_t':'_G_fpos64_t'
| `-TypedefType 0x5bbf840 '_G_fpos64_t' sugar
|   |-Typedef 0x5bb75f8 '_G_fpos64_t'
|   `-ElaboratedType 0x5bb75a0 'struct _G_fpos64_t' sugar
|     `-RecordType 0x5bb7440 '_G_fpos64_t'
|       `-CXXRecord 0x5bb73a8 ''
|-VarDecl 0x5bbf8f0 <line:168:1, col:25> col:25 stdin 'struct _IO_FILE *' extern
|-VarDecl 0x5bbf980 <line:169:1, col:25> col:25 stdout 'struct _IO_FILE *' extern
|-VarDecl 0x5bbfa10 <line:170:1, col:25> col:25 stderr 'struct _IO_FILE *' extern
|-FunctionDecl 0x5bbfb30 <line:178:1, col:51> col:12 remove 'int (const char *) throw()' extern
| `-ParmVarDecl 0x5bbfa90 <col:20, col:32> col:32 __filename 'const char *'
|-FunctionDecl 0x5bbfd98 <line:180:1, col:65> col:12 rename 'int (const char *, const char *) throw()' extern
| |-ParmVarDecl 0x5bbfbf0 <col:20, col:32> col:32 __old 'const char *'
| `-ParmVarDecl 0x5bbfc70 <col:39, col:51> col:51 __new 'const char *'
|-FunctionDecl 0x5bc0138 <line:185:1, line:186:34> line:185:12 renameat 'int (int, const char *, int, const char *) throw()' extern
| |-ParmVarDecl 0x5bbfe60 <col:22, col:26> col:26 __oldfd 'int'
| |-ParmVarDecl 0x5bbfee0 <col:35, col:47> col:47 __old 'const char *'
| |-ParmVarDecl 0x5bbff60 <col:54, col:58> col:58 __newfd 'int'
| `-ParmVarDecl 0x5bbffe0 <line:186:8, col:20> col:20 __new 'const char *'
|-FunctionDecl 0x5bc0348 <line:195:1, col:27> col:14 tmpfile 'FILE *()' extern
|-FunctionDecl 0x5bc0ab8 <line:205:1, col:29> col:14 tmpfile64 'FILE *()' extern
|-FunctionDecl 0x5bc0c10 <line:209:1, col:40> col:14 tmpnam 'char *(char *) throw()' extern
| `-ParmVarDecl 0x5bc0b70 <col:22, col:28> col:28 __s 'char *'
|-FunctionDecl 0x5bc0d70 <line:215:1, col:42> col:14 tmpnam_r 'char *(char *) throw()' extern
| `-ParmVarDecl 0x5bc0cd0 <col:24, col:30> col:30 __s 'char *'
|-FunctionDecl 0x5bc0fd8 <line:227:1, line:228:42> line:227:14 tempnam 'char *(const char *, const char *) throw()' extern
| |-ParmVarDecl 0x5bc0e30 <col:23, col:35> col:35 __dir 'const char *'
| |-ParmVarDecl 0x5bc0eb0 <col:42, col:54> col:54 __pfx 'const char *'
| `-RestrictAttr 0x5bc1088 <line:228:31> malloc
|-FunctionDecl 0x5bc11a0 <line:237:1, col:34> col:12 fclose 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc10d8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5bc12f0 <line:242:1, col:34> col:12 fflush 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc1258 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5bc1440 <line:252:1, col:43> col:12 fflush_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc13a8 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x5bc1588 <line:262:1, col:27> col:12 fcloseall 'int ()' extern
|-FunctionDecl 0x5bc17d8 <line:272:1, line:273:37> line:272:14 fopen 'FILE *(const char *__restrict, const char *__restrict)' extern
| |-ParmVarDecl 0x5bc1640 <col:21, col:44> col:44 __filename 'const char *__restrict'
| `-ParmVarDecl 0x5bc16c0 <line:273:7, col:30> col:30 __modes 'const char *__restrict'
|-FunctionDecl 0x5bc1b58 <line:278:1, line:280:34> line:278:14 freopen 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bc18e0 <col:23, col:46> col:46 __filename 'const char *__restrict'
| |-ParmVarDecl 0x5bc1960 <line:279:9, col:32> col:32 __modes 'const char *__restrict'
| `-ParmVarDecl 0x5bc1a30 <line:280:9, col:26> col:26 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bc1d40 <line:297:1, line:298:39> line:297:14 fopen64 'FILE *(const char *__restrict, const char *__restrict)' extern
| |-ParmVarDecl 0x5bc1c28 <col:23, col:46> col:46 __filename 'const char *__restrict'
| `-ParmVarDecl 0x5bc1ca8 <line:298:9, col:32> col:32 __modes 'const char *__restrict'
|-FunctionDecl 0x5bc1fa0 <line:299:1, line:301:29> line:299:14 freopen64 'FILE *(const char *__restrict, const char *__restrict, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bc1e08 <col:25, col:48> col:48 __filename 'const char *__restrict'
| |-ParmVarDecl 0x5bc1e88 <line:300:4, col:27> col:27 __modes 'const char *__restrict'
| `-ParmVarDecl 0x5bc1f00 <line:301:4, col:21> col:21 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bc2210 <line:306:1, col:60> col:14 fdopen 'FILE *(int, const char *) throw()' extern
| |-ParmVarDecl 0x5bc2070 <col:22, col:26> col:26 __fd 'int'
| `-ParmVarDecl 0x5bc20f0 <col:32, col:44> col:44 __modes 'const char *'
|-FunctionDecl 0x5bc2500 <line:312:1, line:314:51> line:312:14 fopencookie 'FILE *(void *__restrict, const char *__restrict, _IO_cookie_io_functions_t) throw()' extern
| |-ParmVarDecl 0x5bc22d8 <col:27, col:44> col:44 __magic_cookie 'void *__restrict'
| |-ParmVarDecl 0x5bc2358 <line:313:6, col:29> col:29 __modes 'const char *__restrict'
| `-ParmVarDecl 0x5bc23d0 <line:314:6, col:32> col:32 __io_funcs '_IO_cookie_io_functions_t':'_IO_cookie_io_functions_t'
|-FunctionDecl 0x5bc27f0 <line:319:1, line:320:10> line:319:14 fmemopen 'FILE *(void *, size_t, const char *) throw()' extern
| |-ParmVarDecl 0x5bc25d0 <col:24, col:30> col:30 __s 'void *'
| |-ParmVarDecl 0x5bc2648 <col:35, col:42> col:42 __len 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bc26c8 <col:49, col:61> col:61 __modes 'const char *'
|-FunctionDecl 0x5bc2af0 <line:325:1, col:73> col:14 open_memstream 'FILE *(char **, size_t *) throw()' extern
| |-ParmVarDecl 0x5bc28c0 <col:30, col:37> col:37 __bufloc 'char **'
| `-ParmVarDecl 0x5bc2998 <col:47, col:55> col:55 __sizeloc 'size_t *'
|-FunctionDecl 0x5bc2d50 <line:332:1, col:79> col:13 setbuf 'void (FILE *__restrict, char *__restrict) throw()' extern
| |-ParmVarDecl 0x5bc2bb0 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| `-ParmVarDecl 0x5bc2c30 <col:48, col:65> col:65 __buf 'char *__restrict'
|-FunctionDecl 0x5bc30d8 <line:336:1, line:337:39> line:336:12 setvbuf 'int (FILE *__restrict, char *__restrict, int, size_t) throw()' extern
| |-ParmVarDecl 0x5bc2e10 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| |-ParmVarDecl 0x5bc2e90 <col:48, col:65> col:65 __buf 'char *__restrict'
| |-ParmVarDecl 0x5bc2f10 <line:337:7, col:11> col:11 __modes 'int'
| `-ParmVarDecl 0x5bc2f88 <col:20, col:27> col:27 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5bc33d0 <line:343:1, line:344:32> line:343:13 setbuffer 'void (FILE *__restrict, char *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5bc31a8 <col:24, col:41> col:41 __stream 'FILE *__restrict'
| |-ParmVarDecl 0x5bc3228 <col:51, col:68> col:68 __buf 'char *__restrict'
| `-ParmVarDecl 0x5bc32a0 <line:344:10, col:17> col:17 __size 'size_t':'unsigned long'
|-FunctionDecl 0x5bc3560 <line:347:1, col:48> col:13 setlinebuf 'void (FILE *) throw()' extern
| `-ParmVarDecl 0x5bc3498 <col:25, col:31> col:31 __stream 'FILE *'
|-FunctionDecl 0x5bc37b0 <line:356:1, line:357:43> line:356:12 fprintf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| |-ParmVarDecl 0x5bc3618 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| |-ParmVarDecl 0x5bc3698 <line:357:7, col:30> col:30 __format 'const char *__restrict'
| `-FormatAttr 0x5bc3898 <line:356:12> Implicit printf 2 3
|-FunctionDecl 0x5bc3a50 <line:362:1, col:56> col:12 printf 'int (const char *__restrict, ...)' extern
| |-ParmVarDecl 0x5bc3900 <col:20, col:43> col:43 __format 'const char *__restrict'
| `-FormatAttr 0x5bc3af8 <col:12> Implicit printf 1 2
|-FunctionDecl 0x5bc3d08 <line:364:1, line:365:52> line:364:12 sprintf 'int (char *__restrict, const char *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5bc3b60 <col:21, col:38> col:38 __s 'char *__restrict'
| |-ParmVarDecl 0x5bc3be0 <line:365:7, col:30> col:30 __format 'const char *__restrict'
| `-FormatAttr 0x5bc3db8 <line:364:12> Implicit printf 2 3
|-FunctionDecl 0x5bc4000 <line:371:1, line:372:28> line:371:12 vfprintf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bc3e18 <col:22, col:39> col:39 __s 'FILE *__restrict'
| |-ParmVarDecl 0x5bc3e98 <col:44, col:67> col:67 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc3f10 <line:372:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc4100 <line:371:12> Implicit printf 2 0
|-FunctionDecl 0x5bc4300 <line:377:1, col:74> col:12 vprintf 'int (const char *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bc4168 <col:21, col:44> col:44 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc41e0 <col:54, col:69> col:69 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc43b0 <col:12> Implicit printf 1 0
|-FunctionDecl 0x5bc4648 <line:379:1, line:380:37> line:379:12 vsprintf 'int (char *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5bc4418 <col:22, col:39> col:39 __s 'char *__restrict'
| |-ParmVarDecl 0x5bc4498 <col:44, col:67> col:67 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc4510 <line:380:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc4700 <line:379:12> Implicit printf 2 0
|-FunctionDecl 0x5bc4a60 <line:386:1, line:388:61> line:386:12 snprintf 'int (char *__restrict, size_t, const char *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5bc4768 <col:22, col:39> col:39 __s 'char *__restrict'
| |-ParmVarDecl 0x5bc47e0 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bc4860 <line:387:8, col:31> col:31 __format 'const char *__restrict'
| `-FormatAttr 0x5bc4b18 <line:388:31, col:59> printf 3 4
|-FunctionDecl 0x5bc4e98 <line:390:1, line:392:61> line:390:12 vsnprintf 'int (char *__restrict, size_t, const char *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5bc4b80 <col:23, col:40> col:40 __s 'char *__restrict'
| |-ParmVarDecl 0x5bc4bf8 <col:45, col:52> col:52 __maxlen 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bc4c78 <line:391:9, col:32> col:32 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc4cf0 <col:42, col:57> col:57 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc4f58 <line:392:31, col:59> printf 3 0
|-FunctionDecl 0x5bc5238 <line:399:1, line:401:61> line:399:12 vasprintf 'int (char **__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5bc4fc0 <col:23, col:41> col:41 __ptr 'char **__restrict'
| |-ParmVarDecl 0x5bc5040 <col:48, col:71> col:71 __f 'const char *__restrict'
| |-ParmVarDecl 0x5bc50b8 <line:400:9, col:24> col:24 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc52f0 <line:401:31, col:59> printf 2 0
|-FunctionDecl 0x5bc5548 <line:402:1, line:404:61> line:402:12 __asprintf 'int (char **__restrict, const char *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5bc5358 <col:24, col:42> col:42 __ptr 'char **__restrict'
| |-ParmVarDecl 0x5bc53d8 <line:403:10, col:33> col:33 __fmt 'const char *__restrict'
| `-FormatAttr 0x5bc55f8 <line:404:31, col:59> printf 2 3
|-FunctionDecl 0x5bc57d8 <line:405:1, line:407:61> line:405:12 asprintf 'int (char **__restrict, const char *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5bc5660 <col:22, col:40> col:40 __ptr 'char **__restrict'
| |-ParmVarDecl 0x5bc56e0 <line:406:8, col:31> col:31 __fmt 'const char *__restrict'
| `-FormatAttr 0x5bc5888 <line:407:31, col:59> printf 2 3
|-FunctionDecl 0x5bc5b70 <line:412:1, line:414:52> line:412:12 vdprintf 'int (int, const char *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bc58f0 <col:22, col:26> col:26 __fd 'int'
| |-ParmVarDecl 0x5bc5970 <col:32, col:55> col:55 __fmt 'const char *__restrict'
| |-ParmVarDecl 0x5bc59e8 <line:413:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc5c28 <line:414:22, col:50> printf 2 0
|-FunctionDecl 0x5bc5e80 <line:415:1, line:416:52> line:415:12 dprintf 'int (int, const char *__restrict, ...)' extern
| |-ParmVarDecl 0x5bc5c90 <col:21, col:25> col:25 __fd 'int'
| |-ParmVarDecl 0x5bc5d10 <col:31, col:54> col:54 __fmt 'const char *__restrict'
| `-FormatAttr 0x5bc5f30 <line:416:22, col:50> printf 2 3
|-FunctionDecl 0x5bc60b0 <line:425:1, line:426:42> line:425:12 fscanf 'int (FILE *__restrict, const char *__restrict, ...)' extern
| |-ParmVarDecl 0x5bc5f90 <col:20, col:37> col:37 __stream 'FILE *__restrict'
| |-ParmVarDecl 0x5bc6010 <line:426:6, col:29> col:29 __format 'const char *__restrict'
| `-FormatAttr 0x5bc6160 <line:425:12> Implicit scanf 2 3
|-FunctionDecl 0x5bc6260 <line:431:1, col:55> col:12 scanf 'int (const char *__restrict, ...)' extern
| |-ParmVarDecl 0x5bc61c8 <col:19, col:42> col:42 __format 'const char *__restrict'
| `-FormatAttr 0x5bc6308 <col:12> Implicit scanf 1 2
|-FunctionDecl 0x5bc6518 <line:433:1, line:434:51> line:433:12 sscanf 'int (const char *__restrict, const char *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5bc6370 <col:20, col:43> col:43 __s 'const char *__restrict'
| |-ParmVarDecl 0x5bc63f0 <line:434:6, col:29> col:29 __format 'const char *__restrict'
| `-FormatAttr 0x5bc6608 <line:433:12> Implicit scanf 2 3
|-FunctionDecl 0x5bc6858 <line:471:1, line:473:51> line:471:12 vfscanf 'int (FILE *__restrict, const char *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bc6668 <col:21, col:38> col:38 __s 'FILE *__restrict'
| |-ParmVarDecl 0x5bc66e8 <col:43, col:66> col:66 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc6760 <line:472:7, col:22> col:22 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc6910 <line:473:22, col:49> scanf 2 0
|-FunctionDecl 0x5bc6b70 <line:479:1, line:480:51> line:479:12 vscanf 'int (const char *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bc69b8 <col:20, col:43> col:43 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc6a80 <col:53, col:68> col:68 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc6c20 <line:480:22, col:49> scanf 1 0
|-FunctionDecl 0x5bc6f38 <line:483:1, line:485:60> line:483:12 vsscanf 'int (const char *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5bc6cc0 <col:21, col:44> col:44 __s 'const char *__restrict'
| |-ParmVarDecl 0x5bc6d40 <line:484:7, col:30> col:30 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bc6db8 <col:40, col:55> col:55 __arg '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bc6ff0 <line:485:31, col:58> scanf 2 0
|-FunctionDecl 0x5bc7128 <line:531:1, col:33> col:12 fgetc 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc7090 <col:19, col:25> col:25 __stream 'FILE *'
|-FunctionDecl 0x5bc7278 <line:532:1, col:32> col:12 getc 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc71e0 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x5bc73c0 <line:538:1, col:25> col:12 getchar 'int ()' extern
|-FunctionDecl 0x5bc7508 <line:550:1, col:41> col:12 getc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc7470 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5bc7650 <line:551:1, col:34> col:12 getchar_unlocked 'int ()' extern
|-FunctionDecl 0x5bc7798 <line:561:1, col:42> col:12 fgetc_unlocked 'int (FILE *)' extern
| `-ParmVarDecl 0x5bc7700 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x5bc79b0 <line:573:1, col:42> col:12 fputc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5bc7858 <col:19, col:23> col:23 __c 'int'
| `-ParmVarDecl 0x5bc78d0 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x5b53978 <line:574:1, col:41> col:12 putc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5b53860 <col:18, col:22> col:22 __c 'int'
| `-ParmVarDecl 0x5b538d8 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5b53ad8 <line:580:1, col:28> col:12 putchar 'int (int)' extern
| `-ParmVarDecl 0x5b53a40 <col:21, col:25> col:25 __c 'int'
|-FunctionDecl 0x5b53cb0 <line:594:1, col:51> col:12 fputc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5b53b98 <col:28, col:32> col:32 __c 'int'
| `-ParmVarDecl 0x5b53c10 <col:37, col:43> col:43 __stream 'FILE *'
|-FunctionDecl 0x5b53e90 <line:602:1, col:50> col:12 putc_unlocked 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5b53d78 <col:27, col:31> col:31 __c 'int'
| `-ParmVarDecl 0x5b53df0 <col:36, col:42> col:42 __stream 'FILE *'
|-FunctionDecl 0x5b53ff0 <line:603:1, col:37> col:12 putchar_unlocked 'int (int)' extern
| `-ParmVarDecl 0x5b53f58 <col:30, col:34> col:34 __c 'int'
|-FunctionDecl 0x5b54140 <line:610:1, col:32> col:12 getw 'int (FILE *)' extern
| `-ParmVarDecl 0x5b540a8 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x5b54318 <line:613:1, col:41> col:12 putw 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5b54200 <col:18, col:22> col:22 __w 'int'
| `-ParmVarDecl 0x5b54278 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5b54600 <line:622:1, col:77> col:14 fgets 'char *(char *__restrict, int, FILE *__restrict)' extern
| |-ParmVarDecl 0x5b543e0 <col:21, col:38> col:38 __s 'char *__restrict'
| |-ParmVarDecl 0x5b54460 <col:43, col:47> col:47 __n 'int'
| `-ParmVarDecl 0x5b544d8 <col:52, col:69> col:69 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcb7f0 <line:649:1, line:650:34> line:649:14 fgets_unlocked 'char *(char *__restrict, int, FILE *__restrict)' extern
| |-ParmVarDecl 0x5b546d0 <col:30, col:47> col:47 __s 'char *__restrict'
| |-ParmVarDecl 0x5b54750 <col:52, col:56> col:56 __n 'int'
| `-ParmVarDecl 0x5b547c8 <line:650:9, col:26> col:26 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcbb78 <line:665:1, line:667:36> line:665:18 __getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcb8c0 <col:30, col:48> col:48 __lineptr 'char **__restrict'
| |-ParmVarDecl 0x5bcb938 <line:666:11, col:30> col:30 __n 'size_t *__restrict'
| |-ParmVarDecl 0x5bcb9b8 <col:35, col:39> col:39 __delimiter 'int'
| `-ParmVarDecl 0x5bcba30 <line:667:11, col:28> col:28 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcbe68 <line:668:1, line:670:34> line:668:18 getdelim '__ssize_t (char **__restrict, size_t *__restrict, int, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcbc50 <col:28, col:46> col:46 __lineptr 'char **__restrict'
| |-ParmVarDecl 0x5bcbcc8 <line:669:9, col:28> col:28 __n 'size_t *__restrict'
| |-ParmVarDecl 0x5bcbd48 <col:33, col:37> col:37 __delimiter 'int'
| `-ParmVarDecl 0x5bcbdc0 <line:670:9, col:26> col:26 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcc158 <line:678:1, line:680:33> line:678:18 getline '__ssize_t (char **__restrict, size_t *__restrict, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcbf40 <col:27, col:45> col:45 __lineptr 'char **__restrict'
| |-ParmVarDecl 0x5bcbfb8 <line:679:8, col:27> col:27 __n 'size_t *__restrict'
| `-ParmVarDecl 0x5bcc030 <line:680:8, col:25> col:25 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcc3c0 <line:689:1, col:72> col:12 fputs 'int (const char *__restrict, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcc228 <col:19, col:42> col:42 __s 'const char *__restrict'
| `-ParmVarDecl 0x5bcc2a0 <col:47, col:64> col:64 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcc520 <line:695:1, col:33> col:12 puts 'int (const char *)' extern
| `-ParmVarDecl 0x5bcc488 <col:18, col:30> col:30 __s 'const char *'
|-FunctionDecl 0x5bcc6f8 <line:702:1, col:43> col:12 ungetc 'int (int, FILE *)' extern
| |-ParmVarDecl 0x5bcc5e0 <col:20, col:24> col:24 __c 'int'
| `-ParmVarDecl 0x5bcc658 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x5bcca88 <line:709:1, line:710:45> line:709:15 fread 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcc7d8 <col:22, col:39> col:39 __ptr 'void *__restrict'
| |-ParmVarDecl 0x5bcc850 <col:46, col:53> col:53 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bcc8c8 <line:710:8, col:15> col:15 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bcc940 <col:20, col:37> col:37 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcce58 <line:715:1, line:716:41> line:715:15 fwrite 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bccbb0 <col:23, col:46> col:46 __ptr 'const void *__restrict'
| |-ParmVarDecl 0x5bccc28 <col:53, col:60> col:60 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bccca0 <line:716:9, col:16> col:16 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bccd18 <col:21, col:38> col:38 __s 'FILE *__restrict'
|-FunctionDecl 0x5bcd098 <line:726:1, line:727:32> line:726:12 fputs_unlocked 'int (const char *__restrict, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bccf80 <col:28, col:51> col:51 __s 'const char *__restrict'
| `-ParmVarDecl 0x5bccff8 <line:727:7, col:24> col:24 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcd370 <line:737:1, line:738:47> line:737:15 fread_unlocked 'size_t (void *__restrict, size_t, size_t, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcd160 <col:31, col:48> col:48 __ptr 'void *__restrict'
| |-ParmVarDecl 0x5bcd1d8 <col:55, col:62> col:62 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bcd250 <line:738:10, col:17> col:17 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bcd2c8 <col:22, col:39> col:39 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcd658 <line:739:1, line:740:48> line:739:15 fwrite_unlocked 'size_t (const void *__restrict, size_t, size_t, FILE *__restrict)' extern
| |-ParmVarDecl 0x5bcd448 <col:32, col:55> col:55 __ptr 'const void *__restrict'
| |-ParmVarDecl 0x5bcd4c0 <col:62, col:69> col:69 __size 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bcd538 <line:740:11, col:18> col:18 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bcd5b0 <col:23, col:40> col:40 __stream 'FILE *__restrict'
|-FunctionDecl 0x5bcd980 <line:749:1, col:63> col:12 fseek 'int (FILE *, long, int)' extern
| |-ParmVarDecl 0x5bcd728 <col:19, col:25> col:25 __stream 'FILE *'
| |-ParmVarDecl 0x5bcd7d0 <col:35, col:44> col:44 __off 'long'
| `-ParmVarDecl 0x5bcd850 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x5bcdb40 <line:754:1, col:38> col:17 ftell 'long (FILE *)' extern
| `-ParmVarDecl 0x5bcda48 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x5bcdcb8 <line:759:1, col:35> col:13 rewind 'void (FILE *)' extern
| `-ParmVarDecl 0x5bcdbf8 <col:21, col:27> col:27 __stream 'FILE *'
|-FunctionDecl 0x5bcdf50 <line:773:1, col:63> col:12 fseeko 'int (FILE *, __off_t, int)' extern
| |-ParmVarDecl 0x5bcdd70 <col:20, col:26> col:26 __stream 'FILE *'
| |-ParmVarDecl 0x5bcdde8 <col:36, col:44> col:44 __off '__off_t':'long'
| `-ParmVarDecl 0x5bcde68 <col:51, col:55> col:55 __whence 'int'
|-FunctionDecl 0x5bce0d8 <line:778:1, col:38> col:16 ftello '__off_t (FILE *)' extern
| `-ParmVarDecl 0x5bce018 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x5bce3a0 <line:798:1, col:72> col:12 fgetpos 'int (FILE *__restrict, fpos_t *__restrict)' extern
| |-ParmVarDecl 0x5bce190 <col:21, col:38> col:38 __stream 'FILE *__restrict'
| `-ParmVarDecl 0x5bce288 <col:48, col:67> col:67 __pos 'fpos_t *__restrict'
|-FunctionDecl 0x5bce650 <line:803:1, col:56> col:12 fsetpos 'int (FILE *, const fpos_t *)' extern
| |-ParmVarDecl 0x5bce460 <col:21, col:27> col:27 __stream 'FILE *'
| `-ParmVarDecl 0x5bce538 <col:37, col:51> col:51 __pos 'const fpos_t *'
|-FunctionDecl 0x5b99b60 <line:818:1, col:67> col:12 fseeko64 'int (FILE *, __off64_t, int)' extern
| |-ParmVarDecl 0x5bce710 <col:22, col:28> col:28 __stream 'FILE *'
| |-ParmVarDecl 0x5b999f0 <col:38, col:48> col:48 __off '__off64_t':'long'
| `-ParmVarDecl 0x5b99a70 <col:55, col:59> col:59 __whence 'int'
|-FunctionDecl 0x5b99ce8 <line:819:1, col:42> col:18 ftello64 '__off64_t (FILE *)' extern
| `-ParmVarDecl 0x5b99c28 <col:28, col:34> col:34 __stream 'FILE *'
|-FunctionDecl 0x5b99fb0 <line:820:1, col:76> col:12 fgetpos64 'int (FILE *__restrict, fpos64_t *__restrict)' extern
| |-ParmVarDecl 0x5b99da0 <col:23, col:40> col:40 __stream 'FILE *__restrict'
| `-ParmVarDecl 0x5b99e98 <col:50, col:71> col:71 __pos 'fpos64_t *__restrict'
|-FunctionDecl 0x5b9a260 <line:821:1, col:60> col:12 fsetpos64 'int (FILE *, const fpos64_t *)' extern
| |-ParmVarDecl 0x5b9a070 <col:23, col:29> col:29 __stream 'FILE *'
| `-ParmVarDecl 0x5b9a148 <col:39, col:55> col:55 __pos 'const fpos64_t *'
|-FunctionDecl 0x5b9a3b8 <line:826:1, col:46> col:13 clearerr 'void (FILE *) throw()' extern
| `-ParmVarDecl 0x5b9a320 <col:23, col:29> col:29 __stream 'FILE *'
|-FunctionDecl 0x5b9a548 <line:828:1, col:41> col:12 feof 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5b9a470 <col:18, col:24> col:24 __stream 'FILE *'
|-FunctionDecl 0x5b9a6a0 <line:830:1, col:43> col:12 ferror 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5b9a600 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5b9a7f0 <line:835:1, col:55> col:13 clearerr_unlocked 'void (FILE *) throw()' extern
| `-ParmVarDecl 0x5b9a758 <col:32, col:38> col:38 __stream 'FILE *'
|-FunctionDecl 0x5b9a948 <line:836:1, col:50> col:12 feof_unlocked 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5b9a8a8 <col:27, col:33> col:33 __stream 'FILE *'
|-FunctionDecl 0x5bd28a0 <line:837:1, col:52> col:12 ferror_unlocked 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5bd2800 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x5bd29f0 <line:846:1, col:36> col:13 perror 'void (const char *)' extern
| `-ParmVarDecl 0x5bd2960 <col:21, col:33> col:33 __s 'const char *'
|-VarDecl 0x5bd2ab0 </usr/include/bits/sys_errlist.h:26:1, col:12> col:12 sys_nerr 'int' extern
|-VarDecl 0x5bd2ba0 <line:27:1, col:38> col:26 sys_errlist 'const char *const []' extern
|-VarDecl 0x5bd2c20 <line:30:1, col:12> col:12 _sys_nerr 'int' extern
|-VarDecl 0x5bd2cb0 <line:31:1, col:39> col:26 _sys_errlist 'const char *const []' extern
|-FunctionDecl 0x5bd2dc8 </usr/include/stdio.h:858:1, col:43> col:12 fileno 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5bd2d28 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5bd2f20 <line:863:1, col:52> col:12 fileno_unlocked 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5bd2e80 <col:29, col:35> col:35 __stream 'FILE *'
|-FunctionDecl 0x5bd30f8 <line:873:1, col:63> col:14 popen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x5bd2fe0 <col:21, col:33> col:33 __command 'const char *'
| `-ParmVarDecl 0x5bd3060 <col:44, col:56> col:56 __modes 'const char *'
|-FunctionDecl 0x5bd3250 <line:879:1, col:34> col:12 pclose 'int (FILE *)' extern
| `-ParmVarDecl 0x5bd31b8 <col:20, col:26> col:26 __stream 'FILE *'
|-FunctionDecl 0x5bd33b0 <line:885:1, col:41> col:14 ctermid 'char *(char *) throw()' extern
| `-ParmVarDecl 0x5bd3310 <col:23, col:29> col:29 __s 'char *'
|-FunctionDecl 0x5bd3508 <line:891:1, col:32> col:14 cuserid 'char *(char *)' extern
| `-ParmVarDecl 0x5bd3470 <col:23, col:29> col:29 __s 'char *'
|-CXXRecordDecl 0x5bd35b0 <line:896:1, col:8> col:8 struct obstack
|-FunctionDecl 0x5bd3978 <line:899:1, line:901:61> line:899:12 obstack_printf 'int (struct obstack *__restrict, const char *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5bd3710 <col:28, col:55> col:55 __obstack 'struct obstack *__restrict'
| |-ParmVarDecl 0x5bd3800 <line:900:7, col:30> col:30 __format 'const char *__restrict'
| `-FormatAttr 0x5bd3a28 <line:901:31, col:59> printf 2 3
|-FunctionDecl 0x5bd3d18 <line:902:1, line:905:61> line:902:12 obstack_vprintf 'int (struct obstack *__restrict, const char *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5bd3aa0 <col:29, col:56> col:56 __obstack 'struct obstack *__restrict'
| |-ParmVarDecl 0x5bd3b20 <line:903:8, col:31> col:31 __format 'const char *__restrict'
| |-ParmVarDecl 0x5bd3b98 <line:904:8, col:23> col:23 __args '__va_list_tag *':'__va_list_tag *'
| `-FormatAttr 0x5bd3dd0 <line:905:31, col:59> printf 2 0
|-FunctionDecl 0x5bd3ec8 <line:913:1, col:47> col:13 flockfile 'void (FILE *) throw()' extern
| `-ParmVarDecl 0x5bd3e30 <col:24, col:30> col:30 __stream 'FILE *'
|-FunctionDecl 0x5bd4020 <line:917:1, col:49> col:12 ftrylockfile 'int (FILE *) throw()' extern
| `-ParmVarDecl 0x5bd3f80 <col:26, col:32> col:32 __stream 'FILE *'
`-FunctionDecl 0x5bd4170 <line:920:1, col:49> col:13 funlockfile 'void (FILE *) throw()' extern
  `-ParmVarDecl 0x5bd40d8 <col:26, col:32> col:32 __stream 'FILE *'
LinkageSpecDecl 0x5bd4238 </usr/include/assert.h:65:1, line:84:1> line:65:8 C
|-FunctionDecl 0x5bd4610 <line:68:1, line:70:44> line:68:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' extern
| |-ParmVarDecl 0x5bd42a0 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5bd4320 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5bd43a0 <line:69:7, col:20> col:20 __line 'unsigned int'
| `-ParmVarDecl 0x5bd4420 <col:28, col:40> col:40 __function 'const char *'
|-FunctionDecl 0x5bd4a80 <line:73:1, line:75:44> line:73:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' extern
| |-ParmVarDecl 0x5bd46e8 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5bd4768 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5bd4810 <line:74:7, col:20> col:20 __line 'unsigned int'
| `-ParmVarDecl 0x5bd4890 <col:28, col:40> col:40 __function 'const char *'
`-FunctionDecl 0x5bd4e00 <line:80:1, line:81:44> line:80:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn)) throw()' extern
  |-ParmVarDecl 0x5bd4b58 <col:23, col:35> col:35 __assertion 'const char *'
  |-ParmVarDecl 0x5bd4bd8 <col:48, col:60> col:60 __file 'const char *'
  `-ParmVarDecl 0x5bd4c58 <col:68, col:72> col:72 __line 'int'
NamespaceDecl 0x5bd4ed8 prev 0x5b96e28 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/memoryfwd.h:50:1, line:76:1> line:50:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5bd4f48 <col:31, col:56> Default
|-ClassTemplateDecl 0x5bd50d0 <line:63:3, line:64:11> col:11 allocator
| |-TemplateTypeParmDecl 0x5bd4f88 <line:63:12> col:12 typename depth 0 index 0
| |-CXXRecordDecl 0x5bd5040 <line:64:5, col:11> col:11 class allocator
| `-ClassTemplateSpecialization 0x5bd52d8 'allocator'
|-ClassTemplateSpecializationDecl 0x5bd52d8 <line:66:3, line:67:25> col:11 class allocator
| `-TemplateArgument type 'void'
`-ClassTemplateDecl 0x5bd5658 <line:70:3, line:71:12> col:12 uses_allocator
  |-TemplateTypeParmDecl 0x5bd5490 <line:70:12> col:12 typename depth 0 index 0
  |-TemplateTypeParmDecl 0x5bd5508 <col:22> col:22 typename depth 0 index 1
  `-CXXRecordDecl 0x5bd55c8 <line:71:5, col:12> col:12 struct uses_allocator
NamespaceDecl 0x5bd58c8 prev 0x5bd4ed8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stringfwd.h:42:1, line:95:1> line:42:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5bd5938 <col:31, col:56> Default
|-ClassTemplateDecl 0x5bd5a90 <line:52:3, line:53:12> col:12 char_traits
| |-TemplateTypeParmDecl 0x5bd5978 <line:52:12, col:18> col:18 class depth 0 index 0 _CharT
| |-CXXRecordDecl 0x5bd5a00 <line:53:5, col:12> col:12 struct char_traits
| |-ClassTemplateSpecialization 0x5bd5c98 'char_traits'
| |-ClassTemplateSpecialization 0x5bd5e70 'char_traits'
| |-ClassTemplateSpecialization 0x5bd6040 'char_traits'
| `-ClassTemplateSpecialization 0x5bd6210 'char_traits'
|-ClassTemplateSpecializationDecl 0x5bd5c98 <line:55:3, col:37> col:21 struct char_traits
| `-TemplateArgument type 'char'
|-ClassTemplateSpecializationDecl 0x5bd5e70 <line:58:3, col:40> col:21 struct char_traits
| `-TemplateArgument type 'wchar_t'
|-ClassTemplateSpecializationDecl 0x5bd6040 <line:63:3, col:41> col:21 struct char_traits
| `-TemplateArgument type 'char16_t'
|-ClassTemplateSpecializationDecl 0x5bd6210 <line:64:3, col:41> col:21 struct char_traits
| `-TemplateArgument type 'char32_t'
|-ClassTemplateDecl 0x5bd6780 <line:69:3, line:71:11> col:11 basic_string
| |-TemplateTypeParmDecl 0x5bd63c0 <line:69:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5bd64f0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-TemplateTypeParmDecl 0x5bd6620 <line:70:12, col:46> col:21 typename depth 0 index 2 _Alloc
| | `-TemplateArgument type 'allocator<_CharT>'
| |-CXXRecordDecl 0x5bd66f0 <line:71:5, col:11> col:11 class basic_string
| |-ClassTemplateSpecializationDecl 0x5bd6c70 <line:69:3, line:71:11> col:11 class basic_string
| | |-TemplateArgument type 'char'
| | |-TemplateArgument type 'std::char_traits<char>'
| | `-TemplateArgument type 'std::allocator<char>'
| |-ClassTemplateSpecializationDecl 0x5bd70e0 <line:69:3, line:71:11> col:11 class basic_string
| | |-TemplateArgument type 'wchar_t'
| | |-TemplateArgument type 'std::char_traits<wchar_t>'
| | `-TemplateArgument type 'std::allocator<wchar_t>'
| |-ClassTemplateSpecializationDecl 0x5bd7550 <line:69:3, line:71:11> col:11 class basic_string
| | |-TemplateArgument type 'char16_t'
| | |-TemplateArgument type 'std::char_traits<char16_t>'
| | `-TemplateArgument type 'std::allocator<char16_t>'
| `-ClassTemplateSpecializationDecl 0x5bd8200 <line:69:3, line:71:11> col:11 class basic_string
|   |-TemplateArgument type 'char32_t'
|   |-TemplateArgument type 'std::char_traits<char32_t>'
|   `-TemplateArgument type 'std::allocator<char32_t>'
|-TypedefDecl 0x5bd6e40 <line:74:3, col:30> col:30 string 'basic_string<char>':'std::basic_string<char, std::char_traits<char>, std::allocator<char> >'
| `-TemplateSpecializationType 0x5bd6da0 'basic_string<char>' sugar basic_string
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5bd6d80 'std::basic_string<char, std::char_traits<char>, std::allocator<char> >'
|     `-ClassTemplateSpecialization 0x5bd6c70 'basic_string'
|-TypedefDecl 0x5bd72b0 <line:78:3, col:33> col:33 wstring 'basic_string<wchar_t>':'std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| `-TemplateSpecializationType 0x5bd7210 'basic_string<wchar_t>' sugar basic_string
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5bd71f0 'std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5bd70e0 'basic_string'
|-TypedefDecl 0x5bd7720 <line:84:3, col:34> col:34 u16string 'basic_string<char16_t>':'std::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
| `-TemplateSpecializationType 0x5bd7680 'basic_string<char16_t>' sugar basic_string
|   |-TemplateArgument type 'char16_t'
|   `-RecordType 0x5bd7660 'std::basic_string<char16_t, std::char_traits<char16_t>, std::allocator<char16_t> >'
|     `-ClassTemplateSpecialization 0x5bd7550 'basic_string'
`-TypedefDecl 0x5bd83d0 <line:87:3, col:34> col:34 u32string 'basic_string<char32_t>':'std::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
  `-TemplateSpecializationType 0x5bd8330 'basic_string<char32_t>' sugar basic_string
    |-TemplateArgument type 'char32_t'
    `-RecordType 0x5bd8310 'std::basic_string<char32_t, std::char_traits<char32_t>, std::allocator<char32_t> >'
      `-ClassTemplateSpecialization 0x5bd8200 'basic_string'
TypedefDecl 0x5bd8440 </home/ts20/share/llvm9/llvm-project/build/lib/clang/9.0.0/include/stddef.h:116:1, col:22> col:22 wint_t 'unsigned int'
`-BuiltinType 0x5aca3a0 'unsigned int'
TypedefDecl 0x5bd84a8 </usr/include/wchar.h:106:1, col:21> col:21 mbstate_t '__mbstate_t':'__mbstate_t'
`-TypedefType 0x5bb7240 '__mbstate_t' sugar
  |-Typedef 0x5bb7048 '__mbstate_t'
  `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
    `-RecordType 0x5bb6be0 '__mbstate_t'
      `-CXXRecord 0x5bb6b50 ''
LinkageSpecDecl 0x5bd8520 </usr/include/wchar.h:132:1, line:891:1> line:132:8 C
|-CXXRecordDecl 0x5bd8570 <line:137:1, col:8> col:8 struct tm
|-FunctionDecl 0x5bd87d8 <line:147:1, line:148:44> line:147:17 wcscpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5bd8638 <col:25, col:45> col:45 __dest 'wchar_t *__restrict'
| `-ParmVarDecl 0x5bd86b8 <line:148:4, col:30> col:30 __src 'const wchar_t *__restrict'
|-FunctionDecl 0x5bd8ac8 <line:150:1, line:152:13> line:150:17 wcsncpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5bd88a0 <col:26, col:46> col:46 __dest 'wchar_t *__restrict'
| |-ParmVarDecl 0x5bd8920 <line:151:5, col:31> col:31 __src 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bd8998 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5bd8cc0 <line:155:1, line:156:44> line:155:17 wcscat 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5bd8b98 <col:25, col:45> col:45 __dest 'wchar_t *__restrict'
| `-ParmVarDecl 0x5bd8c18 <line:156:4, col:30> col:30 __src 'const wchar_t *__restrict'
|-FunctionDecl 0x5bd8f30 <line:158:1, line:160:13> line:158:17 wcsncat 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5bd8d88 <col:26, col:46> col:46 __dest 'wchar_t *__restrict'
| |-ParmVarDecl 0x5bd8e08 <line:159:5, col:31> col:31 __src 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bd8e80 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5bda218 <line:163:1, line:164:40> line:163:12 wcscmp 'int (const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5bda070 <col:20, col:35> col:35 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5bda0f0 <col:41, col:56> col:56 __s2 'const wchar_t *'
| `-PureAttr 0x5bda2c8 <line:164:31>
|-FunctionDecl 0x5bda548 <line:166:1, line:167:40> line:166:12 wcsncmp 'int (const wchar_t *, const wchar_t *, size_t) throw()' extern
| |-ParmVarDecl 0x5bda320 <col:21, col:36> col:36 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5bda3a0 <col:42, col:57> col:57 __s2 'const wchar_t *'
| |-ParmVarDecl 0x5bda418 <col:63, col:70> col:70 __n 'size_t':'unsigned long'
| `-PureAttr 0x5bda600 <line:167:31>
|-FunctionDecl 0x5bda780 <line:172:1, col:73> col:12 wcscasecmp 'int (const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5bda658 <col:24, col:39> col:39 __s1 'const wchar_t *'
| `-ParmVarDecl 0x5bda6d8 <col:45, col:60> col:60 __s2 'const wchar_t *'
|-FunctionDecl 0x5bda9f0 <line:175:1, line:176:23> line:175:12 wcsncasecmp 'int (const wchar_t *, const wchar_t *, size_t) throw()' extern
| |-ParmVarDecl 0x5bda848 <col:25, col:40> col:40 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5bda8c8 <col:46, col:61> col:61 __s2 'const wchar_t *'
| `-ParmVarDecl 0x5bda940 <line:176:4, col:11> col:11 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5bdace8 <line:182:1, line:183:30> line:182:12 wcscasecmp_l 'int (const wchar_t *, const wchar_t *, __locale_t) throw()' extern
| |-ParmVarDecl 0x5bdaac0 <col:26, col:41> col:41 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5bdab40 <col:47, col:62> col:62 __s2 'const wchar_t *'
| `-ParmVarDecl 0x5bdabb8 <line:183:5, col:16> col:16 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba1a90 <line:185:1, line:186:43> line:185:12 wcsncasecmp_l 'int (const wchar_t *, const wchar_t *, size_t, __locale_t) throw()' extern
| |-ParmVarDecl 0x5bdadb8 <col:27, col:42> col:42 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5bdae38 <col:48, col:63> col:63 __s2 'const wchar_t *'
| |-ParmVarDecl 0x5bdaeb0 <line:186:6, col:13> col:13 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5bdaf28 <col:18, col:29> col:29 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba1c90 <line:192:1, col:70> col:12 wcscoll 'int (const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5ba1b68 <col:21, col:36> col:36 __s1 'const wchar_t *'
| `-ParmVarDecl 0x5ba1be8 <col:42, col:57> col:57 __s2 'const wchar_t *'
|-FunctionDecl 0x5ba1f80 <line:196:1, line:197:61> line:196:15 wcsxfrm 'size_t (wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5ba1d58 <col:24, col:44> col:44 __s1 'wchar_t *__restrict'
| |-ParmVarDecl 0x5ba1dd8 <line:197:10, col:36> col:36 __s2 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5ba1e50 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5ba21f8 <line:206:1, line:207:34> line:206:12 wcscoll_l 'int (const wchar_t *, const wchar_t *, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba2050 <col:23, col:38> col:38 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5ba20d0 <col:44, col:59> col:59 __s2 'const wchar_t *'
| `-ParmVarDecl 0x5ba2148 <line:207:9, col:20> col:20 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba2580 <line:212:1, line:213:42> line:212:15 wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba22c8 <col:26, col:35> col:35 __s1 'wchar_t *'
| |-ParmVarDecl 0x5ba2348 <col:41, col:56> col:56 __s2 'const wchar_t *'
| |-ParmVarDecl 0x5ba23c0 <line:213:5, col:12> col:12 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5ba2438 <col:17, col:28> col:28 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba2758 <line:216:1, col:81> col:17 wcsdup 'wchar_t *(const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5ba2658 <col:25, col:40> col:40 __s 'const wchar_t *'
| `-RestrictAttr 0x5ba2800 <col:70> malloc
|-FunctionDecl 0x5bdf090 <line:227:1, line:228:40> line:227:17 wcschr 'wchar_t *(const wchar_t *, wchar_t) throw()' extern
| |-ParmVarDecl 0x5ba2858 <col:25, col:40> col:40 __wcs 'const wchar_t *'
| |-ParmVarDecl 0x5ba28d0 <col:47, col:55> col:55 __wc 'wchar_t'
| `-PureAttr 0x5bdf140 <line:228:31>
|-FunctionDecl 0x5bdf2b8 <line:237:1, line:238:40> line:237:17 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) throw()' extern
| |-ParmVarDecl 0x5bdf198 <col:26, col:41> col:41 __wcs 'const wchar_t *'
| |-ParmVarDecl 0x5bdf210 <col:48, col:56> col:56 __wc 'wchar_t'
| `-PureAttr 0x5bdf368 <line:238:31>
|-FunctionDecl 0x5bdf4e0 <line:245:1, line:246:40> line:245:17 wcschrnul 'wchar_t *(const wchar_t *, wchar_t) throw()' extern
| |-ParmVarDecl 0x5bdf3c0 <col:28, col:43> col:43 __s 'const wchar_t *'
| |-ParmVarDecl 0x5bdf438 <col:48, col:56> col:56 __wc 'wchar_t'
| `-PureAttr 0x5bdf590 <line:246:31>
|-FunctionDecl 0x5bdf780 <line:252:1, line:253:40> line:252:15 wcscspn 'size_t (const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5bdf5e8 <col:24, col:39> col:39 __wcs 'const wchar_t *'
| |-ParmVarDecl 0x5bdf668 <col:46, col:61> col:61 __reject 'const wchar_t *'
| `-PureAttr 0x5bdf830 <line:253:31>
|-FunctionDecl 0x5bdf9a8 <line:256:1, line:257:40> line:256:15 wcsspn 'size_t (const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5bdf888 <col:23, col:38> col:38 __wcs 'const wchar_t *'
| |-ParmVarDecl 0x5bdf908 <col:45, col:60> col:60 __accept 'const wchar_t *'
| `-PureAttr 0x5bdfa58 <line:257:31>
|-FunctionDecl 0x5bdfc58 <line:266:1, line:267:40> line:266:17 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5bdfab0 <col:26, col:41> col:41 __wcs 'const wchar_t *'
| |-ParmVarDecl 0x5bdfb30 <col:48, col:63> col:63 __accept 'const wchar_t *'
| `-PureAttr 0x5bdfd08 <line:267:31>
|-FunctionDecl 0x5bdfe88 <line:277:1, line:278:40> line:277:17 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5bdfd60 <col:25, col:40> col:40 __haystack 'const wchar_t *'
| |-ParmVarDecl 0x5bdfde0 <col:52, col:67> col:67 __needle 'const wchar_t *'
| `-PureAttr 0x5bdff38 <line:278:31>
|-FunctionDecl 0x5be0218 <line:282:1, line:284:39> line:282:17 wcstok 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| |-ParmVarDecl 0x5bdff90 <col:25, col:45> col:45 __s 'wchar_t *__restrict'
| |-ParmVarDecl 0x5be0010 <line:283:4, col:30> col:30 __delim 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5be00e0 <line:284:4, col:25> col:25 __ptr 'wchar_t **__restrict'
|-FunctionDecl 0x5be03e0 <line:287:1, col:77> col:15 wcslen 'size_t (const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5be02e8 <col:23, col:38> col:38 __s 'const wchar_t *'
| `-PureAttr 0x5be0488 <col:68>
|-FunctionDecl 0x5be0608 <line:299:1, line:300:40> line:299:17 wcswcs 'wchar_t *(const wchar_t *, const wchar_t *) throw()' extern
| |-ParmVarDecl 0x5be04e0 <col:25, col:40> col:40 __haystack 'const wchar_t *'
| |-ParmVarDecl 0x5be0560 <col:52, col:67> col:67 __needle 'const wchar_t *'
| `-PureAttr 0x5be06b8 <line:300:31>
|-FunctionDecl 0x5be08a0 <line:306:1, line:307:40> line:306:15 wcsnlen 'size_t (const wchar_t *, size_t) throw()' extern
| |-ParmVarDecl 0x5be0710 <col:24, col:39> col:39 __s 'const wchar_t *'
| |-ParmVarDecl 0x5be0788 <col:44, col:51> col:51 __maxlen 'size_t':'unsigned long'
| `-PureAttr 0x5be0950 <line:307:31>
|-FunctionDecl 0x5be0bc8 <line:320:1, line:321:40> line:320:17 wmemchr 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' extern
| |-ParmVarDecl 0x5be09a8 <col:26, col:41> col:41 __s 'const wchar_t *'
| |-ParmVarDecl 0x5be0a20 <col:46, col:54> col:54 __c 'wchar_t'
| |-ParmVarDecl 0x5be0a98 <col:59, col:66> col:66 __n 'size_t':'unsigned long'
| `-PureAttr 0x5be0c80 <line:321:31>
|-FunctionDecl 0x5be0e80 <line:325:1, line:326:40> line:325:12 wmemcmp 'int (const wchar_t *, const wchar_t *, size_t) throw()' extern
| |-ParmVarDecl 0x5be0cd8 <col:21, col:36> col:36 __s1 'const wchar_t *'
| |-ParmVarDecl 0x5be0d58 <col:42, col:57> col:57 __s2 'const wchar_t *'
| |-ParmVarDecl 0x5be0dd0 <col:63, col:70> col:70 __n 'size_t':'unsigned long'
| `-PureAttr 0x5be0f38 <line:326:31>
|-FunctionDecl 0x5be1160 <line:329:1, line:330:56> line:329:17 wmemcpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5be0f90 <col:26, col:46> col:46 __s1 'wchar_t *__restrict'
| |-ParmVarDecl 0x5be1010 <line:330:5, col:31> col:31 __s2 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5be10b0 <col:37, col:44> col:44 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5be1418 <line:334:1, line:335:13> line:334:17 wmemmove 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' extern
| |-ParmVarDecl 0x5be1230 <col:27, col:36> col:36 __s1 'wchar_t *'
| |-ParmVarDecl 0x5be12b0 <col:42, col:57> col:57 __s2 'const wchar_t *'
| `-ParmVarDecl 0x5be1328 <col:63, col:70> col:70 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5be1708 <line:338:1, col:72> col:17 wmemset 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' extern
| |-ParmVarDecl 0x5be14e8 <col:26, col:35> col:35 __s 'wchar_t *'
| |-ParmVarDecl 0x5be1560 <col:40, col:48> col:48 __c 'wchar_t'
| `-ParmVarDecl 0x5be15d8 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5be1980 <line:344:1, line:346:13> line:344:17 wmempcpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5be17d8 <col:27, col:47> col:47 __s1 'wchar_t *__restrict'
| |-ParmVarDecl 0x5be1858 <line:345:6, col:32> col:32 __s2 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5be18d0 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5be1b70 <line:353:1, col:38> col:15 btowc 'wint_t (int) throw()' extern
| `-ParmVarDecl 0x5be1a78 <col:22, col:26> col:26 __c 'int'
|-FunctionDecl 0x5be1d28 <line:357:1, col:38> col:12 wctob 'int (wint_t) throw()' extern
| `-ParmVarDecl 0x5be1c28 <col:19, col:26> col:26 __c 'wint_t':'unsigned int'
|-FunctionDecl 0x5be1f58 <line:361:1, col:78> col:12 mbsinit 'int (const mbstate_t *) throw()' extern
| |-ParmVarDecl 0x5be1e58 <col:21, col:38> col:38 __ps 'const mbstate_t *'
| `-PureAttr 0x5be2000 <col:69>
|-FunctionDecl 0x5be23d0 <line:365:1, line:367:44> line:365:15 mbrtowc 'size_t (wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be20c0 <col:24, col:44> col:44 __pwc 'wchar_t *__restrict'
| |-ParmVarDecl 0x5be2140 <line:366:10, col:33> col:33 __s 'const char *__restrict'
| |-ParmVarDecl 0x5be21b8 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be2288 <line:367:10, col:32> col:32 __p 'mbstate_t *__restrict'
|-FunctionDecl 0x5be26c0 <line:370:1, line:371:45> line:370:15 wcrtomb 'size_t (char *__restrict, wchar_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be24a8 <col:24, col:41> col:41 __s 'char *__restrict'
| |-ParmVarDecl 0x5be2520 <col:46, col:54> col:54 __wc 'wchar_t'
| `-ParmVarDecl 0x5be2598 <line:371:10, col:32> col:32 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be29b0 <line:374:1, line:375:39> line:374:15 __mbrlen 'size_t (const char *__restrict, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be2790 <col:25, col:48> col:48 __s 'const char *__restrict'
| |-ParmVarDecl 0x5be2808 <col:53, col:60> col:60 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be2880 <line:375:4, col:26> col:26 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be2c18 <line:376:1, line:377:44> line:376:15 mbrlen 'size_t (const char *__restrict, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be2a80 <col:23, col:46> col:46 __s 'const char *__restrict'
| |-ParmVarDecl 0x5be2af8 <col:51, col:58> col:58 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be2b70 <line:377:9, col:31> col:31 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be2fd0 <line:408:1, line:410:40> line:408:15 mbsrtowcs 'size_t (wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be2ce8 <col:26, col:46> col:46 __dst 'wchar_t *__restrict'
| |-ParmVarDecl 0x5be2d90 <line:409:5, col:29> col:29 __src 'const char **__restrict'
| |-ParmVarDecl 0x5be2e08 <col:36, col:43> col:43 __len 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be2e80 <line:410:5, col:27> col:27 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be33c0 <line:414:1, line:416:40> line:414:15 wcsrtombs 'size_t (char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be30d0 <col:26, col:43> col:43 __dst 'char *__restrict'
| |-ParmVarDecl 0x5be3180 <line:415:5, col:32> col:32 __src 'const wchar_t **__restrict'
| |-ParmVarDecl 0x5be31f8 <col:39, col:46> col:46 __len 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be3270 <line:416:5, col:27> col:27 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be37e0 <line:423:1, line:425:55> line:423:15 mbsnrtowcs 'size_t (wchar_t *__restrict, const char **__restrict, size_t, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be3498 <col:27, col:47> col:47 __dst 'wchar_t *__restrict'
| |-ParmVarDecl 0x5be3518 <line:424:6, col:30> col:30 __src 'const char **__restrict'
| |-ParmVarDecl 0x5be3590 <col:37, col:44> col:44 __nmc 'size_t':'unsigned long'
| |-ParmVarDecl 0x5be3608 <line:425:6, col:13> col:13 __len 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be3680 <col:20, col:42> col:42 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be3c00 <line:429:1, line:432:41> line:429:15 wcsnrtombs 'size_t (char *__restrict, const wchar_t **__restrict, size_t, size_t, mbstate_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5be38c0 <col:27, col:44> col:44 __dst 'char *__restrict'
| |-ParmVarDecl 0x5be3940 <line:430:6, col:33> col:33 __src 'const wchar_t **__restrict'
| |-ParmVarDecl 0x5be39b8 <line:431:6, col:13> col:13 __nwc 'size_t':'unsigned long'
| |-ParmVarDecl 0x5be3a30 <col:20, col:27> col:27 __len 'size_t':'unsigned long'
| `-ParmVarDecl 0x5be3aa8 <line:432:6, col:28> col:28 __ps 'mbstate_t *__restrict'
|-FunctionDecl 0x5be3dd8 <line:439:1, col:41> col:12 wcwidth 'int (wchar_t) throw()' extern
| `-ParmVarDecl 0x5be3cd8 <col:21, col:29> col:29 __c 'wchar_t'
|-FunctionDecl 0x5be40e0 <line:443:1, col:61> col:12 wcswidth 'int (const wchar_t *, size_t) throw()' extern
| |-ParmVarDecl 0x5be3e98 <col:22, col:37> col:37 __s 'const wchar_t *'
| `-ParmVarDecl 0x5be3f10 <col:42, col:49> col:49 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5be4348 <line:450:1, line:451:47> line:450:15 wcstod 'double (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| |-ParmVarDecl 0x5be41a8 <col:23, col:49> col:49 __nptr 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5be4228 <line:451:9, col:30> col:30 __endptr 'wchar_t **__restrict'
|-FunctionDecl 0x5be45b8 <line:457:1, line:458:46> line:457:14 wcstof 'float (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| |-ParmVarDecl 0x5be4410 <col:22, col:48> col:48 __nptr 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5be4490 <line:458:8, col:29> col:29 __endptr 'wchar_t **__restrict'
|-FunctionDecl 0x5be4828 <line:459:1, line:460:46> line:459:20 wcstold 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()' extern
| |-ParmVarDecl 0x5be4680 <col:29, col:55> col:55 __nptr 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5be4700 <line:460:8, col:29> col:29 __endptr 'wchar_t **__restrict'
|-FunctionDecl 0x5be4b28 <line:468:1, line:469:54> line:468:17 wcstol 'long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| |-ParmVarDecl 0x5be48f0 <col:25, col:51> col:51 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5be4970 <line:469:4, col:25> col:25 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5be49f0 <col:35, col:39> col:39 __base 'int'
|-FunctionDecl 0x5be4e28 <line:473:1, line:475:13> line:473:26 wcstoul 'unsigned long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| |-ParmVarDecl 0x5be4bf8 <col:35, col:61> col:61 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5be4c78 <line:474:7, col:28> col:28 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5be4cf8 <col:38, col:42> col:42 __base 'int'
|-FunctionDecl 0x5b9da68 <line:483:1, line:485:13> line:483:22 wcstoll 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| |-ParmVarDecl 0x5be4ef8 <col:31, col:57> col:57 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5be4f78 <line:484:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5be4ff8 <col:41, col:45> col:45 __base 'int'
|-FunctionDecl 0x5b9dd68 <line:490:1, line:492:25> line:490:31 wcstoull 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| |-ParmVarDecl 0x5b9db38 <col:41, col:67> col:67 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5b9dbb8 <line:491:6, col:27> col:27 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5b9dc38 <line:492:6, col:10> col:10 __base 'int'
|-FunctionDecl 0x5b9dfe8 <line:500:1, line:502:13> line:500:22 wcstoq 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| |-ParmVarDecl 0x5b9de38 <col:30, col:56> col:56 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5b9deb8 <line:501:9, col:30> col:30 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5b9df38 <col:40, col:44> col:44 __base 'int'
|-FunctionDecl 0x5b9e268 <line:507:1, line:509:31> line:507:31 wcstouq 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()' extern
| |-ParmVarDecl 0x5b9e0b8 <col:40, col:66> col:66 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5b9e138 <line:508:12, col:33> col:33 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5b9e1b8 <line:509:12, col:16> col:16 __base 'int'
|-FunctionDecl 0x5b9e608 <line:530:1, line:532:31> line:530:17 wcstol_l 'long (const wchar_t *__restrict, wchar_t **__restrict, int, __locale_t) throw()' extern
| |-ParmVarDecl 0x5b9e338 <col:27, col:53> col:53 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5b9e3b8 <line:531:6, col:27> col:27 __endptr 'wchar_t **__restrict'
| |-ParmVarDecl 0x5b9e438 <col:37, col:41> col:41 __base 'int'
| `-ParmVarDecl 0x5b9e4b0 <line:532:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba2a50 <line:534:1, line:536:46> line:534:26 wcstoul_l 'unsigned long (const wchar_t *__restrict, wchar_t **__restrict, int, __locale_t) throw()' extern
| |-ParmVarDecl 0x5b9e6e0 <col:37, col:63> col:63 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5b9e760 <line:535:9, col:30> col:30 __endptr 'wchar_t **__restrict'
| |-ParmVarDecl 0x5b9e7e0 <line:536:9, col:13> col:13 __base 'int'
| `-ParmVarDecl 0x5b9e858 <col:21, col:32> col:32 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba2df8 <line:539:1, line:541:42> line:539:22 wcstoll_l 'long long (const wchar_t *__restrict, wchar_t **__restrict, int, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba2b28 <col:33, col:59> col:59 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5ba2ba8 <line:540:5, col:26> col:26 __endptr 'wchar_t **__restrict'
| |-ParmVarDecl 0x5ba2c28 <line:541:5, col:9> col:9 __base 'int'
| `-ParmVarDecl 0x5ba2ca0 <col:17, col:28> col:28 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba3198 <line:544:1, line:547:13> line:544:31 wcstoull_l 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba2ed0 <col:43, col:69> col:69 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5ba2f50 <line:545:8, col:29> col:29 __endptr 'wchar_t **__restrict'
| |-ParmVarDecl 0x5ba2fd0 <line:546:8, col:12> col:12 __base 'int'
| `-ParmVarDecl 0x5ba3048 <col:20, col:31> col:31 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba3498 <line:549:1, line:551:13> line:549:15 wcstod_l 'double (const wchar_t *__restrict, wchar_t **__restrict, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba3270 <col:25, col:51> col:51 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5ba32f0 <line:550:4, col:25> col:25 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5ba3368 <col:35, col:46> col:46 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba3798 <line:553:1, line:555:13> line:553:14 wcstof_l 'float (const wchar_t *__restrict, wchar_t **__restrict, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba3568 <col:24, col:50> col:50 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5ba35e8 <line:554:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5ba3660 <col:41, col:52> col:52 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba4ab8 <line:557:1, line:559:35> line:557:20 wcstold_l 'long double (const wchar_t *__restrict, wchar_t **__restrict, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ba3868 <col:31, col:57> col:57 __nptr 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5ba38e8 <line:558:10, col:31> col:31 __endptr 'wchar_t **__restrict'
| `-ParmVarDecl 0x5ba3960 <line:559:10, col:21> col:21 __loc '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ba4cb0 <line:566:1, line:567:44> line:566:17 wcpcpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()' extern
| |-ParmVarDecl 0x5ba4b88 <col:25, col:45> col:45 __dest 'wchar_t *__restrict'
| `-ParmVarDecl 0x5ba4c08 <line:567:4, col:30> col:30 __src 'const wchar_t *__restrict'
|-FunctionDecl 0x5ba4f20 <line:571:1, line:573:13> line:571:17 wcpncpy 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' extern
| |-ParmVarDecl 0x5ba4d78 <col:26, col:46> col:46 __dest 'wchar_t *__restrict'
| |-ParmVarDecl 0x5ba4df8 <line:572:5, col:31> col:31 __src 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5ba4e70 <col:38, col:45> col:45 __n 'size_t':'unsigned long'
|-FunctionDecl 0x5ba51e0 <line:580:1, col:79> col:16 open_wmemstream '__FILE *(wchar_t **, size_t *) throw()' extern
| |-ParmVarDecl 0x5ba5018 <col:33, col:43> col:43 __bufloc 'wchar_t **'
| `-ParmVarDecl 0x5ba5090 <col:53, col:61> col:61 __sizeloc 'size_t *'
|-FunctionDecl 0x5ba5408 <line:587:1, col:52> col:12 fwide 'int (__FILE *, int) throw()' extern
| |-ParmVarDecl 0x5ba52a0 <col:19, col:27> col:27 __fp '__FILE *'
| `-ParmVarDecl 0x5ba5320 <col:33, col:37> col:37 __mode 'int'
|-FunctionDecl 0x5ba5660 <line:594:1, line:595:47> line:594:12 fwprintf 'int (__FILE *__restrict, const wchar_t *__restrict, ...)' extern
| |-ParmVarDecl 0x5ba54c8 <col:22, col:41> col:41 __stream '__FILE *__restrict'
| `-ParmVarDecl 0x5ba5548 <line:595:8, col:34> col:34 __format 'const wchar_t *__restrict'
|-FunctionDecl 0x5ba5820 <line:601:1, col:60> col:12 wprintf 'int (const wchar_t *__restrict, ...)' extern
| `-ParmVarDecl 0x5ba5728 <col:21, col:47> col:47 __format 'const wchar_t *__restrict'
|-FunctionDecl 0x5ba5b48 <line:604:1, line:606:13> line:604:12 swprintf 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5ba58e0 <col:22, col:42> col:42 __s 'wchar_t *__restrict'
| |-ParmVarDecl 0x5ba5958 <col:47, col:54> col:54 __n 'size_t':'unsigned long'
| `-ParmVarDecl 0x5ba59d8 <line:605:8, col:34> col:34 __format 'const wchar_t *__restrict'
|-FunctionDecl 0x5ba5e30 <line:612:1, line:614:29> line:612:12 vfwprintf 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5ba5c10 <col:23, col:42> col:42 __s '__FILE *__restrict'
| |-ParmVarDecl 0x5ba5c90 <line:613:9, col:35> col:35 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5ba5d08 <line:614:9, col:24> col:24 __arg '__va_list_tag *':'__va_list_tag *'
|-FunctionDecl 0x5ba6090 <line:620:1, line:621:28> line:620:12 vwprintf 'int (const wchar_t *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5ba5f00 <col:22, col:48> col:48 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5ba5f78 <line:621:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
|-FunctionDecl 0x5ba6418 <line:625:1, line:628:13> line:625:12 vswprintf 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5ba6158 <col:23, col:43> col:43 __s 'wchar_t *__restrict'
| |-ParmVarDecl 0x5ba61d0 <col:48, col:55> col:55 __n 'size_t':'unsigned long'
| |-ParmVarDecl 0x5ba6250 <line:626:9, col:35> col:35 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5ba62c8 <line:627:9, col:24> col:24 __arg '__va_list_tag *':'__va_list_tag *'
|-FunctionDecl 0x5ba6608 <line:635:1, line:636:46> line:635:12 fwscanf 'int (__FILE *__restrict, const wchar_t *__restrict, ...)' extern
| |-ParmVarDecl 0x5ba64e8 <col:21, col:40> col:40 __stream '__FILE *__restrict'
| `-ParmVarDecl 0x5ba6568 <line:636:7, col:33> col:33 __format 'const wchar_t *__restrict'
|-FunctionDecl 0x5ba6768 <line:642:1, col:59> col:12 wscanf 'int (const wchar_t *__restrict, ...)' extern
| `-ParmVarDecl 0x5ba66d0 <col:20, col:46> col:46 __format 'const wchar_t *__restrict'
|-FunctionDecl 0x5ba69c8 <line:645:1, line:647:13> line:645:12 swscanf 'int (const wchar_t *__restrict, const wchar_t *__restrict, ...) throw()' extern
| |-ParmVarDecl 0x5ba6828 <col:21, col:47> col:47 __s 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5ba68a8 <line:646:7, col:33> col:33 __format 'const wchar_t *__restrict'
|-FunctionDecl 0x5bf22c0 <line:689:1, line:691:28> line:689:12 vfwscanf 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bf2120 <col:22, col:41> col:41 __s '__FILE *__restrict'
| |-ParmVarDecl 0x5bf21a0 <line:690:8, col:34> col:34 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bf2218 <line:691:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
|-FunctionDecl 0x5bf24a8 <line:697:1, line:698:27> line:697:12 vwscanf 'int (const wchar_t *__restrict, __va_list_tag *)' extern
| |-ParmVarDecl 0x5bf2390 <col:21, col:47> col:47 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bf2408 <line:698:7, col:22> col:22 __arg '__va_list_tag *':'__va_list_tag *'
|-FunctionDecl 0x5bf2798 <line:701:1, line:704:13> line:701:12 vswscanf 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()' extern
| |-ParmVarDecl 0x5bf2570 <col:22, col:48> col:48 __s 'const wchar_t *__restrict'
| |-ParmVarDecl 0x5bf25f0 <line:702:8, col:34> col:34 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bf2668 <line:703:8, col:23> col:23 __arg '__va_list_tag *':'__va_list_tag *'
|-FunctionDecl 0x5bf2958 <line:745:1, col:39> col:15 fgetwc 'wint_t (__FILE *)' extern
| `-ParmVarDecl 0x5bf2860 <col:23, col:31> col:31 __stream '__FILE *'
|-FunctionDecl 0x5bf2aa0 <line:746:1, col:38> col:15 getwc 'wint_t (__FILE *)' extern
| `-ParmVarDecl 0x5bf2a10 <col:22, col:30> col:30 __stream '__FILE *'
|-FunctionDecl 0x5bf2c38 <line:752:1, col:29> col:15 getwchar 'wint_t ()' extern
|-FunctionDecl 0x5bf2e78 <line:759:1, col:53> col:15 fputwc 'wint_t (wchar_t, __FILE *)' extern
| |-ParmVarDecl 0x5bf2ce8 <col:23, col:31> col:31 __wc 'wchar_t'
| `-ParmVarDecl 0x5bf2d60 <col:37, col:45> col:45 __stream '__FILE *'
|-FunctionDecl 0x5bf3048 <line:760:1, col:52> col:15 putwc 'wint_t (wchar_t, __FILE *)' extern
| |-ParmVarDecl 0x5bf2f38 <col:22, col:30> col:30 __wc 'wchar_t'
| `-ParmVarDecl 0x5bf2fb0 <col:36, col:44> col:44 __stream '__FILE *'
|-FunctionDecl 0x5bf3218 <line:766:1, col:37> col:15 putwchar 'wint_t (wchar_t)' extern
| `-ParmVarDecl 0x5bf3120 <col:25, col:33> col:33 __wc 'wchar_t'
|-FunctionDecl 0x5bf3500 <line:774:1, line:775:31> line:774:17 fgetws 'wchar_t *(wchar_t *__restrict, int, __FILE *__restrict)' extern
| |-ParmVarDecl 0x5bf32d8 <col:25, col:45> col:45 __ws 'wchar_t *__restrict'
| |-ParmVarDecl 0x5bf3358 <col:51, col:55> col:55 __n 'int'
| `-ParmVarDecl 0x5bf33d0 <line:775:4, col:23> col:23 __stream '__FILE *__restrict'
|-FunctionDecl 0x5bf3760 <line:781:1, line:782:33> line:781:12 fputws 'int (const wchar_t *__restrict, __FILE *__restrict)' extern
| |-ParmVarDecl 0x5bf35d0 <col:20, col:46> col:46 __ws 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bf3648 <line:782:6, col:25> col:25 __stream '__FILE *__restrict'
|-FunctionDecl 0x5bf39a8 <line:789:1, col:53> col:15 ungetwc 'wint_t (wint_t, __FILE *)' extern
| |-ParmVarDecl 0x5bf3820 <col:24, col:31> col:31 __wc 'wint_t':'unsigned int'
| `-ParmVarDecl 0x5bf3898 <col:37, col:45> col:45 __stream '__FILE *'
|-FunctionDecl 0x5bf3af8 <line:801:1, col:47> col:15 getwc_unlocked 'wint_t (__FILE *)' extern
| `-ParmVarDecl 0x5bf3a68 <col:31, col:39> col:39 __stream '__FILE *'
|-FunctionDecl 0x5bf3c38 <line:802:1, col:38> col:15 getwchar_unlocked 'wint_t ()' extern
|-FunctionDecl 0x5bf3d78 <line:810:1, col:48> col:15 fgetwc_unlocked 'wint_t (__FILE *)' extern
| `-ParmVarDecl 0x5bf3ce8 <col:32, col:40> col:40 __stream '__FILE *'
|-FunctionDecl 0x5bf3f40 <line:818:1, col:62> col:15 fputwc_unlocked 'wint_t (wchar_t, __FILE *)' extern
| |-ParmVarDecl 0x5bf3e30 <col:32, col:40> col:40 __wc 'wchar_t'
| `-ParmVarDecl 0x5bf3ea8 <col:46, col:54> col:54 __stream '__FILE *'
|-FunctionDecl 0x5bf4130 <line:827:1, col:61> col:15 putwc_unlocked 'wint_t (wchar_t, __FILE *)' extern
| |-ParmVarDecl 0x5bf4000 <col:31, col:39> col:39 __wc 'wchar_t'
| `-ParmVarDecl 0x5bf4078 <col:45, col:53> col:53 __stream '__FILE *'
|-FunctionDecl 0x5bf4280 <line:828:1, col:46> col:15 putwchar_unlocked 'wint_t (wchar_t)' extern
| `-ParmVarDecl 0x5bf41f0 <col:34, col:42> col:42 __wc 'wchar_t'
|-FunctionDecl 0x5bf44e0 <line:837:1, line:838:33> line:837:17 fgetws_unlocked 'wchar_t *(wchar_t *__restrict, int, __FILE *__restrict)' extern
| |-ParmVarDecl 0x5bf4340 <col:34, col:54> col:54 __ws 'wchar_t *__restrict'
| |-ParmVarDecl 0x5bf43c0 <col:60, col:64> col:64 __n 'int'
| `-ParmVarDecl 0x5bf4438 <line:838:6, col:25> col:25 __stream '__FILE *__restrict'
|-FunctionDecl 0x5bf46c8 <line:846:1, line:847:35> line:846:12 fputws_unlocked 'int (const wchar_t *__restrict, __FILE *__restrict)' extern
| |-ParmVarDecl 0x5bf45b0 <col:29, col:55> col:55 __ws 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bf4628 <line:847:8, col:27> col:27 __stream '__FILE *__restrict'
|-FunctionDecl 0x5bf4af0 <line:855:1, line:857:45> line:855:15 wcsftime 'size_t (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict) throw()' extern
| |-ParmVarDecl 0x5bf4790 <col:25, col:45> col:45 __s 'wchar_t *__restrict'
| |-ParmVarDecl 0x5bf4808 <col:50, col:57> col:57 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5bf4888 <line:856:4, col:30> col:30 __format 'const wchar_t *__restrict'
| `-ParmVarDecl 0x5bf49a0 <line:857:4, col:32> col:32 __tp 'const struct tm *__restrict'
`-FunctionDecl 0x5bf4f20 <line:865:1, line:868:31> line:865:15 wcsftime_l 'size_t (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict, __locale_t) throw()' extern
  |-ParmVarDecl 0x5bf4bc8 <col:27, col:47> col:47 __s 'wchar_t *__restrict'
  |-ParmVarDecl 0x5bf4c40 <col:52, col:59> col:59 __maxsize 'size_t':'unsigned long'
  |-ParmVarDecl 0x5bf4cc0 <line:866:6, col:32> col:32 __format 'const wchar_t *__restrict'
  |-ParmVarDecl 0x5bf4d50 <line:867:6, col:34> col:34 __tp 'const struct tm *__restrict'
  `-ParmVarDecl 0x5bf4dc8 <line:868:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
NamespaceDecl 0x5bf4fe8 prev 0x5bd58c8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cwchar:62:1, line:65:1> line:62:11 std
|-original Namespace 0x5b39a58 'std'
|-UsingDecl 0x5bf5060 <line:64:3, col:11> col:11 ::mbstate_t
`-UsingShadowDecl 0x5bf50b8 <col:11> col:11 implicit Typedef 0x5bd84a8 'mbstate_t'
  `-TypedefType 0x5be1dd0 'mbstate_t' sugar
    |-Typedef 0x5bd84a8 'mbstate_t'
    `-TypedefType 0x5bb7240 '__mbstate_t' sugar
      |-Typedef 0x5bb7048 '__mbstate_t'
      `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
        `-RecordType 0x5bb6be0 '__mbstate_t'
          `-CXXRecord 0x5bb6b50 ''
NamespaceDecl 0x5bf5140 prev 0x5bf4fe8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cwchar:135:1, line:233:1> line:135:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5bf51b0 <col:31, col:56> Default
|-UsingDecl 0x5bf51f8 <line:139:3, col:11> col:11 ::wint_t
|-UsingShadowDecl 0x5bf5250 <col:11> col:11 implicit Typedef 0x5bd8440 'wint_t'
| `-TypedefType 0x5be1a40 'wint_t' sugar
|   |-Typedef 0x5bd8440 'wint_t'
|   `-BuiltinType 0x5aca3a0 'unsigned int'
|-UsingDecl 0x5bf52a8 <line:141:3, col:11> col:11 ::btowc
|-UsingShadowDecl 0x5bf5300 <col:11> col:11 implicit Function 0x5be1b70 'btowc' 'wint_t (int) throw()'
|-UsingDecl 0x5bf5358 <line:142:3, col:11> col:11 ::fgetwc
|-UsingShadowDecl 0x5bf53b0 <col:11> col:11 implicit Function 0x5bf2958 'fgetwc' 'wint_t (__FILE *)'
|-UsingDecl 0x5bf5408 <line:143:3, col:11> col:11 ::fgetws
|-UsingShadowDecl 0x5bf5460 <col:11> col:11 implicit Function 0x5bf3500 'fgetws' 'wchar_t *(wchar_t *__restrict, int, __FILE *__restrict)'
|-UsingDecl 0x5bf54b8 <line:144:3, col:11> col:11 ::fputwc
|-UsingShadowDecl 0x5bf5510 <col:11> col:11 implicit Function 0x5bf2e78 'fputwc' 'wint_t (wchar_t, __FILE *)'
|-UsingDecl 0x5bf5568 <line:145:3, col:11> col:11 ::fputws
|-UsingShadowDecl 0x5bf55c0 <col:11> col:11 implicit Function 0x5bf3760 'fputws' 'int (const wchar_t *__restrict, __FILE *__restrict)'
|-UsingDecl 0x5bf5618 <line:146:3, col:11> col:11 ::fwide
|-UsingShadowDecl 0x5bf5670 <col:11> col:11 implicit Function 0x5ba5408 'fwide' 'int (__FILE *, int) throw()'
|-UsingDecl 0x5bf56c8 <line:147:3, col:11> col:11 ::fwprintf
|-UsingShadowDecl 0x5bf5720 <col:11> col:11 implicit Function 0x5ba5660 'fwprintf' 'int (__FILE *__restrict, const wchar_t *__restrict, ...)'
|-UsingDecl 0x5bf5778 <line:148:3, col:11> col:11 ::fwscanf
|-UsingShadowDecl 0x5bf57d0 <col:11> col:11 implicit Function 0x5ba6608 'fwscanf' 'int (__FILE *__restrict, const wchar_t *__restrict, ...)'
|-UsingDecl 0x5bf5828 <line:149:3, col:11> col:11 ::getwc
|-UsingShadowDecl 0x5bf5880 <col:11> col:11 implicit Function 0x5bf2aa0 'getwc' 'wint_t (__FILE *)'
|-UsingDecl 0x5bf58d8 <line:150:3, col:11> col:11 ::getwchar
|-UsingShadowDecl 0x5bf5930 <col:11> col:11 implicit Function 0x5bf2c38 'getwchar' 'wint_t ()'
|-UsingDecl 0x5bf5988 <line:151:3, col:11> col:11 ::mbrlen
|-UsingShadowDecl 0x5bf59e0 <col:11> col:11 implicit Function 0x5be2c18 'mbrlen' 'size_t (const char *__restrict, size_t, mbstate_t *__restrict) throw()'
|-UsingDecl 0x5bf5a38 <line:152:3, col:11> col:11 ::mbrtowc
|-UsingShadowDecl 0x5bf5a90 <col:11> col:11 implicit Function 0x5be23d0 'mbrtowc' 'size_t (wchar_t *__restrict, const char *__restrict, size_t, mbstate_t *__restrict) throw()'
|-UsingDecl 0x5bf5ae8 <line:153:3, col:11> col:11 ::mbsinit
|-UsingShadowDecl 0x5bf5b40 <col:11> col:11 implicit Function 0x5be1f58 'mbsinit' 'int (const mbstate_t *) throw()'
|-UsingDecl 0x5bf5b98 <line:154:3, col:11> col:11 ::mbsrtowcs
|-UsingShadowDecl 0x5bf5bf0 <col:11> col:11 implicit Function 0x5be2fd0 'mbsrtowcs' 'size_t (wchar_t *__restrict, const char **__restrict, size_t, mbstate_t *__restrict) throw()'
|-UsingDecl 0x5bf5c48 <line:155:3, col:11> col:11 ::putwc
|-UsingShadowDecl 0x5bf5ca0 <col:11> col:11 implicit Function 0x5bf3048 'putwc' 'wint_t (wchar_t, __FILE *)'
|-UsingDecl 0x5bf5cf8 <line:156:3, col:11> col:11 ::putwchar
|-UsingShadowDecl 0x5bf5d50 <col:11> col:11 implicit Function 0x5bf3218 'putwchar' 'wint_t (wchar_t)'
|-UsingDecl 0x5bf5da8 <line:158:3, col:11> col:11 ::swprintf
|-UsingShadowDecl 0x5bf5e00 <col:11> col:11 implicit Function 0x5ba5b48 'swprintf' 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, ...) throw()'
|-UsingDecl 0x5bf5e58 <line:160:3, col:11> col:11 ::swscanf
|-UsingShadowDecl 0x5bf5eb0 <col:11> col:11 implicit Function 0x5ba69c8 'swscanf' 'int (const wchar_t *__restrict, const wchar_t *__restrict, ...) throw()'
|-UsingDecl 0x5bf5f08 <line:161:3, col:11> col:11 ::ungetwc
|-UsingShadowDecl 0x5bf5f60 <col:11> col:11 implicit Function 0x5bf39a8 'ungetwc' 'wint_t (wint_t, __FILE *)'
|-UsingDecl 0x5bf5fb8 <line:162:3, col:11> col:11 ::vfwprintf
|-UsingShadowDecl 0x5bf6010 <col:11> col:11 implicit Function 0x5ba5e30 'vfwprintf' 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)'
|-UsingDecl 0x5bf6068 <line:164:3, col:11> col:11 ::vfwscanf
|-UsingShadowDecl 0x5bf60c0 <col:11> col:11 implicit Function 0x5bf22c0 'vfwscanf' 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)'
|-UsingDecl 0x5bf6150 <line:167:3, col:11> col:11 ::vswprintf
|-UsingShadowDecl 0x5bf61a8 <col:11> col:11 implicit Function 0x5ba6418 'vswprintf' 'int (wchar_t *__restrict, size_t, const wchar_t *__restrict, __va_list_tag *) throw()'
|-UsingDecl 0x5bf6200 <line:170:3, col:11> col:11 ::vswscanf
|-UsingShadowDecl 0x5bf6258 <col:11> col:11 implicit Function 0x5bf2798 'vswscanf' 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()'
|-UsingDecl 0x5bf62b0 <line:172:3, col:11> col:11 ::vwprintf
|-UsingShadowDecl 0x5bf6308 <col:11> col:11 implicit Function 0x5ba6090 'vwprintf' 'int (const wchar_t *__restrict, __va_list_tag *)'
|-UsingDecl 0x5bf6360 <line:174:3, col:11> col:11 ::vwscanf
|-UsingShadowDecl 0x5bf63b8 <col:11> col:11 implicit Function 0x5bf24a8 'vwscanf' 'int (const wchar_t *__restrict, __va_list_tag *)'
|-UsingDecl 0x5bf6410 <line:176:3, col:11> col:11 ::wcrtomb
|-UsingShadowDecl 0x5bf6468 <col:11> col:11 implicit Function 0x5be26c0 'wcrtomb' 'size_t (char *__restrict, wchar_t, mbstate_t *__restrict) throw()'
|-UsingDecl 0x5bf64c0 <line:177:3, col:11> col:11 ::wcscat
|-UsingShadowDecl 0x5bf6518 <col:11> col:11 implicit Function 0x5bd8cc0 'wcscat' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()'
|-UsingDecl 0x5bf6570 <line:178:3, col:11> col:11 ::wcscmp
|-UsingShadowDecl 0x5bf65c8 <col:11> col:11 implicit Function 0x5bda218 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'
|-UsingDecl 0x5bf6620 <line:179:3, col:11> col:11 ::wcscoll
|-UsingShadowDecl 0x5bf6678 <col:11> col:11 implicit Function 0x5ba1c90 'wcscoll' 'int (const wchar_t *, const wchar_t *) throw()'
|-UsingDecl 0x5bf66d0 <line:180:3, col:11> col:11 ::wcscpy
|-UsingShadowDecl 0x5bf6728 <col:11> col:11 implicit Function 0x5bd87d8 'wcscpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict) throw()'
|-UsingDecl 0x5bf6780 <line:181:3, col:11> col:11 ::wcscspn
|-UsingShadowDecl 0x5bf67d8 <col:11> col:11 implicit Function 0x5bdf780 'wcscspn' 'size_t (const wchar_t *, const wchar_t *) throw()'
|-UsingDecl 0x5bf6830 <line:182:3, col:11> col:11 ::wcsftime
|-UsingShadowDecl 0x5bf6888 <col:11> col:11 implicit Function 0x5bf4af0 'wcsftime' 'size_t (wchar_t *__restrict, size_t, const wchar_t *__restrict, const struct tm *__restrict) throw()'
|-UsingDecl 0x5bf68e0 <line:183:3, col:11> col:11 ::wcslen
|-UsingShadowDecl 0x5bf6938 <col:11> col:11 implicit Function 0x5be03e0 'wcslen' 'size_t (const wchar_t *) throw()'
|-UsingDecl 0x5bf6990 <line:184:3, col:11> col:11 ::wcsncat
|-UsingShadowDecl 0x5bf69e8 <col:11> col:11 implicit Function 0x5bd8f30 'wcsncat' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|-UsingDecl 0x5bf6a40 <line:185:3, col:11> col:11 ::wcsncmp
|-UsingShadowDecl 0x5bf6a98 <col:11> col:11 implicit Function 0x5bda548 'wcsncmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()'
|-UsingDecl 0x5bf6af0 <line:186:3, col:11> col:11 ::wcsncpy
|-UsingShadowDecl 0x5bf6b48 <col:11> col:11 implicit Function 0x5bd8ac8 'wcsncpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|-UsingDecl 0x5bf6ba0 <line:187:3, col:11> col:11 ::wcsrtombs
|-UsingShadowDecl 0x5bf6bf8 <col:11> col:11 implicit Function 0x5be33c0 'wcsrtombs' 'size_t (char *__restrict, const wchar_t **__restrict, size_t, mbstate_t *__restrict) throw()'
|-UsingDecl 0x5bf6c50 <line:188:3, col:11> col:11 ::wcsspn
|-UsingShadowDecl 0x5bf6ca8 <col:11> col:11 implicit Function 0x5bdf9a8 'wcsspn' 'size_t (const wchar_t *, const wchar_t *) throw()'
|-UsingDecl 0x5bf6d00 <line:189:3, col:11> col:11 ::wcstod
|-UsingShadowDecl 0x5bf6d58 <col:11> col:11 implicit Function 0x5be4348 'wcstod' 'double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bf6db0 <line:191:3, col:11> col:11 ::wcstof
|-UsingShadowDecl 0x5bf6e08 <col:11> col:11 implicit Function 0x5be45b8 'wcstof' 'float (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bf6e60 <line:193:3, col:11> col:11 ::wcstok
|-UsingShadowDecl 0x5bf6eb8 <col:11> col:11 implicit Function 0x5be0218 'wcstok' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bf6f10 <line:194:3, col:11> col:11 ::wcstol
|-UsingShadowDecl 0x5bf6f68 <col:11> col:11 implicit Function 0x5be4b28 'wcstol' 'long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-UsingDecl 0x5bf6fc0 <line:195:3, col:11> col:11 ::wcstoul
|-UsingShadowDecl 0x5bf7018 <col:11> col:11 implicit Function 0x5be4e28 'wcstoul' 'unsigned long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-UsingDecl 0x5bf7070 <line:196:3, col:11> col:11 ::wcsxfrm
|-UsingShadowDecl 0x5bf70c8 <col:11> col:11 implicit Function 0x5ba1f80 'wcsxfrm' 'size_t (wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|-UsingDecl 0x5bf8170 <line:197:3, col:11> col:11 ::wctob
|-UsingShadowDecl 0x5bf81c8 <col:11> col:11 implicit Function 0x5be1d28 'wctob' 'int (wint_t) throw()'
|-UsingDecl 0x5bf8220 <line:198:3, col:11> col:11 ::wmemcmp
|-UsingShadowDecl 0x5bf8278 <col:11> col:11 implicit Function 0x5be0e80 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()'
|-UsingDecl 0x5bf82d0 <line:199:3, col:11> col:11 ::wmemcpy
|-UsingShadowDecl 0x5bf8328 <col:11> col:11 implicit Function 0x5be1160 'wmemcpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()'
|-UsingDecl 0x5bf8380 <line:200:3, col:11> col:11 ::wmemmove
|-UsingShadowDecl 0x5bf83d8 <col:11> col:11 implicit Function 0x5be1418 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()'
|-UsingDecl 0x5bf8430 <line:201:3, col:11> col:11 ::wmemset
|-UsingShadowDecl 0x5bf8488 <col:11> col:11 implicit Function 0x5be1708 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()'
|-UsingDecl 0x5bf84e0 <line:202:3, col:11> col:11 ::wprintf
|-UsingShadowDecl 0x5bf8538 <col:11> col:11 implicit Function 0x5ba5820 'wprintf' 'int (const wchar_t *__restrict, ...)'
|-UsingDecl 0x5bf8590 <line:203:3, col:11> col:11 ::wscanf
|-UsingShadowDecl 0x5bf85e8 <col:11> col:11 implicit Function 0x5ba6768 'wscanf' 'int (const wchar_t *__restrict, ...)'
|-UsingDecl 0x5bf8640 <line:204:3, col:11> col:11 ::wcschr
|-UsingShadowDecl 0x5bf8698 <col:11> col:11 implicit Function 0x5bdf090 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'
|-UsingDecl 0x5bf86f0 <line:205:3, col:11> col:11 ::wcspbrk
|-UsingShadowDecl 0x5bf8748 <col:11> col:11 implicit Function 0x5bdfc58 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()'
|-UsingDecl 0x5bf87a0 <line:206:3, col:11> col:11 ::wcsrchr
|-UsingShadowDecl 0x5bf87f8 <col:11> col:11 implicit Function 0x5bdf2b8 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()'
|-UsingDecl 0x5bf8850 <line:207:3, col:11> col:11 ::wcsstr
|-UsingShadowDecl 0x5bf88a8 <col:11> col:11 implicit Function 0x5bdfe88 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()'
|-UsingDecl 0x5bf8900 <line:208:3, col:11> col:11 ::wmemchr
|-UsingShadowDecl 0x5bf8958 <col:11> col:11 implicit Function 0x5be0bc8 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()'
|-FunctionDecl 0x5bf8b10 <line:211:3, line:213:58> line:212:3 wcschr 'wchar_t *(wchar_t *, wchar_t)' inline
| |-ParmVarDecl 0x5bf89c0 <col:10, col:19> col:19 used __p 'wchar_t *'
| |-ParmVarDecl 0x5bf8a38 <col:24, col:32> col:32 used __c 'wchar_t'
| `-CompoundStmt 0x5bf8da8 <line:213:3, col:58>
|   `-ReturnStmt 0x5bf8d98 <col:5, col:55>
|     `-CallExpr 0x5bf8d50 <col:12, col:55> 'wchar_t *'
|       |-ImplicitCastExpr 0x5bf8d38 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5bf8cb0 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x5bdf090 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x5bf8698 'wcschr')
|       |-CXXConstCastExpr 0x5bf8c60 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|       | `-ImplicitCastExpr 0x5bf8c48 <col:46> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x5bf8c10 <col:46> 'wchar_t *' lvalue ParmVar 0x5bf89c0 '__p' 'wchar_t *'
|       `-ImplicitCastExpr 0x5bf8d80 <col:52> 'wchar_t' <LValueToRValue>
|         `-DeclRefExpr 0x5bf8c90 <col:52> 'wchar_t' lvalue ParmVar 0x5bf8a38 '__c' 'wchar_t'
|-FunctionDecl 0x5bf8ef8 <line:215:3, line:217:61> line:216:3 wcspbrk 'wchar_t *(wchar_t *, const wchar_t *)' inline
| |-ParmVarDecl 0x5bf8dd8 <col:11, col:20> col:20 used __s1 'wchar_t *'
| |-ParmVarDecl 0x5bf8e58 <col:26, col:41> col:41 used __s2 'const wchar_t *'
| `-CompoundStmt 0x5bf91a8 <line:217:3, col:61>
|   `-ReturnStmt 0x5bf9198 <col:5, col:58>
|     `-CallExpr 0x5bf9130 <col:12, col:58> 'wchar_t *'
|       |-ImplicitCastExpr 0x5bf9118 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5bf9098 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x5bdfc58 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x5bf8748 'wcspbrk')
|       |-CXXConstCastExpr 0x5bf9048 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|       | `-ImplicitCastExpr 0x5bf9030 <col:47> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x5bf8ff8 <col:47> 'wchar_t *' lvalue ParmVar 0x5bf8dd8 '__s1' 'wchar_t *'
|       `-ImplicitCastExpr 0x5bf9180 <col:54> 'const wchar_t *' <LValueToRValue>
|         `-DeclRefExpr 0x5bf9078 <col:54> 'const wchar_t *' lvalue ParmVar 0x5bf8e58 '__s2' 'const wchar_t *'
|-FunctionDecl 0x5bf92f0 <line:219:3, line:221:59> line:220:3 wcsrchr 'wchar_t *(wchar_t *, wchar_t)' inline
| |-ParmVarDecl 0x5bf91d8 <col:11, col:20> col:20 used __p 'wchar_t *'
| |-ParmVarDecl 0x5bf9250 <col:25, col:33> col:33 used __c 'wchar_t'
| `-CompoundStmt 0x5bf9528 <line:221:3, col:59>
|   `-ReturnStmt 0x5bf9518 <col:5, col:56>
|     `-CallExpr 0x5bf94d0 <col:12, col:56> 'wchar_t *'
|       |-ImplicitCastExpr 0x5bf94b8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5bf9490 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x5bdf2b8 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x5bf87f8 'wcsrchr')
|       |-CXXConstCastExpr 0x5bf9440 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|       | `-ImplicitCastExpr 0x5bf9428 <col:47> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x5bf93f0 <col:47> 'wchar_t *' lvalue ParmVar 0x5bf91d8 '__p' 'wchar_t *'
|       `-ImplicitCastExpr 0x5bf9500 <col:53> 'wchar_t' <LValueToRValue>
|         `-DeclRefExpr 0x5bf9470 <col:53> 'wchar_t' lvalue ParmVar 0x5bf9250 '__c' 'wchar_t'
|-FunctionDecl 0x5bf9678 <line:223:3, line:225:60> line:224:3 wcsstr 'wchar_t *(wchar_t *, const wchar_t *)' inline
| |-ParmVarDecl 0x5bf9558 <col:10, col:19> col:19 used __s1 'wchar_t *'
| |-ParmVarDecl 0x5bf95d8 <col:25, col:40> col:40 used __s2 'const wchar_t *'
| `-CompoundStmt 0x5bf98b0 <line:225:3, col:60>
|   `-ReturnStmt 0x5bf98a0 <col:5, col:57>
|     `-CallExpr 0x5bf9858 <col:12, col:57> 'wchar_t *'
|       |-ImplicitCastExpr 0x5bf9840 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5bf9818 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x5bdfe88 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x5bf88a8 'wcsstr')
|       |-CXXConstCastExpr 0x5bf97c8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
|       | `-ImplicitCastExpr 0x5bf97b0 <col:46> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x5bf9778 <col:46> 'wchar_t *' lvalue ParmVar 0x5bf9558 '__s1' 'wchar_t *'
|       `-ImplicitCastExpr 0x5bf9888 <col:53> 'const wchar_t *' <LValueToRValue>
|         `-DeclRefExpr 0x5bf97f8 <col:53> 'const wchar_t *' lvalue ParmVar 0x5bf95d8 '__s2' 'const wchar_t *'
`-FunctionDecl 0x5bf9ae0 <line:227:3, line:229:64> line:228:3 wmemchr 'wchar_t *(wchar_t *, wchar_t, std::size_t)' inline
  |-ParmVarDecl 0x5bf98e0 <col:11, col:20> col:20 used __p 'wchar_t *'
  |-ParmVarDecl 0x5bf9958 <col:25, col:33> col:33 used __c 'wchar_t'
  |-ParmVarDecl 0x5bf99f0 <col:38, col:45> col:45 used __n 'std::size_t':'unsigned long'
  `-CompoundStmt 0x5bf9db8 <line:229:3, col:64>
    `-ReturnStmt 0x5bf9da8 <col:5, col:61>
      `-CallExpr 0x5bf9d40 <col:12, col:61> 'wchar_t *'
        |-ImplicitCastExpr 0x5bf9d28 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x5bf9ca8 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x5be0bc8 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x5bf8958 'wmemchr')
        |-CXXConstCastExpr 0x5bf9c38 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        | `-ImplicitCastExpr 0x5bf9c20 <col:47> 'wchar_t *' <LValueToRValue> part_of_explicit_cast
        |   `-DeclRefExpr 0x5bf9be8 <col:47> 'wchar_t *' lvalue ParmVar 0x5bf98e0 '__p' 'wchar_t *'
        |-ImplicitCastExpr 0x5bf9d78 <col:53> 'wchar_t' <LValueToRValue>
        | `-DeclRefExpr 0x5bf9c68 <col:53> 'wchar_t' lvalue ParmVar 0x5bf9958 '__c' 'wchar_t'
        `-ImplicitCastExpr 0x5bf9d90 <col:58> 'std::size_t':'unsigned long' <LValueToRValue>
          `-DeclRefExpr 0x5bf9c88 <col:58> 'std::size_t':'unsigned long' lvalue ParmVar 0x5bf99f0 '__n' 'std::size_t':'unsigned long'
NamespaceDecl 0x5bf9dd0 prev 0x5b95a90 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cwchar:241:1, line:260:1> line:241:11 __gnu_cxx
|-original Namespace 0x5b95a90 '__gnu_cxx'
|-UsingDecl 0x5bf9e48 <line:248:3, col:11> col:11 ::wcstold
|-UsingShadowDecl 0x5bf9ea0 <col:11> col:11 implicit Function 0x5be4828 'wcstold' 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bf9ef8 <line:257:3, col:11> col:11 ::wcstoll
|-UsingShadowDecl 0x5bf9f50 <col:11> col:11 implicit Function 0x5b9da68 'wcstoll' 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-UsingDecl 0x5bf9fa8 <line:258:3, col:11> col:11 ::wcstoull
`-UsingShadowDecl 0x5bfa000 <col:11> col:11 implicit Function 0x5b9dd68 'wcstoull' 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
NamespaceDecl 0x5bfa050 prev 0x5bf5140 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cwchar:262:1, line:267:1> line:262:11 std
|-original Namespace 0x5b39a58 'std'
|-UsingDecl 0x5bfa0e8 <line:264:3, col:22> col:22 ::__gnu_cxx::wcstold
|-UsingShadowDecl 0x5bfa190 <col:22> col:22 implicit Function 0x5be4828 'wcstold' 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bfa1f0 <line:265:3, col:22> col:22 ::__gnu_cxx::wcstoll
|-UsingShadowDecl 0x5bfa248 <col:22> col:22 implicit Function 0x5b9da68 'wcstoll' 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-UsingDecl 0x5bfa2a8 <line:266:3, col:22> col:22 ::__gnu_cxx::wcstoull
`-UsingShadowDecl 0x5bfa300 <col:22> col:22 implicit Function 0x5b9dd68 'wcstoull' 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
NamespaceDecl 0x5bfa350 prev 0x5bfa050 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cwchar:277:1, line:297:1> line:277:11 std
|-original Namespace 0x5b39a58 'std'
|-UsingDecl 0x5bfa3e0 <line:280:3, col:14> col:14 std::wcstof
|-UsingShadowDecl 0x5bfa450 prev 0x5bf6e08 <col:14> col:14 implicit Function 0x5be45b8 'wcstof' 'float (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bfa4a8 <line:283:3, col:14> col:14 std::vfwscanf
|-UsingShadowDecl 0x5bfa500 prev 0x5bf60c0 <col:14> col:14 implicit Function 0x5bf22c0 'vfwscanf' 'int (__FILE *__restrict, const wchar_t *__restrict, __va_list_tag *)'
|-UsingDecl 0x5bfa558 <line:286:3, col:14> col:14 std::vswscanf
|-UsingShadowDecl 0x5bfa5b0 prev 0x5bf6258 <col:14> col:14 implicit Function 0x5bf2798 'vswscanf' 'int (const wchar_t *__restrict, const wchar_t *__restrict, __va_list_tag *) throw()'
|-UsingDecl 0x5bfa608 <line:289:3, col:14> col:14 std::vwscanf
|-UsingShadowDecl 0x5bfa660 prev 0x5bf63b8 <col:14> col:14 implicit Function 0x5bf24a8 'vwscanf' 'int (const wchar_t *__restrict, __va_list_tag *)'
|-UsingDecl 0x5bfa6b8 <line:293:3, col:14> col:14 std::wcstold
|-UsingShadowDecl 0x5bfa710 prev 0x5bfa190 <col:14> col:14 implicit Function 0x5be4828 'wcstold' 'long double (const wchar_t *__restrict, wchar_t **__restrict) throw()'
|-UsingDecl 0x5bfa768 <line:294:3, col:14> col:14 std::wcstoll
|-UsingShadowDecl 0x5bfa7c0 prev 0x5bfa248 <col:14> col:14 implicit Function 0x5b9da68 'wcstoll' 'long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
|-UsingDecl 0x5bfa818 <line:295:3, col:14> col:14 std::wcstoull
`-UsingShadowDecl 0x5bfa870 prev 0x5bfa300 <col:14> col:14 implicit Function 0x5b9dd68 'wcstoull' 'unsigned long long (const wchar_t *__restrict, wchar_t **__restrict, int) throw()'
NamespaceDecl 0x5bfa8e0 prev 0x5bfa350 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/postypes.h:68:1, line:240:1> line:68:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5bfa950 <col:31, col:56> Default
|-TypedefDecl 0x5bfa9a8 <line:88:3, col:16> col:16 referenced streamoff 'long'
| `-BuiltinType 0x5aca320 'long'
|-TypedefDecl 0x5bfaa30 <line:98:3, col:21> col:21 streamsize 'std::ptrdiff_t':'long'
| `-TypedefType 0x5bfaa00 'std::ptrdiff_t' sugar
|   |-Typedef 0x5b39b50 'ptrdiff_t'
|   `-BuiltinType 0x5aca320 'long'
|-ClassTemplateDecl 0x5bfaba0 <line:111:3, line:207:5> line:112:11 fpos
| |-TemplateTypeParmDecl 0x5bfaa88 <line:111:12, col:21> col:21 referenced typename depth 0 index 0 _StateT
| |-CXXRecordDecl 0x5bfab10 <line:112:5, line:207:5> line:112:11 class fpos definition
| | |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5bfadf0 <col:5, col:11> col:11 implicit referenced class fpos
| | |-AccessSpecDecl 0x5bfae80 <line:114:5, col:12> col:5 private
| | |-FieldDecl 0x5bfaee0 <line:115:7, col:17> col:17 referenced _M_off 'std::streamoff':'long'
| | |-FieldDecl 0x5bfaf40 <line:116:7, col:15> col:15 referenced _M_state '_StateT'
| | |-AccessSpecDecl 0x5bfaf90 <line:118:5, col:11> col:5 public
| | |-CXXConstructorDecl 0x5bfb020 <line:123:7, line:124:33> line:123:7 fpos<_StateT> 'void ()'
| | | |-CXXCtorInitializer Field 0x5bfaee0 '_M_off' 'std::streamoff':'long'
| | | | `-ImplicitCastExpr 0x5bfbef8 <line:124:16> 'std::streamoff':'long' <IntegralCast>
| | | |   `-IntegerLiteral 0x5bfbeb8 <col:16> 'int' 0
| | | |-CXXCtorInitializer Field 0x5bfaf40 '_M_state' '_StateT'
| | | | `-ParenListExpr 0x5bfbf38 <col:28, col:29> 'NULL TYPE'
| | | `-CompoundStmt 0x5bfbf88 <col:31, col:33>
| | |-CXXConstructorDecl 0x5bfb1c8 <line:133:7, line:134:37> line:133:7 fpos<_StateT> 'void (std::streamoff)'
| | | |-ParmVarDecl 0x5bfb0d8 <col:12, col:22> col:22 referenced __off 'std::streamoff':'long'
| | | |-CXXCtorInitializer Field 0x5bfaee0 '_M_off' 'std::streamoff':'long'
| | | | `-ImplicitCastExpr 0x5bfbfd8 <line:134:16> 'std::streamoff':'long' <LValueToRValue>
| | | |   `-DeclRefExpr 0x5bfbf98 <col:16> 'std::streamoff':'long' lvalue ParmVar 0x5bfb0d8 '__off' 'std::streamoff':'long'
| | | |-CXXCtorInitializer Field 0x5bfaf40 '_M_state' '_StateT'
| | | | `-ParenListExpr 0x5bfc018 <col:32, col:33> 'NULL TYPE'
| | | `-CompoundStmt 0x5bfc068 <col:35, col:37>
| | |-CXXConversionDecl 0x5bfb348 <line:137:7, col:51> col:7 operator long 'std::streamoff () const'
| | | `-CompoundStmt 0x5bfc0c8 <col:34, col:51>
| | |   `-ReturnStmt 0x5bfc0b8 <col:36, col:43>
| | |     `-MemberExpr 0x5bfc088 <col:43> 'const std::streamoff':'const long' lvalue ->_M_off 0x5bfaee0
| | |       `-CXXThisExpr 0x5bfc078 <col:43> 'const fpos<_StateT> *' implicit this
| | |-CXXMethodDecl 0x5bfb4f8 <line:140:7, line:142:26> line:141:7 state 'void (_StateT)'
| | | |-ParmVarDecl 0x5bfb400 <col:13, col:21> col:21 referenced __st '_StateT'
| | | `-CompoundStmt 0x5bfc160 <line:142:7, col:26>
| | |   `-BinaryOperator 0x5bfc140 <col:9, col:20> '<dependent type>' '='
| | |     |-MemberExpr 0x5bfc0f0 <col:9> '_StateT' lvalue ->_M_state 0x5bfaf40
| | |     | `-CXXThisExpr 0x5bfc0e0 <col:9> 'fpos<_StateT> *' implicit this
| | |     `-DeclRefExpr 0x5bfc120 <col:20> '_StateT' lvalue ParmVar 0x5bfb400 '__st' '_StateT'
| | |-CXXMethodDecl 0x5bfb618 <line:145:7, line:147:26> line:146:7 state '_StateT () const'
| | | `-CompoundStmt 0x5bfc530 <line:147:7, col:26>
| | |   `-ReturnStmt 0x5bfc520 <col:9, col:16>
| | |     `-MemberExpr 0x5bfc4f0 <col:16> 'const _StateT' lvalue ->_M_state 0x5bfaf40
| | |       `-CXXThisExpr 0x5bfc178 <col:16> 'const fpos<_StateT> *' implicit this
| | |-CXXMethodDecl 0x5bfb7e8 <line:153:7, line:158:7> line:154:7 operator+= 'fpos<_StateT> &(std::streamoff)'
| | | |-ParmVarDecl 0x5bfb6c8 <col:18, col:28> col:28 referenced __off 'std::streamoff':'long'
| | | `-CompoundStmt 0x5bfc610 <line:155:7, line:158:7>
| | |   |-CompoundAssignOperator 0x5bfc5a8 <line:156:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |   | |-MemberExpr 0x5bfc558 <col:2> 'std::streamoff':'long' lvalue ->_M_off 0x5bfaee0
| | |   | | `-CXXThisExpr 0x5bfc548 <col:2> 'fpos<_StateT> *' implicit this
| | |   | `-DeclRefExpr 0x5bfc588 <col:12> 'std::streamoff':'long' lvalue ParmVar 0x5bfb6c8 '__off' 'std::streamoff':'long'
| | |   `-ReturnStmt 0x5bfc600 <line:157:2, col:10>
| | |     `-UnaryOperator 0x5bfc5e8 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | |       `-CXXThisExpr 0x5bfc5d8 <col:10> 'fpos<_StateT> *' this
| | |-CXXMethodDecl 0x5bfb930 <line:164:7, line:169:7> line:165:7 operator-= 'fpos<_StateT> &(std::streamoff)'
| | | |-ParmVarDecl 0x5bfb8a0 <col:18, col:28> col:28 referenced __off 'std::streamoff':'long'
| | | `-CompoundStmt 0x5bfc6f8 <line:166:7, line:169:7>
| | |   |-CompoundAssignOperator 0x5bfc690 <line:167:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |   | |-MemberExpr 0x5bfc640 <col:2> 'std::streamoff':'long' lvalue ->_M_off 0x5bfaee0
| | |   | | `-CXXThisExpr 0x5bfc630 <col:2> 'fpos<_StateT> *' implicit this
| | |   | `-DeclRefExpr 0x5bfc670 <col:12> 'std::streamoff':'long' lvalue ParmVar 0x5bfb8a0 '__off' 'std::streamoff':'long'
| | |   `-ReturnStmt 0x5bfc6e8 <line:168:2, col:10>
| | |     `-UnaryOperator 0x5bfc6d0 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
| | |       `-CXXThisExpr 0x5bfc6c0 <col:10> 'fpos<_StateT> *' this
| | |-CXXMethodDecl 0x5bfbad8 <line:177:7, line:183:7> line:178:7 operator+ 'fpos<_StateT> (std::streamoff) const'
| | | |-ParmVarDecl 0x5bfb9e8 <col:17, col:27> col:27 referenced __off 'std::streamoff':'long'
| | | `-CompoundStmt 0x5bfc8b8 <line:179:7, line:183:7>
| | |   |-DeclStmt 0x5bfc7f8 <line:180:2, col:19>
| | |   | `-VarDecl 0x5bfc728 <col:2, col:18> col:7 referenced __pos 'fpos<_StateT>' nrvo callinit
| | |   |   `-ParenListExpr 0x5bfc7d8 <col:12, col:18> 'NULL TYPE'
| | |   |     `-UnaryOperator 0x5bfc7a0 <col:13, col:14> '<dependent type>' prefix '*' cannot overflow
| | |   |       `-CXXThisExpr 0x5bfc790 <col:14> 'const fpos<_StateT> *' this
| | |   |-CompoundAssignOperator 0x5bfc850 <line:181:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |   | |-DeclRefExpr 0x5bfc810 <col:2> 'fpos<_StateT>' lvalue Var 0x5bfc728 '__pos' 'fpos<_StateT>'
| | |   | `-DeclRefExpr 0x5bfc830 <col:11> 'std::streamoff':'long' lvalue ParmVar 0x5bfb9e8 '__off' 'std::streamoff':'long'
| | |   `-ReturnStmt 0x5bfc8a0 <line:182:2, col:9>
| | |     `-DeclRefExpr 0x5bfc880 <col:9> 'fpos<_StateT>' lvalue Var 0x5bfc728 '__pos' 'fpos<_StateT>'
| | |-CXXMethodDecl 0x5bfbc20 <line:191:7, line:197:7> line:192:7 operator- 'fpos<_StateT> (std::streamoff) const'
| | | |-ParmVarDecl 0x5bfbb90 <col:17, col:27> col:27 referenced __off 'std::streamoff':'long'
| | | `-CompoundStmt 0x5bfca80 <line:193:7, line:197:7>
| | |   |-DeclStmt 0x5bfc9c0 <line:194:2, col:19>
| | |   | `-VarDecl 0x5bfc8f0 <col:2, col:18> col:7 referenced __pos 'fpos<_StateT>' nrvo callinit
| | |   |   `-ParenListExpr 0x5bfc9a0 <col:12, col:18> 'NULL TYPE'
| | |   |     `-UnaryOperator 0x5bfc968 <col:13, col:14> '<dependent type>' prefix '*' cannot overflow
| | |   |       `-CXXThisExpr 0x5bfc958 <col:14> 'const fpos<_StateT> *' this
| | |   |-CompoundAssignOperator 0x5bfca18 <line:195:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
| | |   | |-DeclRefExpr 0x5bfc9d8 <col:2> 'fpos<_StateT>' lvalue Var 0x5bfc8f0 '__pos' 'fpos<_StateT>'
| | |   | `-DeclRefExpr 0x5bfc9f8 <col:11> 'std::streamoff':'long' lvalue ParmVar 0x5bfbb90 '__off' 'std::streamoff':'long'
| | |   `-ReturnStmt 0x5bfca68 <line:196:2, col:9>
| | |     `-DeclRefExpr 0x5bfca48 <col:9> 'fpos<_StateT>' lvalue Var 0x5bfc8f0 '__pos' 'fpos<_StateT>'
| | `-CXXMethodDecl 0x5bfbdf8 <line:204:7, line:206:41> line:205:7 operator- 'std::streamoff (const fpos<_StateT> &) const'
| |   |-ParmVarDecl 0x5bfbd08 <col:17, col:29> col:29 referenced __other 'const fpos<_StateT> &'
| |   `-CompoundStmt 0x5bfcb80 <line:206:7, col:41>
| |     `-ReturnStmt 0x5bfcb70 <col:9, col:33>
| |       `-BinaryOperator 0x5bfcb50 <col:16, col:33> '<dependent type>' '-'
| |         |-MemberExpr 0x5bfcab8 <col:16> 'const std::streamoff':'const long' lvalue ->_M_off 0x5bfaee0
| |         | `-CXXThisExpr 0x5bfcaa8 <col:16> 'const fpos<_StateT> *' implicit this
| |         `-CXXDependentScopeMemberExpr 0x5bfcb08 <col:25, col:33> '<dependent type>' lvalue ._M_off
| |           `-DeclRefExpr 0x5bfcae8 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x5bfbd08 '__other' 'const fpos<_StateT> &'
| `-ClassTemplateSpecializationDecl 0x5bfdb28 <line:111:3, line:207:5> line:112:11 class fpos
|   `-TemplateArgument type '__mbstate_t'
|-FunctionTemplateDecl 0x5bfd038 <line:214:3, line:217:52> line:216:5 operator==
| |-TemplateTypeParmDecl 0x5bfcb98 <line:214:12, col:21> col:21 referenced typename depth 0 index 0 _StateT
| `-FunctionDecl 0x5bfcf98 <line:215:5, line:217:52> line:216:5 operator== 'bool (const fpos<_StateT> &, const fpos<_StateT> &)' inline
|   |-ParmVarDecl 0x5bfcd30 <col:16, col:37> col:37 referenced __lhs 'const fpos<_StateT> &'
|   |-ParmVarDecl 0x5bfce80 <col:44, col:65> col:65 referenced __rhs 'const fpos<_StateT> &'
|   `-CompoundStmt 0x5bfd180 <line:217:5, col:52>
|     `-ReturnStmt 0x5bfd170 <col:7, col:49>
|       `-BinaryOperator 0x5bfd150 <col:14, col:49> 'bool' '=='
|         |-CXXUnresolvedConstructExpr 0x5bfd0d0 <col:14, col:29> 'std::streamoff':'long' 'std::streamoff':'long'
|         | `-DeclRefExpr 0x5bfd0b0 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x5bfcd30 '__lhs' 'const fpos<_StateT> &'
|         `-CXXUnresolvedConstructExpr 0x5bfd128 <col:34, col:49> 'std::streamoff':'long' 'std::streamoff':'long'
|           `-DeclRefExpr 0x5bfd108 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x5bfce80 '__rhs' 'const fpos<_StateT> &'
|-FunctionTemplateDecl 0x5bfd9b8 <line:219:3, line:222:52> line:221:5 operator!=
| |-TemplateTypeParmDecl 0x5bfd198 <line:219:12, col:21> col:21 referenced typename depth 0 index 0 _StateT
| `-FunctionDecl 0x5bfd918 <line:220:5, line:222:52> line:221:5 operator!= 'bool (const fpos<_StateT> &, const fpos<_StateT> &)' inline
|   |-ParmVarDecl 0x5bfd300 <col:16, col:37> col:37 referenced __lhs 'const fpos<_StateT> &'
|   |-ParmVarDecl 0x5bfd450 <col:44, col:65> col:65 referenced __rhs 'const fpos<_StateT> &'
|   `-CompoundStmt 0x5bfdb00 <line:222:5, col:52>
|     `-ReturnStmt 0x5bfdaf0 <col:7, col:49>
|       `-BinaryOperator 0x5bfdad0 <col:14, col:49> 'bool' '!='
|         |-CXXUnresolvedConstructExpr 0x5bfda50 <col:14, col:29> 'std::streamoff':'long' 'std::streamoff':'long'
|         | `-DeclRefExpr 0x5bfda30 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x5bfd300 '__lhs' 'const fpos<_StateT> &'
|         `-CXXUnresolvedConstructExpr 0x5bfdaa8 <col:34, col:49> 'std::streamoff':'long' 'std::streamoff':'long'
|           `-DeclRefExpr 0x5bfda88 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x5bfd450 '__rhs' 'const fpos<_StateT> &'
|-TypedefDecl 0x5bfdcd0 <line:228:3, col:27> col:27 streampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
| `-TemplateSpecializationType 0x5bfdc30 'fpos<mbstate_t>' sugar fpos
|   |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|   `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
|     `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
|-TypedefDecl 0x5bfdde0 <line:230:3, col:27> col:27 wstreampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
| `-TemplateSpecializationType 0x5bfdd40 'fpos<mbstate_t>' sugar fpos
|   |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|   `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
|     `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
|-TypedefDecl 0x5bfdef0 <line:234:3, col:27> col:27 u16streampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
| `-TemplateSpecializationType 0x5bfde50 'fpos<mbstate_t>' sugar fpos
|   |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|   `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
|     `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
`-TypedefDecl 0x5bfe000 <line:236:3, col:27> col:27 u32streampos 'fpos<mbstate_t>':'std::fpos<__mbstate_t>'
  `-TemplateSpecializationType 0x5bfdf60 'fpos<mbstate_t>' sugar fpos
    |-TemplateArgument type 'mbstate_t':'__mbstate_t'
    `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
      `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
NamespaceDecl 0x5bfe178 prev 0x5bfa8e0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/iosfwd:42:1, line:213:1> line:42:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5bfe1e8 <col:31, col:56> Default
|-CXXRecordDecl 0x5bfe228 <line:74:3, col:9> col:9 class ios_base
|-ClassTemplateDecl 0x5bfe538 <line:76:3, line:77:11> col:11 basic_ios
| |-TemplateTypeParmDecl 0x5bfe2e0 <line:76:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5bfe410 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5bfe4a8 <line:77:5, col:11> col:11 class basic_ios
| |-ClassTemplateSpecializationDecl 0x5c06f50 <line:76:3, line:77:11> col:11 class basic_ios
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c09b70 <line:76:3, line:77:11> col:11 class basic_ios
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5bfe9e8 <line:79:3, line:80:11> col:11 basic_streambuf
| |-TemplateTypeParmDecl 0x5bfe768 <line:79:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5bfe8c0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5bfe958 <line:80:5, col:11> col:11 class basic_streambuf
| |-ClassTemplateSpecializationDecl 0x5c07230 <line:79:3, line:80:11> col:11 class basic_streambuf
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0a2f0 <line:79:3, line:80:11> col:11 class basic_streambuf
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5bfee68 <line:82:3, line:83:11> col:11 basic_istream
| |-TemplateTypeParmDecl 0x5bfec18 <line:82:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5bfed40 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5bfedd8 <line:83:5, col:11> col:11 class basic_istream
| |-ClassTemplateSpecializationDecl 0x5c07510 <line:82:3, line:83:11> col:11 class basic_istream
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0a5d0 <line:82:3, line:83:11> col:11 class basic_istream
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5bff2e8 <line:85:3, line:86:11> col:11 basic_ostream
| |-TemplateTypeParmDecl 0x5bff098 <line:85:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5bff1c0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5bff258 <line:86:5, col:11> col:11 class basic_ostream
| |-ClassTemplateSpecializationDecl 0x5c077f0 <line:85:3, line:86:11> col:11 class basic_ostream
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0a8b0 <line:85:3, line:86:11> col:11 class basic_ostream
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5bff768 <line:88:3, line:89:11> col:11 basic_iostream
| |-TemplateTypeParmDecl 0x5bff518 <line:88:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5bff640 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5bff6d8 <line:89:5, col:11> col:11 class basic_iostream
| |-ClassTemplateSpecializationDecl 0x5c07f30 <line:88:3, line:89:11> col:11 class basic_iostream
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0ab90 <line:88:3, line:89:11> col:11 class basic_iostream
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5c00790 <line:94:3, line:96:11> col:11 basic_stringbuf
| |-TemplateTypeParmDecl 0x5c00408 <line:94:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c00530 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-TemplateTypeParmDecl 0x5c00660 <line:95:6, col:40> col:15 typename depth 0 index 2 _Alloc
| | `-TemplateArgument type 'allocator<_CharT>'
| |-CXXRecordDecl 0x5c00700 <line:96:5, col:11> col:11 class basic_stringbuf
| |-ClassTemplateSpecializationDecl 0x5c08290 <line:94:3, line:96:11> col:11 class basic_stringbuf
| | |-TemplateArgument type 'char'
| | |-TemplateArgument type 'std::char_traits<char>'
| | `-TemplateArgument type 'std::allocator<char>'
| `-ClassTemplateSpecializationDecl 0x5c0aef0 <line:94:3, line:96:11> col:11 class basic_stringbuf
|   |-TemplateArgument type 'wchar_t'
|   |-TemplateArgument type 'std::char_traits<wchar_t>'
|   `-TemplateArgument type 'std::allocator<wchar_t>'
|-ClassTemplateDecl 0x5c00d60 <line:98:3, line:100:11> col:11 basic_istringstream
| |-TemplateTypeParmDecl 0x5c009d8 <line:98:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c00b00 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-TemplateTypeParmDecl 0x5c00c30 <line:99:5, col:39> col:14 typename depth 0 index 2 _Alloc
| | `-TemplateArgument type 'allocator<_CharT>'
| |-CXXRecordDecl 0x5c00cd0 <line:100:5, col:11> col:11 class basic_istringstream
| |-ClassTemplateSpecializationDecl 0x5c08600 <line:98:3, line:100:11> col:11 class basic_istringstream
| | |-TemplateArgument type 'char'
| | |-TemplateArgument type 'std::char_traits<char>'
| | `-TemplateArgument type 'std::allocator<char>'
| `-ClassTemplateSpecializationDecl 0x5c0c310 <line:98:3, line:100:11> col:11 class basic_istringstream
|   |-TemplateArgument type 'wchar_t'
|   |-TemplateArgument type 'std::char_traits<wchar_t>'
|   `-TemplateArgument type 'std::allocator<wchar_t>'
|-ClassTemplateDecl 0x5c01c00 <line:102:3, line:104:11> col:11 basic_ostringstream
| |-TemplateTypeParmDecl 0x5c00fa8 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c010d0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-TemplateTypeParmDecl 0x5c01200 <line:103:5, col:39> col:14 typename depth 0 index 2 _Alloc
| | `-TemplateArgument type 'allocator<_CharT>'
| |-CXXRecordDecl 0x5c01b70 <line:104:5, col:11> col:11 class basic_ostringstream
| |-ClassTemplateSpecializationDecl 0x5c08970 <line:102:3, line:104:11> col:11 class basic_ostringstream
| | |-TemplateArgument type 'char'
| | |-TemplateArgument type 'std::char_traits<char>'
| | `-TemplateArgument type 'std::allocator<char>'
| `-ClassTemplateSpecializationDecl 0x5c0c680 <line:102:3, line:104:11> col:11 class basic_ostringstream
|   |-TemplateArgument type 'wchar_t'
|   |-TemplateArgument type 'std::char_traits<wchar_t>'
|   `-TemplateArgument type 'std::allocator<wchar_t>'
|-ClassTemplateDecl 0x5c021d0 <line:106:3, line:108:11> col:11 basic_stringstream
| |-TemplateTypeParmDecl 0x5c01e48 <line:106:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c01f70 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-TemplateTypeParmDecl 0x5c020a0 <line:107:5, col:39> col:14 typename depth 0 index 2 _Alloc
| | `-TemplateArgument type 'allocator<_CharT>'
| |-CXXRecordDecl 0x5c02140 <line:108:5, col:11> col:11 class basic_stringstream
| |-ClassTemplateSpecializationDecl 0x5c08ce0 <line:106:3, line:108:11> col:11 class basic_stringstream
| | |-TemplateArgument type 'char'
| | |-TemplateArgument type 'std::char_traits<char>'
| | `-TemplateArgument type 'std::allocator<char>'
| `-ClassTemplateSpecializationDecl 0x5c0c9f0 <line:106:3, line:108:11> col:11 class basic_stringstream
|   |-TemplateArgument type 'wchar_t'
|   |-TemplateArgument type 'std::char_traits<wchar_t>'
|   `-TemplateArgument type 'std::allocator<wchar_t>'
|-ClassTemplateDecl 0x5c02668 <line:112:3, line:113:11> col:11 basic_filebuf
| |-TemplateTypeParmDecl 0x5c02418 <line:112:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c02540 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5c025d8 <line:113:5, col:11> col:11 class basic_filebuf
| |-ClassTemplateSpecializationDecl 0x5c08ff0 <line:112:3, line:113:11> col:11 class basic_filebuf
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0cce0 <line:112:3, line:113:11> col:11 class basic_filebuf
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5c02ae8 <line:115:3, line:116:11> col:11 basic_ifstream
| |-TemplateTypeParmDecl 0x5c02898 <line:115:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c029c0 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5c02a58 <line:116:5, col:11> col:11 class basic_ifstream
| |-ClassTemplateSpecializationDecl 0x5c092d0 <line:115:3, line:116:11> col:11 class basic_ifstream
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0cfc0 <line:115:3, line:116:11> col:11 class basic_ifstream
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5c04e28 <line:118:3, line:119:11> col:11 basic_ofstream
| |-TemplateTypeParmDecl 0x5c04bd8 <line:118:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c04d00 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5c04d98 <line:119:5, col:11> col:11 class basic_ofstream
| |-ClassTemplateSpecializationDecl 0x5c095b0 <line:118:3, line:119:11> col:11 class basic_ofstream
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0d320 <line:118:3, line:119:11> col:11 class basic_ofstream
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5c052a8 <line:121:3, line:122:11> col:11 basic_fstream
| |-TemplateTypeParmDecl 0x5c05058 <line:121:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c05180 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |-CXXRecordDecl 0x5c05218 <line:122:5, col:11> col:11 class basic_fstream
| |-ClassTemplateSpecializationDecl 0x5c09890 <line:121:3, line:122:11> col:11 class basic_fstream
| | |-TemplateArgument type 'char'
| | `-TemplateArgument type 'std::char_traits<char>'
| `-ClassTemplateSpecializationDecl 0x5c0d600 <line:121:3, line:122:11> col:11 class basic_fstream
|   |-TemplateArgument type 'wchar_t'
|   `-TemplateArgument type 'std::char_traits<wchar_t>'
|-ClassTemplateDecl 0x5c05728 <line:124:3, line:125:11> col:11 istreambuf_iterator
| |-TemplateTypeParmDecl 0x5c054d8 <line:124:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c05600 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| `-CXXRecordDecl 0x5c05698 <line:125:5, col:11> col:11 class istreambuf_iterator
|-ClassTemplateDecl 0x5c06c58 <line:127:3, line:128:11> col:11 ostreambuf_iterator
| |-TemplateTypeParmDecl 0x5c05958 <line:127:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5c06b30 <col:29, col:66> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| `-CXXRecordDecl 0x5c06bc8 <line:128:5, col:11> col:11 class ostreambuf_iterator
|-TypedefDecl 0x5c07110 <line:132:3, col:27> col:27 ios 'basic_ios<char>':'std::basic_ios<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c07070 'basic_ios<char>' sugar basic_ios
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c07050 'std::basic_ios<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c06f50 'basic_ios'
|-TypedefDecl 0x5c073f0 <line:135:3, col:33> col:33 streambuf 'basic_streambuf<char>':'std::basic_streambuf<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c07350 'basic_streambuf<char>' sugar basic_streambuf
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c07330 'std::basic_streambuf<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c07230 'basic_streambuf'
|-TypedefDecl 0x5c076d0 <line:138:3, col:31> col:31 istream 'basic_istream<char>':'std::basic_istream<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c07630 'basic_istream<char>' sugar basic_istream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c07610 'std::basic_istream<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c07510 'basic_istream'
|-TypedefDecl 0x5c079b0 <line:141:3, col:31> col:31 ostream 'basic_ostream<char>':'std::basic_ostream<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c07910 'basic_ostream<char>' sugar basic_ostream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c078f0 'std::basic_ostream<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c077f0 'basic_ostream'
|-TypedefDecl 0x5c080f0 <line:144:3, col:32> col:32 iostream 'basic_iostream<char>':'std::basic_iostream<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c08050 'basic_iostream<char>' sugar basic_iostream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c08030 'std::basic_iostream<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c07f30 'basic_iostream'
|-TypedefDecl 0x5c08460 <line:147:3, col:33> col:33 stringbuf 'basic_stringbuf<char>':'std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >'
| `-TemplateSpecializationType 0x5c083c0 'basic_stringbuf<char>' sugar basic_stringbuf
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c083a0 'std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >'
|     `-ClassTemplateSpecialization 0x5c08290 'basic_stringbuf'
|-TypedefDecl 0x5c087d0 <line:150:3, col:37> col:37 istringstream 'basic_istringstream<char>':'std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
| `-TemplateSpecializationType 0x5c08730 'basic_istringstream<char>' sugar basic_istringstream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c08710 'std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >'
|     `-ClassTemplateSpecialization 0x5c08600 'basic_istringstream'
|-TypedefDecl 0x5c08b40 <line:153:3, col:37> col:37 ostringstream 'basic_ostringstream<char>':'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
| `-TemplateSpecializationType 0x5c08aa0 'basic_ostringstream<char>' sugar basic_ostringstream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c08a80 'std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >'
|     `-ClassTemplateSpecialization 0x5c08970 'basic_ostringstream'
|-TypedefDecl 0x5c08ed0 <line:156:3, col:36> col:36 stringstream 'basic_stringstream<char>':'std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >'
| `-TemplateSpecializationType 0x5c08e10 'basic_stringstream<char>' sugar basic_stringstream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c08df0 'std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >'
|     `-ClassTemplateSpecialization 0x5c08ce0 'basic_stringstream'
|-TypedefDecl 0x5c091b0 <line:159:3, col:31> col:31 filebuf 'basic_filebuf<char>':'std::basic_filebuf<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c09110 'basic_filebuf<char>' sugar basic_filebuf
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c090f0 'std::basic_filebuf<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c08ff0 'basic_filebuf'
|-TypedefDecl 0x5c09490 <line:162:3, col:32> col:32 ifstream 'basic_ifstream<char>':'std::basic_ifstream<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c093f0 'basic_ifstream<char>' sugar basic_ifstream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c093d0 'std::basic_ifstream<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c092d0 'basic_ifstream'
|-TypedefDecl 0x5c09770 <line:165:3, col:32> col:32 ofstream 'basic_ofstream<char>':'std::basic_ofstream<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c096d0 'basic_ofstream<char>' sugar basic_ofstream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c096b0 'std::basic_ofstream<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c095b0 'basic_ofstream'
|-TypedefDecl 0x5c09a50 <line:168:3, col:31> col:31 fstream 'basic_fstream<char>':'std::basic_fstream<char, std::char_traits<char> >'
| `-TemplateSpecializationType 0x5c099b0 'basic_fstream<char>' sugar basic_fstream
|   |-TemplateArgument type 'char'
|   `-RecordType 0x5c09990 'std::basic_fstream<char, std::char_traits<char> >'
|     `-ClassTemplateSpecialization 0x5c09890 'basic_fstream'
|-TypedefDecl 0x5c09d30 <line:172:3, col:30> col:30 wios 'basic_ios<wchar_t>':'std::basic_ios<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c09c90 'basic_ios<wchar_t>' sugar basic_ios
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c09c70 'std::basic_ios<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c09b70 'basic_ios'
|-TypedefDecl 0x5c0a4b0 <line:175:3, col:36> col:36 wstreambuf 'basic_streambuf<wchar_t>':'std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0a410 'basic_streambuf<wchar_t>' sugar basic_streambuf
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0a3f0 'std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0a2f0 'basic_streambuf'
|-TypedefDecl 0x5c0a790 <line:178:3, col:34> col:34 wistream 'basic_istream<wchar_t>':'std::basic_istream<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0a6f0 'basic_istream<wchar_t>' sugar basic_istream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0a6d0 'std::basic_istream<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0a5d0 'basic_istream'
|-TypedefDecl 0x5c0aa70 <line:181:3, col:34> col:34 wostream 'basic_ostream<wchar_t>':'std::basic_ostream<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0a9d0 'basic_ostream<wchar_t>' sugar basic_ostream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0a9b0 'std::basic_ostream<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0a8b0 'basic_ostream'
|-TypedefDecl 0x5c0ad50 <line:184:3, col:35> col:35 wiostream 'basic_iostream<wchar_t>':'std::basic_iostream<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0acb0 'basic_iostream<wchar_t>' sugar basic_iostream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0ac90 'std::basic_iostream<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0ab90 'basic_iostream'
|-TypedefDecl 0x5c0b0c0 <line:187:3, col:36> col:36 wstringbuf 'basic_stringbuf<wchar_t>':'std::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| `-TemplateSpecializationType 0x5c0b020 'basic_stringbuf<wchar_t>' sugar basic_stringbuf
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0b000 'std::basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0aef0 'basic_stringbuf'
|-TypedefDecl 0x5c0c4e0 <line:190:3, col:40> col:40 wistringstream 'basic_istringstream<wchar_t>':'std::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| `-TemplateSpecializationType 0x5c0c440 'basic_istringstream<wchar_t>' sugar basic_istringstream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0c420 'std::basic_istringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0c310 'basic_istringstream'
|-TypedefDecl 0x5c0c850 <line:193:3, col:40> col:40 wostringstream 'basic_ostringstream<wchar_t>':'std::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| `-TemplateSpecializationType 0x5c0c7b0 'basic_ostringstream<wchar_t>' sugar basic_ostringstream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0c790 'std::basic_ostringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0c680 'basic_ostringstream'
|-TypedefDecl 0x5c0cbc0 <line:196:3, col:39> col:39 wstringstream 'basic_stringstream<wchar_t>':'std::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
| `-TemplateSpecializationType 0x5c0cb20 'basic_stringstream<wchar_t>' sugar basic_stringstream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0cb00 'std::basic_stringstream<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0c9f0 'basic_stringstream'
|-TypedefDecl 0x5c0cea0 <line:199:3, col:34> col:34 wfilebuf 'basic_filebuf<wchar_t>':'std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0ce00 'basic_filebuf<wchar_t>' sugar basic_filebuf
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0cde0 'std::basic_filebuf<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0cce0 'basic_filebuf'
|-TypedefDecl 0x5c0d180 <line:202:3, col:35> col:35 wifstream 'basic_ifstream<wchar_t>':'std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0d0e0 'basic_ifstream<wchar_t>' sugar basic_ifstream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0d0c0 'std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0cfc0 'basic_ifstream'
|-TypedefDecl 0x5c0d4e0 <line:205:3, col:35> col:35 wofstream 'basic_ofstream<wchar_t>':'std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >'
| `-TemplateSpecializationType 0x5c0d440 'basic_ofstream<wchar_t>' sugar basic_ofstream
|   |-TemplateArgument type 'wchar_t'
|   `-RecordType 0x5c0d420 'std::basic_ofstream<wchar_t, std::char_traits<wchar_t> >'
|     `-ClassTemplateSpecialization 0x5c0d320 'basic_ofstream'
`-TypedefDecl 0x5c0d7c0 <line:208:3, col:34> col:34 wfstream 'basic_fstream<wchar_t>':'std::basic_fstream<wchar_t, std::char_traits<wchar_t> >'
  `-TemplateSpecializationType 0x5c0d720 'basic_fstream<wchar_t>' sugar basic_fstream
    |-TemplateArgument type 'wchar_t'
    `-RecordType 0x5c0d700 'std::basic_fstream<wchar_t, std::char_traits<wchar_t> >'
      `-ClassTemplateSpecialization 0x5c0d600 'basic_fstream'
LinkageSpecDecl 0x5c0d838 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/exception.h:40:1, line:74:1> line:40:8 C++
`-NamespaceDecl 0x5c0d888 prev 0x5bfe178 <line:42:1, line:72:1> line:42:11 std
  |-original Namespace 0x5b39a58 'std'
  `-CXXRecordDecl 0x5c0d8f8 <line:60:3, line:70:3> line:60:9 class exception definition
    |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
    | |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
    | |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
    | |-MoveConstructor
    | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
    | |-MoveAssignment
    | `-Destructor non_trivial user_declared
    |-VisibilityAttr 0x5c0da18 <line:36:13> Implicit Default
    |-CXXRecordDecl 0x5c0da58 <line:60:3, col:9> col:9 implicit referenced class exception
    |-AccessSpecDecl 0x5c0dae8 <line:62:3, col:9> col:3 public
    |-CXXConstructorDecl 0x5c0db78 <line:63:5, col:28> col:5 exception 'void () noexcept'
    | `-CompoundStmt 0x5c0e058 <col:26, col:28>
    |-CXXDestructorDecl 0x5c0dc70 <line:64:5, col:26> col:13 ~exception 'void () noexcept' virtual
    |-CXXMethodDecl 0x5c0ddd8 <line:68:5, line:69:18> col:5 what 'const char *() const noexcept' virtual
    `-CXXMethodDecl 0x5c0ded8 <line:60:9> col:9 implicit operator= 'std::exception &(const std::exception &)' inline default noexcept-unevaluated 0x5c0ded8
      `-ParmVarDecl 0x5c0dfe8 <col:9> col:9 'const std::exception &'
LinkageSpecDecl 0x5c0e088 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/exception:40:1, line:137:1> line:40:8 C++
|-NamespaceDecl 0x5c0e0d8 prev 0x5c0d888 <line:42:1, line:110:1> line:42:11 std
| |-original Namespace 0x5b39a58 'std'
| |-CXXRecordDecl 0x5c0e148 <line:46:3, line:58:3> line:46:9 class bad_exception definition
| | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor needs_overload_resolution
| | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | | |-MoveAssignment needs_overload_resolution
| | | `-Destructor non_trivial user_declared needs_overload_resolution
| | |-public 'std::exception'
| | |-VisibilityAttr 0x5c0e268 <line:35:13> Implicit Default
| | |-CXXRecordDecl 0x5c10380 <line:46:3, col:9> col:9 implicit referenced class bad_exception
| | |-AccessSpecDecl 0x5c10410 <line:48:3, col:9> col:3 public
| | |-CXXConstructorDecl 0x5c104a8 <line:49:5, col:32> col:5 bad_exception 'void () noexcept'
| | | |-CXXCtorInitializer 'std::exception'
| | | | `-CXXConstructExpr 0x5c10c28 <col:5> 'std::exception' 'void () noexcept'
| | | `-CompoundStmt 0x5c10c90 <col:30, col:32>
| | |-CXXDestructorDecl 0x5c105a0 <line:53:5, col:30> col:13 ~bad_exception 'void () noexcept' virtual
| | | `-Overrides: [ 0x5c0dc70 exception::~exception 'void () noexcept' ]
| | |-CXXMethodDecl 0x5c106a8 <line:56:5, line:57:18> col:5 what 'const char *() const noexcept' virtual
| | | `-Overrides: [ 0x5c0ddd8 exception::what 'const char *() const noexcept' ]
| | |-CXXConstructorDecl 0x5c108f8 <line:46:9> col:9 implicit constexpr bad_exception 'void (const std::bad_exception &)' inline default noexcept-unevaluated 0x5c108f8
| | | `-ParmVarDecl 0x5c10a08 <col:9> col:9 'const std::bad_exception &'
| | `-CXXMethodDecl 0x5c10aa8 <col:9> col:9 implicit operator= 'std::bad_exception &(const std::bad_exception &)' inline default noexcept-unevaluated 0x5c10aa8
| |   `-ParmVarDecl 0x5c10bb8 <col:9> col:9 'const std::bad_exception &'
| |-TypedefDecl 0x5c10cd0 <line:61:3, col:38> col:18 referenced terminate_handler 'void (*)()'
| | `-PointerType 0x5b62280 'void (*)()'
| |   `-ParenType 0x5b62220 'void ()' sugar
| |     `-FunctionProtoType 0x5b62020 'void ()' cdecl
| |       `-BuiltinType 0x5aca260 'void'
| |-TypedefDecl 0x5c10d58 <line:64:3, col:39> col:18 referenced unexpected_handler 'void (*)()'
| | `-PointerType 0x5b62280 'void (*)()'
| |   `-ParenType 0x5b62220 'void ()' sugar
| |     `-FunctionProtoType 0x5b62020 'void ()' cdecl
| |       `-BuiltinType 0x5aca260 'void'
| |-FunctionDecl 0x5c10ee0 <line:67:3, col:54> col:21 set_terminate 'std::terminate_handler (std::terminate_handler) noexcept'
| | |-ParmVarDecl 0x5c10de0 <col:35> col:52 'std::terminate_handler':'void (*)()'
| | `-VisibilityAttr 0x5c10f88 <line:35:13> Implicit Default
| |-FunctionDecl 0x5c11050 <line:71:3, col:37> col:21 get_terminate 'std::terminate_handler () noexcept'
| | `-VisibilityAttr 0x5c110f0 <line:35:13> Implicit Default
| |-FunctionDecl 0x5c11180 <line:76:3, col:58> col:8 terminate 'void () __attribute__((noreturn)) noexcept'
| | `-VisibilityAttr 0x5c11220 <line:35:13> Implicit Default
| |-FunctionDecl 0x5c117a0 <line:79:3, col:57> col:22 set_unexpected 'std::unexpected_handler (std::unexpected_handler) noexcept'
| | |-ParmVarDecl 0x5c11290 <col:37> col:55 'std::unexpected_handler':'void (*)()'
| | `-VisibilityAttr 0x5c11848 <line:35:13> Implicit Default
| |-FunctionDecl 0x5c118e0 <line:83:3, col:39> col:22 get_unexpected 'std::unexpected_handler () noexcept'
| | `-VisibilityAttr 0x5c11980 <line:35:13> Implicit Default
| |-FunctionDecl 0x5c119e0 <line:88:3, col:50> col:8 unexpected 'void () __attribute__((noreturn))'
| | `-VisibilityAttr 0x5c11a80 <line:35:13> Implicit Default
| |-FunctionDecl 0x5c11b40 <line:101:3, col:63> col:8 uncaught_exception 'bool () noexcept'
| | |-PureAttr 0x5c11be0 <col:54>
| | `-VisibilityAttr 0x5c11c20 <line:35:13> Implicit Default
| `-FunctionDecl 0x5c11c88 <line:106:3, col:63> col:7 uncaught_exceptions 'int () noexcept'
|   |-PureAttr 0x5c11d28 <col:54>
|   `-VisibilityAttr 0x5c11d68 <line:35:13> Implicit Default
`-NamespaceDecl 0x5c11d78 prev 0x5bf9dd0 <line:112:1, line:135:1> line:112:11 __gnu_cxx
  |-original Namespace 0x5b95a90 '__gnu_cxx'
  `-FunctionDecl 0x5c11e08 <line:132:3, col:36> col:8 __verbose_terminate_handler 'void ()'
    `-VisibilityAttr 0x5c11ea8 <line:35:13> Implicit Default
NamespaceDecl 0x5c11ee8 prev 0x5c0e0d8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cxxabi_init_exception.h:50:1, line:53:1> line:50:11 std
|-original Namespace 0x5b39a58 'std'
`-CXXRecordDecl 0x5c11f58 <line:52:3, col:9> col:9 class type_info
  `-VisibilityAttr 0x5c12010 <line:36:13> Implicit Default
NamespaceDecl 0x5c12050 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cxxabi_init_exception.h:55:1, line:71:1> line:55:11 __cxxabiv1
|-CXXRecordDecl 0x5c120c0 <line:57:3, col:10> col:10 referenced struct __cxa_refcounted_exception
| `-VisibilityAttr 0x5c12170 <line:36:13> Implicit Default
`-LinkageSpecDecl 0x5c121d0 <line:59:3, line:70:5> line:59:10 C
  |-FunctionDecl 0x5c12308 <line:62:7, line:63:40> col:7 __cxa_allocate_exception 'void *(size_t) noexcept'
  | |-ParmVarDecl 0x5c12230 <col:32> col:38 'size_t':'unsigned long'
  | `-VisibilityAttr 0x5c123b0 <line:36:13> Implicit Default
  `-FunctionDecl 0x5c128a0 <line:66:7, line:68:41> line:67:7 __cxa_init_primary_exception '__cxxabiv1::__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept'
    |-ParmVarDecl 0x5c12408 <col:36, col:42> col:42 object 'void *'
    |-ParmVarDecl 0x5c12570 <col:50, col:66> col:66 tinfo 'std::type_info *'
    |-ParmVarDecl 0x5c12720 <line:68:17, col:38> col:25 dest 'void (*)(void *)'
    `-VisibilityAttr 0x5c12958 <line:36:13> Implicit Default
NamespaceDecl 0x5c12998 prev 0x5c11ee8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hash_bytes.h:37:1, line:57:1> line:37:11 std
|-original Namespace 0x5b39a58 'std'
|-FunctionDecl 0x5c12c38 <line:46:3, line:47:61> col:3 _Hash_bytes 'std::size_t (const void *, std::size_t, std::size_t)'
| |-ParmVarDecl 0x5c12a20 <col:15, col:27> col:27 __ptr 'const void *'
| |-ParmVarDecl 0x5c12a98 <col:34, col:41> col:41 __len 'std::size_t':'unsigned long'
| |-ParmVarDecl 0x5c12b10 <col:48, col:55> col:55 __seed 'std::size_t':'unsigned long'
| `-VisibilityAttr 0x5c12cf0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/exception_ptr.h:34:13> Implicit Default
`-FunctionDecl 0x5c12ed8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hash_bytes.h:53:3, line:54:65> col:3 _Fnv_hash_bytes 'std::size_t (const void *, std::size_t, std::size_t)'
  |-ParmVarDecl 0x5c12d48 <col:19, col:31> col:31 __ptr 'const void *'
  |-ParmVarDecl 0x5c12dc0 <col:38, col:45> col:45 __len 'std::size_t':'unsigned long'
  |-ParmVarDecl 0x5c12e38 <col:52, col:59> col:59 __seed 'std::size_t':'unsigned long'
  `-VisibilityAttr 0x5c12f90 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/exception_ptr.h:34:13> Implicit Default
LinkageSpecDecl 0x5c12ff0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/typeinfo:41:1, line:218:1> line:41:8 C++
|-NamespaceDecl 0x5c13040 prev 0x5c12050 <line:43:1, line:46:1> line:43:11 __cxxabiv1
| |-original Namespace 0x5c12050 '__cxxabiv1'
| `-CXXRecordDecl 0x5c130b0 <line:45:3, col:9> col:9 referenced class __class_type_info
|   `-VisibilityAttr 0x5c13160 <line:39:13> Implicit Default
`-NamespaceDecl 0x5c131a0 prev 0x5c12998 <line:80:1, line:216:1> line:80:11 std
  |-original Namespace 0x5b39a58 'std'
  |-CXXRecordDecl 0x5c13210 prev 0x5c11f58 <line:88:3, line:179:3> line:88:9 class type_info definition
  | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
  | | |-DefaultConstructor
  | | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
  | | |-MoveConstructor
  | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
  | | |-MoveAssignment
  | | `-Destructor non_trivial user_declared
  | |-VisibilityAttr 0x5c13338 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cxxabi_init_exception.h:36:13> Inherited Default
  | |-CXXRecordDecl 0x5c13348 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/typeinfo:88:3, col:9> col:9 implicit referenced class type_info
  | |-AccessSpecDecl 0x5c133d8 <line:90:3, col:9> col:3 public
  | |-CXXDestructorDecl 0x5c13448 <line:95:5, col:24> col:13 ~type_info 'void ()' virtual noexcept-unevaluated 0x5c13448
  | |-CXXMethodDecl 0x5c13588 <line:99:5, line:100:54> line:99:17 used name 'const char *() const noexcept'
  | | `-CompoundStmt 0x5c162d0 <line:100:5, col:54>
  | |   `-ReturnStmt 0x5c162c0 <col:7, col:46>
  | |     `-ConditionalOperator 0x5c16290 <col:14, col:46> 'const char *'
  | |       |-BinaryOperator 0x5c16180 <col:14, col:27> 'bool' '=='
  | |       | |-ImplicitCastExpr 0x5c16150 <col:14, col:22> 'int' <IntegralCast>
  | |       | | `-ImplicitCastExpr 0x5c16138 <col:14, col:22> 'char' <LValueToRValue>
  | |       | |   `-ArraySubscriptExpr 0x5c16100 <col:14, col:22> 'const char' lvalue
  | |       | |     |-ImplicitCastExpr 0x5c160e8 <col:14> 'const char *' <LValueToRValue>
  | |       | |     | `-MemberExpr 0x5c16098 <col:14> 'const char *const' lvalue ->__name 0x5c15038
  | |       | |     |   `-CXXThisExpr 0x5c16088 <col:14> 'const std::type_info *' implicit this
  | |       | |     `-IntegerLiteral 0x5c160c8 <col:21> 'int' 0
  | |       | `-ImplicitCastExpr 0x5c16168 <col:27> 'int' <IntegralCast>
  | |       |   `-CharacterLiteral 0x5c16120 <col:27> 'char' 42
  | |       |-BinaryOperator 0x5c16218 <col:33, col:42> 'const char *' '+'
  | |       | |-ImplicitCastExpr 0x5c16200 <col:33> 'const char *' <LValueToRValue>
  | |       | | `-MemberExpr 0x5c161b0 <col:33> 'const char *const' lvalue ->__name 0x5c15038
  | |       | |   `-CXXThisExpr 0x5c161a0 <col:33> 'const std::type_info *' implicit this
  | |       | `-IntegerLiteral 0x5c161e0 <col:42> 'int' 1
  | |       `-ImplicitCastExpr 0x5c16278 <col:46> 'const char *' <LValueToRValue>
  | |         `-MemberExpr 0x5c16248 <col:46> 'const char *const' lvalue ->__name 0x5c15038
  | |           `-CXXThisExpr 0x5c16238 <col:46> 'const std::type_info *' implicit this
  | |-CXXMethodDecl 0x5c143f0 <line:115:5, line:118:49> line:115:10 before 'bool (const std::type_info &) const noexcept'
  | | |-ParmVarDecl 0x5c13668 <col:17, col:34> col:34 used __arg 'const std::type_info &'
  | | `-CompoundStmt 0x5c16ad0 <line:116:5, line:118:49>
  | |   `-ReturnStmt 0x5c16ac0 <line:116:7, line:118:46>
  | |     `-ConditionalOperator 0x5c16a90 <line:116:14, line:118:46> 'bool'
  | |       |-ParenExpr 0x5c16548 <line:116:14, col:57> 'bool'
  | |       | `-BinaryOperator 0x5c16528 <col:15, col:54> 'bool' '&&'
  | |       |   |-BinaryOperator 0x5c163e0 <col:15, col:28> 'bool' '=='
  | |       |   | |-ImplicitCastExpr 0x5c163b0 <col:15, col:23> 'int' <IntegralCast>
  | |       |   | | `-ImplicitCastExpr 0x5c16398 <col:15, col:23> 'char' <LValueToRValue>
  | |       |   | |   `-ArraySubscriptExpr 0x5c16360 <col:15, col:23> 'const char' lvalue
  | |       |   | |     |-ImplicitCastExpr 0x5c16348 <col:15> 'const char *' <LValueToRValue>
  | |       |   | |     | `-MemberExpr 0x5c162f8 <col:15> 'const char *const' lvalue ->__name 0x5c15038
  | |       |   | |     |   `-CXXThisExpr 0x5c162e8 <col:15> 'const std::type_info *' implicit this
  | |       |   | |     `-IntegerLiteral 0x5c16328 <col:22> 'int' 0
  | |       |   | `-ImplicitCastExpr 0x5c163c8 <col:28> 'int' <IntegralCast>
  | |       |   |   `-CharacterLiteral 0x5c16380 <col:28> 'char' 42
  | |       |   `-BinaryOperator 0x5c16508 <col:35, col:54> 'bool' '=='
  | |       |     |-ImplicitCastExpr 0x5c164d8 <col:35, col:49> 'int' <IntegralCast>
  | |       |     | `-ImplicitCastExpr 0x5c164c0 <col:35, col:49> 'char' <LValueToRValue>
  | |       |     |   `-ArraySubscriptExpr 0x5c16488 <col:35, col:49> 'const char' lvalue
  | |       |     |     |-ImplicitCastExpr 0x5c16470 <col:35, col:41> 'const char *' <LValueToRValue>
  | |       |     |     | `-MemberExpr 0x5c16420 <col:35, col:41> 'const char *const' lvalue .__name 0x5c15038
  | |       |     |     |   `-DeclRefExpr 0x5c16400 <col:35> 'const std::type_info' lvalue ParmVar 0x5c13668 '__arg' 'const std::type_info &'
  | |       |     |     `-IntegerLiteral 0x5c16450 <col:48> 'int' 0
  | |       |     `-ImplicitCastExpr 0x5c164f0 <col:54> 'int' <IntegralCast>
  | |       |       `-CharacterLiteral 0x5c164a8 <col:54> 'char' 42
  | |       |-BinaryOperator 0x5c16628 <line:117:4, col:19> 'bool' '<'
  | |       | |-ImplicitCastExpr 0x5c165f8 <col:4> 'const char *' <LValueToRValue>
  | |       | | `-MemberExpr 0x5c16578 <col:4> 'const char *const' lvalue ->__name 0x5c15038
  | |       | |   `-CXXThisExpr 0x5c16568 <col:4> 'const std::type_info *' implicit this
  | |       | `-ImplicitCastExpr 0x5c16610 <col:13, col:19> 'const char *' <LValueToRValue>
  | |       |   `-MemberExpr 0x5c165c8 <col:13, col:19> 'const char *const' lvalue .__name 0x5c15038
  | |       |     `-DeclRefExpr 0x5c165a8 <col:13> 'const std::type_info' lvalue ParmVar 0x5c13668 '__arg' 'const std::type_info &'
  | |       `-BinaryOperator 0x5c16a70 <line:118:4, col:46> 'bool' '<'
  | |         |-CallExpr 0x5c169f0 <col:4, col:42> 'int'
  | |         | |-ImplicitCastExpr 0x5c169d8 <col:4> 'int (*)(const char *, const char *) noexcept' <BuiltinFnToFnPtr>
  | |         | | `-DeclRefExpr 0x5c16898 <col:4> '<builtin fn type>' Function 0x5c166d8 '__builtin_strcmp' 'int (const char *, const char *) noexcept'
  | |         | |-ImplicitCastExpr 0x5c16a20 <col:22> 'const char *' <LValueToRValue>
  | |         | | `-MemberExpr 0x5c168c8 <col:22> 'const char *const' lvalue ->__name 0x5c15038
  | |         | |   `-CXXThisExpr 0x5c168b8 <col:22> 'const std::type_info *' implicit this
  | |         | `-ImplicitCastExpr 0x5c16a38 <col:30, col:36> 'const char *' <LValueToRValue>
  | |         |   `-MemberExpr 0x5c16918 <col:30, col:36> 'const char *const' lvalue .__name 0x5c15038
  | |         |     `-DeclRefExpr 0x5c168f8 <col:30> 'const std::type_info' lvalue ParmVar 0x5c13668 '__arg' 'const std::type_info &'
  | |         `-IntegerLiteral 0x5c16a50 <col:46> 'int' 0
  | |-CXXMethodDecl 0x5c14540 <line:120:5, line:125:5> line:120:10 used operator== 'bool (const std::type_info &) const noexcept'
  | | |-ParmVarDecl 0x5c144a8 <col:21, col:38> col:38 used __arg 'const std::type_info &'
  | | `-CompoundStmt 0x5c16f28 <line:121:5, line:125:5>
  | |   `-ReturnStmt 0x5c16f18 <line:122:7, line:124:50>
  | |     `-ParenExpr 0x5c16ef8 <line:122:14, line:124:50> 'bool'
  | |       `-BinaryOperator 0x5c16ed8 <line:122:15, line:124:49> 'bool' '||'
  | |         |-ParenExpr 0x5c16bc8 <line:122:15, col:38> 'bool'
  | |         | `-BinaryOperator 0x5c16ba8 <col:16, col:32> 'bool' '=='
  | |         |   |-ImplicitCastExpr 0x5c16b78 <col:16> 'const char *' <LValueToRValue>
  | |         |   | `-MemberExpr 0x5c16af8 <col:16> 'const char *const' lvalue ->__name 0x5c15038
  | |         |   |   `-CXXThisExpr 0x5c16ae8 <col:16> 'const std::type_info *' implicit this
  | |         |   `-ImplicitCastExpr 0x5c16b90 <col:26, col:32> 'const char *' <LValueToRValue>
  | |         |     `-MemberExpr 0x5c16b48 <col:26, col:32> 'const char *const' lvalue .__name 0x5c15038
  | |         |       `-DeclRefExpr 0x5c16b28 <col:26> 'const std::type_info' lvalue ParmVar 0x5c144a8 '__arg' 'const std::type_info &'
  | |         `-ParenExpr 0x5c16eb8 <line:123:11, line:124:49> 'bool'
  | |           `-BinaryOperator 0x5c16e98 <line:123:12, line:124:48> 'bool' '&&'
  | |             |-BinaryOperator 0x5c16ce0 <line:123:12, col:25> 'bool' '!='
  | |             | |-ImplicitCastExpr 0x5c16cb0 <col:12, col:20> 'int' <IntegralCast>
  | |             | | `-ImplicitCastExpr 0x5c16c98 <col:12, col:20> 'char' <LValueToRValue>
  | |             | |   `-ArraySubscriptExpr 0x5c16c60 <col:12, col:20> 'const char' lvalue
  | |             | |     |-ImplicitCastExpr 0x5c16c48 <col:12> 'const char *' <LValueToRValue>
  | |             | |     | `-MemberExpr 0x5c16bf8 <col:12> 'const char *const' lvalue ->__name 0x5c15038
  | |             | |     |   `-CXXThisExpr 0x5c16be8 <col:12> 'const std::type_info *' implicit this
  | |             | |     `-IntegerLiteral 0x5c16c28 <col:19> 'int' 0
  | |             | `-ImplicitCastExpr 0x5c16cc8 <col:25> 'int' <IntegralCast>
  | |             |   `-CharacterLiteral 0x5c16c80 <col:25> 'char' 42
  | |             `-BinaryOperator 0x5c16e78 <line:124:5, col:48> 'bool' '=='
  | |               |-CallExpr 0x5c16df8 <col:5, col:43> 'int'
  | |               | |-ImplicitCastExpr 0x5c16de0 <col:5> 'int (*)(const char *, const char *) noexcept' <BuiltinFnToFnPtr>
  | |               | | `-DeclRefExpr 0x5c16d00 <col:5> '<builtin fn type>' Function 0x5c166d8 '__builtin_strcmp' 'int (const char *, const char *) noexcept'
  | |               | |-ImplicitCastExpr 0x5c16e28 <col:23> 'const char *' <LValueToRValue>
  | |               | | `-MemberExpr 0x5c16d30 <col:23> 'const char *const' lvalue ->__name 0x5c15038
  | |               | |   `-CXXThisExpr 0x5c16d20 <col:23> 'const std::type_info *' implicit this
  | |               | `-ImplicitCastExpr 0x5c16e40 <col:31, col:37> 'const char *' <LValueToRValue>
  | |               |   `-MemberExpr 0x5c16d80 <col:31, col:37> 'const char *const' lvalue .__name 0x5c15038
  | |               |     `-DeclRefExpr 0x5c16d60 <col:31> 'const std::type_info' lvalue ParmVar 0x5c144a8 '__arg' 'const std::type_info &'
  | |               `-IntegerLiteral 0x5c16e58 <col:48> 'int' 0
  | |-CXXMethodDecl 0x5c14690 <line:136:5, line:137:34> line:136:10 operator!= 'bool (const std::type_info &) const noexcept'
  | | |-ParmVarDecl 0x5c145f8 <col:21, col:38> col:38 used __arg 'const std::type_info &'
  | | `-CompoundStmt 0x5c16ff0 <line:137:5, col:34>
  | |   `-ReturnStmt 0x5c16fe0 <col:7, col:31>
  | |     `-UnaryOperator 0x5c16fc8 <col:14, col:31> 'bool' prefix '!' cannot overflow
  | |       `-CXXMemberCallExpr 0x5c16fa0 <col:15, col:31> 'bool'
  | |         |-MemberExpr 0x5c16f50 <col:15, col:23> '<bound member function type>' ->operator== 0x5c14540
  | |         | `-CXXThisExpr 0x5c16f40 <col:15> 'const std::type_info *' implicit this
  | |         `-DeclRefExpr 0x5c16f80 <col:26> 'const std::type_info' lvalue ParmVar 0x5c145f8 '__arg' 'const std::type_info &'
  | |-CXXMethodDecl 0x5c147c0 <line:140:5, line:148:5> line:140:12 hash_code 'std::size_t () const noexcept'
  | | `-CompoundStmt 0x5c17520 <line:141:5, line:148:5>
  | |   `-ReturnStmt 0x5c17510 <line:143:7, line:144:38>
  | |     `-CallExpr 0x5c174c0 <line:143:14, line:144:38> 'std::size_t':'unsigned long'
  | |       |-ImplicitCastExpr 0x5c174a8 <line:143:14> 'std::size_t (*)(const void *, std::size_t, std::size_t)' <FunctionToPointerDecay>
  | |       | `-DeclRefExpr 0x5c17428 <col:14> 'std::size_t (const void *, std::size_t, std::size_t)' lvalue Function 0x5c12c38 '_Hash_bytes' 'std::size_t (const void *, std::size_t, std::size_t)'
  | |       |-ImplicitCastExpr 0x5c174f8 <col:26, col:31> 'const void *' <BitCast>
  | |       | `-CXXMemberCallExpr 0x5c17090 <col:26, col:31> 'const char *'
  | |       |   `-MemberExpr 0x5c17060 <col:26> '<bound member function type>' ->name 0x5c13588
  | |       |     `-CXXThisExpr 0x5c17050 <col:26> 'const std::type_info *' implicit this
  | |       |-CallExpr 0x5c173a0 <col:34, col:57> 'unsigned long'
  | |       | |-ImplicitCastExpr 0x5c17388 <col:34> 'unsigned long (*)(const char *) noexcept' <BuiltinFnToFnPtr>
  | |       | | `-DeclRefExpr 0x5c172b0 <col:34> '<builtin fn type>' Function 0x5c17160 '__builtin_strlen' 'unsigned long (const char *) noexcept'
  | |       | `-CXXMemberCallExpr 0x5c17310 <col:51, col:56> 'const char *'
  | |       |   `-MemberExpr 0x5c172e0 <col:51> '<bound member function type>' ->name 0x5c13588
  | |       |     `-CXXThisExpr 0x5c172d0 <col:51> 'const std::type_info *' implicit this
  | |       `-CXXStaticCastExpr 0x5c173f8 <line:144:5, col:37> 'std::size_t':'unsigned long' static_cast<std::size_t> <NoOp>
  | |         `-IntegerLiteral 0x5c173c8 <col:25> 'unsigned long' 3339675911
  | |-CXXMethodDecl 0x5c148a8 <line:152:5, col:35> col:18 __is_pointer_p 'bool () const' virtual
  | |-CXXMethodDecl 0x5c14968 <line:155:5, col:36> col:18 __is_function_p 'bool () const' virtual
  | |-CXXMethodDecl 0x5c14bf8 <line:163:5, line:164:26> line:163:18 __do_catch 'bool (const std::type_info *, void **, unsigned int) const' virtual
  | | |-ParmVarDecl 0x5c14a18 <col:29, col:46> col:46 __thr_type 'const std::type_info *'
  | | |-ParmVarDecl 0x5c14a98 <col:58, col:65> col:65 __thr_obj 'void **'
  | | `-ParmVarDecl 0x5c14b18 <line:164:8, col:17> col:17 __outer 'unsigned int'
  | |-CXXMethodDecl 0x5c14f48 <line:167:5, line:168:27> line:167:18 __do_upcast 'bool (const __cxxabiv1::__class_type_info *, void **) const' virtual
  | | |-ParmVarDecl 0x5c14db0 <col:30, col:67> col:67 __target 'const __cxxabiv1::__class_type_info *'
  | | `-ParmVarDecl 0x5c14e30 <line:168:9, col:16> col:16 __obj_ptr 'void **'
  | |-AccessSpecDecl 0x5c14ff8 <line:170:3, col:12> col:3 protected
  | |-FieldDecl 0x5c15038 <line:171:5, col:17> col:17 referenced __name 'const char *'
  | |-CXXConstructorDecl 0x5c15148 <line:173:5, col:56> col:14 type_info 'void (const char *)'
  | | |-ParmVarDecl 0x5c150a0 <col:24, col:36> col:36 used __n 'const char *'
  | | |-CXXCtorInitializer Field 0x5c15038 '__name' 'const char *'
  | | | `-ImplicitCastExpr 0x5c17578 <col:49> 'const char *' <LValueToRValue>
  | | |   `-DeclRefExpr 0x5c17538 <col:49> 'const char *' lvalue ParmVar 0x5c150a0 '__n' 'const char *'
  | | `-CompoundStmt 0x5c175c0 <col:54, col:56>
  | |-AccessSpecDecl 0x5c151f8 <line:175:3, col:10> col:3 private
  | |-CXXMethodDecl 0x5c15328 <line:177:5, col:42> col:16 operator= 'std::type_info &(const std::type_info &)'
  | | `-ParmVarDecl 0x5c15230 <col:26, col:41> col:42 'const std::type_info &'
  | `-CXXConstructorDecl 0x5c15fd8 <line:178:5, col:31> col:5 type_info 'void (const std::type_info &)'
  |   `-ParmVarDecl 0x5c15f10 <col:15, col:30> col:31 'const std::type_info &'
  |-CXXRecordDecl 0x5c175d0 <line:187:3, line:198:3> line:187:9 class bad_cast definition
  | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
  | | |-DefaultConstructor exists non_trivial user_provided
  | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
  | | |-MoveConstructor needs_overload_resolution
  | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
  | | |-MoveAssignment needs_overload_resolution
  | | `-Destructor non_trivial user_declared needs_overload_resolution
  | |-public 'std::exception'
  | |-VisibilityAttr 0x5c176e8 <line:39:13> Implicit Default
  | |-CXXRecordDecl 0x5c17768 <line:187:3, col:9> col:9 implicit referenced class bad_cast
  | |-AccessSpecDecl 0x5c177f8 <line:189:3, col:9> col:3 public
  | |-CXXConstructorDecl 0x5c17888 <line:190:5, col:27> col:5 bad_cast 'void () noexcept'
  | | |-CXXCtorInitializer 'std::exception'
  | | | `-CXXConstructExpr 0x5c17e88 <col:5> 'std::exception' 'void () noexcept'
  | | `-CompoundStmt 0x5c17ef0 <col:25, col:27>
  | |-CXXDestructorDecl 0x5c17980 <line:194:5, col:25> col:13 ~bad_cast 'void () noexcept' virtual
  | | `-Overrides: [ 0x5c0dc70 exception::~exception 'void () noexcept' ]
  | |-CXXMethodDecl 0x5c17a88 <line:197:5, col:38> col:25 what 'const char *() const noexcept' virtual
  | | `-Overrides: [ 0x5c0ddd8 exception::what 'const char *() const noexcept' ]
  | |-CXXConstructorDecl 0x5c17b58 <line:187:9> col:9 implicit constexpr bad_cast 'void (const std::bad_cast &)' inline default noexcept-unevaluated 0x5c17b58
  | | `-ParmVarDecl 0x5c17c68 <col:9> col:9 'const std::bad_cast &'
  | `-CXXMethodDecl 0x5c17d08 <col:9> col:9 implicit operator= 'std::bad_cast &(const std::bad_cast &)' inline default noexcept-unevaluated 0x5c17d08
  |   `-ParmVarDecl 0x5c17e18 <col:9> col:9 'const std::bad_cast &'
  `-CXXRecordDecl 0x5c17f20 <line:204:3, line:215:3> line:204:9 class bad_typeid definition
    |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
    | |-DefaultConstructor exists non_trivial user_provided
    | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
    | |-MoveConstructor needs_overload_resolution
    | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
    | |-MoveAssignment needs_overload_resolution
    | `-Destructor non_trivial user_declared needs_overload_resolution
    |-public 'std::exception'
    |-VisibilityAttr 0x5c18038 <line:39:13> Implicit Default
    |-CXXRecordDecl 0x5c180b8 <line:204:3, col:9> col:9 implicit referenced class bad_typeid
    |-AccessSpecDecl 0x5c18148 <line:206:3, col:9> col:3 public
    |-CXXConstructorDecl 0x5c181d8 <line:207:5, col:30> col:5 bad_typeid 'void () noexcept'
    | |-CXXCtorInitializer 'std::exception'
    | | `-CXXConstructExpr 0x5c187d8 <col:5> 'std::exception' 'void () noexcept'
    | `-CompoundStmt 0x5c18840 <col:28, col:30>
    |-CXXDestructorDecl 0x5c182d0 <line:211:5, col:27> col:13 ~bad_typeid 'void () noexcept' virtual
    | `-Overrides: [ 0x5c0dc70 exception::~exception 'void () noexcept' ]
    |-CXXMethodDecl 0x5c183d8 <line:214:5, col:38> col:25 what 'const char *() const noexcept' virtual
    | `-Overrides: [ 0x5c0ddd8 exception::what 'const char *() const noexcept' ]
    |-CXXConstructorDecl 0x5c184a8 <line:204:9> col:9 implicit constexpr bad_typeid 'void (const std::bad_typeid &)' inline default noexcept-unevaluated 0x5c184a8
    | `-ParmVarDecl 0x5c185b8 <col:9> col:9 'const std::bad_typeid &'
    `-CXXMethodDecl 0x5c18658 <col:9> col:9 implicit operator= 'std::bad_typeid &(const std::bad_typeid &)' inline default noexcept-unevaluated 0x5c18658
      `-ParmVarDecl 0x5c18768 <col:9> col:9 'const std::bad_typeid &'
LinkageSpecDecl 0x5c18870 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/new:44:1, line:177:1> line:44:8 C++
|-NamespaceDecl 0x5c188c0 prev 0x5c131a0 <line:46:1, line:107:1> line:46:11 std
| |-original Namespace 0x5b39a58 'std'
| |-CXXRecordDecl 0x5c18930 <line:54:3, line:65:3> line:54:9 referenced class bad_alloc definition
| | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor needs_overload_resolution
| | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | | |-MoveAssignment needs_overload_resolution
| | | `-Destructor non_trivial user_declared needs_overload_resolution
| | |-public 'std::exception'
| | |-VisibilityAttr 0x5c18a48 <line:42:13> Implicit Default
| | |-CXXRecordDecl 0x5c18ac8 <line:54:3, col:9> col:9 implicit referenced class bad_alloc
| | |-AccessSpecDecl 0x5c18b58 <line:56:3, col:9> col:3 public
| | |-CXXConstructorDecl 0x5c18c10 <line:57:5, col:27> col:5 used bad_alloc 'void () throw()'
| | | |-CXXCtorInitializer 'std::exception'
| | | | `-CXXConstructExpr 0x5c19278 <col:5> 'std::exception' 'void () noexcept'
| | | `-CompoundStmt 0x5c192e0 <col:25, col:27>
| | |-CXXDestructorDecl 0x5c18d08 <line:61:5, col:32> col:13 used ~bad_alloc 'void () throw()' virtual
| | | `-Overrides: [ 0x5c0dc70 exception::~exception 'void () noexcept' ]
| | |-CXXMethodDecl 0x5c18e48 <line:64:5, col:44> col:25 what 'const char *() const throw()' virtual
| | | `-Overrides: [ 0x5c0ddd8 exception::what 'const char *() const noexcept' ]
| | |-CXXConstructorDecl 0x5c18f18 <line:54:9> col:9 implicit constexpr bad_alloc 'void (const std::bad_alloc &)' inline default noexcept-unevaluated 0x5c18f18
| | | `-ParmVarDecl 0x5c19028 <col:9> col:9 'const std::bad_alloc &'
| | `-CXXMethodDecl 0x5c190c8 <col:9> col:9 implicit operator= 'std::bad_alloc &(const std::bad_alloc &)' inline default noexcept-unevaluated 0x5c190c8
| |   `-ParmVarDecl 0x5c191d8 <col:9> col:9 'const std::bad_alloc &'
| |-CXXRecordDecl 0x5c192f0 <line:68:3, line:79:3> line:68:9 class bad_array_new_length definition
| | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | | |-MoveConstructor needs_overload_resolution
| | | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | | |-MoveAssignment needs_overload_resolution
| | | `-Destructor non_trivial user_declared needs_overload_resolution
| | |-public 'std::bad_alloc'
| | |-VisibilityAttr 0x5c19408 <line:42:13> Implicit Default
| | |-CXXRecordDecl 0x5c19488 <line:68:3, col:9> col:9 implicit referenced class bad_array_new_length
| | |-AccessSpecDecl 0x5c19518 <line:70:3, col:9> col:3 public
| | |-CXXConstructorDecl 0x5c195a8 <line:71:5, col:38> col:5 bad_array_new_length 'void () throw()'
| | | |-CXXCtorInitializer 'std::bad_alloc'
| | | | `-CXXConstructExpr 0x5c19ba8 <col:5> 'std::bad_alloc' 'void () throw()'
| | | `-CompoundStmt 0x5c19c10 <col:36, col:38>
| | |-CXXDestructorDecl 0x5c196a0 <line:75:5, col:43> col:13 ~bad_array_new_length 'void () throw()' virtual
| | | `-Overrides: [ 0x5c18d08 bad_alloc::~bad_alloc 'void () throw()' ]
| | |-CXXMethodDecl 0x5c197a8 <line:78:5, col:44> col:25 what 'const char *() const throw()' virtual
| | | `-Overrides: [ 0x5c18e48 bad_alloc::what 'const char *() const throw()' ]
| | |-CXXConstructorDecl 0x5c19878 <line:68:9> col:9 implicit constexpr bad_array_new_length 'void (const std::bad_array_new_length &)' inline default noexcept-unevaluated 0x5c19878
| | | `-ParmVarDecl 0x5c19988 <col:9> col:9 'const std::bad_array_new_length &'
| | `-CXXMethodDecl 0x5c19a28 <col:9> col:9 implicit operator= 'std::bad_array_new_length &(const std::bad_array_new_length &)' inline default noexcept-unevaluated 0x5c19a28
| |   `-ParmVarDecl 0x5c19b38 <col:9> col:9 'const std::bad_array_new_length &'
| |-CXXRecordDecl 0x5c19c20 <line:86:3, line:91:3> line:86:10 referenced struct nothrow_t definition
| | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-VisibilityAttr 0x5c19d38 <line:42:13> Implicit Default
| | |-CXXRecordDecl 0x5c19d78 <line:86:3, col:10> col:10 implicit referenced struct nothrow_t
| | `-CXXConstructorDecl 0x5c19e70 <line:89:5, col:34> col:14 constexpr nothrow_t 'void ()' default trivial noexcept-unevaluated 0x5c19e70
| |-VarDecl 0x5c1a7b0 <line:93:3, col:26> col:26 nothrow 'const std::nothrow_t' extern
| | `-VisibilityAttr 0x5c1a818 <line:42:13> Implicit Default
| |-TypedefDecl 0x5c1a888 <line:97:3, col:31> col:18 referenced new_handler 'void (*)()'
| | `-PointerType 0x5b62280 'void (*)()'
| |   `-ParenType 0x5b62220 'void ()' sugar
| |     `-FunctionProtoType 0x5b62020 'void ()' cdecl
| |       `-BuiltinType 0x5aca260 'void'
| |-FunctionDecl 0x5c1a9e0 <line:101:3, col:50> col:15 set_new_handler 'std::new_handler (std::new_handler) throw()'
| | |-ParmVarDecl 0x5c1a910 <col:31> col:42 'std::new_handler':'void (*)()'
| | `-VisibilityAttr 0x5c1aa88 <line:42:13> Implicit Default
| `-FunctionDecl 0x5c1ab20 <line:105:3, col:33> col:15 get_new_handler 'std::new_handler () noexcept'
|   `-VisibilityAttr 0x5c1abc0 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1b2e0 prev 0x5c1ad70 <line:120:1, line:121:41> line:120:7 operator new 'void *(std::size_t)'
| |-ParmVarDecl 0x5c1aca0 <col:20, col:25> col:31 'std::size_t':'unsigned long'
| `-VisibilityAttr 0x5c1b3b8 <<invalid sloc>> Inherited Default
|-FunctionDecl 0x5c1b4b0 prev 0x5c1aec0 <line:122:1, line:123:41> line:122:7 operator new[] 'void *(std::size_t)'
| |-ParmVarDecl 0x5c1b418 <col:22, col:27> col:33 'std::size_t':'unsigned long'
| `-VisibilityAttr 0x5c1b588 <<invalid sloc>> Inherited Default
|-FunctionDecl 0x5c1b648 prev 0x5c1b040 <line:124:1, line:125:41> line:124:6 operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x5c1b5b0 <col:22, col:26> col:27 'void *'
| `-VisibilityAttr 0x5c1b720 <<invalid sloc>> Inherited Default
|-FunctionDecl 0x5c1b7e0 prev 0x5c1b190 <line:126:1, line:127:41> line:126:6 operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x5c1b748 <col:24, col:28> col:29 'void *'
| `-VisibilityAttr 0x5c1b8b8 <<invalid sloc>> Inherited Default
|-FunctionDecl 0x5c1bb88 <line:134:1, line:135:41> line:134:7 operator new 'void *(std::size_t, const std::nothrow_t &) noexcept'
| |-ParmVarDecl 0x5c1b918 <col:20, col:25> col:31 'std::size_t':'unsigned long'
| |-ParmVarDecl 0x5c1ba60 <col:33, col:53> col:54 'const std::nothrow_t &'
| `-VisibilityAttr 0x5c1bc38 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1be30 <line:136:1, line:137:41> line:136:7 operator new[] 'void *(std::size_t, const std::nothrow_t &) noexcept'
| |-ParmVarDecl 0x5c1bcc8 <col:22, col:27> col:33 'std::size_t':'unsigned long'
| |-ParmVarDecl 0x5c1bd88 <col:35, col:55> col:56 'const std::nothrow_t &'
| `-VisibilityAttr 0x5c1bee0 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1c110 <line:138:1, line:139:41> line:138:6 operator delete 'void (void *, const std::nothrow_t &) noexcept'
| |-ParmVarDecl 0x5c1bf38 <col:22, col:26> col:27 'void *'
| |-ParmVarDecl 0x5c1bff8 <col:29, col:49> col:50 'const std::nothrow_t &'
| `-VisibilityAttr 0x5c1c1c0 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1c378 <line:140:1, line:141:41> line:140:6 operator delete[] 'void (void *, const std::nothrow_t &) noexcept'
| |-ParmVarDecl 0x5c1c218 <col:24, col:28> col:29 'void *'
| |-ParmVarDecl 0x5c1c2d8 <col:31, col:51> col:52 'const std::nothrow_t &'
| `-VisibilityAttr 0x5c1c428 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1c658 <line:168:1, line:169:15> line:168:14 operator new 'void *(std::size_t, void *) noexcept' inline
| |-ParmVarDecl 0x5c1c4b8 <col:27, col:32> col:38 'std::size_t':'unsigned long'
| |-ParmVarDecl 0x5c1c538 <col:40, col:46> col:46 used __p 'void *'
| |-CompoundStmt 0x5c1e7b8 <line:169:1, col:15>
| | `-ReturnStmt 0x5c1e7a8 <col:3, col:10>
| |   `-ImplicitCastExpr 0x5c1e790 <col:10> 'void *' <LValueToRValue>
| |     `-DeclRefExpr 0x5c1e770 <col:10> 'void *' lvalue ParmVar 0x5c1c538 '__p' 'void *'
| `-VisibilityAttr 0x5c1c708 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1e948 <line:170:1, line:171:15> line:170:14 operator new[] 'void *(std::size_t, void *) noexcept' inline
| |-ParmVarDecl 0x5c1e820 <col:29, col:34> col:40 'std::size_t':'unsigned long'
| |-ParmVarDecl 0x5c1e8a0 <col:42, col:48> col:48 used __p 'void *'
| |-CompoundStmt 0x5c1ea80 <line:171:1, col:15>
| | `-ReturnStmt 0x5c1ea70 <col:3, col:10>
| |   `-ImplicitCastExpr 0x5c1ea58 <col:10> 'void *' <LValueToRValue>
| |     `-DeclRefExpr 0x5c1ea38 <col:10> 'void *' lvalue ParmVar 0x5c1e8a0 '__p' 'void *'
| `-VisibilityAttr 0x5c1e9f8 <line:42:13> Implicit Default
|-FunctionDecl 0x5c1ec50 <line:174:1, col:55> col:13 operator delete 'void (void *, void *) noexcept' inline
| |-ParmVarDecl 0x5c1eab0 <col:30, col:34> col:35 'void *'
| |-ParmVarDecl 0x5c1eb30 <col:37, col:41> col:42 'void *'
| |-CompoundStmt 0x5c1ed40 <col:53, col:55>
| `-VisibilityAttr 0x5c1ed00 <line:42:13> Implicit Default
`-FunctionDecl 0x5c1ee88 <line:175:1, col:56> col:13 operator delete[] 'void (void *, void *) noexcept' inline
  |-ParmVarDecl 0x5c1ed68 <col:31, col:35> col:36 'void *'
  |-ParmVarDecl 0x5c1ede8 <col:38, col:42> col:43 'void *'
  |-CompoundStmt 0x5c1ef78 <col:54, col:56>
  `-VisibilityAttr 0x5c1ef38 <line:42:13> Implicit Default
LinkageSpecDecl 0x5c1efa8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/exception_ptr.h:42:1, line:220:1> line:42:8 C++
`-NamespaceDecl 0x5c1eff8 prev 0x5c188c0 <line:44:1, line:218:1> line:44:11 std
  |-original Namespace 0x5b39a58 'std'
  |-CXXRecordDecl 0x5c1f068 prev 0x5c13210 <line:46:3, col:9> col:9 referenced class type_info
  | `-VisibilityAttr 0x5c1f128 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cxxabi_init_exception.h:36:13> Inherited Default
  |-NamespaceDecl 0x5c1f138 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/exception_ptr.h:52:3, line:55:3> line:52:13 __exception_ptr
  | `-CXXRecordDecl 0x5c1f1a8 <line:54:5, col:11> col:11 referenced class exception_ptr
  |   `-VisibilityAttr 0x5c1f260 <line:34:13> Implicit Default
  |-UsingDecl 0x5c1f2c0 <line:57:3, col:26> col:26 __exception_ptr::exception_ptr
  |-UsingShadowDecl 0x5c1f318 <col:26> col:26 implicit CXXRecord 0x5c1f1a8 'exception_ptr'
  | `-RecordType 0x5c1f240 'std::__exception_ptr::exception_ptr'
  |   `-CXXRecord 0x5c1fad8 'exception_ptr'
  |-FunctionDecl 0x5c1f3f0 <line:63:3, col:37> col:17 referenced current_exception 'std::__exception_ptr::exception_ptr () noexcept'
  | `-VisibilityAttr 0x5c1f490 <line:34:13> Implicit Default
  |-FunctionTemplateDecl 0x5c1f710 <line:65:3, line:66:41> col:17 make_exception_ptr
  | |-TemplateTypeParmDecl 0x5c1f4d0 <line:65:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
  | `-FunctionDecl 0x5c1f670 <line:66:3, col:41> col:17 make_exception_ptr 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
  |   |-ParmVarDecl 0x5c1f570 <col:36> col:39 '_Ex'
  |   `-VisibilityAttr 0x5c1f770 <line:34:13> Implicit Default
  |-FunctionDecl 0x5c1f8b8 <line:69:3, col:70> col:8 rethrow_exception 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
  | |-ParmVarDecl 0x5c1f7c0 <col:26> col:39 'std::__exception_ptr::exception_ptr'
  | `-VisibilityAttr 0x5c1f960 <line:34:13> Implicit Default
  |-NamespaceDecl 0x5c1f9a0 prev 0x5c1f138 <line:71:3, line:174:3> line:71:13 __exception_ptr
  | |-original Namespace 0x5c1f138 '__exception_ptr'
  | |-UsingDecl 0x5c1fa30 <line:73:5, col:16> col:16 std::rethrow_exception
  | |-UsingShadowDecl 0x5c1fa88 <col:16> col:16 implicit Function 0x5c1f8b8 'rethrow_exception' 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
  | |-CXXRecordDecl 0x5c1fad8 prev 0x5c1f1a8 <line:79:5, line:155:5> line:79:11 referenced class exception_ptr definition
  | | |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
  | | | |-DefaultConstructor exists non_trivial user_provided
  | | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
  | | | |-MoveConstructor exists non_trivial user_declared
  | | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
  | | | |-MoveAssignment exists non_trivial user_declared
  | | | `-Destructor non_trivial user_declared
  | | |-VisibilityAttr 0x5c1fc00 <line:34:13> Inherited Default
  | | |-CXXRecordDecl 0x5c1fc10 <line:79:5, col:11> col:11 implicit referenced class exception_ptr
  | | |-FieldDecl 0x5c1fcb8 <line:81:7, col:13> col:13 referenced _M_exception_object 'void *'
  | | |-CXXConstructorDecl 0x5c1fe00 <line:83:7, col:41> col:16 referenced exception_ptr 'void (void *) noexcept'
  | | | `-ParmVarDecl 0x5c1fd20 <col:30, col:36> col:36 __e 'void *'
  | | |-CXXMethodDecl 0x5c1fed8 <line:85:7, col:24> col:12 _M_addref 'void () noexcept'
  | | |-CXXMethodDecl 0x5c1ffa0 <line:86:7, col:25> col:12 _M_release 'void () noexcept'
  | | |-CXXMethodDecl 0x5c200f8 <line:88:7, col:62> col:13 _M_get 'void *() const noexcept'
  | | | `-PureAttr 0x5c20198 <col:53>
  | | |-FriendDecl 0x5c20320 <line:90:7, col:53> col:33
  | | | `-FunctionDecl 0x5c20200 parent 0x5c1eff8 prev 0x5c1f3f0 <col:7, col:53> col:33 current_exception 'std::__exception_ptr::exception_ptr () noexcept'
  | | |   `-VisibilityAttr 0x5c20310 <line:34:13> Inherited Default
  | | |-FriendDecl 0x5c20528 <line:91:7, col:55> col:24
  | | | `-FunctionDecl 0x5c20400 parent 0x5c1eff8 prev 0x5c1f8b8 <col:7, col:55> col:24 rethrow_exception 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
  | | |   |-ParmVarDecl 0x5c20370 <col:42> col:55 'std::__exception_ptr::exception_ptr'
  | | |   `-VisibilityAttr 0x5c20518 <line:34:13> Inherited Default
  | | |-FriendDecl 0x5c22880 <line:92:7, line:93:57> col:33
  | | | `-FunctionTemplateDecl 0x5c227d0 parent 0x5c1eff8 prev 0x5c1f710 <line:92:7, line:93:57> col:33 make_exception_ptr
  | | |   |-TemplateTypeParmDecl 0x5c20568 <line:92:16, col:25> col:25 referenced typename depth 0 index 0 _Ex
  | | |   `-FunctionDecl 0x5c206d0 parent 0x5c1eff8 prev 0x5c1f670 <line:93:7, col:57> col:33 make_exception_ptr 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
  | | |     |-ParmVarDecl 0x5c20600 <col:52> col:55 '_Ex'
  | | |     `-VisibilityAttr 0x5c22870 <line:34:13> Inherited Default
  | | |-AccessSpecDecl 0x5c228c0 <line:95:5, col:11> col:5 public
  | | |-CXXConstructorDecl 0x5c22910 <line:96:7, col:23> col:7 exception_ptr 'void () noexcept'
  | | |-CXXConstructorDecl 0x5c22af0 <line:98:7, col:43> col:7 exception_ptr 'void (const std::__exception_ptr::exception_ptr &) noexcept'
  | | | `-ParmVarDecl 0x5c229f8 <col:21, col:40> col:41 'const std::__exception_ptr::exception_ptr &'
  | | |-CXXConstructorDecl 0x5c22cd0 <line:101:7, line:103:9> line:101:7 exception_ptr 'void (std::nullptr_t) noexcept'
  | | | |-ParmVarDecl 0x5c22bd0 <col:21> col:30 'std::nullptr_t':'nullptr_t'
  | | | |-CXXCtorInitializer Field 0x5c1fcb8 '_M_exception_object' 'void *'
  | | | | `-ImplicitCastExpr 0x5c23bb0 <line:102:29> 'void *' <NullToPointer>
  | | | |   `-IntegerLiteral 0x5c23b70 <col:29> 'int' 0
  | | | `-CompoundStmt 0x5c23bf8 <line:103:7, col:9>
  | | |-CXXConstructorDecl 0x5c22eb0 <line:105:7, line:107:38> line:105:7 used exception_ptr 'void (std::__exception_ptr::exception_ptr &&) noexcept'
  | | | |-ParmVarDecl 0x5c22db8 <col:21, col:37> col:37 used __o 'std::__exception_ptr::exception_ptr &&'
  | | | |-CXXCtorInitializer Field 0x5c1fcb8 '_M_exception_object' 'void *'
  | | | | `-ImplicitCastExpr 0x5c23c78 <line:106:29, col:33> 'void *' <LValueToRValue>
  | | | |   `-MemberExpr 0x5c23c28 <col:29, col:33> 'void *' lvalue ._M_exception_object 0x5c1fcb8
  | | | |     `-DeclRefExpr 0x5c23c08 <col:29> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5c22db8 '__o' 'std::__exception_ptr::exception_ptr &&'
  | | | `-CompoundStmt 0x5c23d68 <line:107:7, col:38>
  | | |   `-BinaryOperator 0x5c23d48 <col:9, col:35> 'void *' lvalue '='
  | | |     |-MemberExpr 0x5c23ce0 <col:9, col:13> 'void *' lvalue ._M_exception_object 0x5c1fcb8
  | | |     | `-DeclRefExpr 0x5c23cc0 <col:9> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5c22db8 '__o' 'std::__exception_ptr::exception_ptr &&'
  | | |     `-ImplicitCastExpr 0x5c23d30 <col:35> 'void *' <NullToPointer>
  | | |       `-IntegerLiteral 0x5c23d10 <col:35> 'int' 0
  | | |-CXXMethodDecl 0x5c230a0 <line:117:7, line:118:39> col:7 operator= 'std::__exception_ptr::exception_ptr &(const std::__exception_ptr::exception_ptr &) noexcept'
  | | | `-ParmVarDecl 0x5c22f70 <col:17, col:36> col:37 'const std::__exception_ptr::exception_ptr &'
  | | |-CXXMethodDecl 0x5c23250 <line:121:7, line:126:7> line:122:7 operator= 'std::__exception_ptr::exception_ptr &(std::__exception_ptr::exception_ptr &&) noexcept'
  | | | |-ParmVarDecl 0x5c23158 <col:17, col:33> col:33 used __o 'std::__exception_ptr::exception_ptr &&'
  | | | `-CompoundStmt 0x5c23f58 <line:123:7, line:126:7>
  | | |   |-ExprWithCleanups 0x5c23f08 <line:124:9, col:68> 'void'
  | | |   | `-CXXMemberCallExpr 0x5c23ee0 <col:9, col:68> 'void'
  | | |   |   |-MemberExpr 0x5c23e88 <col:9, col:58> '<bound member function type>' .swap 0x5c23500
  | | |   |   | `-MaterializeTemporaryExpr 0x5c23e70 <col:9, col:56> 'std::__exception_ptr::exception_ptr' xvalue
  | | |   |   |   `-CXXFunctionalCastExpr 0x5c23e48 <col:9, col:56> 'std::__exception_ptr::exception_ptr' functional cast to class std::__exception_ptr::exception_ptr <ConstructorConversion>
  | | |   |   |     `-CXXBindTemporaryExpr 0x5c23e28 <col:9, col:56> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5c23e20)
  | | |   |   |       `-CXXConstructExpr 0x5c23df0 <col:9, col:56> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept'
  | | |   |   |         `-CXXStaticCastExpr 0x5c23dc0 <col:23, col:55> 'std::__exception_ptr::exception_ptr' xvalue static_cast<class std::__exception_ptr::exception_ptr &&> <NoOp>
  | | |   |   |           `-DeclRefExpr 0x5c23d90 <col:52> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5c23158 '__o' 'std::__exception_ptr::exception_ptr &&'
  | | |   |   `-UnaryOperator 0x5c23ec8 <col:63, col:64> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
  | | |   |     `-CXXThisExpr 0x5c23eb8 <col:64> 'std::__exception_ptr::exception_ptr *' this
  | | |   `-ReturnStmt 0x5c23f48 <line:125:9, col:17>
  | | |     `-UnaryOperator 0x5c23f30 <col:16, col:17> 'std::__exception_ptr::exception_ptr' lvalue prefix '*' cannot overflow
  | | |       `-CXXThisExpr 0x5c23f20 <col:17> 'std::__exception_ptr::exception_ptr *' this
  | | |-CXXDestructorDecl 0x5c23348 <line:129:7, col:24> col:7 used ~exception_ptr 'void () noexcept'
  | | |-CXXMethodDecl 0x5c23500 <line:131:7, line:132:28> col:7 used swap 'void (std::__exception_ptr::exception_ptr &) noexcept'
  | | | `-ParmVarDecl 0x5c23408 <col:12, col:25> col:26 'std::__exception_ptr::exception_ptr &'
  | | |-CXXConversionDecl 0x5c235f0 <line:144:7, line:145:37> line:144:16 operator bool 'bool () const'
  | | | `-CompoundStmt 0x5c23ff8 <line:145:7, col:37>
  | | |   `-ReturnStmt 0x5c23fe8 <col:9, col:16>
  | | |     `-ImplicitCastExpr 0x5c23fd0 <col:16> 'bool' <PointerToBoolean>
  | | |       `-ImplicitCastExpr 0x5c23fb8 <col:16> 'void *' <LValueToRValue>
  | | |         `-MemberExpr 0x5c23f88 <col:16> 'void *const' lvalue ->_M_exception_object 0x5c1fcb8
  | | |           `-CXXThisExpr 0x5c23f78 <col:16> 'const std::__exception_ptr::exception_ptr *' implicit this
  | | |-FriendDecl 0x5c23950 <line:148:7, line:150:36> line:149:7
  | | | `-FunctionDecl 0x5c23840 parent 0x5c1f9a0 <line:148:7, line:150:36> line:149:7 operator== 'bool (const std::__exception_ptr::exception_ptr &, const std::__exception_ptr::exception_ptr &) noexcept'
  | | |   |-ParmVarDecl 0x5c236a8 <col:18, col:37> col:38 'const std::__exception_ptr::exception_ptr &'
  | | |   |-ParmVarDecl 0x5c23720 <col:40, col:59> col:60 'const std::__exception_ptr::exception_ptr &'
  | | |   |-PureAttr 0x5c23900 <line:150:27>
  | | |   `-VisibilityAttr 0x5c23940 <line:34:13> Implicit Default
  | | `-CXXMethodDecl 0x5c23a90 <line:152:7, line:154:27> line:153:7 __cxa_exception_type 'const class std::type_info *() const noexcept'
  | |   `-PureAttr 0x5c23b30 <line:154:18>
  | |-FunctionDecl 0x5c24138 prev 0x5c23840 <line:157:5, line:159:41> line:158:5 operator== 'bool (const std::__exception_ptr::exception_ptr &, const std::__exception_ptr::exception_ptr &) noexcept'
  | | |-ParmVarDecl 0x5c24020 <col:16, col:35> col:36 'const std::__exception_ptr::exception_ptr &'
  | | |-ParmVarDecl 0x5c24098 <col:38, col:57> col:58 'const std::__exception_ptr::exception_ptr &'
  | | |-VisibilityAttr 0x5c24228 <line:34:13> Inherited Default
  | | `-PureAttr 0x5c241e8 <line:159:32>
  | |-FunctionDecl 0x5c24360 <line:161:5, line:163:41> line:162:5 operator!= 'bool (const std::__exception_ptr::exception_ptr &, const std::__exception_ptr::exception_ptr &) noexcept'
  | | |-ParmVarDecl 0x5c24248 <col:16, col:35> col:36 'const std::__exception_ptr::exception_ptr &'
  | | |-ParmVarDecl 0x5c242c0 <col:38, col:57> col:58 'const std::__exception_ptr::exception_ptr &'
  | | |-PureAttr 0x5c24410 <line:163:32>
  | | `-VisibilityAttr 0x5c24450 <line:34:13> Implicit Default
  | |-FunctionDecl 0x5c245b8 <line:165:5, line:167:26> line:166:5 swap 'void (std::__exception_ptr::exception_ptr &, std::__exception_ptr::exception_ptr &)' inline
  | | |-ParmVarDecl 0x5c24470 <col:10, col:25> col:25 used __lhs 'std::__exception_ptr::exception_ptr &'
  | | |-ParmVarDecl 0x5c244e8 <col:32, col:47> col:47 used __rhs 'std::__exception_ptr::exception_ptr &'
  | | |-CompoundStmt 0x5c24740 <line:167:5, col:26>
  | | | `-CXXMemberCallExpr 0x5c24718 <col:7, col:23> 'void'
  | | |   |-MemberExpr 0x5c246c8 <col:7, col:13> '<bound member function type>' .swap 0x5c23500
  | | |   | `-DeclRefExpr 0x5c246a8 <col:7> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5c24470 '__lhs' 'std::__exception_ptr::exception_ptr &'
  | | |   `-DeclRefExpr 0x5c246f8 <col:18> 'std::__exception_ptr::exception_ptr' lvalue ParmVar 0x5c244e8 '__rhs' 'std::__exception_ptr::exception_ptr &'
  | | `-VisibilityAttr 0x5c24668 <line:34:13> Implicit Default
  | `-FunctionTemplateDecl 0x5c25988 <line:169:5, line:172:41> line:171:7 __dest_thunk
  |   |-TemplateTypeParmDecl 0x5c257b0 <line:169:14, col:23> col:23 referenced typename depth 0 index 0 _Ex
  |   `-FunctionDecl 0x5c258e8 <line:170:7, line:172:41> line:171:7 __dest_thunk 'void (void *)' inline
  |     |-ParmVarDecl 0x5c25858 <col:20, col:26> col:26 referenced __x 'void *'
  |     |-CompoundStmt 0x5c25b68 <line:172:7, col:41>
  |     | `-CallExpr 0x5c25b48 <col:9, col:38> 'void'
  |     |   `-CXXPseudoDestructorExpr 0x5c25af8 <col:9, col:34> '<bound member function type>'
  |     |     `-CXXStaticCastExpr 0x5c25ab8 <col:9, col:30> '_Ex *' static_cast<_Ex *> <Dependent>
  |     |       `-DeclRefExpr 0x5c25a28 <col:27> 'void *' lvalue ParmVar 0x5c25858 '__x' 'void *'
  |     `-VisibilityAttr 0x5c259e8 <line:34:13> Implicit Default
  |-FunctionTemplateDecl 0x5c25d90 prev 0x5c227d0 <line:177:3, line:202:5> line:179:5 make_exception_ptr
  | |-TemplateTypeParmDecl 0x5c25b80 <line:177:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
  | `-FunctionDecl 0x5c25cf0 prev 0x5c206d0 <line:178:5, line:202:5> line:179:5 make_exception_ptr 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
  |   |-ParmVarDecl 0x5c25c20 <col:24, col:28> col:28 referenced __ex '_Ex'
  |   |-CompoundStmt 0x5c267a0 <line:180:5, line:202:5>
  |   | `-CXXTryStmt 0x5c26780 <line:182:7, line:198:2>
  |   |   |-CompoundStmt 0x5c26588 <line:183:2, line:194:2>
  |   |   | |-DeclStmt 0x5c26048 <line:185:11, col:72>
  |   |   | | `-VarDecl 0x5c25ec8 <col:11, col:71> col:17 referenced __e 'void *' cinit
  |   |   | |   `-CallExpr 0x5c26020 <col:23, col:71> 'void *'
  |   |   | |     |-ImplicitCastExpr 0x5c26008 <col:23, col:35> 'void *(*)(size_t) noexcept' <FunctionToPointerDecay>
  |   |   | |     | `-DeclRefExpr 0x5c25f50 <col:23, col:35> 'void *(size_t) noexcept' lvalue Function 0x5c12308 '__cxa_allocate_exception' 'void *(size_t) noexcept'
  |   |   | |     `-UnaryExprOrTypeTraitExpr 0x5c25f90 <col:60, col:70> 'unsigned long' sizeof '_Ex'
  |   |   | |-CStyleCastExpr 0x5c26340 <line:186:11, line:188:42> 'void' <ToVoid>
  |   |   | | `-CallExpr 0x5c262f8 <line:186:17, line:188:42> '<dependent type>'
  |   |   | |   |-DeclRefExpr 0x5c26080 <line:186:17, col:29> '__cxxabiv1::__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept' lvalue Function 0x5c128a0 '__cxa_init_primary_exception' '__cxxabiv1::__cxa_refcounted_exception *(void *, std::type_info *, void (*)(void *)) noexcept'
  |   |   | |   |-DeclRefExpr 0x5c260b0 <line:187:8> 'void *' lvalue Var 0x5c25ec8 '__e' 'void *'
  |   |   | |   |-CXXConstCastExpr 0x5c261e0 <col:13, col:54> 'std::type_info *' const_cast<std::type_info *> <NoOp>
  |   |   | |   | `-UnaryOperator 0x5c26170 <col:41, col:53> 'const std::type_info *' prefix '&' cannot overflow
  |   |   | |   |   `-CXXTypeidExpr 0x5c26150 <col:42, col:53> 'const std::type_info' lvalue
  |   |   | |   |     `-DeclRefExpr 0x5c26130 <col:49> '_Ex' lvalue ParmVar 0x5c25c20 '__ex' '_Ex'
  |   |   | |   `-UnresolvedLookupExpr 0x5c26270 <line:188:8, col:41> '<dependent type>' lvalue (no ADL) = '__dest_thunk' 0x5c25988
  |   |   | |-CXXNewExpr 0x5c26408 <line:189:11, col:31> '_Ex *' global
  |   |   | | |-ParenListExpr 0x5c263a8 <col:26, col:31> 'NULL TYPE'
  |   |   | | | `-DeclRefExpr 0x5c26388 <col:27> '_Ex' lvalue ParmVar 0x5c25c20 '__ex' '_Ex'
  |   |   | | `-DeclRefExpr 0x5c26368 <col:18> 'void *' lvalue Var 0x5c25ec8 '__e' 'void *'
  |   |   | `-ReturnStmt 0x5c26578 <line:190:11, col:35>
  |   |   |   `-ExprWithCleanups 0x5c26560 <col:18, col:35> 'std::__exception_ptr::exception_ptr'
  |   |   |     `-CXXConstructExpr 0x5c26530 <col:18, col:35> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept' elidable
  |   |   |       `-MaterializeTemporaryExpr 0x5c26518 <col:18, col:35> 'std::__exception_ptr::exception_ptr' xvalue
  |   |   |         `-CXXFunctionalCastExpr 0x5c264f0 <col:18, col:35> 'std::__exception_ptr::exception_ptr' functional cast to class std::__exception_ptr::exception_ptr <ConstructorConversion>
  |   |   |           `-CXXBindTemporaryExpr 0x5c264d0 <col:18, col:35> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5c264c8)
  |   |   |             `-CXXConstructExpr 0x5c26498 <col:18, col:35> 'std::__exception_ptr::exception_ptr' 'void (void *) noexcept'
  |   |   |               `-ImplicitCastExpr 0x5c26480 <col:32> 'void *' <LValueToRValue>
  |   |   |                 `-DeclRefExpr 0x5c26460 <col:32> 'void *' lvalue Var 0x5c25ec8 '__e' 'void *'
  |   |   `-CXXCatchStmt 0x5c26760 <line:195:7, line:198:2>
  |   |     |-<<<NULL>>>
  |   |     `-CompoundStmt 0x5c26748 <line:196:2, line:198:2>
  |   |       `-ReturnStmt 0x5c26738 <line:197:4, col:29>
  |   |         `-ExprWithCleanups 0x5c26720 <col:11, col:29> 'std::__exception_ptr::exception_ptr'
  |   |           `-CXXConstructExpr 0x5c266f0 <col:11, col:29> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept' elidable
  |   |             `-MaterializeTemporaryExpr 0x5c266d8 <col:11, col:29> 'std::__exception_ptr::exception_ptr' xvalue
  |   |               `-CXXBindTemporaryExpr 0x5c266b8 <col:11, col:29> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5c266b0)
  |   |                 `-CallExpr 0x5c26690 <col:11, col:29> 'std::__exception_ptr::exception_ptr'
  |   |                   `-ImplicitCastExpr 0x5c26678 <col:11> 'std::__exception_ptr::exception_ptr (*)() noexcept' <FunctionToPointerDecay>
  |   |                     `-DeclRefExpr 0x5c26600 <col:11> 'std::__exception_ptr::exception_ptr () noexcept' lvalue Function 0x5c1f3f0 'current_exception' 'std::__exception_ptr::exception_ptr () noexcept'
  |   `-VisibilityAttr 0x5c25e20 <line:34:13> Inherited Default
  |-FunctionTemplateDecl 0x5c269c0 <line:208:3, line:210:70> col:5 copy_exception
  | |-TemplateTypeParmDecl 0x5c267b8 <line:208:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
  | `-FunctionDecl 0x5c26920 <line:209:5, line:210:70> col:5 copy_exception 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
  |   |-ParmVarDecl 0x5c26850 <col:20, col:24> col:24 __ex '_Ex'
  |   |-DeprecatedAttr 0x5c26a20 <col:55> "" ""
  |   `-VisibilityAttr 0x5c26a78 <line:34:13> Implicit Default
  `-FunctionTemplateDecl 0x5c26c90 prev 0x5c269c0 <line:212:3, line:215:50> line:214:5 copy_exception
    |-TemplateTypeParmDecl 0x5c26a88 <line:212:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
    `-FunctionDecl 0x5c26bf0 prev 0x5c26920 <line:213:5, line:215:50> line:214:5 copy_exception 'std::__exception_ptr::exception_ptr (_Ex) noexcept'
      |-ParmVarDecl 0x5c26b20 <col:20, col:24> col:24 referenced __ex '_Ex'
      |-CompoundStmt 0x5c26e80 <line:215:5, col:50>
      | `-ReturnStmt 0x5c26e70 <col:7, col:47>
      |   `-CallExpr 0x5c26e48 <col:14, col:47> '<dependent type>'
      |     |-UnresolvedLookupExpr 0x5c26da0 <col:14, col:41> '<dependent type>' lvalue (no ADL) = 'make_exception_ptr' 0x5c25d90
      |     `-DeclRefExpr 0x5c26e28 <col:43> '_Ex' lvalue ParmVar 0x5c26b20 '__ex' '_Ex'
      |-DeprecatedAttr 0x5c26d20 <line:210:55> Inherited "" ""
      `-VisibilityAttr 0x5c26d48 <line:34:13> Inherited Default
NamespaceDecl 0x5c26fb8 prev 0x5c1eff8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/move.h:36:1, line:51:1> line:36:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5c27028 <col:31, col:56> Default
`-FunctionTemplateDecl 0x5c27320 <line:45:3, line:48:40> line:47:5 __addressof
  |-TemplateTypeParmDecl 0x5c27068 <line:45:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  `-FunctionDecl 0x5c27280 <line:46:5, line:48:40> line:47:5 constexpr __addressof '_Tp *(_Tp &) noexcept' inline
    |-ParmVarDecl 0x5c27158 <col:17, col:22> col:22 referenced __r '_Tp &'
    `-CompoundStmt 0x5c27638 <line:48:5, col:40>
      `-ReturnStmt 0x5c27628 <col:7, col:37>
        `-CallExpr 0x5c27600 <col:14, col:37> '<dependent type>'
          |-DeclRefExpr 0x5c275c0 <col:14> '<builtin fn type>' Function 0x5c27460 '__builtin_addressof' 'void *(void &) noexcept'
          `-DeclRefExpr 0x5c275e0 <col:34> '_Tp' lvalue ParmVar 0x5c27158 '__r' '_Tp &'
NamespaceDecl 0x5c276d0 prev 0x5c26fb8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:42:1, line:46:1> line:42:11 std
|-original Namespace 0x5b39a58 'std'
|-TypedefDecl 0x5c27758 <line:44:3, col:26> col:26 uint_least16_t 'unsigned short'
| `-BuiltinType 0x5aca380 'unsigned short'
`-TypedefDecl 0x5c277d8 <line:45:3, col:24> col:24 uint_least32_t 'unsigned int'
  `-BuiltinType 0x5aca3a0 'unsigned int'
NamespaceDecl 0x5c27850 prev 0x5c276d0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:52:1, line:3104:1> line:52:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5c278c0 <col:31, col:56> Default
|-ClassTemplateDecl 0x5c27a98 <line:68:3, line:81:5> line:69:12 integral_constant
| |-TemplateTypeParmDecl 0x5c27900 <line:68:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c27988 <col:26, col:30> col:30 referenced '_Tp' depth 0 index 1 __v
| |-CXXRecordDecl 0x5c27a08 <line:69:5, line:81:5> line:69:12 struct integral_constant definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5c27d50 <col:5, col:12> col:12 implicit struct integral_constant
| | |-VarDecl 0x5c27df0 <line:71:7, col:36> col:28 referenced value 'const _Tp' static constexpr cinit
| | | `-DeclRefExpr 0x5c27e58 <col:36> '_Tp' NonTypeTemplateParm 0x5c27988 '__v' '_Tp'
| | |-TypedefDecl 0x5c27e88 <line:72:7, col:19> col:19 referenced value_type '_Tp'
| | | `-TemplateTypeParmType 0x5c27950 '_Tp' dependent depth 0 index 0
| | |   `-TemplateTypeParm 0x5c27900 '_Tp'
| | |-TypedefDecl 0x5c28048 <line:73:7, col:43> col:43 type 'integral_constant<_Tp, __v>':'integral_constant<_Tp, __v>'
| | | `-TemplateSpecializationType 0x5c27f60 'integral_constant<_Tp, __v>' sugar dependent integral_constant
| | |   |-TemplateArgument type '_Tp'
| | |   |-TemplateArgument expr
| | |   | `-DeclRefExpr 0x5c27ef0 <col:38> '_Tp' NonTypeTemplateParm 0x5c27988 '__v' '_Tp'
| | |   `-InjectedClassNameType 0x5c27cc0 'integral_constant<_Tp, __v>' dependent
| | |     `-CXXRecord 0x5c27a08 'integral_constant'
| | |-CXXConversionDecl 0x5c28160 <line:74:7, col:70> col:17 constexpr operator type-parameter-0-0 'std::integral_constant::value_type () const noexcept'
| | | `-CompoundStmt 0x5c28348 <col:54, col:70>
| | |   `-ReturnStmt 0x5c28338 <col:56, col:63>
| | |     `-DeclRefExpr 0x5c28318 <col:63> 'const _Tp' lvalue Var 0x5c27df0 'value' 'const _Tp'
| | `-CXXMethodDecl 0x5c28230 <line:79:7, col:72> col:28 constexpr operator() 'std::integral_constant::value_type () const noexcept'
| |   `-CompoundStmt 0x5c28390 <col:56, col:72>
| |     `-ReturnStmt 0x5c28380 <col:58, col:65>
| |       `-DeclRefExpr 0x5c28360 <col:65> 'const _Tp' lvalue Var 0x5c27df0 'value' 'const _Tp'
| |-ClassTemplateSpecializationDecl 0x5c28810 <line:68:3, line:81:5> line:69:12 struct integral_constant definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'bool'
| | |-TemplateArgument integral 1
| | |-CXXRecordDecl 0x5c2dab8 prev 0x5c28810 <col:5, col:12> col:12 implicit struct integral_constant
| | |-VarDecl 0x5c2db58 <line:71:7, col:36> col:28 value 'const bool':'const bool' static constexpr cinit
| | | `-SubstNonTypeTemplateParmExpr 0x5c2dbe0 <col:36> 'bool'
| | |   `-CXXBoolLiteralExpr 0x5c2dbd0 <col:36> 'bool' true
| | |-TypedefDecl 0x5c2dc68 <line:72:7, col:19> col:19 value_type 'bool':'bool'
| | | `-SubstTemplateTypeParmType 0x5c287c0 'bool' sugar
| | |   |-TemplateTypeParmType 0x5c27950 '_Tp' dependent depth 0 index 0
| | |   | `-TemplateTypeParm 0x5c27900 '_Tp'
| | |   `-BuiltinType 0x5aca280 'bool'
| | |-TypedefDecl 0x5c2dde0 <line:73:7, col:43> col:43 type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| | | `-TemplateSpecializationType 0x5c2dd40 'integral_constant<bool, true>' sugar integral_constant
| | |   |-TemplateArgument type 'bool':'bool'
| | |   |-TemplateArgument expr
| | |   | `-ConstantExpr 0x5c2dd20 <col:38> 'bool'
| | |   |   `-SubstNonTypeTemplateParmExpr 0x5c2dce0 <col:38> 'bool'
| | |   |     `-CXXBoolLiteralExpr 0x5c2dcd0 <col:38> 'bool' true
| | |   `-RecordType 0x5c28910 'std::integral_constant<bool, true>'
| | |     `-ClassTemplateSpecialization 0x5c28810 'integral_constant'
| | |-CXXConversionDecl 0x5c2dec0 <line:74:7, col:70> col:17 constexpr operator bool 'std::integral_constant<bool, true>::value_type () const noexcept'
| | `-CXXMethodDecl 0x5c2dfa0 <line:79:7, col:72> col:28 constexpr operator() 'std::integral_constant<bool, true>::value_type () const noexcept'
| |-ClassTemplateSpecializationDecl 0x5c28ac8 <line:68:3, line:81:5> line:69:12 struct integral_constant definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-TemplateArgument type 'bool'
| | |-TemplateArgument integral 0
| | |-CXXRecordDecl 0x5c2a978 prev 0x5c28ac8 <col:5, col:12> col:12 implicit struct integral_constant
| | |-VarDecl 0x5c2aa18 <line:71:7, col:36> col:28 value 'const bool':'const bool' static constexpr cinit
| | | `-SubstNonTypeTemplateParmExpr 0x5c2aaa0 <col:36> 'bool'
| | |   `-CXXBoolLiteralExpr 0x5c2aa90 <col:36> 'bool' false
| | |-TypedefDecl 0x5c2ab28 <line:72:7, col:19> col:19 value_type 'bool':'bool'
| | | `-SubstTemplateTypeParmType 0x5c287c0 'bool' sugar
| | |   |-TemplateTypeParmType 0x5c27950 '_Tp' dependent depth 0 index 0
| | |   | `-TemplateTypeParm 0x5c27900 '_Tp'
| | |   `-BuiltinType 0x5aca280 'bool'
| | |-TypedefDecl 0x5c2aca0 <line:73:7, col:43> col:43 type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| | | `-TemplateSpecializationType 0x5c2ac00 'integral_constant<bool, false>' sugar integral_constant
| | |   |-TemplateArgument type 'bool':'bool'
| | |   |-TemplateArgument expr
| | |   | `-ConstantExpr 0x5c2abe0 <col:38> 'bool'
| | |   |   `-SubstNonTypeTemplateParmExpr 0x5c2aba0 <col:38> 'bool'
| | |   |     `-CXXBoolLiteralExpr 0x5c2ab90 <col:38> 'bool' false
| | |   `-RecordType 0x5c28bc0 'std::integral_constant<bool, false>'
| | |     `-ClassTemplateSpecialization 0x5c28ac8 'integral_constant'
| | |-CXXConversionDecl 0x5c2ad80 <line:74:7, col:70> col:17 constexpr operator bool 'std::integral_constant<bool, false>::value_type () const noexcept'
| | `-CXXMethodDecl 0x5c2ae60 <line:79:7, col:72> col:28 constexpr operator() 'std::integral_constant<bool, false>::value_type () const noexcept'
| `-ClassTemplateSpecializationDecl 0x5cbe538 <line:68:3, line:81:5> line:69:12 struct integral_constant definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-TemplateArgument type 'unsigned long'
|   |-TemplateArgument integral 0
|   |-CXXRecordDecl 0x5cbe758 prev 0x5cbe538 <col:5, col:12> col:12 implicit struct integral_constant
|   |-VarDecl 0x5cbe7f8 <line:71:7, col:36> col:28 value 'const unsigned long':'const unsigned long' static constexpr cinit
|   | `-SubstNonTypeTemplateParmExpr 0x5cbe890 <col:36> 'unsigned long'
|   |   `-IntegerLiteral 0x5cbe870 <col:36> 'unsigned long' 0
|   |-TypedefDecl 0x5cbe918 <line:72:7, col:19> col:19 value_type 'unsigned long':'unsigned long'
|   | `-SubstTemplateTypeParmType 0x5cbdf00 'unsigned long' sugar
|   |   |-TemplateTypeParmType 0x5c27950 '_Tp' dependent depth 0 index 0
|   |   | `-TemplateTypeParm 0x5c27900 '_Tp'
|   |   `-BuiltinType 0x5aca3c0 'unsigned long'
|   |-TypedefDecl 0x5cc0650 <line:73:7, col:43> col:43 type 'integral_constant<unsigned long, 0UL>':'std::integral_constant<unsigned long, 0>'
|   | `-TemplateSpecializationType 0x5cbea00 'integral_constant<unsigned long, 0UL>' sugar integral_constant
|   |   |-TemplateArgument type 'unsigned long':'unsigned long'
|   |   |-TemplateArgument expr
|   |   | `-ConstantExpr 0x5cbe9e0 <col:38> 'unsigned long'
|   |   |   `-SubstNonTypeTemplateParmExpr 0x5cbe9a0 <col:38> 'unsigned long'
|   |   |     `-IntegerLiteral 0x5cbe980 <col:38> 'unsigned long' 0
|   |   `-RecordType 0x5cbe630 'std::integral_constant<unsigned long, 0>'
|   |     `-ClassTemplateSpecialization 0x5cbe538 'integral_constant'
|   |-CXXConversionDecl 0x5cc0748 <line:74:7, col:70> col:17 constexpr operator unsigned long 'std::integral_constant<unsigned long, 0>::value_type () const noexcept'
|   `-CXXMethodDecl 0x5cc0828 <line:79:7, col:72> col:28 constexpr operator() 'std::integral_constant<unsigned long, 0>::value_type () const noexcept'
|-VarDecl 0x5c286e8 parent 0x5c27a08 prev 0x5c27df0 <line:83:3, line:84:48> col:48 value 'const _Tp' constexpr
|-TypedefDecl 0x5c28a18 <line:87:3, col:41> col:41 referenced true_type 'integral_constant<bool, true>':'std::integral_constant<bool, true>'
| `-TemplateSpecializationType 0x5c28930 'integral_constant<bool, true>' sugar integral_constant
|   |-TemplateArgument type 'bool'
|   |-TemplateArgument expr
|   | `-ConstantExpr 0x5c287f8 <col:35> 'bool'
|   |   `-CXXBoolLiteralExpr 0x5c287a0 <col:35> 'bool' true
|   `-RecordType 0x5c28910 'std::integral_constant<bool, true>'
|     `-ClassTemplateSpecialization 0x5c28810 'integral_constant'
|-TypedefDecl 0x5c28cc8 <line:90:3, col:42> col:42 referenced false_type 'integral_constant<bool, false>':'std::integral_constant<bool, false>'
| `-TemplateSpecializationType 0x5c28be0 'integral_constant<bool, false>' sugar integral_constant
|   |-TemplateArgument type 'bool'
|   |-TemplateArgument expr
|   | `-ConstantExpr 0x5c28ab0 <col:35> 'bool'
|   |   `-CXXBoolLiteralExpr 0x5c28a80 <col:35> 'bool' false
|   `-RecordType 0x5c28bc0 'std::integral_constant<bool, false>'
|     `-ClassTemplateSpecialization 0x5c28ac8 'integral_constant'
|-TypeAliasTemplateDecl 0x5c28fa8 <line:92:3, line:93:56> col:5 __bool_constant
| |-NonTypeTemplateParmDecl 0x5c28d30 <line:92:12, col:17> col:17 referenced 'bool' depth 0 index 0 __v
| `-TypeAliasDecl 0x5c28f48 <line:93:5, col:56> col:11 __bool_constant 'integral_constant<bool, __v>'
|   `-TemplateSpecializationType 0x5c28e60 'integral_constant<bool, __v>' dependent integral_constant
|     |-TemplateArgument type 'bool'
|     `-TemplateArgument expr
|       `-DeclRefExpr 0x5c28db8 <col:53> 'bool' NonTypeTemplateParm 0x5c28d30 '__v' 'bool'
|-ClassTemplateDecl 0x5c29210 <line:103:3, line:104:12> col:12 conditional
| |-NonTypeTemplateParmDecl 0x5c29010 <line:103:12> col:16 'bool' depth 0 index 0
| |-TemplateTypeParmDecl 0x5c29070 <col:18> col:18 typename depth 0 index 1
| |-TemplateTypeParmDecl 0x5c290e8 <col:28> col:28 typename depth 0 index 2
| `-CXXRecordDecl 0x5c29180 <line:104:5, col:12> col:12 struct conditional
|-ClassTemplateDecl 0x5c295c0 <line:106:3, line:107:12> col:12 __or_
| |-TemplateTypeParmDecl 0x5c29478 <line:106:12> col:12 typename depth 0 index 0 ...
| |-CXXRecordDecl 0x5c29530 <line:107:5, col:12> col:12 struct __or_
| `-ClassTemplateSpecialization 0x5c2a6e8 '__or_'
|-ClassTemplateSpecializationDecl 0x5c2a6e8 <line:109:3, line:112:7> line:110:12 struct __or_ definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument pack
| `-CXXRecordDecl 0x5c2af58 <col:5, col:12> col:12 implicit struct __or_
|-ClassTemplatePartialSpecializationDecl 0x5c2b190 <line:114:3, line:117:7> line:115:12 struct __or_ definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '_B1'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5c2b000 <line:114:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| `-CXXRecordDecl 0x5c2b428 <line:115:5, col:12> col:12 implicit struct __or_
|-ClassTemplatePartialSpecializationDecl 0x5c2b750 <line:119:3, line:122:7> line:120:12 struct __or_ definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'conditional<_B1::value, _B1, _B2>::type'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | `-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5c2b4d0 <line:119:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| |-TemplateTypeParmDecl 0x5c2b548 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| `-CXXRecordDecl 0x5c2bd40 <line:120:5, col:12> col:12 implicit struct __or_
|-ClassTemplatePartialSpecializationDecl 0x5c2c2d0 <line:124:3, line:127:7> line:125:12 struct __or_ definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'conditional<_B1::value, _B1, __or_<_B2, _B3, _Bn...> >::type'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument type 'type-parameter-0-2'
| | `-TemplateArgument type 'type-parameter-0-3...'
| |-TemplateTypeParmDecl 0x5c2bde8 <line:124:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| |-TemplateTypeParmDecl 0x5c2be58 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| |-TemplateTypeParmDecl 0x5c2bec8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _B3
| |-TemplateTypeParmDecl 0x5c2bf38 <col:54, col:66> col:66 referenced typename depth 0 index 3 ... _Bn
| `-CXXRecordDecl 0x5c2d410 <line:125:5, col:12> col:12 implicit struct __or_
|-ClassTemplateDecl 0x5c2d5d0 <line:129:3, line:130:12> col:12 __and_
| |-TemplateTypeParmDecl 0x5c2d4b8 <line:129:12> col:12 typename depth 0 index 0 ...
| |-CXXRecordDecl 0x5c2d540 <line:130:5, col:12> col:12 struct __and_
| `-ClassTemplateSpecialization 0x5c2d828 '__and_'
|-ClassTemplateSpecializationDecl 0x5c2d828 <line:132:3, line:135:7> line:133:12 struct __and_ definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument pack
| `-CXXRecordDecl 0x5c2e098 <col:5, col:12> col:12 implicit struct __and_
|-ClassTemplatePartialSpecializationDecl 0x5c2e2d0 <line:137:3, line:140:7> line:138:12 struct __and_ definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '_B1'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5c2e140 <line:137:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| `-CXXRecordDecl 0x5c2e568 <line:138:5, col:12> col:12 implicit struct __and_
|-ClassTemplatePartialSpecializationDecl 0x5c2e890 <line:142:3, line:145:7> line:143:12 struct __and_ definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'conditional<_B1::value, _B2, _B1>::type'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | `-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5c2e610 <line:142:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| |-TemplateTypeParmDecl 0x5c2e688 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| `-CXXRecordDecl 0x5c30948 <line:143:5, col:12> col:12 implicit struct __and_
|-ClassTemplatePartialSpecializationDecl 0x5c30e80 <line:147:3, line:150:7> line:148:12 struct __and_ definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'conditional<_B1::value, __and_<_B2, _B3, _Bn...>, _B1>::type'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | |-TemplateArgument type 'type-parameter-0-2'
| | `-TemplateArgument type 'type-parameter-0-3...'
| |-TemplateTypeParmDecl 0x5c309f0 <line:147:12, col:21> col:21 referenced typename depth 0 index 0 _B1
| |-TemplateTypeParmDecl 0x5c30a68 <col:26, col:35> col:35 referenced typename depth 0 index 1 _B2
| |-TemplateTypeParmDecl 0x5c30ad8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _B3
| |-TemplateTypeParmDecl 0x5c30b48 <col:54, col:66> col:66 referenced typename depth 0 index 3 ... _Bn
| `-CXXRecordDecl 0x5c31770 <line:148:5, col:12> col:12 implicit struct __and_
|-ClassTemplateDecl 0x5c31930 <line:152:3, line:155:7> line:153:12 __not_
| |-TemplateTypeParmDecl 0x5c31818 <line:152:12, col:21> col:21 typename depth 0 index 0 _Pp
| `-CXXRecordDecl 0x5c318a0 <line:153:5, line:155:7> line:153:12 struct __not_ definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__bool_constant<!bool(_Pp::value)>':'integral_constant<bool, !bool(_Pp::value)>'
|   `-CXXRecordDecl 0x5c31e98 <col:5, col:12> col:12 implicit struct __not_
|-ClassTemplateDecl 0x5c32060 <line:192:3, line:194:25> line:193:12 __success_type
| |-TemplateTypeParmDecl 0x5c31f40 <line:192:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c31fd0 <line:193:5, line:194:25> line:193:12 struct __success_type definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5c322b0 <col:5, col:12> col:12 implicit struct __success_type
|   `-TypedefDecl 0x5c32350 <line:194:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5c31f90 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5c31f40 '_Tp'
|-CXXRecordDecl 0x5c323c0 <line:196:3, line:197:5> line:196:10 referenced struct __failure_type definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5c324d8 <col:3, col:10> col:10 implicit struct __failure_type
|-ClassTemplateDecl 0x5c326a0 <line:201:3, line:202:12> col:12 remove_cv
| |-TemplateTypeParmDecl 0x5c32580 <line:201:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c32610 <line:202:5, col:12> col:12 struct remove_cv
|-ClassTemplateDecl 0x5c33a40 <line:204:3, line:206:27> line:205:12 __is_void_helper
| |-TemplateTypeParmDecl 0x5c32888 <line:204:12> col:12 typename depth 0 index 0
| |-CXXRecordDecl 0x5c339b0 <line:205:5, line:206:27> line:205:12 struct __is_void_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | `-CXXRecordDecl 0x5c33cd0 <col:5, col:12> col:12 implicit struct __is_void_helper
| `-ClassTemplateSpecialization 0x5c33d98 '__is_void_helper'
|-ClassTemplateSpecializationDecl 0x5c33d98 <line:208:3, line:210:26> line:209:12 struct __is_void_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'void'
| `-CXXRecordDecl 0x5c33ff8 <col:5, col:12> col:12 implicit struct __is_void_helper
|-ClassTemplateDecl 0x5c341c0 <line:213:3, line:216:7> line:214:12 is_void
| |-TemplateTypeParmDecl 0x5c340a0 <line:213:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c34130 <line:214:5, line:216:7> line:214:12 struct is_void definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_void_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c34730 <col:5, col:12> col:12 implicit struct is_void
|-ClassTemplateDecl 0x5c348f0 <line:218:3, line:220:27> line:219:12 __is_integral_helper
| |-TemplateTypeParmDecl 0x5c347d8 <line:218:12> col:12 typename depth 0 index 0
| |-CXXRecordDecl 0x5c34860 <line:219:5, line:220:27> line:219:12 struct __is_integral_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | `-CXXRecordDecl 0x5c34b80 <col:5, col:12> col:12 implicit struct __is_integral_helper
| |-ClassTemplateSpecialization 0x5c34c48 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c34f70 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c35298 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c355c8 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c358f0 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c36960 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c36c80 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c36fa8 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c372d8 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c37608 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c37938 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c37c68 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c37f98 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c382c8 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c385f8 '__is_integral_helper'
| |-ClassTemplateSpecialization 0x5c38d78 '__is_integral_helper'
| `-ClassTemplateSpecialization 0x5c390a8 '__is_integral_helper'
|-ClassTemplateSpecializationDecl 0x5c34c48 <line:222:3, line:224:26> line:223:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'bool'
| `-CXXRecordDecl 0x5c34ea8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c34f70 <line:226:3, line:228:26> line:227:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'char'
| `-CXXRecordDecl 0x5c351c8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c35298 <line:230:3, line:232:26> line:231:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'signed char'
| `-CXXRecordDecl 0x5c354f8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c355c8 <line:234:3, line:236:26> line:235:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'unsigned char'
| `-CXXRecordDecl 0x5c35828 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c358f0 <line:239:3, line:241:26> line:240:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'wchar_t'
| `-CXXRecordDecl 0x5c36898 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c36960 <line:244:3, line:246:26> line:245:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'char16_t'
| `-CXXRecordDecl 0x5c36bb8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c36c80 <line:248:3, line:250:26> line:249:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'char32_t'
| `-CXXRecordDecl 0x5c36ed8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c36fa8 <line:252:3, line:254:26> line:253:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'short'
| `-CXXRecordDecl 0x5c37208 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c372d8 <line:256:3, line:258:26> line:257:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'unsigned short'
| `-CXXRecordDecl 0x5c37538 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c37608 <line:260:3, line:262:26> line:261:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'int'
| `-CXXRecordDecl 0x5c37868 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c37938 <line:264:3, line:266:26> line:265:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'unsigned int'
| `-CXXRecordDecl 0x5c37b98 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c37c68 <line:268:3, line:270:26> line:269:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'long'
| `-CXXRecordDecl 0x5c37ec8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c37f98 <line:272:3, line:274:26> line:273:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'unsigned long'
| `-CXXRecordDecl 0x5c381f8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c382c8 <line:276:3, line:278:26> line:277:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'long long'
| `-CXXRecordDecl 0x5c38528 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c385f8 <line:280:3, line:282:26> line:281:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'unsigned long long'
| `-CXXRecordDecl 0x5c38ca8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c38d78 <line:287:3, line:289:26> line:288:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type '__int128'
| `-CXXRecordDecl 0x5c38fd8 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateSpecializationDecl 0x5c390a8 <line:291:3, line:293:26> line:292:12 struct __is_integral_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'unsigned __int128'
| `-CXXRecordDecl 0x5c39308 <col:5, col:12> col:12 implicit struct __is_integral_helper
|-ClassTemplateDecl 0x5c394d0 <line:324:3, line:327:7> line:325:12 is_integral
| |-TemplateTypeParmDecl 0x5c393b0 <line:324:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c39440 <line:325:5, line:327:7> line:325:12 struct is_integral definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_integral_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c399f0 <col:5, col:12> col:12 implicit struct is_integral
|-ClassTemplateDecl 0x5c39bb0 <line:329:3, line:331:27> line:330:12 __is_floating_point_helper
| |-TemplateTypeParmDecl 0x5c39a98 <line:329:12> col:12 typename depth 0 index 0
| |-CXXRecordDecl 0x5c39b20 <line:330:5, line:331:27> line:330:12 struct __is_floating_point_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | `-CXXRecordDecl 0x5c39e40 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
| |-ClassTemplateSpecialization 0x5c39f10 '__is_floating_point_helper'
| |-ClassTemplateSpecialization 0x5c3a238 '__is_floating_point_helper'
| |-ClassTemplateSpecialization 0x5c3a568 '__is_floating_point_helper'
| `-ClassTemplateSpecialization 0x5c3a898 '__is_floating_point_helper'
|-ClassTemplateSpecializationDecl 0x5c39f10 <line:333:3, line:335:26> line:334:12 struct __is_floating_point_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'float'
| `-CXXRecordDecl 0x5c3a168 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
|-ClassTemplateSpecializationDecl 0x5c3a238 <line:337:3, line:339:26> line:338:12 struct __is_floating_point_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'double'
| `-CXXRecordDecl 0x5c3a498 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
|-ClassTemplateSpecializationDecl 0x5c3a568 <line:341:3, line:343:26> line:342:12 struct __is_floating_point_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'long double'
| `-CXXRecordDecl 0x5c3a7c8 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
|-ClassTemplateSpecializationDecl 0x5c3a898 <line:346:3, line:348:26> line:347:12 struct __is_floating_point_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type '__float128'
| `-CXXRecordDecl 0x5c3c6d0 <col:5, col:12> col:12 implicit struct __is_floating_point_helper
|-ClassTemplateDecl 0x5c3c890 <line:352:3, line:355:7> line:353:12 is_floating_point
| |-TemplateTypeParmDecl 0x5c3c778 <line:352:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c3c800 <line:353:5, line:355:7> line:353:12 struct is_floating_point definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_floating_point_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c3cdb0 <col:5, col:12> col:12 implicit struct is_floating_point
|-ClassTemplateDecl 0x5c3cf70 <line:358:3, line:360:27> line:359:12 is_array
| |-TemplateTypeParmDecl 0x5c3ce58 <line:358:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c3cee0 <line:359:5, line:360:27> line:359:12 struct is_array definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c3d200 <col:5, col:12> col:12 implicit struct is_array
|-ClassTemplatePartialSpecializationDecl 0x5c3d5b0 <line:362:3, line:364:26> line:363:12 struct is_array definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| |-TemplateTypeParmDecl 0x5c3d2a8 <line:362:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c3d3b0 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| `-CXXRecordDecl 0x5c3d828 <line:363:5, col:12> col:12 implicit struct is_array
|-ClassTemplatePartialSpecializationDecl 0x5c3daa0 <line:366:3, line:368:26> line:367:12 struct is_array definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 []'
| |-TemplateTypeParmDecl 0x5c3d8d0 <line:366:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c3dd18 <line:367:5, col:12> col:12 implicit struct is_array
|-ClassTemplateDecl 0x5c3dee0 <line:370:3, line:372:27> line:371:12 __is_pointer_helper
| |-TemplateTypeParmDecl 0x5c3ddc0 <line:370:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c3de50 <line:371:5, line:372:27> line:371:12 struct __is_pointer_helper definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c3e170 <col:5, col:12> col:12 implicit struct __is_pointer_helper
|-ClassTemplatePartialSpecializationDecl 0x5c3e3a0 <line:374:3, line:376:26> line:375:12 struct __is_pointer_helper definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 *'
| |-TemplateTypeParmDecl 0x5c3e218 <line:374:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c3e608 <line:375:5, col:12> col:12 implicit struct __is_pointer_helper
|-ClassTemplateDecl 0x5c3f7a0 <line:379:3, line:382:7> line:380:12 is_pointer
| |-TemplateTypeParmDecl 0x5c3f680 <line:379:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c3f710 <line:380:5, line:382:7> line:380:12 struct is_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_pointer_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c3fcc0 <col:5, col:12> col:12 implicit struct is_pointer
|-ClassTemplateDecl 0x5c3fe80 <line:385:3, line:387:27> line:386:12 is_lvalue_reference
| |-TemplateTypeParmDecl 0x5c3fd68 <line:385:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c3fdf0 <line:386:5, line:387:27> line:386:12 struct is_lvalue_reference definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c40110 <col:5, col:12> col:12 implicit struct is_lvalue_reference
|-ClassTemplatePartialSpecializationDecl 0x5c40340 <line:389:3, line:391:26> line:390:12 struct is_lvalue_reference definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 &'
| |-TemplateTypeParmDecl 0x5c401b8 <line:389:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c405a8 <line:390:5, col:12> col:12 implicit struct is_lvalue_reference
|-ClassTemplateDecl 0x5c40770 <line:394:3, line:396:27> line:395:12 is_rvalue_reference
| |-TemplateTypeParmDecl 0x5c40650 <line:394:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c406e0 <line:395:5, line:396:27> line:395:12 struct is_rvalue_reference definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c40a00 <col:5, col:12> col:12 implicit struct is_rvalue_reference
|-ClassTemplatePartialSpecializationDecl 0x5c40c60 <line:398:3, line:400:26> line:399:12 struct is_rvalue_reference definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 &&'
| |-TemplateTypeParmDecl 0x5c40aa8 <line:398:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c40ec8 <line:399:5, col:12> col:12 implicit struct is_rvalue_reference
|-ClassTemplateDecl 0x5c41090 <line:402:3, line:403:12> col:12 is_function
| |-TemplateTypeParmDecl 0x5c40f70 <line:402:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c41000 <line:403:5, col:12> col:12 struct is_function
|-ClassTemplateDecl 0x5c41390 <line:405:3, line:407:27> line:406:12 __is_member_object_pointer_helper
| |-TemplateTypeParmDecl 0x5c41278 <line:405:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c41300 <line:406:5, line:407:27> line:406:12 struct __is_member_object_pointer_helper definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c42da0 <col:5, col:12> col:12 implicit struct __is_member_object_pointer_helper
|-ClassTemplatePartialSpecializationDecl 0x5c430d0 <line:409:3, line:411:66> line:410:12 struct __is_member_object_pointer_helper definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<bool, !is_function<_Tp>::value>'
| |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |-TemplateTypeParmDecl 0x5c42e48 <line:409:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c42eb8 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| `-CXXRecordDecl 0x5c435a0 <line:410:5, col:12> col:12 implicit struct __is_member_object_pointer_helper
|-ClassTemplateDecl 0x5c43760 <line:414:3, line:418:7> line:415:12 is_member_object_pointer
| |-TemplateTypeParmDecl 0x5c43648 <line:414:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c436d0 <line:415:5, line:418:7> line:415:12 struct is_member_object_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_member_object_pointer_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c43c80 <col:5, col:12> col:12 implicit struct is_member_object_pointer
|-ClassTemplateDecl 0x5c43e40 <line:420:3, line:422:27> line:421:12 __is_member_function_pointer_helper
| |-TemplateTypeParmDecl 0x5c43d28 <line:420:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c43db0 <line:421:5, line:422:27> line:421:12 struct __is_member_function_pointer_helper definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c440d0 <col:5, col:12> col:12 implicit struct __is_member_function_pointer_helper
|-ClassTemplatePartialSpecializationDecl 0x5c443d0 <line:424:3, line:426:65> line:425:12 struct __is_member_function_pointer_helper definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<bool, is_function<_Tp>::value>'
| |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |-TemplateTypeParmDecl 0x5c44178 <line:424:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c441e8 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| `-CXXRecordDecl 0x5c44880 <line:425:5, col:12> col:12 implicit struct __is_member_function_pointer_helper
|-ClassTemplateDecl 0x5c44a40 <line:429:3, line:433:7> line:430:12 is_member_function_pointer
| |-TemplateTypeParmDecl 0x5c44928 <line:429:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c449b0 <line:430:5, line:433:7> line:430:12 struct is_member_function_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_member_function_pointer_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c462b0 <col:5, col:12> col:12 implicit struct is_member_function_pointer
|-ClassTemplateDecl 0x5c46470 <line:436:3, line:439:7> line:437:12 is_enum
| |-TemplateTypeParmDecl 0x5c46358 <line:436:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c463e0 <line:437:5, line:439:7> line:437:12 struct is_enum definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_enum(_Tp)>'
|   `-CXXRecordDecl 0x5c46850 <col:5, col:12> col:12 implicit struct is_enum
|-ClassTemplateDecl 0x5c46a10 <line:442:3, line:445:7> line:443:12 is_union
| |-TemplateTypeParmDecl 0x5c468f8 <line:442:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c46980 <line:443:5, line:445:7> line:443:12 struct is_union definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_union(_Tp)>'
|   `-CXXRecordDecl 0x5c46df0 <col:5, col:12> col:12 implicit struct is_union
|-ClassTemplateDecl 0x5c46fb0 <line:448:3, line:451:7> line:449:12 is_class
| |-TemplateTypeParmDecl 0x5c46e98 <line:448:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c46f20 <line:449:5, line:451:7> line:449:12 struct is_class definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_class(_Tp)>'
|   `-CXXRecordDecl 0x5c47390 <col:5, col:12> col:12 implicit struct is_class
|-ClassTemplateDecl 0x5c47550 prev 0x5c41090 <line:454:3, line:456:27> line:455:12 is_function
| |-TemplateTypeParmDecl 0x5c47438 <line:454:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c474c0 prev 0x5c41000 <line:455:5, line:456:27> line:455:12 struct is_function definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c47650 <col:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c47a50 <line:458:3, line:460:26> line:459:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |-TemplateTypeParmDecl 0x5c476f8 <line:458:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c47768 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c47cc8 <line:459:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c48ed0 <line:462:3, line:464:26> line:463:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) &'
| |-TemplateTypeParmDecl 0x5c47d70 <line:462:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c47de8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c49148 <line:463:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c494f0 <line:466:3, line:468:26> line:467:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) &&'
| |-TemplateTypeParmDecl 0x5c491f0 <line:466:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c49268 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c49768 <line:467:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c49b10 <line:470:3, line:472:26> line:471:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...)'
| |-TemplateTypeParmDecl 0x5c49810 <line:470:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c49888 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c49d88 <line:471:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4a130 <line:474:3, line:476:26> line:475:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) &'
| |-TemplateTypeParmDecl 0x5c49e30 <line:474:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c49ea8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4a3a8 <line:475:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4a750 <line:478:3, line:480:26> line:479:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) &&'
| |-TemplateTypeParmDecl 0x5c4a450 <line:478:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4a4c8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4a9c8 <line:479:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4ad70 <line:482:3, line:484:26> line:483:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const'
| |-TemplateTypeParmDecl 0x5c4aa70 <line:482:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4aae8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4b238 <line:483:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4b5e0 <line:486:3, line:488:26> line:487:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const &'
| |-TemplateTypeParmDecl 0x5c4b2e0 <line:486:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4b358 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4b858 <line:487:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4bc00 <line:490:3, line:492:26> line:491:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const &&'
| |-TemplateTypeParmDecl 0x5c4b900 <line:490:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4b978 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4be78 <line:491:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4c220 <line:494:3, line:496:26> line:495:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const'
| |-TemplateTypeParmDecl 0x5c4bf20 <line:494:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4bf98 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4c498 <line:495:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4c840 <line:498:3, line:500:26> line:499:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const &'
| |-TemplateTypeParmDecl 0x5c4c540 <line:498:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4c5b8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4cab8 <line:499:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4ce60 <line:502:3, line:504:26> line:503:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const &&'
| |-TemplateTypeParmDecl 0x5c4cb60 <line:502:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4cbd8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4d710 <line:503:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4dab0 <line:506:3, line:508:26> line:507:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile'
| |-TemplateTypeParmDecl 0x5c4d7b8 <line:506:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4d828 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4dd28 <line:507:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4e0d0 <line:510:3, line:512:26> line:511:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile &'
| |-TemplateTypeParmDecl 0x5c4ddd0 <line:510:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4de48 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4e348 <line:511:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4e6f0 <line:514:3, line:516:26> line:515:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) volatile &&'
| |-TemplateTypeParmDecl 0x5c4e3f0 <line:514:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4e468 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4e968 <line:515:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4ed10 <line:518:3, line:520:26> line:519:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile'
| |-TemplateTypeParmDecl 0x5c4ea10 <line:518:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4ea88 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4ef88 <line:519:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c4f330 <line:522:3, line:524:26> line:523:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile &'
| |-TemplateTypeParmDecl 0x5c4f030 <line:522:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4f0a8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c4f5a8 <line:523:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5be5740 <line:526:3, line:528:26> line:527:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) volatile &&'
| |-TemplateTypeParmDecl 0x5c4f650 <line:526:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c4f6c8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5be59b8 <line:527:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5be5d60 <line:530:3, line:532:26> line:531:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile'
| |-TemplateTypeParmDecl 0x5be5a60 <line:530:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5be5ad8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5be5fd8 <line:531:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5be6380 <line:534:3, line:536:26> line:535:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile &'
| |-TemplateTypeParmDecl 0x5be6080 <line:534:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5be60f8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5be65f8 <line:535:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5be69a0 <line:538:3, line:540:26> line:539:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...) const volatile &&'
| |-TemplateTypeParmDecl 0x5be66a0 <line:538:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5be6718 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5be6c18 <line:539:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5be6fc0 <line:542:3, line:544:26> line:543:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile'
| |-TemplateTypeParmDecl 0x5be6cc0 <line:542:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5be6d38 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5be7238 <line:543:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c57960 <line:546:3, line:548:26> line:547:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile &'
| |-TemplateTypeParmDecl 0x5be72e0 <line:546:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5be7358 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c57bd8 <line:547:5, col:12> col:12 implicit struct is_function
|-ClassTemplatePartialSpecializationDecl 0x5c57f80 <line:550:3, line:552:26> line:551:12 struct is_function definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...) const volatile &&'
| |-TemplateTypeParmDecl 0x5c57c80 <line:550:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c57cf8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5c581f8 <line:551:5, col:12> col:12 implicit struct is_function
|-ClassTemplateDecl 0x5c583c0 <line:556:3, line:558:27> line:557:12 __is_null_pointer_helper
| |-TemplateTypeParmDecl 0x5c582a0 <line:556:12> col:12 typename depth 0 index 0
| |-CXXRecordDecl 0x5c58330 <line:557:5, line:558:27> line:557:12 struct __is_null_pointer_helper definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public 'std::false_type':'std::integral_constant<bool, false>'
| | `-CXXRecordDecl 0x5c58650 <col:5, col:12> col:12 implicit struct __is_null_pointer_helper
| `-ClassTemplateSpecialization 0x5c58788 '__is_null_pointer_helper'
|-ClassTemplateSpecializationDecl 0x5c58788 <line:560:3, line:562:26> line:561:12 struct __is_null_pointer_helper definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'nullptr_t'
| `-CXXRecordDecl 0x5c589e8 <col:5, col:12> col:12 implicit struct __is_null_pointer_helper
|-ClassTemplateDecl 0x5c58bb0 <line:565:3, line:568:7> line:566:12 is_null_pointer
| |-TemplateTypeParmDecl 0x5c58a90 <line:565:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c58b20 <line:566:5, line:568:7> line:566:12 struct is_null_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_null_pointer_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c590d0 <col:5, col:12> col:12 implicit struct is_null_pointer
|-ClassTemplateDecl 0x5c59290 <line:571:3, line:574:7> line:572:12 __is_nullptr_t
| |-TemplateTypeParmDecl 0x5c59178 <line:571:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c59200 <line:572:5, line:574:7> line:572:12 struct __is_nullptr_t definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'is_null_pointer<_Tp>'
|   `-CXXRecordDecl 0x5c59590 <col:5, col:12> col:12 implicit struct __is_nullptr_t
|-ClassTemplateDecl 0x5c59750 <line:579:3, line:583:7> line:580:12 is_reference
| |-TemplateTypeParmDecl 0x5c59638 <line:579:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c596c0 <line:580:5, line:583:7> line:580:12 struct is_reference definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__or_<is_lvalue_reference<_Tp>, is_rvalue_reference<_Tp> >::type'
|   `-CXXRecordDecl 0x5c59e30 <col:5, col:12> col:12 implicit struct is_reference
|-ClassTemplateDecl 0x5c59ff0 <line:586:3, line:589:7> line:587:12 is_arithmetic
| |-TemplateTypeParmDecl 0x5c59ed8 <line:586:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c59f60 <line:587:5, line:589:7> line:587:12 struct is_arithmetic definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__or_<is_integral<_Tp>, is_floating_point<_Tp> >::type'
|   `-CXXRecordDecl 0x5c5a5f0 <col:5, col:12> col:12 implicit struct is_arithmetic
|-ClassTemplateDecl 0x5c5a7b0 <line:592:3, line:596:7> line:593:12 is_fundamental
| |-TemplateTypeParmDecl 0x5c5a698 <line:592:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c5a720 <line:593:5, line:596:7> line:593:12 struct is_fundamental definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__or_<is_arithmetic<_Tp>, is_void<_Tp>, is_null_pointer<_Tp> >::type'
|   `-CXXRecordDecl 0x5c5aec0 <col:5, col:12> col:12 implicit struct is_fundamental
|-ClassTemplateDecl 0x5c5b080 <line:599:3, line:603:7> line:600:12 is_object
| |-TemplateTypeParmDecl 0x5c5af68 <line:599:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c5aff0 <line:600:5, line:603:7> line:600:12 struct is_object definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__not_<__or_<is_function<_Tp>, is_reference<_Tp>, is_void<_Tp> > >::type'
|   `-CXXRecordDecl 0x5c5d310 <col:5, col:12> col:12 implicit struct is_object
|-ClassTemplateDecl 0x5c5d4d0 <line:605:3, line:606:12> col:12 is_member_pointer
| |-TemplateTypeParmDecl 0x5c5d3b8 <line:605:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c5d440 <line:606:5, col:12> col:12 struct is_member_pointer
|-ClassTemplateDecl 0x5c5d7d0 <line:609:3, line:613:7> line:610:12 is_scalar
| |-TemplateTypeParmDecl 0x5c5d6b8 <line:609:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c5d740 <line:610:5, line:613:7> line:610:12 struct is_scalar definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__or_<is_arithmetic<_Tp>, is_enum<_Tp>, is_pointer<_Tp>, is_member_pointer<_Tp>, is_null_pointer<_Tp> >::type'
|   `-CXXRecordDecl 0x5c5e100 <col:5, col:12> col:12 implicit struct is_scalar
|-ClassTemplateDecl 0x5c5e2c0 <line:616:3, line:618:69> line:617:12 is_compound
| |-TemplateTypeParmDecl 0x5c5e1a8 <line:616:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c5e230 <line:617:5, line:618:69> line:617:12 struct is_compound definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, !is_fundamental<_Tp>::value>'
|   `-CXXRecordDecl 0x5c5e7a0 <col:5, col:12> col:12 implicit struct is_compound
|-ClassTemplateDecl 0x5c5e960 <line:620:3, line:622:27> line:621:12 __is_member_pointer_helper
| |-TemplateTypeParmDecl 0x5c5e848 <line:620:12, col:21> col:21 typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c5e8d0 <line:621:5, line:622:27> line:621:12 struct __is_member_pointer_helper definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c5ebf0 <col:5, col:12> col:12 implicit struct __is_member_pointer_helper
|-ClassTemplatePartialSpecializationDecl 0x5c5eef0 <line:624:3, line:626:26> line:625:12 struct __is_member_pointer_helper definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |-TemplateTypeParmDecl 0x5c5ec98 <line:624:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c5ed08 <col:26, col:35> col:35 typename depth 0 index 1 _Cp
| `-CXXRecordDecl 0x5c5f168 <line:625:5, col:12> col:12 implicit struct __is_member_pointer_helper
|-ClassTemplateDecl 0x5c60470 prev 0x5c5d4d0 <line:629:3, line:632:7> line:630:12 is_member_pointer
| |-TemplateTypeParmDecl 0x5c5f210 <line:629:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c603e0 prev 0x5c5d440 <line:630:5, line:632:7> line:630:12 struct is_member_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_member_pointer_helper<typename remove_cv<_Tp>::type>::type'
|   `-CXXRecordDecl 0x5c60800 <col:5, col:12> col:12 implicit struct is_member_pointer
|-ClassTemplateDecl 0x5c609c0 <line:636:3, line:639:7> line:637:12 __is_referenceable
| |-TemplateTypeParmDecl 0x5c608a8 <line:636:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c60930 <line:637:5, line:639:7> line:637:12 struct __is_referenceable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__or_<is_object<_Tp>, is_reference<_Tp> >::type'
|   `-CXXRecordDecl 0x5c60fc0 <col:5, col:12> col:12 implicit struct __is_referenceable
|-ClassTemplatePartialSpecializationDecl 0x5c61330 <line:641:3, line:644:7> line:642:12 struct __is_referenceable definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |-TemplateTypeParmDecl 0x5c61068 <line:641:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c610d8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c615a8 <line:642:5, col:12> col:12 implicit struct __is_referenceable
|-ClassTemplatePartialSpecializationDecl 0x5c61920 <line:646:3, line:649:7> line:647:12 struct __is_referenceable definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1..., ...)'
| |-TemplateTypeParmDecl 0x5c61650 <line:646:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5c616c8 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c61b98 <line:647:5, col:12> col:12 implicit struct __is_referenceable
|-ClassTemplateDecl 0x5c61d60 <line:654:3, line:656:27> line:655:12 is_const
| |-TemplateTypeParmDecl 0x5c61c40 <line:654:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c61cd0 <line:655:5, line:656:27> line:655:12 struct is_const definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c61ff0 <col:5, col:12> col:12 implicit struct is_const
|-ClassTemplatePartialSpecializationDecl 0x5c621f0 <line:658:3, line:660:26> line:659:12 struct is_const definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'const type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5c62098 <line:658:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c63698 <line:659:5, col:12> col:12 implicit struct is_const
|-ClassTemplateDecl 0x5c63860 <line:663:3, line:665:27> line:664:12 is_volatile
| |-TemplateTypeParmDecl 0x5c63740 <line:663:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c637d0 <line:664:5, line:665:27> line:664:12 struct is_volatile definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c63af0 <col:5, col:12> col:12 implicit struct is_volatile
|-ClassTemplatePartialSpecializationDecl 0x5c63cf0 <line:667:3, line:669:26> line:668:12 struct is_volatile definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'volatile type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5c63b98 <line:667:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c63f58 <line:668:5, col:12> col:12 implicit struct is_volatile
|-ClassTemplateDecl 0x5c64120 <line:672:3, line:675:7> line:673:12 is_trivial
| |-TemplateTypeParmDecl 0x5c64000 <line:672:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c64090 <line:673:5, line:675:7> line:673:12 struct is_trivial definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_trivial(_Tp)>'
|   `-CXXRecordDecl 0x5c64500 <col:5, col:12> col:12 implicit struct is_trivial
|-ClassTemplateDecl 0x5c646c0 <line:678:3, line:681:7> line:679:12 is_trivially_copyable
| |-TemplateTypeParmDecl 0x5c645a8 <line:678:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c64630 <line:679:5, line:681:7> line:679:12 struct is_trivially_copyable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_trivially_copyable(_Tp)>'
|   `-CXXRecordDecl 0x5c64aa0 <col:5, col:12> col:12 implicit struct is_trivially_copyable
|-ClassTemplateDecl 0x5c64c60 <line:684:3, line:687:7> line:685:12 is_standard_layout
| |-TemplateTypeParmDecl 0x5c64b48 <line:684:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c64bd0 <line:685:5, line:687:7> line:685:12 struct is_standard_layout definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_standard_layout(_Tp)>'
|   `-CXXRecordDecl 0x5c65040 <col:5, col:12> col:12 implicit struct is_standard_layout
|-ClassTemplateDecl 0x5c65200 <line:691:3, line:694:7> line:692:12 is_pod
| |-TemplateTypeParmDecl 0x5c650e8 <line:691:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c65170 <line:692:5, line:694:7> line:692:12 struct is_pod definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_pod(_Tp)>'
|   `-CXXRecordDecl 0x5c66be0 <col:5, col:12> col:12 implicit struct is_pod
|-ClassTemplateDecl 0x5c66da0 <line:697:3, line:700:7> line:698:12 is_literal_type
| |-TemplateTypeParmDecl 0x5c66c88 <line:697:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c66d10 <line:698:5, line:700:7> line:698:12 struct is_literal_type definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_literal(_Tp)>'
|   `-CXXRecordDecl 0x5c67180 <col:5, col:12> col:12 implicit struct is_literal_type
|-ClassTemplateDecl 0x5c67340 <line:703:3, line:706:7> line:704:12 is_empty
| |-TemplateTypeParmDecl 0x5c67228 <line:703:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c672b0 <line:704:5, line:706:7> line:704:12 struct is_empty definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_empty(_Tp)>'
|   `-CXXRecordDecl 0x5c67720 <col:5, col:12> col:12 implicit struct is_empty
|-ClassTemplateDecl 0x5c678e0 <line:709:3, line:712:7> line:710:12 is_polymorphic
| |-TemplateTypeParmDecl 0x5c677c8 <line:709:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c67850 <line:710:5, line:712:7> line:710:12 struct is_polymorphic definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_polymorphic(_Tp)>'
|   `-CXXRecordDecl 0x5c67cc0 <col:5, col:12> col:12 implicit struct is_polymorphic
|-ClassTemplateDecl 0x5c67e80 <line:717:3, line:720:7> line:718:12 is_final
| |-TemplateTypeParmDecl 0x5c67d68 <line:717:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c67df0 <line:718:5, line:720:7> line:718:12 struct is_final definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_final(_Tp)>'
|   `-CXXRecordDecl 0x5c68260 <col:5, col:12> col:12 implicit struct is_final
|-ClassTemplateDecl 0x5c68420 <line:724:3, line:727:7> line:725:12 is_abstract
| |-TemplateTypeParmDecl 0x5c68308 <line:724:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c68390 <line:725:5, line:727:7> line:725:12 struct is_abstract definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_abstract(_Tp)>'
|   `-CXXRecordDecl 0x5c68800 <col:5, col:12> col:12 implicit struct is_abstract
|-ClassTemplateDecl 0x5c68b38 <line:729:3, line:732:27> line:731:12 __is_signed_helper
| |-TemplateTypeParmDecl 0x5c688a8 <line:729:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c68a28 <line:730:5, col:32> col:10 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c689e0 <col:12, col:32> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c68aa8 <line:731:5, line:732:27> line:731:12 struct __is_signed_helper definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5c6b5e0 <col:5, col:12> col:12 implicit struct __is_signed_helper
|-ClassTemplatePartialSpecializationDecl 0x5c6b878 <line:734:3, line:737:7> line:735:12 struct __is_signed_helper definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<bool, _Tp(-1) < _Tp(0)>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c6b688 <line:734:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c6bd50 <line:735:5, col:12> col:12 implicit struct __is_signed_helper
|-ClassTemplateDecl 0x5c6bf10 <line:740:3, line:743:7> line:741:12 is_signed
| |-TemplateTypeParmDecl 0x5c6bdf8 <line:740:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c6be80 <line:741:5, line:743:7> line:741:12 struct is_signed definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_signed_helper<_Tp>::type'
|   `-CXXRecordDecl 0x5c6c480 <col:5, col:12> col:12 implicit struct is_signed
|-ClassTemplateDecl 0x5c6c640 <line:746:3, line:749:7> line:747:12 is_unsigned
| |-TemplateTypeParmDecl 0x5c6c528 <line:746:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c6c5b0 <line:747:5, line:749:7> line:747:12 struct is_unsigned definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp> > >'
|   `-CXXRecordDecl 0x5c6cc40 <col:5, col:12> col:12 implicit struct is_unsigned
|-ClassTemplateDecl 0x5c6ce00 <line:754:3, line:755:12> col:12 add_rvalue_reference
| |-TemplateTypeParmDecl 0x5c6cce8 <line:754:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c6cd70 <line:755:5, col:12> col:12 struct add_rvalue_reference
|-FunctionTemplateDecl 0x5c6d2e0 <line:761:3, line:762:56> col:46 declval
| |-TemplateTypeParmDecl 0x5c6cfe8 <line:761:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5c6d240 <line:762:5, col:56> col:46 declval 'typename add_rvalue_reference<_Tp>::type () noexcept'
|-ClassTemplateDecl 0x5c6e990 <line:764:3, line:765:12> col:12 extent
| |-TemplateTypeParmDecl 0x5c6e7a0 <line:764:12> col:12 typename depth 0 index 0
| |-NonTypeTemplateParmDecl 0x5c6e850 <col:22, col:33> col:31 'unsigned int' depth 0 index 1
| | `-TemplateArgument expr
| |   `-ConstantExpr 0x5c6e8c8 <col:33> 'unsigned int'
| |     `-ImplicitCastExpr 0x5c6e8b0 <col:33> 'unsigned int' <IntegralCast>
| |       `-IntegerLiteral 0x5c6e818 <col:33> 'int' 0
| `-CXXRecordDecl 0x5c6e900 <line:765:5, col:12> col:12 struct extent
|-ClassTemplateDecl 0x5c6ecf0 <line:767:3, line:768:12> col:12 remove_all_extents
| |-TemplateTypeParmDecl 0x5c6ebd8 <line:767:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c6ec60 <line:768:5, col:12> col:12 struct remove_all_extents
|-ClassTemplateDecl 0x5c6eff0 <line:770:3, line:773:7> line:771:12 __is_array_known_bounds
| |-TemplateTypeParmDecl 0x5c6eed8 <line:770:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c6ef60 <line:771:5, line:773:7> line:771:12 struct __is_array_known_bounds definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, (extent<_Tp>::value > 0)>'
|   `-CXXRecordDecl 0x5c6f5c0 <col:5, col:12> col:12 implicit struct __is_array_known_bounds
|-ClassTemplateDecl 0x5c6f780 <line:775:3, line:778:7> line:776:12 __is_array_unknown_bounds
| |-TemplateTypeParmDecl 0x5c6f668 <line:775:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c6f6f0 <line:776:5, line:778:7> line:776:12 struct __is_array_unknown_bounds definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_array<_Tp>, __not_<extent<_Tp> > >'
|   `-CXXRecordDecl 0x5c6fdb0 <col:5, col:12> col:12 implicit struct __is_array_unknown_bounds
|-CXXRecordDecl 0x5c6fe58 <line:785:3, line:792:3> line:785:10 referenced struct __do_is_destructible_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c6ff78 <col:3, col:10> col:10 implicit struct __do_is_destructible_impl
| |-FunctionTemplateDecl 0x5c704c8 <line:787:5, line:788:34> col:24 __test
| | |-TemplateTypeParmDecl 0x5c70008 <line:787:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5c70258 <col:28, col:39> col:28 typename depth 0 index 1
| | | `-TemplateArgument type 'decltype(declval<_Tp &>().~_Tp())'
| | `-CXXMethodDecl 0x5c70428 <line:788:7, col:34> col:24 __test 'std::true_type (int)' static
| |   `-ParmVarDecl 0x5c70300 <col:31> col:34 'int'
| `-FunctionTemplateDecl 0x5c706c8 <line:790:5, line:791:35> col:25 __test
|   |-TemplateTypeParmDecl 0x5c70528 <line:790:14> col:14 typename depth 0 index 0
|   `-CXXMethodDecl 0x5c70628 <line:791:7, col:35> col:25 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5c72c00 <line:794:3, line:799:5> line:795:12 __is_destructible_impl
| |-TemplateTypeParmDecl 0x5c70738 <line:794:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c72b70 <line:795:5, line:799:5> line:795:12 struct __is_destructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_destructible_impl'
|   |-CXXRecordDecl 0x5c72e90 <col:5, col:12> col:12 implicit struct __is_destructible_impl
|   `-TypedefDecl 0x5c73098 <line:798:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
|     `-DecltypeType 0x5c73060 'decltype(__test<_Tp>(0))' dependent
|       `-CallExpr 0x5c72ff8 <col:24, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c72f48 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x5c704c8 0x5c706c8
|         `-IntegerLiteral 0x5c72fd8 <col:36> 'int' 0
|-ClassTemplateDecl 0x5c73a60 <line:801:3, line:806:12> col:12 __is_destructible_safe
| |-TemplateTypeParmDecl 0x5c73108 <line:801:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c735b8 <line:802:12, line:804:44> line:802:17 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c73570 <col:19, line:804:44> '<dependent type>' lvalue
| |-NonTypeTemplateParmDecl 0x5c73948 <line:805:12, col:61> col:17 'bool' depth 0 index 2
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c73900 <col:19, col:61> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c739d0 <line:806:5, col:12> col:12 struct __is_destructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c73f50 <line:808:3, line:812:7> line:809:12 struct __is_destructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__is_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c73ce8 <line:808:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c74580 <line:809:5, col:12> col:12 implicit struct __is_destructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c74890 <line:814:3, line:816:27> line:815:12 struct __is_destructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c74628 <line:814:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c75798 <line:815:5, col:12> col:12 implicit struct __is_destructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c75ab0 <line:818:3, line:820:26> line:819:12 struct __is_destructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c75840 <line:818:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c75df8 <line:819:5, col:12> col:12 implicit struct __is_destructible_safe
|-ClassTemplateDecl 0x5c75fc0 <line:823:3, line:826:7> line:824:12 is_destructible
| |-TemplateTypeParmDecl 0x5c75ea0 <line:823:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c75f30 <line:824:5, line:826:7> line:824:12 struct is_destructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_destructible_safe<_Tp>::type'
|   `-CXXRecordDecl 0x5c76a10 <col:5, col:12> col:12 implicit struct is_destructible
|-CXXRecordDecl 0x5c76ab8 <line:832:3, line:840:3> line:832:10 referenced struct __do_is_nt_destructible_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c76bd8 <col:3, col:10> col:10 implicit struct __do_is_nt_destructible_impl
| |-FunctionTemplateDecl 0x5c771b0 <line:834:5, line:836:19> col:9 __test
| | |-TemplateTypeParmDecl 0x5c76c68 <line:834:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | `-CXXMethodDecl 0x5c77110 <line:835:7, line:836:19> col:9 __test 'integral_constant<bool, noexcept(declval<_Tp &>().~_Tp())> (int)' static
| |   `-ParmVarDecl 0x5c76fb8 <col:16> col:19 'int'
| `-FunctionTemplateDecl 0x5c77360 <line:838:5, line:839:35> col:25 __test
|   |-TemplateTypeParmDecl 0x5c77210 <line:838:14> col:14 typename depth 0 index 0
|   `-CXXMethodDecl 0x5c772c0 <line:839:7, col:35> col:25 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5c774f0 <line:842:3, line:847:5> line:843:12 __is_nt_destructible_impl
| |-TemplateTypeParmDecl 0x5c773d0 <line:842:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c77460 <line:843:5, line:847:5> line:843:12 struct __is_nt_destructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_nt_destructible_impl'
|   |-CXXRecordDecl 0x5c77fe8 <col:5, col:12> col:12 implicit struct __is_nt_destructible_impl
|   `-TypedefDecl 0x5c781b8 <line:846:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
|     `-DecltypeType 0x5c78180 'decltype(__test<_Tp>(0))' dependent
|       `-CallExpr 0x5c78150 <col:24, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c780a0 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x5c771b0 0x5c77360
|         `-IntegerLiteral 0x5c78130 <col:36> 'int' 0
|-ClassTemplateDecl 0x5c78b00 <line:849:3, line:854:12> col:12 __is_nt_destructible_safe
| |-TemplateTypeParmDecl 0x5c78228 <line:849:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c78698 <line:850:12, line:852:44> line:850:17 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c78650 <col:19, line:852:44> '<dependent type>' lvalue
| |-NonTypeTemplateParmDecl 0x5c789e8 <line:853:12, col:61> col:17 'bool' depth 0 index 2
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c789a0 <col:19, col:61> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c78a70 <line:854:5, col:12> col:12 struct __is_nt_destructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c78ff0 <line:856:3, line:860:7> line:857:12 struct __is_nt_destructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__is_nt_destructible_impl<typename remove_all_extents<_Tp>::type>::type'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c78d88 <line:856:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c795d0 <line:857:5, col:12> col:12 implicit struct __is_nt_destructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c798e0 <line:862:3, line:864:27> line:863:12 struct __is_nt_destructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c79678 <line:862:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c79c28 <line:863:5, col:12> col:12 implicit struct __is_nt_destructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c7ab60 <line:866:3, line:868:26> line:867:12 struct __is_nt_destructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c79cd0 <line:866:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7aea8 <line:867:5, col:12> col:12 implicit struct __is_nt_destructible_safe
|-ClassTemplateDecl 0x5c7b070 <line:871:3, line:874:7> line:872:12 is_nothrow_destructible
| |-TemplateTypeParmDecl 0x5c7af50 <line:871:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7afe0 <line:872:5, line:874:7> line:872:12 struct is_nothrow_destructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nt_destructible_safe<_Tp>::type'
|   `-CXXRecordDecl 0x5c7ba90 <col:5, col:12> col:12 implicit struct is_nothrow_destructible
|-CXXRecordDecl 0x5c7bb38 <line:876:3, line:883:3> line:876:10 referenced struct __do_is_default_constructible_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c7bc58 <col:3, col:10> col:10 implicit struct __do_is_default_constructible_impl
| |-FunctionTemplateDecl 0x5c7c010 <line:878:5, line:879:34> col:24 __test
| | |-TemplateTypeParmDecl 0x5c7bce8 <line:878:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5c7be08 <col:28, col:39> col:28 typename depth 0 index 1
| | | `-TemplateArgument type 'decltype(_Tp())'
| | `-CXXMethodDecl 0x5c7bf70 <line:879:7, col:34> col:24 __test 'std::true_type (int)' static
| |   `-ParmVarDecl 0x5c7beb0 <col:31> col:34 'int'
| `-FunctionTemplateDecl 0x5c7c1c0 <line:881:5, line:882:35> col:25 __test
|   |-TemplateTypeParmDecl 0x5c7c070 <line:881:14> col:14 typename depth 0 index 0
|   `-CXXMethodDecl 0x5c7c120 <line:882:7, col:35> col:25 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5c7c350 <line:885:3, line:890:5> line:886:12 __is_default_constructible_impl
| |-TemplateTypeParmDecl 0x5c7c230 <line:885:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7c2c0 <line:886:5, line:890:5> line:886:12 struct __is_default_constructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_default_constructible_impl'
|   |-CXXRecordDecl 0x5c7c5e0 <col:5, col:12> col:12 implicit struct __is_default_constructible_impl
|   `-TypedefDecl 0x5c7c7a8 <line:889:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
|     `-DecltypeType 0x5c7c770 'decltype(__test<_Tp>(0))' dependent
|       `-CallExpr 0x5c7c748 <col:24, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c7c698 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x5c7c010 0x5c7c1c0
|         `-IntegerLiteral 0x5c7c728 <col:36> 'int' 0
|-ClassTemplateDecl 0x5c7c930 <line:892:3, line:896:7> line:893:12 __is_default_constructible_atom
| |-TemplateTypeParmDecl 0x5c7c818 <line:892:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7c8a0 <line:893:5, line:896:7> line:893:12 struct __is_default_constructible_atom definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<__not_<is_void<_Tp> >, __is_default_constructible_impl<_Tp> >'
|   `-CXXRecordDecl 0x5c7dbf0 <col:5, col:12> col:12 implicit struct __is_default_constructible_atom
|-ClassTemplateDecl 0x5c7df28 <line:898:3, line:899:12> col:12 __is_default_constructible_safe
| |-TemplateTypeParmDecl 0x5c7dc98 <line:898:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c7de18 <col:26, col:48> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c7ddd0 <col:33, col:48> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c7de98 <line:899:5, col:12> col:12 struct __is_default_constructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c7e368 <line:906:3, line:911:7> line:907:12 struct __is_default_constructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__and_<__is_array_known_bounds<_Tp>, __is_default_constructible_atom<typename remove_all_extents<_Tp>::type> >'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c7e178 <line:906:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7ea10 <line:907:5, col:12> col:12 implicit struct __is_default_constructible_safe
|-ClassTemplatePartialSpecializationDecl 0x5c7eca8 <line:913:3, line:916:7> line:914:12 struct __is_default_constructible_safe definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__is_default_constructible_atom<_Tp>::type'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c7eab8 <line:913:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7f0d0 <line:914:5, col:12> col:12 implicit struct __is_default_constructible_safe
|-ClassTemplateDecl 0x5c7f290 <line:919:3, line:922:7> line:920:12 is_default_constructible
| |-TemplateTypeParmDecl 0x5c7f178 <line:919:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c7f200 <line:920:5, line:922:7> line:920:12 struct is_default_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_default_constructible_safe<_Tp>::type'
|   `-CXXRecordDecl 0x5c80220 <col:5, col:12> col:12 implicit struct is_default_constructible
|-CXXRecordDecl 0x5c802c8 <line:936:3, line:944:3> line:936:10 referenced struct __do_is_static_castable_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c803e8 <col:3, col:10> col:10 implicit struct __do_is_static_castable_impl
| |-FunctionTemplateDecl 0x5c808d0 <line:938:5, line:940:34> col:24 __test
| | |-TemplateTypeParmDecl 0x5c80478 <line:938:14, col:23> col:23 referenced typename depth 0 index 0 _From
| | |-TemplateTypeParmDecl 0x5c804e8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _To
| | |-TemplateTypeParmDecl 0x5c806c8 <col:44, line:939:16> line:938:44 typename depth 0 index 2
| | | `-TemplateArgument type 'decltype(static_cast<_To>(declval<_From>()))'
| | `-CXXMethodDecl 0x5c80830 <line:940:7, col:34> col:24 __test 'std::true_type (int)' static
| |   `-ParmVarDecl 0x5c80778 <col:31> col:34 'int'
| `-FunctionTemplateDecl 0x5c80af8 <line:942:5, line:943:35> col:25 __test
|   |-TemplateTypeParmDecl 0x5c80930 <line:942:14> col:14 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x5c809a8 <col:24> col:24 typename depth 0 index 1
|   `-CXXMethodDecl 0x5c80a58 <line:943:7, col:35> col:25 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5c80cf8 <line:946:3, line:951:5> line:947:12 __is_static_castable_impl
| |-TemplateTypeParmDecl 0x5c80b68 <line:946:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c80bd8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| `-CXXRecordDecl 0x5c80c68 <line:947:5, line:951:5> line:947:12 struct __is_static_castable_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_static_castable_impl'
|   |-CXXRecordDecl 0x5c80fd0 <col:5, col:12> col:12 implicit struct __is_static_castable_impl
|   `-TypedefDecl 0x5c81218 <line:950:7, col:47> col:47 type 'decltype(__test<_From, _To>(0))'
|     `-DecltypeType 0x5c811e0 'decltype(__test<_From, _To>(0))' dependent
|       `-CallExpr 0x5c81178 <col:24, col:44> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c81098 <col:24, col:41> '<dependent type>' lvalue (no ADL) = '__test' 0x5c808d0 0x5c80af8
|         `-IntegerLiteral 0x5c81158 <col:43> 'int' 0
|-ClassTemplateDecl 0x5c81418 <line:953:3, line:956:7> line:954:12 __is_static_castable_safe
| |-TemplateTypeParmDecl 0x5c81288 <line:953:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c812f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| `-CXXRecordDecl 0x5c81388 <line:954:5, line:956:7> line:954:12 struct __is_static_castable_safe definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_static_castable_impl<_From, _To>::type'
|   `-CXXRecordDecl 0x5c81880 <col:5, col:12> col:12 implicit struct __is_static_castable_safe
|-ClassTemplateDecl 0x5c81ab8 <line:959:3, line:963:7> line:960:12 __is_static_castable
| |-TemplateTypeParmDecl 0x5c81928 <line:959:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c81998 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| `-CXXRecordDecl 0x5c81a28 <line:960:5, line:963:7> line:960:12 struct __is_static_castable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, (__is_static_castable_safe<_From, _To>::value)>'
|   `-CXXRecordDecl 0x5c82040 <col:5, col:12> col:12 implicit struct __is_static_castable
|-CXXRecordDecl 0x5c820e8 <line:970:3, line:978:3> line:970:10 referenced struct __do_is_direct_constructible_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c83008 <col:3, col:10> col:10 implicit struct __do_is_direct_constructible_impl
| |-FunctionTemplateDecl 0x5c83550 <line:972:5, line:974:34> col:24 __test
| | |-TemplateTypeParmDecl 0x5c83098 <line:972:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5c83108 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Arg
| | |-TemplateTypeParmDecl 0x5c83348 <col:43, line:973:9> line:972:43 typename depth 0 index 2
| | | `-TemplateArgument type 'decltype(::new _Tp((declval<_Arg>())))'
| | `-CXXMethodDecl 0x5c834b0 <line:974:7, col:34> col:24 __test 'std::true_type (int)' static
| |   `-ParmVarDecl 0x5c833f8 <col:31> col:34 'int'
| `-FunctionTemplateDecl 0x5c83778 <line:976:5, line:977:35> col:25 __test
|   |-TemplateTypeParmDecl 0x5c835b0 <line:976:14> col:14 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x5c83628 <col:24> col:24 typename depth 0 index 1
|   `-CXXMethodDecl 0x5c836d8 <line:977:7, col:35> col:25 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5c83978 <line:980:3, line:985:5> line:981:12 __is_direct_constructible_impl
| |-TemplateTypeParmDecl 0x5c837e8 <line:980:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c83858 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c838e8 <line:981:5, line:985:5> line:981:12 struct __is_direct_constructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_direct_constructible_impl'
|   |-CXXRecordDecl 0x5c83c50 <col:5, col:12> col:12 implicit struct __is_direct_constructible_impl
|   `-TypedefDecl 0x5c83e58 <line:984:7, col:46> col:46 type 'decltype(__test<_Tp, _Arg>(0))'
|     `-DecltypeType 0x5c83e20 'decltype(__test<_Tp, _Arg>(0))' dependent
|       `-CallExpr 0x5c83df8 <col:24, col:43> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c83d18 <col:24, col:40> '<dependent type>' lvalue (no ADL) = '__test' 0x5c83550 0x5c83778
|         `-IntegerLiteral 0x5c83dd8 <col:42> 'int' 0
|-ClassTemplateDecl 0x5c84058 <line:987:3, line:991:7> line:988:12 __is_direct_constructible_new_safe
| |-TemplateTypeParmDecl 0x5c83ec8 <line:987:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c83f38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c83fc8 <line:988:5, line:991:7> line:988:12 struct __is_direct_constructible_new_safe definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_destructible<_Tp>, __is_direct_constructible_impl<_Tp, _Arg> >'
|   `-CXXRecordDecl 0x5c84620 <col:5, col:12> col:12 implicit struct __is_direct_constructible_new_safe
|-ClassTemplateDecl 0x5c84858 <line:993:3, line:994:12> col:12 is_same
| |-TemplateTypeParmDecl 0x5c846c8 <line:993:12> col:12 typename depth 0 index 0
| |-TemplateTypeParmDecl 0x5c84738 <col:22> col:22 typename depth 0 index 1
| `-CXXRecordDecl 0x5c847c8 <line:994:5, col:12> col:12 struct is_same
|-ClassTemplateDecl 0x5c84c18 <line:996:3, line:997:12> col:12 is_base_of
| |-TemplateTypeParmDecl 0x5c84a88 <line:996:12> col:12 typename depth 0 index 0
| |-TemplateTypeParmDecl 0x5c84af8 <col:22> col:22 typename depth 0 index 1
| `-CXXRecordDecl 0x5c84b88 <line:997:5, col:12> col:12 struct is_base_of
|-ClassTemplateDecl 0x5c87250 <line:999:3, line:1000:12> col:12 remove_reference
| |-TemplateTypeParmDecl 0x5c84e48 <line:999:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5c84ed0 <line:1000:5, col:12> col:12 struct remove_reference
|-ClassTemplateDecl 0x5c87a60 <line:1002:3, line:1005:12> col:12 __is_base_to_derived_ref
| |-TemplateTypeParmDecl 0x5c87438 <line:1002:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c874a8 <col:28, col:37> col:37 typename depth 0 index 1 _To
| |-NonTypeTemplateParmDecl 0x5c87948 <col:42, line:1004:49> line:1003:12 'bool' depth 0 index 2
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c87900 <col:14, line:1004:49> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c879d0 <line:1005:5, col:12> col:12 struct __is_base_to_derived_ref
|-ClassTemplateDecl 0x5c87e58 <line:1007:3, line:1008:12> col:12 is_constructible
| |-TemplateTypeParmDecl 0x5c87cc8 <line:1007:12, col:21> col:21 typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c87d38 <col:26, col:38> col:38 typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c87dc8 <line:1008:5, col:12> col:12 struct is_constructible
|-ClassTemplatePartialSpecializationDecl 0x5c883b0 <line:1012:3, line:1023:5> line:1013:12 struct __is_base_to_derived_ref definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c880e8 <line:1012:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c88158 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| |-CXXRecordDecl 0x5c88698 <line:1013:5, col:12> col:12 implicit struct __is_base_to_derived_ref
| |-TypedefDecl 0x5c88a20 <line:1015:7, line:1016:24> col:24 referenced __src_t 'typename remove_cv<typename remove_reference<_From>::type>::type'
| | `-DependentNameType 0x5c889b0 'typename remove_cv<typename remove_reference<_From>::type>::type' dependent
| |-TypedefDecl 0x5c88db0 <line:1017:7, line:1018:24> col:24 referenced __dst_t 'typename remove_cv<typename remove_reference<_To>::type>::type'
| | `-DependentNameType 0x5c88d40 'typename remove_cv<typename remove_reference<_To>::type>::type' dependent
| |-TypedefDecl 0x5c8ac40 <line:1019:7, line:1021:50> col:50 referenced type '__and_<__not_<is_same<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t> >, is_base_of<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t>, __not_<is_constructible<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t, _From> > >'
| | `-TemplateSpecializationType 0x5c8ab10 '__and_<__not_<is_same<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t> >, is_base_of<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t>, __not_<is_constructible<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t, _From> > >' dependent __and_
| |   |-TemplateArgument type '__not_<is_same<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t> >'
| |   |-TemplateArgument type 'is_base_of<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t>'
| |   `-TemplateArgument type '__not_<is_constructible<std::__is_base_to_derived_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t, _From> >'
| `-VarDecl 0x5c8aca8 <line:1022:7, col:43> col:29 value 'const bool' static constexpr cinit
|   `-DependentScopeDeclRefExpr 0x5c8ad80 <col:37, col:43> '<dependent type>' lvalue
|-ClassTemplatePartialSpecializationDecl 0x5c8b0a0 <line:1025:3, line:1028:7> line:1026:12 struct __is_base_to_derived_ref definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c8add0 <line:1025:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c8ae48 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| `-CXXRecordDecl 0x5c8b3c8 <line:1026:5, col:12> col:12 implicit struct __is_base_to_derived_ref
|-ClassTemplateDecl 0x5c8b9e0 <line:1030:3, line:1033:12> col:12 __is_lvalue_to_rvalue_ref
| |-TemplateTypeParmDecl 0x5c8b470 <line:1030:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c8b4e8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| |-NonTypeTemplateParmDecl 0x5c8b8c8 <col:42, line:1032:48> line:1031:12 'bool' depth 0 index 2
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c8b880 <col:14, line:1032:48> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c8b950 <line:1033:5, col:12> col:12 struct __is_lvalue_to_rvalue_ref
|-ClassTemplatePartialSpecializationDecl 0x5c8bf10 <line:1037:3, line:1048:5> line:1038:12 struct __is_lvalue_to_rvalue_ref definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c8bc48 <line:1037:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c8bcb8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| |-CXXRecordDecl 0x5c8c1f8 <line:1038:5, col:12> col:12 implicit struct __is_lvalue_to_rvalue_ref
| |-TypedefDecl 0x5c8c4a0 <line:1040:7, line:1041:29> col:29 referenced __src_t 'typename remove_cv<typename remove_reference<_From>::type>::type'
| | `-DependentNameType 0x5c8c430 'typename remove_cv<typename remove_reference<_From>::type>::type' dependent
| |-TypedefDecl 0x5c8c710 <line:1042:7, line:1043:27> col:27 referenced __dst_t 'typename remove_cv<typename remove_reference<_To>::type>::type'
| | `-DependentNameType 0x5c8c6a0 'typename remove_cv<typename remove_reference<_To>::type>::type' dependent
| |-TypedefDecl 0x5c8df68 <line:1044:7, line:1046:38> col:38 referenced type '__and_<__not_<is_function<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t> >, __or_<is_same<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t>, is_base_of<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t, std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t> > >'
| | `-TemplateSpecializationType 0x5c8de80 '__and_<__not_<is_function<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t> >, __or_<is_same<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t>, is_base_of<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t, std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t> > >' dependent __and_
| |   |-TemplateArgument type '__not_<is_function<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t> >'
| |   `-TemplateArgument type '__or_<is_same<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t, std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t>, is_base_of<std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__dst_t, std::__is_lvalue_to_rvalue_ref<type-parameter-0-0, type-parameter-0-1, true>::__src_t> >'
| `-VarDecl 0x5c8dfd0 <line:1047:7, col:43> col:29 value 'const bool' static constexpr cinit
|   `-DependentScopeDeclRefExpr 0x5c8e0b0 <col:37, col:43> '<dependent type>' lvalue
|-ClassTemplatePartialSpecializationDecl 0x5c8e3d0 <line:1050:3, line:1053:7> line:1051:12 struct __is_lvalue_to_rvalue_ref definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c8e100 <line:1050:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5c8e178 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| `-CXXRecordDecl 0x5c8e6f8 <line:1051:5, col:12> col:12 implicit struct __is_lvalue_to_rvalue_ref
|-ClassTemplateDecl 0x5c8e938 <line:1061:3, line:1067:7> line:1062:12 __is_direct_constructible_ref_cast
| |-TemplateTypeParmDecl 0x5c8e7a0 <line:1061:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c8e818 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c8e8a8 <line:1062:5, line:1067:7> line:1062:12 struct __is_direct_constructible_ref_cast definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<__is_static_castable<_Arg, _Tp>, __not_<__or_<__is_base_to_derived_ref<_Arg, _Tp>, __is_lvalue_to_rvalue_ref<_Arg, _Tp> > > >'
|   `-CXXRecordDecl 0x5c901b0 <col:5, col:12> col:12 implicit struct __is_direct_constructible_ref_cast
|-ClassTemplateDecl 0x5c903e8 <line:1069:3, line:1075:7> line:1070:12 __is_direct_constructible_new
| |-TemplateTypeParmDecl 0x5c90258 <line:1069:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c902c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c90358 <line:1070:5, line:1075:7> line:1070:12 struct __is_direct_constructible_new definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'conditional<is_reference<_Tp>::value, __is_direct_constructible_ref_cast<_Tp, _Arg>, __is_direct_constructible_new_safe<_Tp, _Arg> >::type'
|   `-CXXRecordDecl 0x5c90c10 <col:5, col:12> col:12 implicit struct __is_direct_constructible_new
|-ClassTemplateDecl 0x5c90e48 <line:1077:3, line:1080:7> line:1078:12 __is_direct_constructible
| |-TemplateTypeParmDecl 0x5c90cb8 <line:1077:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c90d28 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c90db8 <line:1078:5, line:1080:7> line:1078:12 struct __is_direct_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_direct_constructible_new<_Tp, _Arg>::type'
|   `-CXXRecordDecl 0x5c912b0 <col:5, col:12> col:12 implicit struct __is_direct_constructible
|-CXXRecordDecl 0x5c91358 <line:1087:3, line:1095:3> line:1087:10 referenced struct __do_is_nary_constructible_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c91478 <col:3, col:10> col:10 implicit struct __do_is_nary_constructible_impl
| |-FunctionTemplateDecl 0x5c91980 <line:1089:5, line:1091:34> col:24 __test
| | |-TemplateTypeParmDecl 0x5c91508 <line:1089:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5c91578 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Args
| | |-TemplateTypeParmDecl 0x5c91778 <col:47, line:1090:16> line:1089:47 typename depth 0 index 2
| | | `-TemplateArgument type 'decltype(_Tp(declval<_Args>()...))'
| | `-CXXMethodDecl 0x5c918e0 <line:1091:7, col:34> col:24 __test 'std::true_type (int)' static
| |   `-ParmVarDecl 0x5c91828 <col:31> col:34 'int'
| `-FunctionTemplateDecl 0x5c91ba8 <line:1093:5, line:1094:35> col:25 __test
|   |-TemplateTypeParmDecl 0x5c919e0 <line:1093:14> col:14 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x5c91a58 <col:24> col:24 typename depth 0 index 1 ...
|   `-CXXMethodDecl 0x5c91b08 <line:1094:7, col:35> col:25 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5c91da8 <line:1097:3, line:1102:5> line:1098:12 __is_nary_constructible_impl
| |-TemplateTypeParmDecl 0x5c91c18 <line:1097:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c91c88 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c91d18 <line:1098:5, line:1102:5> line:1098:12 struct __is_nary_constructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_nary_constructible_impl'
|   |-CXXRecordDecl 0x5c929d0 <col:5, col:12> col:12 implicit struct __is_nary_constructible_impl
|   `-TypedefDecl 0x5c92c28 <line:1101:7, col:50> col:50 type 'decltype(__test<_Tp, _Args...>(0))'
|     `-DecltypeType 0x5c92bf0 'decltype(__test<_Tp, _Args...>(0))' dependent
|       `-CallExpr 0x5c92b88 <col:24, col:47> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c92aa8 <col:24, col:44> '<dependent type>' lvalue (no ADL) = '__test' 0x5c91980 0x5c91ba8
|         `-IntegerLiteral 0x5c92b68 <col:46> 'int' 0
|-ClassTemplateDecl 0x5c92e28 <line:1104:3, line:1110:5> line:1105:12 __is_nary_constructible
| |-TemplateTypeParmDecl 0x5c92c98 <line:1104:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c92d08 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c92d98 <line:1105:5, line:1110:5> line:1105:12 struct __is_nary_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nary_constructible_impl<_Tp, _Args...>::type'
|   |-CXXRecordDecl 0x5c93330 <col:5, col:12> col:12 implicit struct __is_nary_constructible
|   `-StaticAssertDecl 0x5c934f0 <line:1108:7, line:1109:52> line:1108:7
|     |-BinaryOperator 0x5c93420 <col:21, col:40> 'bool' '>'
|     | |-SizeOfPackExpr 0x5c933c0 <col:21, col:36> 'unsigned long' 0x5c92d08 _Args
|     | `-ImplicitCastExpr 0x5c93408 <col:40> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x5c933e8 <col:40> 'int' 1
|     `-StringLiteral 0x5c934b8 <line:1109:21> 'const char [30]' lvalue "Only useful for > 1 arguments"
|-ClassTemplateDecl 0x5c936d8 <line:1112:3, line:1115:7> line:1113:12 __is_constructible_impl
| |-TemplateTypeParmDecl 0x5c93548 <line:1112:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c935b8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c93648 <line:1113:5, line:1115:7> line:1113:12 struct __is_constructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nary_constructible<_Tp, _Args...>'
|   `-CXXRecordDecl 0x5c93b00 <col:5, col:12> col:12 implicit struct __is_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c93e28 <line:1117:3, line:1120:7> line:1118:12 struct __is_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__is_direct_constructible<_Tp, _Arg>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5c93ba8 <line:1117:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c93c18 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c941d0 <line:1118:5, col:12> col:12 implicit struct __is_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c94408 <line:1122:3, line:1125:7> line:1123:12 struct __is_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_default_constructible<_Tp>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| |-TemplateTypeParmDecl 0x5c94278 <line:1122:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c96410 <line:1123:5, col:12> col:12 implicit struct __is_constructible_impl
|-ClassTemplateDecl 0x5c96648 prev 0x5c87e58 <line:1128:3, line:1131:7> line:1129:12 is_constructible
| |-TemplateTypeParmDecl 0x5c964b8 <line:1128:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c96528 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c965b8 prev 0x5c87dc8 <line:1129:5, line:1131:7> line:1129:12 struct is_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_constructible_impl<_Tp, _Args...>::type'
|   `-CXXRecordDecl 0x5c96950 <col:5, col:12> col:12 implicit struct is_constructible
|-ClassTemplateDecl 0x5c96c88 <line:1133:3, line:1134:12> col:12 __is_copy_constructible_impl
| |-TemplateTypeParmDecl 0x5c969f8 <line:1133:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c96b78 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c96b30 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c96bf8 <line:1134:5, col:12> col:12 struct __is_copy_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c970c8 <line:1136:3, line:1138:27> line:1137:12 struct __is_copy_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c96ed8 <line:1136:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c97398 <line:1137:5, col:12> col:12 implicit struct __is_copy_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c97638 <line:1140:3, line:1143:7> line:1141:12 struct __is_copy_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_constructible<_Tp, const _Tp &>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c97440 <line:1140:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c97ab0 <line:1141:5, col:12> col:12 implicit struct __is_copy_constructible_impl
|-ClassTemplateDecl 0x5c97c70 <line:1146:3, line:1149:7> line:1147:12 is_copy_constructible
| |-TemplateTypeParmDecl 0x5c97b58 <line:1146:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c97be0 <line:1147:5, line:1149:7> line:1147:12 struct is_copy_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_copy_constructible_impl<_Tp>'
|   `-CXXRecordDecl 0x5c98100 <col:5, col:12> col:12 implicit struct is_copy_constructible
|-ClassTemplateDecl 0x5c99f10 <line:1151:3, line:1152:12> col:12 __is_move_constructible_impl
| |-TemplateTypeParmDecl 0x5c981a8 <line:1151:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c99e00 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c982e0 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c99e80 <line:1152:5, col:12> col:12 struct __is_move_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c9a348 <line:1154:3, line:1156:27> line:1155:12 struct __is_move_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c9a158 <line:1154:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9a618 <line:1155:5, col:12> col:12 implicit struct __is_move_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c9a8b8 <line:1158:3, line:1161:7> line:1159:12 struct __is_move_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_constructible<_Tp, _Tp &&>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c9a6c0 <line:1158:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9ad00 <line:1159:5, col:12> col:12 implicit struct __is_move_constructible_impl
|-ClassTemplateDecl 0x5c9aec0 <line:1164:3, line:1167:7> line:1165:12 is_move_constructible
| |-TemplateTypeParmDecl 0x5c9ada8 <line:1164:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9ae30 <line:1165:5, line:1167:7> line:1165:12 struct is_move_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_move_constructible_impl<_Tp>'
|   `-CXXRecordDecl 0x5c9b330 <col:5, col:12> col:12 implicit struct is_move_constructible
|-ClassTemplateDecl 0x5c9b4f0 <line:1169:3, line:1172:7> line:1170:12 __is_nt_default_constructible_atom
| |-TemplateTypeParmDecl 0x5c9b3d8 <line:1169:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9b460 <line:1170:5, line:1172:7> line:1170:12 struct __is_nt_default_constructible_atom definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, noexcept(_Tp())>'
|   `-CXXRecordDecl 0x5c9b8f0 <col:5, col:12> col:12 implicit struct __is_nt_default_constructible_atom
|-ClassTemplateDecl 0x5c9bc28 <line:1174:3, line:1175:12> col:12 __is_nt_default_constructible_impl
| |-TemplateTypeParmDecl 0x5c9b998 <line:1174:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5c9bb18 <col:26, col:48> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5c9bad0 <col:33, col:48> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5c9bb98 <line:1175:5, col:12> col:12 struct __is_nt_default_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c9cce8 <line:1177:3, line:1182:7> line:1178:12 struct __is_nt_default_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__and_<__is_array_known_bounds<_Tp>, __is_nt_default_constructible_atom<typename remove_all_extents<_Tp>::type> >'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5c9caf8 <line:1177:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9d390 <line:1178:5, col:12> col:12 implicit struct __is_nt_default_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c9d628 <line:1184:3, line:1187:7> line:1185:12 struct __is_nt_default_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__is_nt_default_constructible_atom<_Tp>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5c9d438 <line:1184:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9d970 <line:1185:5, col:12> col:12 implicit struct __is_nt_default_constructible_impl
|-ClassTemplateDecl 0x5c9db30 <line:1190:3, line:1194:7> line:1191:12 is_nothrow_default_constructible
| |-TemplateTypeParmDecl 0x5c9da18 <line:1190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5c9daa0 <line:1191:5, line:1194:7> line:1191:12 struct is_nothrow_default_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_default_constructible<_Tp>, __is_nt_default_constructible_impl<_Tp> >'
|   `-CXXRecordDecl 0x5c9e1c0 <col:5, col:12> col:12 implicit struct is_nothrow_default_constructible
|-ClassTemplateDecl 0x5c9e3f8 <line:1196:3, line:1199:7> line:1197:12 __is_nt_constructible_impl
| |-TemplateTypeParmDecl 0x5c9e268 <line:1196:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c9e2d8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5c9e368 <line:1197:5, line:1199:7> line:1197:12 struct __is_nt_constructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, noexcept(_Tp(declval<_Args>()...))>'
|   `-CXXRecordDecl 0x5c9e980 <col:5, col:12> col:12 implicit struct __is_nt_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c9f638 <line:1201:3, line:1205:7> line:1202:12 struct __is_nt_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<bool, noexcept(static_cast<_Tp>(declval<_Arg>()))>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5c9ea28 <line:1201:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c9f428 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c9fb60 <line:1202:5, col:12> col:12 implicit struct __is_nt_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5c9fd98 <line:1207:3, line:1210:7> line:1208:12 struct __is_nt_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_nothrow_default_constructible<_Tp>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| |-TemplateTypeParmDecl 0x5c9fc08 <line:1207:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca0100 <line:1208:5, col:12> col:12 implicit struct __is_nt_constructible_impl
|-ClassTemplateDecl 0x5ca0338 <line:1213:3, line:1217:7> line:1214:12 is_nothrow_constructible
| |-TemplateTypeParmDecl 0x5ca01a8 <line:1213:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5ca0218 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5ca02a8 <line:1214:5, line:1217:7> line:1214:12 struct is_nothrow_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_constructible<_Tp, _Args...>, __is_nt_constructible_impl<_Tp, _Args...> >'
|   `-CXXRecordDecl 0x5ca0a40 <col:5, col:12> col:12 implicit struct is_nothrow_constructible
|-ClassTemplateDecl 0x5ca0d78 <line:1219:3, line:1220:12> col:12 __is_nothrow_copy_constructible_impl
| |-TemplateTypeParmDecl 0x5ca0ae8 <line:1219:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ca0c68 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ca0c20 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ca0ce8 <line:1220:5, col:12> col:12 struct __is_nothrow_copy_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5ca11b8 <line:1222:3, line:1224:27> line:1223:12 struct __is_nothrow_copy_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5ca0fc8 <line:1222:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca1d68 <line:1223:5, col:12> col:12 implicit struct __is_nothrow_copy_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5ca2008 <line:1226:3, line:1229:7> line:1227:12 struct __is_nothrow_copy_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_nothrow_constructible<_Tp, const _Tp &>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5ca1e10 <line:1226:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca2450 <line:1227:5, col:12> col:12 implicit struct __is_nothrow_copy_constructible_impl
|-ClassTemplateDecl 0x5ca2610 <line:1232:3, line:1235:7> line:1233:12 is_nothrow_copy_constructible
| |-TemplateTypeParmDecl 0x5ca24f8 <line:1232:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca2580 <line:1233:5, line:1235:7> line:1233:12 struct is_nothrow_copy_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nothrow_copy_constructible_impl<_Tp>'
|   `-CXXRecordDecl 0x5ca2a80 <col:5, col:12> col:12 implicit struct is_nothrow_copy_constructible
|-ClassTemplateDecl 0x5ca2db8 <line:1237:3, line:1238:12> col:12 __is_nothrow_move_constructible_impl
| |-TemplateTypeParmDecl 0x5ca2b28 <line:1237:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ca2ca8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ca2c60 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ca2d28 <line:1238:5, col:12> col:12 struct __is_nothrow_move_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5ca31f8 <line:1240:3, line:1242:27> line:1241:12 struct __is_nothrow_move_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5ca3008 <line:1240:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca34c8 <line:1241:5, col:12> col:12 implicit struct __is_nothrow_move_constructible_impl
|-ClassTemplatePartialSpecializationDecl 0x5ca3768 <line:1244:3, line:1247:7> line:1245:12 struct __is_nothrow_move_constructible_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_nothrow_constructible<_Tp, _Tp &&>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5ca3570 <line:1244:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca3bb0 <line:1245:5, col:12> col:12 implicit struct __is_nothrow_move_constructible_impl
|-ClassTemplateDecl 0x5ca5950 <line:1250:3, line:1253:7> line:1251:12 is_nothrow_move_constructible
| |-TemplateTypeParmDecl 0x5ca3c58 <line:1250:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca58c0 <line:1251:5, line:1253:7> line:1251:12 struct is_nothrow_move_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nothrow_move_constructible_impl<_Tp>'
|   `-CXXRecordDecl 0x5ca5dc0 <col:5, col:12> col:12 implicit struct is_nothrow_move_constructible
|-ClassTemplateDecl 0x5ca5ff8 <line:1255:3, line:1269:5> line:1256:11 __is_assignable_helper
| |-TemplateTypeParmDecl 0x5ca5e68 <line:1255:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5ca5ed8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5ca5f68 <line:1256:5, line:1269:5> line:1256:11 class __is_assignable_helper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ca6290 <col:5, col:11> col:11 implicit class __is_assignable_helper
|   |-FunctionTemplateDecl 0x5ca68b0 <line:1258:7, line:1261:12> col:2 __test
|   | |-TemplateTypeParmDecl 0x5ca6320 <line:1258:16, col:25> col:25 referenced typename depth 1 index 0 _Tp1
|   | |-TemplateTypeParmDecl 0x5ca63c8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _Up1
|   | |-TemplateTypeParmDecl 0x5ca6678 <line:1259:9, col:20> col:9 typename depth 1 index 2
|   | | `-TemplateArgument type 'decltype(declval<_Tp1>() = declval<_Up1>())'
|   | `-CXXMethodDecl 0x5ca6810 <line:1260:2, line:1261:12> col:2 __test 'std::true_type (int)' static
|   |   `-ParmVarDecl 0x5ca6758 <col:9> col:12 'int'
|   |-FunctionTemplateDecl 0x5ca6ad8 <line:1263:7, line:1265:12> col:2 __test
|   | |-TemplateTypeParmDecl 0x5ca6910 <line:1263:16> col:16 typename depth 1 index 0
|   | |-TemplateTypeParmDecl 0x5ca6988 <col:26> col:26 typename depth 1 index 1
|   | `-CXXMethodDecl 0x5ca6a38 <line:1264:2, line:1265:12> col:2 __test 'std::false_type (...)' static
|   |-AccessSpecDecl 0x5ca6b30 <line:1267:5, col:11> col:5 public
|   `-TypedefDecl 0x5ca6cd8 <line:1268:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
|     `-DecltypeType 0x5ca6ca0 'decltype(__test<_Tp, _Up>(0))' dependent
|       `-CallExpr 0x5ca6c70 <col:24, col:42> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5ca6b90 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5ca6ad8 0x5ca68b0
|         `-IntegerLiteral 0x5ca6c50 <col:41> 'int' 0
|-ClassTemplateDecl 0x5ca6ed8 <line:1272:3, line:1275:7> line:1273:12 is_assignable
| |-TemplateTypeParmDecl 0x5ca6d48 <line:1272:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5ca6db8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5ca6e48 <line:1273:5, line:1275:7> line:1273:12 struct is_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_assignable_helper<_Tp, _Up>::type'
|   `-CXXRecordDecl 0x5ca7340 <col:5, col:12> col:12 implicit struct is_assignable
|-ClassTemplateDecl 0x5ca7678 <line:1277:3, line:1278:12> col:12 __is_copy_assignable_impl
| |-TemplateTypeParmDecl 0x5ca73e8 <line:1277:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ca7568 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ca7520 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ca75e8 <line:1278:5, col:12> col:12 struct __is_copy_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5ca9188 <line:1280:3, line:1282:27> line:1281:12 struct __is_copy_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5ca8f98 <line:1280:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca9458 <line:1281:5, col:12> col:12 implicit struct __is_copy_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5ca96f8 <line:1284:3, line:1287:7> line:1285:12 struct __is_copy_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_assignable<_Tp &, const _Tp &>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5ca9500 <line:1284:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca9b40 <line:1285:5, col:12> col:12 implicit struct __is_copy_assignable_impl
|-ClassTemplateDecl 0x5ca9d00 <line:1290:3, line:1293:7> line:1291:12 is_copy_assignable
| |-TemplateTypeParmDecl 0x5ca9be8 <line:1290:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ca9c70 <line:1291:5, line:1293:7> line:1291:12 struct is_copy_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_copy_assignable_impl<_Tp>'
|   `-CXXRecordDecl 0x5caa170 <col:5, col:12> col:12 implicit struct is_copy_assignable
|-ClassTemplateDecl 0x5caa4a8 <line:1295:3, line:1296:12> col:12 __is_move_assignable_impl
| |-TemplateTypeParmDecl 0x5caa218 <line:1295:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5caa398 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5caa350 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5caa418 <line:1296:5, col:12> col:12 struct __is_move_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5caa8e8 <line:1298:3, line:1300:27> line:1299:12 struct __is_move_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5caa6f8 <line:1298:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5caabb8 <line:1299:5, col:12> col:12 implicit struct __is_move_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5cab910 <line:1302:3, line:1305:7> line:1303:12 struct __is_move_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_assignable<_Tp &, _Tp &&>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5caac60 <line:1302:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cabd50 <line:1303:5, col:12> col:12 implicit struct __is_move_assignable_impl
|-ClassTemplateDecl 0x5cabf10 <line:1308:3, line:1311:7> line:1309:12 is_move_assignable
| |-TemplateTypeParmDecl 0x5cabdf8 <line:1308:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cabe80 <line:1309:5, line:1311:7> line:1309:12 struct is_move_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_move_assignable_impl<_Tp>'
|   `-CXXRecordDecl 0x5cac380 <col:5, col:12> col:12 implicit struct is_move_assignable
|-ClassTemplateDecl 0x5cac5b8 <line:1313:3, line:1316:7> line:1314:12 __is_nt_assignable_impl
| |-TemplateTypeParmDecl 0x5cac428 <line:1313:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5cac498 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5cac528 <line:1314:5, line:1316:7> line:1314:12 struct __is_nt_assignable_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, noexcept(declval<_Tp>() = declval<_Up>())>'
|   `-CXXRecordDecl 0x5cacb60 <col:5, col:12> col:12 implicit struct __is_nt_assignable_impl
|-ClassTemplateDecl 0x5cacd98 <line:1319:3, line:1323:7> line:1320:12 is_nothrow_assignable
| |-TemplateTypeParmDecl 0x5cacc08 <line:1319:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5cacc78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5cacd08 <line:1320:5, line:1323:7> line:1320:12 struct is_nothrow_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_assignable<_Tp, _Up>, __is_nt_assignable_impl<_Tp, _Up> >'
|   `-CXXRecordDecl 0x5cad3c0 <col:5, col:12> col:12 implicit struct is_nothrow_assignable
|-ClassTemplateDecl 0x5cad6f8 <line:1325:3, line:1326:12> col:12 __is_nt_copy_assignable_impl
| |-TemplateTypeParmDecl 0x5cad468 <line:1325:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cad5e8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cad5a0 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5cad668 <line:1326:5, col:12> col:12 struct __is_nt_copy_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5cb0748 <line:1328:3, line:1330:27> line:1329:12 struct __is_nt_copy_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cb0558 <line:1328:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb0a18 <line:1329:5, col:12> col:12 implicit struct __is_nt_copy_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5cb0cb8 <line:1332:3, line:1335:7> line:1333:12 struct __is_nt_copy_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_nothrow_assignable<_Tp &, const _Tp &>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cb0ac0 <line:1332:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb1100 <line:1333:5, col:12> col:12 implicit struct __is_nt_copy_assignable_impl
|-ClassTemplateDecl 0x5cb12c0 <line:1338:3, line:1341:7> line:1339:12 is_nothrow_copy_assignable
| |-TemplateTypeParmDecl 0x5cb11a8 <line:1338:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb1230 <line:1339:5, line:1341:7> line:1339:12 struct is_nothrow_copy_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nt_copy_assignable_impl<_Tp>'
|   `-CXXRecordDecl 0x5cb1730 <col:5, col:12> col:12 implicit struct is_nothrow_copy_assignable
|-ClassTemplateDecl 0x5cb1a68 <line:1343:3, line:1344:12> col:12 __is_nt_move_assignable_impl
| |-TemplateTypeParmDecl 0x5cb17d8 <line:1343:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cb1958 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cb1910 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5cb19d8 <line:1344:5, col:12> col:12 struct __is_nt_move_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5cb1ea8 <line:1346:3, line:1348:27> line:1347:12 struct __is_nt_move_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::false_type':'std::integral_constant<bool, false>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cb1cb8 <line:1346:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb2178 <line:1347:5, col:12> col:12 implicit struct __is_nt_move_assignable_impl
|-ClassTemplatePartialSpecializationDecl 0x5cb2e60 <line:1350:3, line:1353:7> line:1351:12 struct __is_nt_move_assignable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'is_nothrow_assignable<_Tp &, _Tp &&>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cb2220 <line:1350:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb32a0 <line:1351:5, col:12> col:12 implicit struct __is_nt_move_assignable_impl
|-ClassTemplateDecl 0x5cb3460 <line:1356:3, line:1359:7> line:1357:12 is_nothrow_move_assignable
| |-TemplateTypeParmDecl 0x5cb3348 <line:1356:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb33d0 <line:1357:5, line:1359:7> line:1357:12 struct is_nothrow_move_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nt_move_assignable_impl<_Tp>'
|   `-CXXRecordDecl 0x5cb38d0 <col:5, col:12> col:12 implicit struct is_nothrow_move_assignable
|-ClassTemplateDecl 0x5cb3b08 <line:1362:3, line:1366:7> line:1363:12 is_trivially_constructible
| |-TemplateTypeParmDecl 0x5cb3978 <line:1362:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5cb39e8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5cb3a78 <line:1363:5, line:1366:7> line:1363:12 struct is_trivially_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_constructible<_Tp, _Args...>, integral_constant<bool, __is_trivially_constructible(_Tp, _Args...)> >'
|   `-CXXRecordDecl 0x5cb4290 <col:5, col:12> col:12 implicit struct is_trivially_constructible
|-ClassTemplateDecl 0x5cb4450 <line:1369:3, line:1372:7> line:1370:12 is_trivially_default_constructible
| |-TemplateTypeParmDecl 0x5cb4338 <line:1369:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb43c0 <line:1370:5, line:1372:7> line:1370:12 struct is_trivially_default_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'is_trivially_constructible<_Tp>::type'
|   `-CXXRecordDecl 0x5cb4890 <col:5, col:12> col:12 implicit struct is_trivially_default_constructible
|-CXXRecordDecl 0x5cb4938 <line:1374:3, line:1384:3> line:1374:10 referenced struct __do_is_implicitly_default_constructible_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5cb4a58 <col:3, col:10> col:10 implicit struct __do_is_implicitly_default_constructible_impl
| |-FunctionTemplateDecl 0x5cb4d68 <line:1376:5, line:1377:36> col:17 __helper
| | |-TemplateTypeParmDecl 0x5cb4ae8 <line:1376:15, col:24> col:24 referenced typename depth 0 index 0 _Tp
| | `-CXXMethodDecl 0x5cb4cc8 <line:1377:5, col:36> col:17 __helper 'void (const _Tp &)' static
| |   `-ParmVarDecl 0x5cb4ba8 <col:26, col:35> col:36 'const _Tp &'
| |-FunctionTemplateDecl 0x5cb6138 <line:1379:5, line:1381:68> line:1380:22 __test
| | |-TemplateTypeParmDecl 0x5cb4dc8 <line:1379:15, col:24> col:24 referenced typename depth 0 index 0 _Tp
| | `-CXXMethodDecl 0x5cb6098 <line:1380:5, line:1381:68> line:1380:22 __test 'std::true_type (const _Tp &, decltype(__helper<const _Tp &>({})) *)' static
| |   |-ParmVarDecl 0x5cb5d48 <col:29, col:38> col:39 'const _Tp &'
| |   `-ParmVarDecl 0x5cb5f88 <line:1381:29, col:67> col:65 'decltype(__helper<const _Tp &>({})) *' cinit
| |     `-IntegerLiteral 0x5cb6278 <col:67> 'int' 0
| `-CXXMethodDecl 0x5cb61c0 <line:1383:5, col:33> col:23 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5cb63b0 <line:1386:3, line:1391:3> line:1387:12 __is_implicitly_default_constructible_impl
| |-TemplateTypeParmDecl 0x5cb6298 <line:1386:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb6320 <line:1387:5, line:1391:3> line:1387:12 struct __is_implicitly_default_constructible_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::__do_is_implicitly_default_constructible_impl'
|   |-CXXRecordDecl 0x5cb6640 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible_impl
|   `-TypedefDecl 0x5cb6878 <line:1390:5, col:46> col:46 type 'decltype(__test(declval<_Tp>()))'
|     `-DecltypeType 0x5cb6840 'decltype(__test(declval<_Tp>()))' dependent
|       `-CallExpr 0x5cb67d8 <col:22, col:43> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5cb66d0 <col:22> '<overloaded function type>' lvalue (no ADL) = '__test' 0x5cb6138 0x5cb61c0
|         `-CallExpr 0x5cb67b8 <col:29, col:42> '<dependent type>'
|           `-UnresolvedLookupExpr 0x5cb6730 <col:29, col:40> '<dependent type>' lvalue (ADL) = 'declval' 0x5c6d2e0
|-ClassTemplateDecl 0x5cb6a00 <line:1393:3, line:1396:5> line:1394:12 __is_implicitly_default_constructible_safe
| |-TemplateTypeParmDecl 0x5cb68e8 <line:1393:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb6970 <line:1394:5, line:1396:5> line:1394:12 struct __is_implicitly_default_constructible_safe definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_implicitly_default_constructible_impl<_Tp>::type'
|   `-CXXRecordDecl 0x5cb6de0 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible_safe
|-ClassTemplateDecl 0x5cb6fa0 <line:1398:3, line:1402:5> line:1399:12 __is_implicitly_default_constructible
| |-TemplateTypeParmDecl 0x5cb6e88 <line:1398:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb6f10 <line:1399:5, line:1402:5> line:1399:12 struct __is_implicitly_default_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_default_constructible<_Tp>, __is_implicitly_default_constructible_safe<_Tp> >'
|   `-CXXRecordDecl 0x5cb74c0 <col:5, col:12> col:12 implicit struct __is_implicitly_default_constructible
|-ClassTemplateDecl 0x5cb7680 <line:1405:3, line:1410:7> line:1406:12 is_trivially_copy_constructible
| |-TemplateTypeParmDecl 0x5cb7568 <line:1405:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb75f0 <line:1406:5, line:1410:7> line:1406:12 struct is_trivially_copy_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_copy_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, const _Tp &)> >'
|   `-CXXRecordDecl 0x5cb99e0 <col:5, col:12> col:12 implicit struct is_trivially_copy_constructible
|-ClassTemplateDecl 0x5cb9ba0 <line:1413:3, line:1418:7> line:1414:12 is_trivially_move_constructible
| |-TemplateTypeParmDecl 0x5cb9a88 <line:1413:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cb9b10 <line:1414:5, line:1418:7> line:1414:12 struct is_trivially_move_constructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_move_constructible<_Tp>, integral_constant<bool, __is_trivially_constructible(_Tp, _Tp &&)> >'
|   `-CXXRecordDecl 0x5cba200 <col:5, col:12> col:12 implicit struct is_trivially_move_constructible
|-ClassTemplateDecl 0x5cba438 <line:1421:3, line:1426:7> line:1422:12 is_trivially_assignable
| |-TemplateTypeParmDecl 0x5cba2a8 <line:1421:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5cba318 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5cba3a8 <line:1422:5, line:1426:7> line:1422:12 struct is_trivially_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_assignable<_Tp, _Up>, integral_constant<bool, __is_trivially_assignable(_Tp, _Up)> >'
|   `-CXXRecordDecl 0x5cbab10 <col:5, col:12> col:12 implicit struct is_trivially_assignable
|-ClassTemplateDecl 0x5cbacd0 <line:1429:3, line:1434:7> line:1430:12 is_trivially_copy_assignable
| |-TemplateTypeParmDecl 0x5cbabb8 <line:1429:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cbac40 <line:1430:5, line:1434:7> line:1430:12 struct is_trivially_copy_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_copy_assignable<_Tp>, integral_constant<bool, __is_trivially_assignable(_Tp &, const _Tp &)> >'
|   `-CXXRecordDecl 0x5cbb360 <col:5, col:12> col:12 implicit struct is_trivially_copy_assignable
|-ClassTemplateDecl 0x5cbb520 <line:1437:3, line:1442:7> line:1438:12 is_trivially_move_assignable
| |-TemplateTypeParmDecl 0x5cbb408 <line:1437:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cbb490 <line:1438:5, line:1442:7> line:1438:12 struct is_trivially_move_assignable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_move_assignable<_Tp>, integral_constant<bool, __is_trivially_assignable(_Tp &, _Tp &&)> >'
|   `-CXXRecordDecl 0x5cbcce0 <col:5, col:12> col:12 implicit struct is_trivially_move_assignable
|-ClassTemplateDecl 0x5cbcea0 <line:1445:3, line:1449:7> line:1446:12 is_trivially_destructible
| |-TemplateTypeParmDecl 0x5cbcd88 <line:1445:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cbce10 <line:1446:5, line:1449:7> line:1446:12 struct is_trivially_destructible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<is_destructible<_Tp>, integral_constant<bool, __has_trivial_destructor(_Tp)> >'
|   `-CXXRecordDecl 0x5cbd4c0 <col:5, col:12> col:12 implicit struct is_trivially_destructible
|-ClassTemplateDecl 0x5cbd680 <line:1453:3, line:1456:7> line:1454:12 has_virtual_destructor
| |-TemplateTypeParmDecl 0x5cbd568 <line:1453:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cbd5f0 <line:1454:5, line:1456:7> line:1454:12 struct has_virtual_destructor definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __has_virtual_destructor(_Tp)>'
|   `-CXXRecordDecl 0x5cbda60 <col:5, col:12> col:12 implicit struct has_virtual_destructor
|-ClassTemplateDecl 0x5cbdc20 <line:1462:3, line:1464:65> line:1463:12 alignment_of
| |-TemplateTypeParmDecl 0x5cbdb08 <line:1462:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cbdb90 <line:1463:5, line:1464:65> line:1463:12 struct alignment_of definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<std::size_t, __alignof(_Tp)>'
|   `-CXXRecordDecl 0x5cbe070 <col:5, col:12> col:12 implicit struct alignment_of
|-ClassTemplateDecl 0x5cbe230 <line:1467:3, line:1469:50> line:1468:12 rank
| |-TemplateTypeParmDecl 0x5cbe118 <line:1467:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5cbe1a0 <line:1468:5, line:1469:50> line:1468:12 struct rank definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
|   `-CXXRecordDecl 0x5cc0920 <col:5, col:12> col:12 implicit struct rank
|-ClassTemplatePartialSpecializationDecl 0x5cc0c50 <line:1471:3, line:1473:69> line:1472:12 struct rank definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| |-TemplateTypeParmDecl 0x5cc09c8 <line:1471:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cc0a88 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| `-CXXRecordDecl 0x5cc1170 <line:1472:5, col:12> col:12 implicit struct rank
|-ClassTemplatePartialSpecializationDecl 0x5cc13b0 <line:1475:3, line:1477:69> line:1476:12 struct rank definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<std::size_t, 1 + rank<_Tp>::value>'
| |-TemplateArgument type 'type-parameter-0-0 []'
| |-TemplateTypeParmDecl 0x5cc1218 <line:1475:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cc1860 <line:1476:5, col:12> col:12 implicit struct rank
|-ClassTemplateDecl 0x5cc1aa0 prev 0x5c6e990 <line:1480:3, line:1482:50> line:1481:12 extent
| |-TemplateTypeParmDecl 0x5cc1908 <line:1480:12> col:12 typename depth 0 index 0
| |-NonTypeTemplateParmDecl 0x5cc1990 <col:22, col:31> col:31 'unsigned int' depth 0 index 1 _Uint
| | `-TemplateArgument expr
| |   |-inherited from NonTypeTemplateParm 0x5c6e850 '' 'unsigned int'
| |   `-ConstantExpr 0x5c6e8c8 <line:764:33> 'unsigned int'
| |     `-ImplicitCastExpr 0x5c6e8b0 <col:33> 'unsigned int' <IntegralCast>
| |       `-IntegerLiteral 0x5c6e818 <col:33> 'int' 0
| `-CXXRecordDecl 0x5cc1a10 prev 0x5c6e900 <line:1481:5, line:1482:50> line:1481:12 struct extent definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<std::size_t, 0>':'std::integral_constant<unsigned long, 0>'
|   `-CXXRecordDecl 0x5cc1cf0 <col:5, col:12> col:12 implicit struct extent
|-ClassTemplatePartialSpecializationDecl 0x5cc2168 <line:1484:3, line:1489:7> line:1485:12 struct extent definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<std::size_t, _Uint == 0 ? _Size : extent<_Tp, _Uint - 1>::value>'
| |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| |-TemplateArgument expr
| | `-DeclRefExpr 0x5cc2020 <col:31> 'unsigned int' NonTypeTemplateParm 0x5cc1e20 '_Uint' 'unsigned int'
| |-TemplateTypeParmDecl 0x5cc1d98 <line:1484:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cc1e20 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| |-NonTypeTemplateParmDecl 0x5cc1ed0 <col:42, col:54> col:54 referenced 'std::size_t':'unsigned long' depth 0 index 2 _Size
| `-CXXRecordDecl 0x5cc3b10 <line:1485:5, col:12> col:12 implicit struct extent
|-ClassTemplatePartialSpecializationDecl 0x5cc3e58 <line:1491:3, line:1496:7> line:1492:12 struct extent definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'integral_constant<std::size_t, _Uint == 0 ? 0 : extent<_Tp, _Uint - 1>::value>'
| |-TemplateArgument type 'type-parameter-0-0 []'
| |-TemplateArgument expr
| | `-DeclRefExpr 0x5cc3d08 <col:26> 'unsigned int' NonTypeTemplateParm 0x5cc3c40 '_Uint' 'unsigned int'
| |-TemplateTypeParmDecl 0x5cc3bb8 <line:1491:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cc3c40 <col:26, col:35> col:35 referenced 'unsigned int' depth 0 index 1 _Uint
| `-CXXRecordDecl 0x5cc44e0 <line:1492:5, col:12> col:12 implicit struct extent
|-ClassTemplateDecl 0x5cc4718 prev 0x5c84858 <line:1502:3, line:1504:27> line:1503:12 is_same
| |-TemplateTypeParmDecl 0x5cc4588 <line:1502:12> col:12 typename depth 0 index 0
| |-TemplateTypeParmDecl 0x5cc45f8 <col:22> col:22 typename depth 0 index 1
| `-CXXRecordDecl 0x5cc4688 prev 0x5c847c8 <line:1503:5, line:1504:27> line:1503:12 struct is_same definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5cc4818 <col:5, col:12> col:12 implicit struct is_same
|-ClassTemplatePartialSpecializationDecl 0x5cc4a98 <line:1506:3, line:1508:26> line:1507:12 struct is_same definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5cc48c0 <line:1506:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cc4d58 <line:1507:5, col:12> col:12 implicit struct is_same
|-ClassTemplateDecl 0x5cc4f98 prev 0x5c84c18 <line:1511:3, line:1514:7> line:1512:12 is_base_of
| |-TemplateTypeParmDecl 0x5cc4e00 <line:1511:12, col:21> col:21 referenced typename depth 0 index 0 _Base
| |-TemplateTypeParmDecl 0x5cc4e78 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Derived
| `-CXXRecordDecl 0x5cc4f08 prev 0x5c84b88 <line:1512:5, line:1514:7> line:1512:12 struct is_base_of definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'integral_constant<bool, __is_base_of(_Base, _Derived)>'
|   `-CXXRecordDecl 0x5cc5200 <col:5, col:12> col:12 implicit struct is_base_of
|-ClassTemplateDecl 0x5cc5dd0 <line:1516:3, line:1520:49> line:1519:12 __is_convertible_helper
| |-TemplateTypeParmDecl 0x5cc52a8 <line:1516:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5cc5318 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| |-NonTypeTemplateParmDecl 0x5cc5808 <line:1517:12, line:1518:41> line:1517:17 'bool' depth 0 index 2
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cc57c0 <col:19, line:1518:41> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5cc5d40 <line:1519:5, line:1520:49> line:1519:12 struct __is_convertible_helper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cc60a0 <col:5, col:12> col:12 implicit struct __is_convertible_helper
|   `-TypedefDecl 0x5cc6290 <line:1520:7, col:43> col:43 type 'typename is_void<_To>::type'
|     `-DependentNameType 0x5cc6220 'typename is_void<_To>::type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5cc65d0 <line:1522:3, line:1539:5> line:1523:11 class __is_convertible_helper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cc6300 <line:1522:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5cc6378 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| |-CXXRecordDecl 0x5cc68b8 <line:1523:5, col:11> col:11 implicit class __is_convertible_helper
| |-FunctionTemplateDecl 0x5cc6ba8 <line:1525:8, line:1526:29> col:14 __test_aux
| | |-TemplateTypeParmDecl 0x5cc6948 <line:1525:17, col:26> col:26 referenced typename depth 1 index 0 _To1
| | `-CXXMethodDecl 0x5cc6b08 <line:1526:2, col:29> col:14 __test_aux 'void (_To1)' static
| |   `-ParmVarDecl 0x5cc69e0 <col:25> col:29 '_To1'
| |-FunctionTemplateDecl 0x5cc70f8 <line:1528:7, line:1531:12> col:2 __test
| | |-TemplateTypeParmDecl 0x5cc6c08 <line:1528:16, col:25> col:25 referenced typename depth 1 index 0 _From1
| | |-TemplateTypeParmDecl 0x5cc6c78 <col:33, col:42> col:42 referenced typename depth 1 index 1 _To1
| | |-TemplateTypeParmDecl 0x5cc6f18 <line:1529:9, col:20> col:9 typename depth 1 index 2
| | | `-TemplateArgument type 'decltype(__test_aux<_To1>(std::declval<_From1>()))'
| | `-CXXMethodDecl 0x5cc7058 <line:1530:2, line:1531:12> col:2 __test 'std::true_type (int)' static
| |   `-ParmVarDecl 0x5cc6fc8 <col:9> col:12 'int'
| |-FunctionTemplateDecl 0x5cc7318 <line:1533:7, line:1535:12> col:2 __test
| | |-TemplateTypeParmDecl 0x5cc7158 <line:1533:16> col:16 typename depth 1 index 0
| | |-TemplateTypeParmDecl 0x5cc71c8 <col:26> col:26 typename depth 1 index 1
| | `-CXXMethodDecl 0x5cc7278 <line:1534:2, line:1535:12> col:2 __test 'std::false_type (...)' static
| |-AccessSpecDecl 0x5cc7370 <line:1537:5, col:11> col:5 public
| `-TypedefDecl 0x5cc7518 <line:1538:7, col:47> col:47 type 'decltype(__test<_From, _To>(0))'
|   `-DecltypeType 0x5cc74e0 'decltype(__test<_From, _To>(0))' dependent
|     `-CallExpr 0x5cc74b0 <col:24, col:44> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5cc73d0 <col:24, col:41> '<dependent type>' lvalue (no ADL) = '__test' 0x5cc7318 0x5cc70f8
|       `-IntegerLiteral 0x5cc7490 <col:43> 'int' 0
|-ClassTemplateDecl 0x5cc7718 <line:1543:3, line:1546:7> line:1544:12 is_convertible
| |-TemplateTypeParmDecl 0x5cc7588 <line:1543:12, col:21> col:21 referenced typename depth 0 index 0 _From
| |-TemplateTypeParmDecl 0x5cc75f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _To
| `-CXXRecordDecl 0x5cc7688 <line:1544:5, line:1546:7> line:1544:12 struct is_convertible definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_convertible_helper<_From, _To>::type'
|   `-CXXRecordDecl 0x5cc8c80 <col:5, col:12> col:12 implicit struct is_convertible
|-ClassTemplateDecl 0x5cc8e40 <line:1552:3, line:1554:25> line:1553:12 remove_const
| |-TemplateTypeParmDecl 0x5cc8d28 <line:1552:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cc8db0 <line:1553:5, line:1554:25> line:1553:12 struct remove_const definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cc9090 <col:5, col:12> col:12 implicit struct remove_const
|   `-TypedefDecl 0x5cc9130 <line:1554:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5cc8d70 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cc8d28 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5cc9300 <line:1556:3, line:1558:25> line:1557:12 struct remove_const definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'const type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5cc91a0 <line:1556:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cc9528 <line:1557:5, col:12> col:12 implicit struct remove_const
| `-TypedefDecl 0x5cc95c8 <line:1558:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5cc91f0 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5cc91a0 '_Tp'
|-ClassTemplateDecl 0x5cc9750 <line:1561:3, line:1563:25> line:1562:12 remove_volatile
| |-TemplateTypeParmDecl 0x5cc9638 <line:1561:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cc96c0 <line:1562:5, line:1563:25> line:1562:12 struct remove_volatile definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cc99a0 <col:5, col:12> col:12 implicit struct remove_volatile
|   `-TypedefDecl 0x5cc9a40 <line:1563:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5cc9680 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cc9638 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5cc9c10 <line:1565:3, line:1567:25> line:1566:12 struct remove_volatile definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'volatile type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5cc9ab0 <line:1565:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cc9e38 <line:1566:5, col:12> col:12 implicit struct remove_volatile
| `-TypedefDecl 0x5cc9ed8 <line:1567:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5cc9b00 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5cc9ab0 '_Tp'
|-ClassTemplateDecl 0x5cca060 prev 0x5c326a0 <line:1570:3, line:1575:5> line:1571:12 remove_cv
| |-TemplateTypeParmDecl 0x5cc9f48 <line:1570:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cc9fd0 prev 0x5c32610 <line:1571:5, line:1575:5> line:1571:12 struct remove_cv definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cca120 <col:5, col:12> col:12 implicit struct remove_cv
|   `-TypedefDecl 0x5cca4a0 <line:1573:7, line:1574:63> col:63 type 'typename remove_const<typename remove_volatile<_Tp>::type>::type'
|     `-DependentNameType 0x5cca430 'typename remove_const<typename remove_volatile<_Tp>::type>::type' dependent
|-ClassTemplateDecl 0x5cca630 <line:1578:3, line:1580:31> line:1579:12 add_const
| |-TemplateTypeParmDecl 0x5cca510 <line:1578:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cca5a0 <line:1579:5, line:1580:31> line:1579:12 struct add_const definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cca880 <col:5, col:12> col:12 implicit struct add_const
|   `-TypedefDecl 0x5cca920 <line:1580:7, col:25> col:25 type 'const _Tp'
|     `-QualType 0x5cca561 'const _Tp' const
|       `-TemplateTypeParmType 0x5cca560 '_Tp' dependent depth 0 index 0
|         `-TemplateTypeParm 0x5cca510 '_Tp'
|-ClassTemplateDecl 0x5ccb898 <line:1583:3, line:1585:34> line:1584:12 add_volatile
| |-TemplateTypeParmDecl 0x5cca990 <line:1583:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ccb808 <line:1584:5, line:1585:34> line:1584:12 struct add_volatile definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ccbaf0 <col:5, col:12> col:12 implicit struct add_volatile
|   `-TypedefDecl 0x5ccbb90 <line:1585:7, col:28> col:28 type 'volatile _Tp'
|     `-QualType 0x5cca9e4 'volatile _Tp' volatile
|       `-TemplateTypeParmType 0x5cca9e0 '_Tp' dependent depth 0 index 0
|         `-TemplateTypeParm 0x5cca990 '_Tp'
|-ClassTemplateDecl 0x5ccbd20 <line:1588:3, line:1593:5> line:1589:12 add_cv
| |-TemplateTypeParmDecl 0x5ccbc00 <line:1588:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ccbc90 <line:1589:5, line:1593:5> line:1589:12 struct add_cv definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ccbf70 <col:5, col:12> col:12 implicit struct add_cv
|   `-TypedefDecl 0x5ccc2f0 <line:1591:7, line:1592:57> col:57 type 'typename add_const<typename add_volatile<_Tp>::type>::type'
|     `-DependentNameType 0x5ccc280 'typename add_const<typename add_volatile<_Tp>::type>::type' dependent
|-TypeAliasTemplateDecl 0x5ccc5b0 <line:1600:3, line:1601:56> col:5 remove_const_t
| |-TemplateTypeParmDecl 0x5ccc360 <line:1600:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ccc550 <line:1601:5, col:56> col:11 remove_const_t 'typename remove_const<_Tp>::type'
|   `-DependentNameType 0x5ccc4e0 'typename remove_const<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ccc800 <line:1604:3, line:1605:62> col:5 remove_volatile_t
| |-TemplateTypeParmDecl 0x5ccc608 <line:1604:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ccc7a0 <line:1605:5, col:62> col:11 remove_volatile_t 'typename remove_volatile<_Tp>::type'
|   `-DependentNameType 0x5ccc730 'typename remove_volatile<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ccca50 <line:1608:3, line:1609:50> col:5 remove_cv_t
| |-TemplateTypeParmDecl 0x5ccc858 <line:1608:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ccc9f0 <line:1609:5, col:50> col:11 remove_cv_t 'typename remove_cv<_Tp>::type'
|   `-DependentNameType 0x5ccc980 'typename remove_cv<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ccccf0 <line:1612:3, line:1613:50> col:5 add_const_t
| |-TemplateTypeParmDecl 0x5cccaa8 <line:1612:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5cccc90 <line:1613:5, col:50> col:11 add_const_t 'typename add_const<_Tp>::type'
|   `-DependentNameType 0x5cccc20 'typename add_const<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5cccf40 <line:1616:3, line:1617:56> col:5 add_volatile_t
| |-TemplateTypeParmDecl 0x5cccd48 <line:1616:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5cccee0 <line:1617:5, col:56> col:11 add_volatile_t 'typename add_volatile<_Tp>::type'
|   `-DependentNameType 0x5ccce70 'typename add_volatile<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ccd1e0 <line:1620:3, line:1621:44> col:5 add_cv_t
| |-TemplateTypeParmDecl 0x5cccf98 <line:1620:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ccd180 <line:1621:5, col:44> col:11 add_cv_t 'typename add_cv<_Tp>::type'
|   `-DependentNameType 0x5ccd110 'typename add_cv<_Tp>::type' dependent
|-ClassTemplateDecl 0x5ccd350 prev 0x5c87250 <line:1627:3, line:1629:25> line:1628:12 remove_reference
| |-TemplateTypeParmDecl 0x5ccd238 <line:1627:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ccd2c0 prev 0x5c84ed0 <line:1628:5, line:1629:25> line:1628:12 struct remove_reference definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ccd410 <col:5, col:12> col:12 implicit struct remove_reference
|   `-TypedefDecl 0x5ccd4b0 <line:1629:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5ccd280 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5ccd238 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ccd6b0 <line:1631:3, line:1633:25> line:1632:12 struct remove_reference definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 &'
| |-TemplateTypeParmDecl 0x5ccd520 <line:1631:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cce308 <line:1632:5, col:12> col:12 implicit struct remove_reference
| `-TypedefDecl 0x5cce3a8 <line:1633:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5ccd570 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5ccd520 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5cce5a0 <line:1635:3, line:1637:25> line:1636:12 struct remove_reference definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 &&'
| |-TemplateTypeParmDecl 0x5cce418 <line:1635:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cce7c8 <line:1636:5, col:12> col:12 implicit struct remove_reference
| `-TypedefDecl 0x5cce868 <line:1637:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5cce460 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5cce418 '_Tp'
|-ClassTemplateDecl 0x5cceb68 <line:1639:3, line:1641:25> line:1640:12 __add_lvalue_reference_helper
| |-TemplateTypeParmDecl 0x5cce8d8 <line:1639:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ccea58 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ccea10 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ccead8 <line:1640:5, line:1641:25> line:1640:12 struct __add_lvalue_reference_helper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ccee20 <col:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
|   `-TypedefDecl 0x5cceec0 <line:1641:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5cce920 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cce8d8 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ccf128 <line:1643:3, line:1645:26> line:1644:12 struct __add_lvalue_reference_helper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5ccef30 <line:1643:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ccf3b8 <line:1644:5, col:12> col:12 implicit struct __add_lvalue_reference_helper
| `-TypedefDecl 0x5ccf488 <line:1645:7, col:20> col:20 type '_Tp &'
|   `-LValueReferenceType 0x5ccf450 '_Tp &' dependent
|     `-TemplateTypeParmType 0x5ccef80 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5ccef30 '_Tp'
|-ClassTemplateDecl 0x5ccf610 <line:1648:3, line:1651:7> line:1649:12 add_lvalue_reference
| |-TemplateTypeParmDecl 0x5ccf4f8 <line:1648:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ccf580 <line:1649:5, line:1651:7> line:1649:12 struct add_lvalue_reference definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__add_lvalue_reference_helper<_Tp>'
|   `-CXXRecordDecl 0x5ccfa80 <col:5, col:12> col:12 implicit struct add_lvalue_reference
|-ClassTemplateDecl 0x5ccfdb8 <line:1653:3, line:1655:25> line:1654:12 __add_rvalue_reference_helper
| |-TemplateTypeParmDecl 0x5ccfb28 <line:1653:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ccfca8 <col:26, col:58> col:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ccfc60 <col:33, col:58> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ccfd28 <line:1654:5, line:1655:25> line:1654:12 struct __add_rvalue_reference_helper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cd0070 <col:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
|   `-TypedefDecl 0x5cd0110 <line:1655:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5ccfb70 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5ccfb28 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5cd12a8 <line:1657:3, line:1659:27> line:1658:12 struct __add_rvalue_reference_helper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cd0180 <line:1657:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cd1538 <line:1658:5, col:12> col:12 implicit struct __add_rvalue_reference_helper
| `-TypedefDecl 0x5cd1608 <line:1659:7, col:21> col:21 type '_Tp &&'
|   `-RValueReferenceType 0x5cd15d0 '_Tp &&' dependent
|     `-TemplateTypeParmType 0x5cd01d0 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cd0180 '_Tp'
|-ClassTemplateDecl 0x5cd1790 prev 0x5c6ce00 <line:1662:3, line:1665:7> line:1663:12 add_rvalue_reference
| |-TemplateTypeParmDecl 0x5cd1678 <line:1662:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cd1700 prev 0x5c6cd70 <line:1663:5, line:1665:7> line:1663:12 struct add_rvalue_reference definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__add_rvalue_reference_helper<_Tp>'
|   `-CXXRecordDecl 0x5cd1a70 <col:5, col:12> col:12 implicit struct add_rvalue_reference
|-TypeAliasTemplateDecl 0x5cd1d10 <line:1669:3, line:1670:64> col:5 remove_reference_t
| |-TemplateTypeParmDecl 0x5cd1b18 <line:1669:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5cd1cb0 <line:1670:5, col:64> col:11 remove_reference_t 'typename remove_reference<_Tp>::type'
|   `-DependentNameType 0x5cd1c40 'typename remove_reference<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5cd1fb0 <line:1673:3, line:1674:72> col:5 add_lvalue_reference_t
| |-TemplateTypeParmDecl 0x5cd1d68 <line:1673:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5cd1f50 <line:1674:5, col:72> col:11 add_lvalue_reference_t 'typename add_lvalue_reference<_Tp>::type'
|   `-DependentNameType 0x5cd1ee0 'typename add_lvalue_reference<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5cd2200 <line:1677:3, line:1678:72> col:5 add_rvalue_reference_t
| |-TemplateTypeParmDecl 0x5cd2008 <line:1677:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5cd21a0 <line:1678:5, col:72> col:11 add_rvalue_reference_t 'typename add_rvalue_reference<_Tp>::type'
|   `-DependentNameType 0x5cd2130 'typename add_rvalue_reference<_Tp>::type' dependent
|-ClassTemplateDecl 0x5cd2460 <line:1684:3, line:1685:12> col:12 __cv_selector
| |-TemplateTypeParmDecl 0x5cd2258 <line:1684:12, col:21> col:21 typename depth 0 index 0 _Unqualified
| |-NonTypeTemplateParmDecl 0x5cd22d8 <col:35, col:40> col:40 'bool' depth 0 index 1 _IsConst
| |-NonTypeTemplateParmDecl 0x5cd2348 <col:50, col:55> col:55 'bool' depth 0 index 2 _IsVol
| `-CXXRecordDecl 0x5cd23d0 <line:1685:5, col:12> col:12 struct __cv_selector
|-ClassTemplatePartialSpecializationDecl 0x5cd2950 <line:1687:3, line:1689:36> line:1688:12 struct __cv_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cd26e8 <line:1687:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| |-CXXRecordDecl 0x5cd2c58 <line:1688:5, col:12> col:12 implicit struct __cv_selector
| `-TypedefDecl 0x5cd2cf8 <line:1689:7, col:28> col:28 __type '_Unqualified'
|   `-TemplateTypeParmType 0x5cd2730 '_Unqualified' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5cd26e8 '_Unqualified'
|-ClassTemplatePartialSpecializationDecl 0x5cd2fd0 <line:1691:3, line:1693:45> line:1692:12 struct __cv_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cd2d68 <line:1691:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| |-CXXRecordDecl 0x5cd3908 <line:1692:5, col:12> col:12 implicit struct __cv_selector
| `-TypedefDecl 0x5cd39a8 <line:1693:7, col:37> col:37 __type 'volatile _Unqualified'
|   `-QualType 0x5cd2db4 'volatile _Unqualified' volatile
|     `-TemplateTypeParmType 0x5cd2db0 '_Unqualified' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cd2d68 '_Unqualified'
|-ClassTemplatePartialSpecializationDecl 0x5cd3c80 <line:1695:3, line:1697:42> line:1696:12 struct __cv_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cd3a18 <line:1695:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| |-CXXRecordDecl 0x5cd3f88 <line:1696:5, col:12> col:12 implicit struct __cv_selector
| `-TypedefDecl 0x5cd4028 <line:1697:7, col:34> col:34 __type 'const _Unqualified'
|   `-QualType 0x5cd3a61 'const _Unqualified' const
|     `-TemplateTypeParmType 0x5cd3a60 '_Unqualified' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cd3a18 '_Unqualified'
|-ClassTemplatePartialSpecializationDecl 0x5cd4300 <line:1699:3, line:1701:51> line:1700:12 struct __cv_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cd4098 <line:1699:12, col:21> col:21 referenced typename depth 0 index 0 _Unqualified
| |-CXXRecordDecl 0x5cd4608 <line:1700:5, col:12> col:12 implicit struct __cv_selector
| `-TypedefDecl 0x5cd46a8 <line:1701:7, col:43> col:43 __type 'const volatile _Unqualified'
|   `-QualType 0x5cd40e5 'const volatile _Unqualified' const volatile
|     `-TemplateTypeParmType 0x5cd40e0 '_Unqualified' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cd4098 '_Unqualified'
|-ClassTemplateDecl 0x5cd4b98 <line:1703:3, line:1712:5> line:1706:11 __match_cv_qualifiers
| |-TemplateTypeParmDecl 0x5cd4718 <line:1703:12, col:21> col:21 referenced typename depth 0 index 0 _Qualified
| |-TemplateTypeParmDecl 0x5cd4788 <col:33, col:42> col:42 referenced typename depth 0 index 1 _Unqualified
| |-NonTypeTemplateParmDecl 0x5cd4908 <line:1704:5, col:43> col:10 referenced 'bool' depth 0 index 2 _IsConst
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cd48c0 <col:21, col:43> '<dependent type>' lvalue
| |-NonTypeTemplateParmDecl 0x5cd4a78 <line:1705:5, col:44> col:10 referenced 'bool' depth 0 index 3 _IsVol
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cd4a30 <col:19, col:44> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5cd4b08 <line:1706:5, line:1712:5> line:1706:11 class __match_cv_qualifiers definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cd4ed0 <col:5, col:11> col:11 implicit class __match_cv_qualifiers
|   |-TypedefDecl 0x5cd5150 <line:1708:7, col:61> col:61 referenced __match '__cv_selector<_Unqualified, _IsConst, _IsVol>'
|   | `-TemplateSpecializationType 0x5cd5020 '__cv_selector<_Unqualified, _IsConst, _IsVol>' dependent __cv_selector
|   |   |-TemplateArgument type '_Unqualified'
|   |   |-TemplateArgument expr
|   |   | `-DeclRefExpr 0x5cd4f70 <col:43> 'bool' NonTypeTemplateParm 0x5cd4908 '_IsConst' 'bool'
|   |   `-TemplateArgument expr
|   |     `-DeclRefExpr 0x5cd4f90 <col:53> 'bool' NonTypeTemplateParm 0x5cd4a78 '_IsVol' 'bool'
|   |-AccessSpecDecl 0x5cd51a8 <line:1710:5, col:11> col:5 public
|   `-TypedefDecl 0x5cd52e0 <line:1711:7, col:40> col:40 __type 'typename __match::__type'
|     `-DependentNameType 0x5cd5270 'typename __match::__type' dependent
|-ClassTemplateDecl 0x5cd5470 <line:1715:3, line:1717:27> line:1716:12 __make_unsigned
| |-TemplateTypeParmDecl 0x5cd5350 <line:1715:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cd53e0 <line:1716:5, line:1717:27> line:1716:12 struct __make_unsigned definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5cd56c0 <col:5, col:12> col:12 implicit struct __make_unsigned
| | `-TypedefDecl 0x5cd76d0 <line:1717:7, col:19> col:19 __type '_Tp'
| |   `-TemplateTypeParmType 0x5cd53a0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5cd5350 '_Tp'
| |-ClassTemplateSpecialization 0x5cd7760 '__make_unsigned'
| |-ClassTemplateSpecialization 0x5cd7ab8 '__make_unsigned'
| |-ClassTemplateSpecialization 0x5cd7e18 '__make_unsigned'
| |-ClassTemplateSpecialization 0x5cd8178 '__make_unsigned'
| |-ClassTemplateSpecialization 0x5cd84d8 '__make_unsigned'
| |-ClassTemplateSpecialization 0x5cd8838 '__make_unsigned'
| |-ClassTemplateSpecialization 0x5cd8b90 '__make_unsigned'
| `-ClassTemplateSpecialization 0x5cd8f30 '__make_unsigned'
|-ClassTemplateSpecializationDecl 0x5cd7760 <line:1719:3, line:1721:37> line:1720:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'char'
| |-CXXRecordDecl 0x5cd7978 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd7a20 <line:1721:7, col:29> col:29 __type 'unsigned char'
|   `-BuiltinType 0x5aca360 'unsigned char'
|-ClassTemplateSpecializationDecl 0x5cd7ab8 <line:1723:3, line:1725:37> line:1724:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'signed char'
| |-CXXRecordDecl 0x5cd7cd8 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd7d80 <line:1725:7, col:29> col:29 __type 'unsigned char'
|   `-BuiltinType 0x5aca360 'unsigned char'
|-ClassTemplateSpecializationDecl 0x5cd7e18 <line:1727:3, line:1729:38> line:1728:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'short'
| |-CXXRecordDecl 0x5cd8038 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd80e0 <line:1729:7, col:30> col:30 __type 'unsigned short'
|   `-BuiltinType 0x5aca380 'unsigned short'
|-ClassTemplateSpecializationDecl 0x5cd8178 <line:1731:3, line:1733:36> line:1732:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'int'
| |-CXXRecordDecl 0x5cd8398 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd8440 <line:1733:7, col:28> col:28 __type 'unsigned int'
|   `-BuiltinType 0x5aca3a0 'unsigned int'
|-ClassTemplateSpecializationDecl 0x5cd84d8 <line:1735:3, line:1737:37> line:1736:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'long'
| |-CXXRecordDecl 0x5cd86f8 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd87a0 <line:1737:7, col:29> col:29 __type 'unsigned long'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-ClassTemplateSpecializationDecl 0x5cd8838 <line:1739:3, line:1741:42> line:1740:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'long long'
| |-CXXRecordDecl 0x5cd8a58 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd8b00 <line:1741:7, col:34> col:34 __type 'unsigned long long'
|   `-BuiltinType 0x5aca3e0 'unsigned long long'
|-ClassTemplateSpecializationDecl 0x5cd8b90 <line:1744:3, line:1746:7> line:1745:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__make_unsigned<int>':'std::__make_unsigned<int>'
| |-TemplateArgument type 'wchar_t'
| `-CXXRecordDecl 0x5cd8e60 <col:5, col:12> col:12 implicit struct __make_unsigned
|-ClassTemplateSpecializationDecl 0x5cd8f30 <line:1750:3, line:1752:41> line:1751:12 struct __make_unsigned definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type '__int128'
| |-CXXRecordDecl 0x5cd9148 <col:5, col:12> col:12 implicit struct __make_unsigned
| `-TypedefDecl 0x5cd91f0 <line:1752:7, col:33> col:33 __type 'unsigned __int128'
|   `-BuiltinType 0x5aca7c0 'unsigned __int128'
|-ClassTemplateDecl 0x5cd9670 <line:1771:3, line:1774:11> col:11 __make_unsigned_selector
| |-TemplateTypeParmDecl 0x5cd9260 <line:1771:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cd93e8 <line:1772:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cd93a0 <col:19, col:37> '<dependent type>' lvalue
| |-NonTypeTemplateParmDecl 0x5cd9558 <line:1773:5, col:34> col:10 'bool' depth 0 index 2 _IsEnum
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cd9510 <col:20, col:34> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5cd95e0 <line:1774:5, col:11> col:11 class __make_unsigned_selector
|-ClassTemplatePartialSpecializationDecl 0x5cd9b80 <line:1776:3, line:1785:5> line:1777:11 class __make_unsigned_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cd9918 <line:1776:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cd9e88 <line:1777:5, col:11> col:11 implicit class __make_unsigned_selector
| |-TypedefDecl 0x5cda110 <line:1779:7, col:62> col:62 referenced __unsignedt '__make_unsigned<typename remove_cv<_Tp>::type>'
| | `-TemplateSpecializationType 0x5cda070 '__make_unsigned<typename remove_cv<_Tp>::type>' dependent __make_unsigned
| |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |-TypedefDecl 0x5cda280 <line:1780:7, col:44> col:44 referenced __unsigned_type 'typename __unsignedt::__type'
| | `-DependentNameType 0x5cda210 'typename __unsignedt::__type' dependent
| |-TypedefDecl 0x5cda6b8 <line:1781:7, col:59> col:59 referenced __cv_unsigned '__match_cv_qualifiers<_Tp, std::__make_unsigned_selector<type-parameter-0-0, true, false>::__unsigned_type>'
| | `-TemplateSpecializationType 0x5cda5d0 '__match_cv_qualifiers<_Tp, std::__make_unsigned_selector<type-parameter-0-0, true, false>::__unsigned_type>' dependent __match_cv_qualifiers
| |   |-TemplateArgument type '_Tp'
| |   `-TemplateArgument type 'std::__make_unsigned_selector<type-parameter-0-0, true, false>::__unsigned_type':'typename __unsignedt::__type'
| |-AccessSpecDecl 0x5cda710 <line:1783:5, col:11> col:5 public
| `-TypedefDecl 0x5cda850 <line:1784:7, col:46> col:46 __type 'typename __cv_unsigned::__type'
|   `-DependentNameType 0x5cda7e0 'typename __cv_unsigned::__type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5cdab30 <line:1787:3, line:1809:5> line:1788:11 class __make_unsigned_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cda8c0 <line:1787:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cdae38 <line:1788:5, col:11> col:11 implicit class __make_unsigned_selector
| |-TypedefDecl 0x5cdaee0 <line:1791:7, col:29> col:29 referenced __smallest 'unsigned char'
| | `-BuiltinType 0x5aca360 'unsigned char'
| |-VarDecl 0x5cdaf48 <line:1792:7, col:64> col:25 referenced __b0 'const bool' static cinit
| | `-BinaryOperator 0x5cdb030 <col:32, col:64> 'bool' '<='
| |   |-UnaryExprOrTypeTraitExpr 0x5cdafc0 <col:32, col:42> 'unsigned long' sizeof '_Tp'
| |   `-UnaryExprOrTypeTraitExpr 0x5cdb010 <col:47, col:64> 'unsigned long' sizeof 'std::__make_unsigned_selector<type-parameter-0-0, false, true>::__smallest':'unsigned char'
| |-VarDecl 0x5cdb060 <line:1793:7, col:68> col:25 referenced __b1 'const bool' static cinit
| | `-BinaryOperator 0x5cdb130 <col:32, col:68> 'bool' '<='
| |   |-UnaryExprOrTypeTraitExpr 0x5cdb0d8 <col:32, col:42> 'unsigned long' sizeof '_Tp'
| |   `-UnaryExprOrTypeTraitExpr 0x5cdb110 <col:47, col:68> 'unsigned long' sizeof 'unsigned short'
| |-VarDecl 0x5cdb160 <line:1794:7, col:66> col:25 referenced __b2 'const bool' static cinit
| | `-BinaryOperator 0x5cdb230 <col:32, col:66> 'bool' '<='
| |   |-UnaryExprOrTypeTraitExpr 0x5cdb1d8 <col:32, col:42> 'unsigned long' sizeof '_Tp'
| |   `-UnaryExprOrTypeTraitExpr 0x5cdb210 <col:47, col:66> 'unsigned long' sizeof 'unsigned int'
| |-VarDecl 0x5cdb260 <line:1795:7, col:67> col:25 referenced __b3 'const bool' static cinit
| | `-BinaryOperator 0x5cdb330 <col:32, col:67> 'bool' '<='
| |   |-UnaryExprOrTypeTraitExpr 0x5cdb2d8 <col:32, col:42> 'unsigned long' sizeof '_Tp'
| |   `-UnaryExprOrTypeTraitExpr 0x5cdb310 <col:47, col:67> 'unsigned long' sizeof 'unsigned long'
| |-TypedefDecl 0x5cdb560 <line:1796:7, col:68> col:68 referenced __cond3 'conditional<__b3, unsigned long, unsigned long long>'
| | `-TemplateSpecializationType 0x5cdb430 'conditional<__b3, unsigned long, unsigned long long>' dependent conditional
| |   |-TemplateArgument expr
| |   | `-ImplicitCastExpr 0x5cdb3a0 <col:27> 'bool' <LValueToRValue>
| |   |   `-DeclRefExpr 0x5cdb350 <col:27> 'const bool' lvalue Var 0x5cdb260 '__b3' 'const bool'
| |   |-TemplateArgument type 'unsigned long'
| |   `-TemplateArgument type 'unsigned long long'
| |-TypedefDecl 0x5cdd560 <line:1797:7, col:38> col:38 referenced __cond3_type 'typename __cond3::type'
| | `-DependentNameType 0x5cdb660 'typename __cond3::type' dependent
| |-TypedefDecl 0x5cdd7e0 <line:1798:7, col:61> col:61 referenced __cond2 'conditional<__b2, unsigned int, std::__make_unsigned_selector<type-parameter-0-0, false, true>::__cond3_type>'
| | `-TemplateSpecializationType 0x5cdd6b0 'conditional<__b2, unsigned int, std::__make_unsigned_selector<type-parameter-0-0, false, true>::__cond3_type>' dependent conditional
| |   |-TemplateArgument expr
| |   | `-ImplicitCastExpr 0x5cdd620 <col:27> 'bool' <LValueToRValue>
| |   |   `-DeclRefExpr 0x5cdd5b8 <col:27> 'const bool' lvalue Var 0x5cdb160 '__b2' 'const bool'
| |   |-TemplateArgument type 'unsigned int'
| |   `-TemplateArgument type 'std::__make_unsigned_selector<type-parameter-0-0, false, true>::__cond3_type':'typename __cond3::type'
| |-TypedefDecl 0x5cdd950 <line:1799:7, col:38> col:38 referenced __cond2_type 'typename __cond2::type'
| | `-DependentNameType 0x5cdd8e0 'typename __cond2::type' dependent
| |-TypedefDecl 0x5cddbd0 <line:1800:7, col:63> col:63 referenced __cond1 'conditional<__b1, unsigned short, std::__make_unsigned_selector<type-parameter-0-0, false, true>::__cond2_type>'
| | `-TemplateSpecializationType 0x5cddaa0 'conditional<__b1, unsigned short, std::__make_unsigned_selector<type-parameter-0-0, false, true>::__cond2_type>' dependent conditional
| |   |-TemplateArgument expr
| |   | `-ImplicitCastExpr 0x5cdda10 <col:27> 'bool' <LValueToRValue>
| |   |   `-DeclRefExpr 0x5cdd9a8 <col:27> 'const bool' lvalue Var 0x5cdb060 '__b1' 'const bool'
| |   |-TemplateArgument type 'unsigned short'
| |   `-TemplateArgument type 'std::__make_unsigned_selector<type-parameter-0-0, false, true>::__cond2_type':'typename __cond2::type'
| |-TypedefDecl 0x5cddd40 <line:1801:7, col:38> col:38 referenced __cond1_type 'typename __cond1::type'
| | `-DependentNameType 0x5cddcd0 'typename __cond1::type' dependent
| |-TypedefDecl 0x5cde040 <line:1803:7, line:1804:2> col:2 referenced __unsigned_type 'typename conditional<__b0, __smallest, __cond1_type>::type'
| | `-DependentNameType 0x5cddfd0 'typename conditional<__b0, __smallest, __cond1_type>::type' dependent
| |-TypedefDecl 0x5cde418 <line:1805:7, col:59> col:59 referenced __cv_unsigned '__match_cv_qualifiers<_Tp, std::__make_unsigned_selector<type-parameter-0-0, false, true>::__unsigned_type>'
| | `-TemplateSpecializationType 0x5cde330 '__match_cv_qualifiers<_Tp, std::__make_unsigned_selector<type-parameter-0-0, false, true>::__unsigned_type>' dependent __match_cv_qualifiers
| |   |-TemplateArgument type '_Tp'
| |   `-TemplateArgument type 'std::__make_unsigned_selector<type-parameter-0-0, false, true>::__unsigned_type':'typename conditional<__b0, __smallest, __cond1_type>::type'
| |-AccessSpecDecl 0x5cde470 <line:1807:5, col:11> col:5 public
| `-TypedefDecl 0x5cde5b0 <line:1808:7, col:46> col:46 __type 'typename __cv_unsigned::__type'
|   `-DependentNameType 0x5cde540 'typename __cv_unsigned::__type' dependent
|-ClassTemplateDecl 0x5cde740 <line:1815:3, line:1817:68> line:1816:12 make_unsigned
| |-TemplateTypeParmDecl 0x5cde620 <line:1815:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cde6b0 <line:1816:5, line:1817:68> line:1816:12 struct make_unsigned definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5cde990 <col:5, col:12> col:12 implicit struct make_unsigned
| | `-TypedefDecl 0x5cdee10 <line:1817:7, col:62> col:62 type 'typename __make_unsigned_selector<_Tp>::__type'
| |   `-DependentNameType 0x5cdeda0 'typename __make_unsigned_selector<_Tp>::__type' dependent
| `-ClassTemplateSpecialization 0x5cdeea0 'make_unsigned'
|-ClassTemplateSpecializationDecl 0x5cdeea0 <line:1820:3, line:1821:30> col:12 struct make_unsigned
| `-TemplateArgument type 'bool'
|-ClassTemplateDecl 0x5cdf170 <line:1825:3, line:1827:27> line:1826:12 __make_signed
| |-TemplateTypeParmDecl 0x5cdf050 <line:1825:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cdf0e0 <line:1826:5, line:1827:27> line:1826:12 struct __make_signed definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5cdf3c0 <col:5, col:12> col:12 implicit struct __make_signed
| | `-TypedefDecl 0x5cdf460 <line:1827:7, col:19> col:19 __type '_Tp'
| |   `-TemplateTypeParmType 0x5cdf0a0 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5cdf050 '_Tp'
| |-ClassTemplateSpecialization 0x5ce00b0 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce0408 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce0768 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce0ac8 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce0e28 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce1188 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce14e0 '__make_signed'
| |-ClassTemplateSpecialization 0x5ce1898 '__make_signed'
| `-ClassTemplateSpecialization 0x5ce1c60 '__make_signed'
|-ClassTemplateSpecializationDecl 0x5ce00b0 <line:1829:3, line:1831:35> line:1830:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'char'
| |-CXXRecordDecl 0x5ce02c8 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce0370 <line:1831:7, col:27> col:27 __type 'signed char'
|   `-BuiltinType 0x5aca2c0 'signed char'
|-ClassTemplateSpecializationDecl 0x5ce0408 <line:1833:3, line:1835:35> line:1834:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'unsigned char'
| |-CXXRecordDecl 0x5ce0628 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce06d0 <line:1835:7, col:27> col:27 __type 'signed char'
|   `-BuiltinType 0x5aca2c0 'signed char'
|-ClassTemplateSpecializationDecl 0x5ce0768 <line:1837:3, line:1839:36> line:1838:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'unsigned short'
| |-CXXRecordDecl 0x5ce0988 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce0a30 <line:1839:7, col:28> col:28 __type 'short'
|   `-BuiltinType 0x5aca2e0 'short'
|-ClassTemplateSpecializationDecl 0x5ce0ac8 <line:1841:3, line:1843:34> line:1842:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'unsigned int'
| |-CXXRecordDecl 0x5ce0ce8 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce0d90 <line:1843:7, col:26> col:26 __type 'int'
|   `-BuiltinType 0x5aca300 'int'
|-ClassTemplateSpecializationDecl 0x5ce0e28 <line:1845:3, line:1847:35> line:1846:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'unsigned long'
| |-CXXRecordDecl 0x5ce1048 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce10f0 <line:1847:7, col:27> col:27 __type 'long'
|   `-BuiltinType 0x5aca320 'long'
|-ClassTemplateSpecializationDecl 0x5ce1188 <line:1849:3, line:1851:40> line:1850:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'unsigned long long'
| |-CXXRecordDecl 0x5ce13a8 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce1450 <line:1851:7, col:32> col:32 __type 'long long'
|   `-BuiltinType 0x5aca340 'long long'
|-ClassTemplateSpecializationDecl 0x5ce14e0 <line:1860:3, line:1862:7> line:1861:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__make_signed<std::uint_least16_t>':'std::__make_signed<unsigned short>'
| |-TemplateArgument type 'char16_t'
| `-CXXRecordDecl 0x5ce17d0 <col:5, col:12> col:12 implicit struct __make_signed
|-ClassTemplateSpecializationDecl 0x5ce1898 <line:1863:3, line:1865:7> line:1864:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__make_signed<std::uint_least32_t>':'std::__make_signed<unsigned int>'
| |-TemplateArgument type 'char32_t'
| `-CXXRecordDecl 0x5ce1b90 <col:5, col:12> col:12 implicit struct __make_signed
|-ClassTemplateSpecializationDecl 0x5ce1c60 <line:1869:3, line:1871:32> line:1870:12 struct __make_signed definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'unsigned __int128'
| |-CXXRecordDecl 0x5ce1e78 <col:5, col:12> col:12 implicit struct __make_signed
| `-TypedefDecl 0x5ce1f20 <line:1871:7, col:24> col:24 __type '__int128'
|   `-BuiltinType 0x5aca7a0 '__int128'
|-ClassTemplateDecl 0x5ce23c0 <line:1890:3, line:1893:11> col:11 __make_signed_selector
| |-TemplateTypeParmDecl 0x5ce1f90 <line:1890:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ce2138 <line:1891:5, col:37> col:10 'bool' depth 0 index 1 _IsInt
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ce20f0 <col:19, col:37> '<dependent type>' lvalue
| |-NonTypeTemplateParmDecl 0x5ce22a8 <line:1892:5, col:34> col:10 'bool' depth 0 index 2 _IsEnum
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5ce2260 <col:20, col:34> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ce2330 <line:1893:5, col:11> col:11 class __make_signed_selector
|-ClassTemplatePartialSpecializationDecl 0x5ce28b0 <line:1895:3, line:1904:5> line:1896:11 class __make_signed_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5ce2648 <line:1895:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ce2bb8 <line:1896:5, col:11> col:11 implicit class __make_signed_selector
| |-TypedefDecl 0x5ce2e40 <line:1898:7, col:60> col:60 referenced __signedt '__make_signed<typename remove_cv<_Tp>::type>'
| | `-TemplateSpecializationType 0x5ce2da0 '__make_signed<typename remove_cv<_Tp>::type>' dependent __make_signed
| |   `-TemplateArgument type 'typename remove_cv<_Tp>::type'
| |-TypedefDecl 0x5ce2fb0 <line:1899:7, col:42> col:42 referenced __signed_type 'typename __signedt::__type'
| | `-DependentNameType 0x5ce2f40 'typename __signedt::__type' dependent
| |-TypedefDecl 0x5ce3388 <line:1900:7, col:57> col:57 referenced __cv_signed '__match_cv_qualifiers<_Tp, std::__make_signed_selector<type-parameter-0-0, true, false>::__signed_type>'
| | `-TemplateSpecializationType 0x5ce32a0 '__match_cv_qualifiers<_Tp, std::__make_signed_selector<type-parameter-0-0, true, false>::__signed_type>' dependent __match_cv_qualifiers
| |   |-TemplateArgument type '_Tp'
| |   `-TemplateArgument type 'std::__make_signed_selector<type-parameter-0-0, true, false>::__signed_type':'typename __signedt::__type'
| |-AccessSpecDecl 0x5ce33e0 <line:1902:5, col:11> col:5 public
| `-TypedefDecl 0x5ce3520 <line:1903:7, col:44> col:44 __type 'typename __cv_signed::__type'
|   `-DependentNameType 0x5ce34b0 'typename __cv_signed::__type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5ce3800 <line:1906:3, line:1913:5> line:1907:11 class __make_signed_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5ce3590 <line:1906:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ce3b08 <line:1907:5, col:11> col:11 implicit class __make_signed_selector
| |-TypedefDecl 0x5ce3e70 <line:1909:7, col:62> col:62 referenced __unsigned_type 'typename __make_unsigned_selector<_Tp>::__type'
| | `-DependentNameType 0x5ce3e00 'typename __make_unsigned_selector<_Tp>::__type' dependent
| |-AccessSpecDecl 0x5ce3ec8 <line:1911:5, col:11> col:5 public
| `-TypedefDecl 0x5ce4ce0 <line:1912:7, col:72> col:72 __type 'typename __make_signed_selector<__unsigned_type>::__type'
|   `-DependentNameType 0x5ce4c70 'typename __make_signed_selector<__unsigned_type>::__type' dependent
|-ClassTemplateDecl 0x5ce4e70 <line:1919:3, line:1921:66> line:1920:12 make_signed
| |-TemplateTypeParmDecl 0x5ce4d50 <line:1919:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ce4de0 <line:1920:5, line:1921:66> line:1920:12 struct make_signed definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5ce50c0 <col:5, col:12> col:12 implicit struct make_signed
| | `-TypedefDecl 0x5ce5510 <line:1921:7, col:60> col:60 type 'typename __make_signed_selector<_Tp>::__type'
| |   `-DependentNameType 0x5ce54a0 'typename __make_signed_selector<_Tp>::__type' dependent
| `-ClassTemplateSpecialization 0x5ce55a0 'make_signed'
|-ClassTemplateSpecializationDecl 0x5ce55a0 <line:1924:3, line:1925:28> col:12 struct make_signed
| `-TemplateArgument type 'bool'
|-TypeAliasTemplateDecl 0x5ce59a0 <line:1929:3, line:1930:54> col:5 make_signed_t
| |-TemplateTypeParmDecl 0x5ce5750 <line:1929:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ce5940 <line:1930:5, col:54> col:11 make_signed_t 'typename make_signed<_Tp>::type'
|   `-DependentNameType 0x5ce58d0 'typename make_signed<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ce5c40 <line:1933:3, line:1934:58> col:5 make_unsigned_t
| |-TemplateTypeParmDecl 0x5ce59f8 <line:1933:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ce5be0 <line:1934:5, col:58> col:11 make_unsigned_t 'typename make_unsigned<_Tp>::type'
|   `-DependentNameType 0x5ce5b70 'typename make_unsigned<_Tp>::type' dependent
|-ClassTemplateDecl 0x5ce5db0 <line:1940:3, line:1942:25> line:1941:12 remove_extent
| |-TemplateTypeParmDecl 0x5ce5c98 <line:1940:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ce5d20 <line:1941:5, line:1942:25> line:1941:12 struct remove_extent definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ce6000 <col:5, col:12> col:12 implicit struct remove_extent
|   `-TypedefDecl 0x5ce60a0 <line:1942:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5ce5ce0 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5ce5c98 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ce63a0 <line:1944:3, line:1946:25> line:1945:12 struct remove_extent definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| |-TemplateTypeParmDecl 0x5ce6110 <line:1944:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ce61d8 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| |-CXXRecordDecl 0x5ce65d8 <line:1945:5, col:12> col:12 implicit struct remove_extent
| `-TypedefDecl 0x5ce6678 <line:1946:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5ce6160 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5ce6110 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ce6880 <line:1948:3, line:1950:25> line:1949:12 struct remove_extent definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 []'
| |-TemplateTypeParmDecl 0x5ce66e8 <line:1948:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ce7b28 <line:1949:5, col:12> col:12 implicit struct remove_extent
| `-TypedefDecl 0x5ce7bc8 <line:1950:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5ce6730 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5ce66e8 '_Tp'
|-ClassTemplateDecl 0x5ce7d50 prev 0x5c6ecf0 <line:1953:3, line:1955:25> line:1954:12 remove_all_extents
| |-TemplateTypeParmDecl 0x5ce7c38 <line:1953:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ce7cc0 prev 0x5c6ec60 <line:1954:5, line:1955:25> line:1954:12 struct remove_all_extents definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ce7e10 <col:5, col:12> col:12 implicit struct remove_all_extents
|   `-TypedefDecl 0x5ce7eb0 <line:1955:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5ce7c80 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5ce7c38 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ce81b0 <line:1957:3, line:1959:60> line:1958:12 struct remove_all_extents definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 [_Size]'
| |-TemplateTypeParmDecl 0x5ce7f20 <line:1957:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5ce7fe8 <col:26, col:38> col:38 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Size
| |-CXXRecordDecl 0x5ce83e8 <line:1958:5, col:12> col:12 implicit struct remove_all_extents
| `-TypedefDecl 0x5ce8590 <line:1959:7, col:54> col:54 type 'typename remove_all_extents<_Tp>::type'
|   `-DependentNameType 0x5ce8520 'typename remove_all_extents<_Tp>::type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5ce87a0 <line:1961:3, line:1963:60> line:1962:12 struct remove_all_extents definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 []'
| |-TemplateTypeParmDecl 0x5ce8600 <line:1961:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ce89d8 <line:1962:5, col:12> col:12 implicit struct remove_all_extents
| `-TypedefDecl 0x5ce8b80 <line:1963:7, col:54> col:54 type 'typename remove_all_extents<_Tp>::type'
|   `-DependentNameType 0x5ce8b10 'typename remove_all_extents<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ce8e40 <line:1967:3, line:1968:58> col:5 remove_extent_t
| |-TemplateTypeParmDecl 0x5ce8bf0 <line:1967:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ce8de0 <line:1968:5, col:58> col:11 remove_extent_t 'typename remove_extent<_Tp>::type'
|   `-DependentNameType 0x5ce8d70 'typename remove_extent<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ce9090 <line:1971:3, line:1972:68> col:5 remove_all_extents_t
| |-TemplateTypeParmDecl 0x5ce8e98 <line:1971:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ce9030 <line:1972:5, col:68> col:11 remove_all_extents_t 'typename remove_all_extents<_Tp>::type'
|   `-DependentNameType 0x5ce8fc0 'typename remove_all_extents<_Tp>::type' dependent
|-ClassTemplateDecl 0x5ce9278 <line:1977:3, line:1979:25> line:1978:12 __remove_pointer_helper
| |-TemplateTypeParmDecl 0x5ce90e8 <line:1977:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5ce9158 <col:26> col:26 typename depth 0 index 1
| `-CXXRecordDecl 0x5ce91e8 <line:1978:5, line:1979:25> line:1978:12 struct __remove_pointer_helper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ce9510 <col:5, col:12> col:12 implicit struct __remove_pointer_helper
|   `-TypedefDecl 0x5ce95b0 <line:1979:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5ce9130 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5ce90e8 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ce98d8 <line:1981:3, line:1983:25> line:1982:12 struct __remove_pointer_helper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1 *'
| |-TemplateTypeParmDecl 0x5ce9620 <line:1981:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5ce9698 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| |-CXXRecordDecl 0x5cea278 <line:1982:5, col:12> col:12 implicit struct __remove_pointer_helper
| `-TypedefDecl 0x5cea318 <line:1983:7, col:19> col:19 type '_Up'
|   `-TemplateTypeParmType 0x5ce96e0 '_Up' dependent depth 0 index 1
|     `-TemplateTypeParm 0x5ce9698 '_Up'
|-ClassTemplateDecl 0x5cea4a0 <line:1986:3, line:1989:7> line:1987:12 remove_pointer
| |-TemplateTypeParmDecl 0x5cea388 <line:1986:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cea410 <line:1987:5, line:1989:7> line:1987:12 struct remove_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__remove_pointer_helper<_Tp, typename remove_cv<_Tp>::type>'
|   `-CXXRecordDecl 0x5cea940 <col:5, col:12> col:12 implicit struct remove_pointer
|-ClassTemplateDecl 0x5ceae98 <line:1992:3, line:1995:25> line:1994:12 __add_pointer_helper
| |-TemplateTypeParmDecl 0x5cea9e8 <line:1992:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5cead88 <col:26, line:1993:26> line:1992:31 'bool' depth 0 index 1
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cead40 <col:33, line:1993:26> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5ceae08 <line:1994:5, line:1995:25> line:1994:12 struct __add_pointer_helper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ceb150 <col:5, col:12> col:12 implicit struct __add_pointer_helper
|   `-TypedefDecl 0x5ceb1f0 <line:1995:7, col:19> col:19 type '_Tp'
|     `-TemplateTypeParmType 0x5ceaa30 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cea9e8 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5ceb458 <line:1997:3, line:1999:59> line:1998:12 struct __add_pointer_helper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5ceb260 <line:1997:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5ceb6e8 <line:1998:5, col:12> col:12 implicit struct __add_pointer_helper
| `-TypedefDecl 0x5ceb8f0 <line:1999:7, col:53> col:53 type 'typename remove_reference<_Tp>::type *'
|   `-PointerType 0x5ceb8a0 'typename remove_reference<_Tp>::type *' dependent
|     `-DependentNameType 0x5ceb820 'typename remove_reference<_Tp>::type' dependent
|-ClassTemplateDecl 0x5ceba80 <line:2001:3, line:2004:7> line:2002:12 add_pointer
| |-TemplateTypeParmDecl 0x5ceb960 <line:2001:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ceb9f0 <line:2002:5, line:2004:7> line:2002:12 struct add_pointer definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__add_pointer_helper<_Tp>'
|   `-CXXRecordDecl 0x5cec090 <col:5, col:12> col:12 implicit struct add_pointer
|-TypeAliasTemplateDecl 0x5ced310 <line:2008:3, line:2009:60> col:5 remove_pointer_t
| |-TemplateTypeParmDecl 0x5ced0c0 <line:2008:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ced2b0 <line:2009:5, col:60> col:11 remove_pointer_t 'typename remove_pointer<_Tp>::type'
|   `-DependentNameType 0x5ced240 'typename remove_pointer<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5ced5b0 <line:2012:3, line:2013:54> col:5 add_pointer_t
| |-TemplateTypeParmDecl 0x5ced368 <line:2012:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5ced550 <line:2013:5, col:54> col:11 add_pointer_t 'typename add_pointer<_Tp>::type'
|   `-DependentNameType 0x5ced4e0 'typename add_pointer<_Tp>::type' dependent
|-ClassTemplateDecl 0x5ced760 <line:2016:3, line:2024:5> line:2017:12 __aligned_storage_msa
| |-NonTypeTemplateParmDecl 0x5ced658 <line:2016:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| `-CXXRecordDecl 0x5ced6d0 <line:2017:5, line:2024:5> line:2017:12 struct __aligned_storage_msa definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ced9d0 <col:5, col:12> col:12 implicit struct __aligned_storage_msa
|   `-CXXRecordDecl 0x5ceda60 <line:2019:7, line:2023:7> line:2019:13 union __type definition
|     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_variant_members
|     | |-DefaultConstructor exists trivial needs_implicit
|     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|     | |-MoveConstructor exists simple trivial needs_implicit
|     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|     | |-MoveAssignment exists simple trivial needs_implicit
|     | `-Destructor simple irrelevant trivial needs_implicit
|     |-CXXRecordDecl 0x5cedb78 <col:7, col:13> col:13 implicit union __type
|     |-FieldDecl 0x5cedc98 <line:2021:2, col:27> col:16 __data 'unsigned char [_Len]'
|     |-CXXRecordDecl 0x5cedce8 <line:2022:2, col:40> col:2 struct definition
|     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|     | | |-MoveConstructor exists simple trivial needs_implicit
|     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|     | | |-MoveAssignment exists simple trivial needs_implicit
|     | | `-Destructor simple irrelevant trivial needs_implicit
|     | `-AlignedAttr 0x5cede08 <col:24> aligned
|     |   `-<<<NULL>>>
|     `-FieldDecl 0x5cedec8 <col:2, col:42> col:42 __align 'struct (anonymous struct at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:2022:2)':'std::__aligned_storage_msa::__type::(anonymous struct at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:2022:2)'
|-ClassTemplateDecl 0x5cee300 <line:2036:3, line:2045:5> line:2038:12 aligned_storage
| |-NonTypeTemplateParmDecl 0x5cedfb0 <line:2036:12, col:24> col:24 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| |-NonTypeTemplateParmDecl 0x5cee1f0 <col:30, line:2037:61> line:2036:42 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | `-TemplateArgument expr
| |   `-UnaryExprOrTypeTraitExpr 0x5cee1b0 <line:2037:5, col:61> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| `-CXXRecordDecl 0x5cee270 <line:2038:5, line:2045:5> line:2038:12 struct aligned_storage definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cee5d0 <col:5, col:12> col:12 implicit struct aligned_storage
|   `-CXXRecordDecl 0x5cee660 <line:2040:7, line:2044:7> line:2040:13 union type definition
|     |-DefinitionData aggregate standard_layout trivially_copyable pod trivial has_variant_members
|     | |-DefaultConstructor exists trivial needs_implicit
|     | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|     | |-MoveConstructor exists simple trivial needs_implicit
|     | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|     | |-MoveAssignment exists simple trivial needs_implicit
|     | `-Destructor simple irrelevant trivial needs_implicit
|     |-CXXRecordDecl 0x5cee778 <col:7, col:13> col:13 implicit union type
|     |-FieldDecl 0x5cee898 <line:2042:2, col:27> col:16 __data 'unsigned char [_Len]'
|     |-CXXRecordDecl 0x5cee928 <line:2043:2, col:50> col:2 struct definition
|     | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|     | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|     | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|     | | |-MoveConstructor exists simple trivial needs_implicit
|     | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|     | | |-MoveAssignment exists simple trivial needs_implicit
|     | | `-Destructor simple irrelevant trivial needs_implicit
|     | `-AlignedAttr 0x5ceea48 <col:24, col:44> aligned
|     |   `-ParenExpr 0x5cee908 <col:36, col:43> 'std::size_t':'unsigned long'
|     |     `-DeclRefExpr 0x5cee8e8 <col:37> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x5cee1f0 '_Align' 'std::size_t':'unsigned long'
|     `-FieldDecl 0x5ceeb08 <col:2, col:52> col:52 __align 'struct (anonymous struct at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:2043:2)':'std::aligned_storage::type::(anonymous struct at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:2043:2)'
|-ClassTemplateDecl 0x5ceecc0 <line:2047:3, line:2052:5> line:2048:12 __strictest_alignment
| |-TemplateTypeParmDecl 0x5ceeba0 <line:2047:13, col:25> col:25 typename depth 0 index 0 ... _Types
| `-CXXRecordDecl 0x5ceec30 <line:2048:5, line:2052:5> line:2048:12 struct __strictest_alignment definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ceef70 <col:5, col:12> col:12 implicit struct __strictest_alignment
|   |-VarDecl 0x5cef010 <line:2050:7, col:42> col:27 _S_alignment 'const std::size_t':'const unsigned long' static cinit
|   | `-ImplicitCastExpr 0x5cef098 <col:42> 'const std::size_t':'const unsigned long' <IntegralCast>
|   |   `-IntegerLiteral 0x5cef078 <col:42> 'int' 0
|   `-VarDecl 0x5cf10d8 <line:2051:7, col:37> col:27 _S_size 'const std::size_t':'const unsigned long' static cinit
|     `-ImplicitCastExpr 0x5cf1160 <col:37> 'const std::size_t':'const unsigned long' <IntegralCast>
|       `-IntegerLiteral 0x5cf1140 <col:37> 'int' 0
|-ClassTemplatePartialSpecializationDecl 0x5cf14a0 <line:2054:3, line:2063:5> line:2055:12 struct __strictest_alignment definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | `-TemplateArgument type 'type-parameter-0-1...'
| |-TemplateTypeParmDecl 0x5cf11e8 <line:2054:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5cf1258 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Types
| |-CXXRecordDecl 0x5cf1768 <line:2055:5, col:12> col:12 implicit struct __strictest_alignment
| |-VarDecl 0x5cf1808 <line:2057:7, line:2059:53> line:2057:27 _S_alignment 'const std::size_t':'const unsigned long' static cinit
| | `-ConditionalOperator 0x5cf1ba8 <line:2058:9, line:2059:53> '<dependent type>'
| |   |-BinaryOperator 0x5cf1a18 <line:2058:9, col:58> '<dependent type>' '>'
| |   | |-UnaryExprOrTypeTraitExpr 0x5cf1880 <col:9, col:20> 'unsigned long' alignof '_Tp'
| |   | `-DependentScopeDeclRefExpr 0x5cf19e0 <col:24, col:58> '<dependent type>' lvalue
| |   |-UnaryExprOrTypeTraitExpr 0x5cf1a48 <line:2059:4, col:15> 'unsigned long' alignof '_Tp'
| |   `-DependentScopeDeclRefExpr 0x5cf1b70 <col:19, col:53> '<dependent type>' lvalue
| `-VarDecl 0x5cf1be8 <line:2060:7, line:2062:52> line:2060:27 _S_size 'const std::size_t':'const unsigned long' static cinit
|   `-ConditionalOperator 0x5cf1f48 <line:2061:9, line:2062:52> '<dependent type>'
|     |-BinaryOperator 0x5cf1db8 <line:2061:9, col:57> '<dependent type>' '>'
|     | |-UnaryExprOrTypeTraitExpr 0x5cf1c60 <col:9, col:19> 'unsigned long' sizeof '_Tp'
|     | `-DependentScopeDeclRefExpr 0x5cf1d80 <col:23, col:57> '<dependent type>' lvalue
|     |-UnaryExprOrTypeTraitExpr 0x5cf1de8 <line:2062:4, col:14> 'unsigned long' sizeof '_Tp'
|     `-DependentScopeDeclRefExpr 0x5cf1f10 <col:18, col:52> '<dependent type>' lvalue
|-ClassTemplateDecl 0x5cf2128 <line:2075:3, line:2089:5> line:2076:12 aligned_union
| |-NonTypeTemplateParmDecl 0x5cf1fa0 <line:2075:13, col:20> col:20 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| |-TemplateTypeParmDecl 0x5cf2000 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| `-CXXRecordDecl 0x5cf2098 <line:2076:5, line:2089:5> line:2076:12 struct aligned_union definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cf2440 <col:5, col:12> col:12 implicit struct aligned_union
|   |-AccessSpecDecl 0x5cf24d0 <line:2078:5, col:12> col:5 private
|   |-StaticAssertDecl 0x5cf25b0 <line:2079:7, col:76> col:7
|   | |-BinaryOperator 0x5cf2558 <col:21, col:42> 'bool' '!='
|   | | |-SizeOfPackExpr 0x5cf24f8 <col:21, col:37> 'unsigned long' 0x5cf2000 _Types
|   | | `-ImplicitCastExpr 0x5cf2540 <col:42> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x5cf2520 <col:42> 'int' 0
|   | `-StringLiteral 0x5cf2578 <col:45> 'const char [30]' lvalue "At least one type is required"
|   |-TypeAliasDecl 0x5cf26e0 <line:2081:7, col:58> col:13 referenced __strictest '__strictest_alignment<_Types...>'
|   | `-TemplateSpecializationType 0x5cf2640 '__strictest_alignment<_Types...>' dependent __strictest_alignment
|   |   `-TemplateArgument type '_Types...'
|   |-VarDecl 0x5cf2750 <line:2082:7, line:2083:24> line:2082:27 referenced _S_len 'const std::size_t':'const unsigned long' static cinit
|   | `-ConditionalOperator 0x5cf2938 <col:36, line:2083:24> '<dependent type>'
|   |   |-BinaryOperator 0x5cf2888 <line:2082:36, col:56> '<dependent type>' '>'
|   |   | |-DeclRefExpr 0x5cf27b8 <col:36> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x5cf1fa0 '_Len' 'std::size_t':'unsigned long'
|   |   | `-DependentScopeDeclRefExpr 0x5cf2850 <col:43, col:56> '<dependent type>' lvalue
|   |   |-DeclRefExpr 0x5cf28a8 <line:2083:4> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x5cf1fa0 '_Len' 'std::size_t':'unsigned long'
|   |   `-DependentScopeDeclRefExpr 0x5cf2900 <col:11, col:24> '<dependent type>' lvalue
|   |-AccessSpecDecl 0x5cf2968 <line:2084:5, col:11> col:5 public
|   |-VarDecl 0x5cf29a0 <line:2086:7, col:58> col:27 referenced alignment_value 'const std::size_t':'const unsigned long' static cinit
|   | `-DependentScopeDeclRefExpr 0x5cf2a40 <col:45, col:58> '<dependent type>' lvalue
|   `-TypedefDecl 0x5cf2cd0 <line:2088:7, col:71> col:71 type 'typename aligned_storage<_S_len, alignment_value>::type'
|     `-DependentNameType 0x5cf2c60 'typename aligned_storage<_S_len, alignment_value>::type' dependent
|-VarDecl 0x5cf43b0 parent 0x5cf2098 prev 0x5cf29a0 <line:2091:3, line:2092:50> col:50 alignment_value 'const std::size_t':'const unsigned long'
|-ClassTemplateDecl 0x5cf4860 <line:2096:3, line:2099:12> col:12 __decay_selector
| |-TemplateTypeParmDecl 0x5cf4458 <line:2096:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| |-NonTypeTemplateParmDecl 0x5cf45d8 <line:2097:5, col:36> col:10 'bool' depth 0 index 1 _IsArray
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cf4590 <col:21, col:36> '<dependent type>' lvalue
| |-NonTypeTemplateParmDecl 0x5cf4748 <line:2098:5, col:42> col:10 'bool' depth 0 index 2 _IsFunction
| | `-TemplateArgument expr
| |   `-DependentScopeDeclRefExpr 0x5cf4700 <col:24, col:42> '<dependent type>' lvalue
| `-CXXRecordDecl 0x5cf47d0 <line:2099:5, col:12> col:12 struct __decay_selector
|-ClassTemplatePartialSpecializationDecl 0x5cf4d50 <line:2102:3, line:2104:53> line:2103:12 struct __decay_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cf4ae8 <line:2102:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| |-CXXRecordDecl 0x5cf5058 <line:2103:5, col:12> col:12 implicit struct __decay_selector
| `-TypedefDecl 0x5cf5200 <line:2104:7, col:45> col:45 __type 'typename remove_cv<_Up>::type'
|   `-DependentNameType 0x5cf5190 'typename remove_cv<_Up>::type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5cf54e0 <line:2106:3, line:2108:58> line:2107:12 struct __decay_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateTypeParmDecl 0x5cf5270 <line:2106:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| |-CXXRecordDecl 0x5cf57e8 <line:2107:5, col:12> col:12 implicit struct __decay_selector
| `-TypedefDecl 0x5cf59f0 <line:2108:7, col:50> col:50 __type 'typename remove_extent<_Up>::type *'
|   `-PointerType 0x5cf59a0 'typename remove_extent<_Up>::type *' dependent
|     `-DependentNameType 0x5cf5920 'typename remove_extent<_Up>::type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5cf5cd0 <line:2110:3, line:2112:55> line:2111:12 struct __decay_selector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateTypeParmDecl 0x5cf5a60 <line:2110:12, col:21> col:21 referenced typename depth 0 index 0 _Up
| |-CXXRecordDecl 0x5cf5fd8 <line:2111:5, col:12> col:12 implicit struct __decay_selector
| `-TypedefDecl 0x5cf6180 <line:2112:7, col:47> col:47 __type 'typename add_pointer<_Up>::type'
|   `-DependentNameType 0x5cf6110 'typename add_pointer<_Up>::type' dependent
|-ClassTemplateDecl 0x5cf78c0 <line:2115:3, line:2122:5> line:2116:11 decay
| |-TemplateTypeParmDecl 0x5cf61f0 <line:2115:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cf6280 <line:2116:5, line:2122:5> line:2116:11 class decay definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cf7b10 <col:5, col:11> col:11 implicit class decay
|   |-TypedefDecl 0x5cf7cb0 <line:2118:7, col:52> col:52 referenced __remove_type 'typename remove_reference<_Tp>::type'
|   | `-DependentNameType 0x5cf7c40 'typename remove_reference<_Tp>::type' dependent
|   |-AccessSpecDecl 0x5cf7d08 <line:2120:5, col:11> col:5 public
|   `-TypedefDecl 0x5cf81c0 <line:2121:7, col:64> col:64 type 'typename __decay_selector<__remove_type>::__type'
|     `-DependentNameType 0x5cf8150 'typename __decay_selector<__remove_type>::__type' dependent
|-ClassTemplateDecl 0x5cf8350 <line:2124:3, line:2125:11> col:11 reference_wrapper
| |-TemplateTypeParmDecl 0x5cf8230 <line:2124:12, col:21> col:21 typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cf82c0 <line:2125:5, col:11> col:11 class reference_wrapper
|-ClassTemplateDecl 0x5cf8650 <line:2128:3, line:2132:5> line:2129:12 __strip_reference_wrapper
| |-TemplateTypeParmDecl 0x5cf8538 <line:2128:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cf85c0 <line:2129:5, line:2132:5> line:2129:12 struct __strip_reference_wrapper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cf88a0 <col:5, col:12> col:12 implicit struct __strip_reference_wrapper
|   `-TypedefDecl 0x5cf8940 <line:2131:7, col:19> col:19 __type '_Tp'
|     `-TemplateTypeParmType 0x5cf8580 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cf8538 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5cf8bb0 <line:2134:3, line:2138:5> line:2135:12 struct __strip_reference_wrapper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'reference_wrapper<type-parameter-0-0>'
| |-TemplateTypeParmDecl 0x5cf89b0 <line:2134:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cf8e08 <line:2135:5, col:12> col:12 implicit struct __strip_reference_wrapper
| `-TypedefDecl 0x5cf8ed8 <line:2137:7, col:20> col:20 __type '_Tp &'
|   `-LValueReferenceType 0x5cf8ea0 '_Tp &' dependent
|     `-TemplateTypeParmType 0x5cf8a00 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5cf89b0 '_Tp'
|-ClassTemplateDecl 0x5cf9060 <line:2140:3, line:2145:5> line:2141:12 __decay_and_strip
| |-TemplateTypeParmDecl 0x5cf8f48 <line:2140:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cf8fd0 <line:2141:5, line:2145:5> line:2141:12 struct __decay_and_strip definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cf92b0 <col:5, col:12> col:12 implicit struct __decay_and_strip
|   `-TypedefDecl 0x5cf9630 <line:2143:7, line:2144:37> col:37 __type 'typename __strip_reference_wrapper<typename decay<_Tp>::type>::__type'
|     `-DependentNameType 0x5cf95c0 'typename __strip_reference_wrapper<typename decay<_Tp>::type>::__type' dependent
|-ClassTemplateDecl 0x5cf9848 <line:2150:3, line:2152:7> line:2151:12 enable_if
| |-NonTypeTemplateParmDecl 0x5cf96b0 <line:2150:12> col:16 'bool' depth 0 index 0
| |-TemplateTypeParmDecl 0x5cf9720 <col:18, col:33> col:27 typename depth 0 index 1 _Tp
| | `-TemplateArgument type 'void'
| `-CXXRecordDecl 0x5cf97b8 <line:2151:5, line:2152:7> line:2151:12 struct enable_if definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   `-CXXRecordDecl 0x5cfb150 <col:5, col:12> col:12 implicit struct enable_if
|-ClassTemplatePartialSpecializationDecl 0x5cfb3e8 <line:2155:3, line:2157:25> line:2156:12 struct enable_if definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5cfb1f8 <line:2155:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5cfb678 <line:2156:5, col:12> col:12 implicit struct enable_if
| `-TypedefDecl 0x5cfb718 <line:2157:7, col:19> col:19 type '_Tp'
|   `-TemplateTypeParmType 0x5cfb240 '_Tp' dependent depth 0 index 0
|     `-TemplateTypeParm 0x5cfb1f8 '_Tp'
|-TypeAliasTemplateDecl 0x5cfbbc0 <line:2159:3, line:2160:67> col:5 _Require
| |-TemplateTypeParmDecl 0x5cfb788 <line:2159:12, col:24> col:24 referenced typename depth 0 index 0 ... _Cond
| `-TypeAliasDecl 0x5cfbb60 <line:2160:5, col:67> col:11 _Require 'typename enable_if<__and_<_Cond...>::value>::type'
|   `-DependentNameType 0x5cfbaf0 'typename enable_if<__and_<_Cond...>::value>::type' dependent
|-ClassTemplateDecl 0x5cfbe20 prev 0x5c29210 <line:2164:3, line:2166:29> line:2165:12 conditional
| |-NonTypeTemplateParmDecl 0x5cfbc28 <line:2164:12, col:17> col:17 'bool' depth 0 index 0 _Cond
| |-TemplateTypeParmDecl 0x5cfbc88 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| |-TemplateTypeParmDecl 0x5cfbcf8 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
| `-CXXRecordDecl 0x5cfbd90 prev 0x5c29180 <line:2165:5, line:2166:29> line:2165:12 struct conditional definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5cfbee0 <col:5, col:12> col:12 implicit struct conditional
|   `-TypedefDecl 0x5cfbf80 <line:2166:7, col:23> col:23 type '_Iftrue'
|     `-TemplateTypeParmType 0x5cfbcd0 '_Iftrue' dependent depth 0 index 1
|       `-TemplateTypeParm 0x5cfbc88 '_Iftrue'
|-ClassTemplatePartialSpecializationDecl 0x5cfc2c0 <line:2169:3, line:2171:30> line:2170:12 struct conditional definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 0
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5cfbff0 <line:2169:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
| |-TemplateTypeParmDecl 0x5cfc068 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
| |-CXXRecordDecl 0x5cfc5a8 <line:2170:5, col:12> col:12 implicit struct conditional
| `-TypedefDecl 0x5cfc648 <line:2171:7, col:24> col:24 type '_Iffalse'
|   `-TemplateTypeParmType 0x5cfc0b0 '_Iffalse' dependent depth 0 index 1
|     `-TemplateTypeParm 0x5cfc068 '_Iffalse'
|-ClassTemplateDecl 0x5cfc7d0 <line:2174:3, line:2175:12> col:12 common_type
| |-TemplateTypeParmDecl 0x5cfc6b8 <line:2174:12, col:24> col:24 typename depth 0 index 0 ... _Tp
| `-CXXRecordDecl 0x5cfc740 <line:2175:5, col:12> col:12 struct common_type
|-CXXRecordDecl 0x5cfca18 <line:2179:3, line:2188:3> line:2179:10 referenced struct __do_common_type_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5cfcb38 <col:3, col:10> col:10 implicit struct __do_common_type_impl
| |-FunctionTemplateDecl 0x5cfdf38 <line:2181:5, line:2184:51> col:40 _S_test
| | |-TemplateTypeParmDecl 0x5cfcbc8 <line:2181:14, col:23> col:23 referenced typename depth 0 index 0 _Tp
| | |-TemplateTypeParmDecl 0x5cfcc38 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Up
| | `-CXXMethodDecl 0x5cfde98 <line:2182:7, line:2184:51> col:40 _S_test '__success_type<typename decay<decltype(true ? std::declval<_Tp>() : std::declval<_Up>())>::type> (int)' static
| |   `-ParmVarDecl 0x5cfdd58 <col:48> col:51 'int'
| `-FunctionTemplateDecl 0x5cfe188 <line:2186:5, line:2187:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5cfdf98 <line:2186:14> col:14 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x5cfe008 <col:24> col:24 typename depth 0 index 1
|   `-CXXMethodDecl 0x5cfe0e8 <line:2187:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplateDecl 0x5cfe388 <line:2190:3, line:2195:5> line:2191:12 __common_type_impl
| |-TemplateTypeParmDecl 0x5cfe1f8 <line:2190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5cfe268 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5cfe2f8 <line:2191:5, line:2195:5> line:2191:12 struct __common_type_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-private 'std::__do_common_type_impl'
|   |-CXXRecordDecl 0x5cfe660 <col:5, col:12> col:12 implicit struct __common_type_impl
|   `-TypedefDecl 0x5cfe8a8 <line:2194:7, col:46> col:46 type 'decltype(_S_test<_Tp, _Up>(0))'
|     `-DecltypeType 0x5cfe870 'decltype(_S_test<_Tp, _Up>(0))' dependent
|       `-CallExpr 0x5cfe808 <col:24, col:43> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5cfe728 <col:24, col:40> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5cfdf38 0x5cfe188
|         `-IntegerLiteral 0x5cfe7e8 <col:42> 'int' 0
|-CXXRecordDecl 0x5cfe918 <line:2197:3, line:2204:3> line:2197:10 referenced struct __do_member_type_wrapper definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5cfea38 <col:3, col:10> col:10 implicit struct __do_member_type_wrapper
| |-FunctionTemplateDecl 0x5cfeec8 <line:2199:5, line:2200:60> col:49 _S_test
| | |-TemplateTypeParmDecl 0x5cfeac8 <line:2199:14, col:23> col:23 typename depth 0 index 0 _Tp
| | `-CXXMethodDecl 0x5cfee28 <line:2200:7, col:60> col:49 _S_test '__success_type<typename _Tp::type> (int)' static
| |   `-ParmVarDecl 0x5cfece8 <col:57> col:60 'int'
| `-FunctionTemplateDecl 0x5cff070 <line:2202:5, line:2203:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5cfef28 <line:2202:14> col:14 typename depth 0 index 0
|   `-CXXMethodDecl 0x5cfefd0 <line:2203:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplateDecl 0x5cff200 <line:2206:3, line:2211:5> line:2207:12 __member_type_wrapper
| |-TemplateTypeParmDecl 0x5cff0e0 <line:2206:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5cff170 <line:2207:5, line:2211:5> line:2207:12 struct __member_type_wrapper definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-private 'std::__do_member_type_wrapper'
|   |-CXXRecordDecl 0x5cff490 <col:5, col:12> col:12 implicit struct __member_type_wrapper
|   `-TypedefDecl 0x5cff698 <line:2210:7, col:41> col:41 type 'decltype(_S_test<_Tp>(0))'
|     `-DecltypeType 0x5cff660 'decltype(_S_test<_Tp>(0))' dependent
|       `-CallExpr 0x5cff5f8 <col:24, col:38> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5cff548 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5cfeec8 0x5cff070
|         `-IntegerLiteral 0x5cff5d8 <col:37> 'int' 0
|-ClassTemplateDecl 0x5cff898 <line:2213:3, line:2217:5> line:2214:12 __expanded_common_type_wrapper
| |-TemplateTypeParmDecl 0x5cff708 <line:2213:12, col:21> col:21 typename depth 0 index 0 _CTp
| |-TemplateTypeParmDecl 0x5cff778 <col:27, col:39> col:39 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5cff808 <line:2214:5, line:2217:5> line:2214:12 struct __expanded_common_type_wrapper definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d04010 <col:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
|   `-TypedefDecl 0x5d042e8 <line:2216:7, col:58> col:58 type 'common_type<typename _CTp::type, _Args...>'
|     `-TemplateSpecializationType 0x5d04200 'common_type<typename _CTp::type, _Args...>' dependent common_type
|       |-TemplateArgument type 'typename _CTp::type'
|       `-TemplateArgument type '_Args...'
|-ClassTemplatePartialSpecializationDecl 0x5d04598 <line:2219:3, line:2221:36> line:2220:12 struct __expanded_common_type_wrapper definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'std::__failure_type'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-0...'
| |-TemplateTypeParmDecl 0x5d04358 <line:2219:12, col:24> col:24 referenced typename depth 0 index 0 ... _Args
| |-CXXRecordDecl 0x5d04848 <line:2220:5, col:12> col:12 implicit struct __expanded_common_type_wrapper
| `-TypedefDecl 0x5d048e8 <line:2221:7, col:30> col:30 type 'std::__failure_type'
|   `-RecordType 0x5c32450 'std::__failure_type'
|     `-CXXRecord 0x5c323c0 '__failure_type'
|-ClassTemplatePartialSpecializationDecl 0x5d04ae0 <line:2223:3, line:2225:47> line:2224:12 struct common_type definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5d04958 <line:2223:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5d04d38 <line:2224:5, col:12> col:12 implicit struct common_type
| `-TypedefDecl 0x5d04ee0 <line:2225:7, col:41> col:41 type 'typename decay<_Tp>::type'
|   `-DependentNameType 0x5d04e70 'typename decay<_Tp>::type' dependent
|-ClassTemplatePartialSpecializationDecl 0x5d051d0 <line:2227:3, line:2230:7> line:2228:12 struct common_type definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__common_type_impl<_Tp, _Up>::type'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | `-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5d04f50 <line:2227:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d04fc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5d05670 <line:2228:5, col:12> col:12 implicit struct common_type
|-ClassTemplatePartialSpecializationDecl 0x5d05b10 <line:2232:3, line:2236:7> line:2233:12 struct common_type definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__expanded_common_type_wrapper<typename __member_type_wrapper<common_type<_Tp, _Up> >::type, _Vp...>::type'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-0'
| | |-TemplateArgument type 'type-parameter-0-1'
| | `-TemplateArgument type 'type-parameter-0-2...'
| |-TemplateTypeParmDecl 0x5d05718 <line:2232:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d05788 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| |-TemplateTypeParmDecl 0x5d057f8 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Vp
| `-CXXRecordDecl 0x5d063e0 <line:2233:5, col:12> col:12 implicit struct common_type
|-ClassTemplateDecl 0x5d065a0 <line:2239:3, line:2243:5> line:2240:12 underlying_type
| |-TemplateTypeParmDecl 0x5d06488 <line:2239:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d06510 <line:2240:5, line:2243:5> line:2240:12 struct underlying_type definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d067f0 <col:5, col:12> col:12 implicit struct underlying_type
|   `-TypedefDecl 0x5d06920 <line:2242:7, col:38> col:38 type '__underlying_type(_Tp)'
|     `-UnaryTransformType 0x5d068d0 '__underlying_type(_Tp)' dependent underlying_type
|       `-TemplateTypeParmType 0x5d064d0 '_Tp' dependent depth 0 index 0
|         `-TemplateTypeParm 0x5d06488 '_Tp'
|-ClassTemplateDecl 0x5d06ab0 <line:2245:3, line:2250:5> line:2246:12 __declval_protector
| |-TemplateTypeParmDecl 0x5d06990 <line:2245:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d06a20 <line:2246:5, line:2250:5> line:2246:12 struct __declval_protector definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d06d00 <col:5, col:12> col:12 implicit struct __declval_protector
|   |-VarDecl 0x5d06da0 <line:2248:7, col:34> col:25 __stop 'const bool' static cinit
|   | `-CXXBoolLiteralExpr 0x5d06e08 <col:34> 'bool' false
|   `-CXXMethodDecl 0x5d06fe8 <line:2249:7, col:66> col:55 __delegate 'typename add_rvalue_reference<_Tp>::type ()' static
|-FunctionTemplateDecl 0x5d07320 prev 0x5c6d2e0 <line:2252:3, line:2259:5> line:2254:5 declval
| |-TemplateTypeParmDecl 0x5d070a0 <line:2252:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d07280 prev 0x5c6d240 <line:2253:5, line:2259:5> line:2254:5 declval 'typename add_rvalue_reference<_Tp>::type () noexcept' inline
|   `-CompoundStmt 0x5d076b8 <line:2255:5, line:2259:5>
|     |-DeclStmt 0x5d07570 <line:2256:7, line:2257:37>
|     | `-StaticAssertDecl 0x5d07530 <line:2256:7, line:2257:36> line:2256:7
|     |   |-DependentScopeDeclRefExpr 0x5d07440 <col:21, col:47> '<dependent type>' lvalue
|     |   `-StringLiteral 0x5d074f8 <line:2257:7> 'const char [28]' lvalue "declval() must not be used!"
|     `-ReturnStmt 0x5d076a8 <line:2258:7, col:51>
|       `-CallExpr 0x5d07688 <col:14, col:51> '<dependent type>'
|         `-DependentScopeDeclRefExpr 0x5d07650 <col:14, col:40> '<dependent type>' lvalue
|-ClassTemplateDecl 0x5d077f0 <line:2262:3, line:2263:11> col:11 result_of
| |-TemplateTypeParmDecl 0x5d076d8 <line:2262:12, col:21> col:21 typename depth 0 index 0 _Signature
| `-CXXRecordDecl 0x5d07760 <line:2263:5, col:11> col:11 class result_of
|-CXXRecordDecl 0x5d079d8 <line:2269:3, col:32> col:10 referenced struct __invoke_memfun_ref definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5d07af8 <col:3, col:10> col:10 implicit struct __invoke_memfun_ref
|-CXXRecordDecl 0x5d07ba0 <line:2270:3, col:34> col:10 referenced struct __invoke_memfun_deref definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5d07cb8 <col:3, col:10> col:10 implicit struct __invoke_memfun_deref
|-CXXRecordDecl 0x5d07d60 <line:2271:3, col:32> col:10 referenced struct __invoke_memobj_ref definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5c51890 <col:3, col:10> col:10 implicit struct __invoke_memobj_ref
|-CXXRecordDecl 0x5c51938 <line:2272:3, col:34> col:10 referenced struct __invoke_memobj_deref definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5c51a58 <col:3, col:10> col:10 implicit struct __invoke_memobj_deref
|-CXXRecordDecl 0x5c51b00 <line:2273:3, col:27> col:10 referenced struct __invoke_other definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5c51c18 <col:3, col:10> col:10 implicit struct __invoke_other
|-ClassTemplateDecl 0x5c51e58 <line:2276:3, line:2278:35> line:2277:12 __result_of_success
| |-TemplateTypeParmDecl 0x5c51cc0 <line:2276:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5c51d38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tag
| `-CXXRecordDecl 0x5c51dc8 <line:2277:5, line:2278:35> line:2277:12 struct __result_of_success definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__success_type<_Tp>'
|   |-CXXRecordDecl 0x5c521a0 <col:5, col:12> col:12 implicit struct __result_of_success
|   `-TypeAliasDecl 0x5c52240 <line:2278:7, col:29> col:13 __invoke_type '_Tag'
|     `-TemplateTypeParmType 0x5c51d80 '_Tag' dependent depth 0 index 1
|       `-TemplateTypeParm 0x5c51d38 '_Tag'
|-CXXRecordDecl 0x5c522b8 <line:2281:3, line:2290:3> line:2281:10 referenced struct __result_of_memfun_ref_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c523d8 <col:3, col:10> col:10 implicit struct __result_of_memfun_ref_impl
| |-FunctionTemplateDecl 0x5c52cc0 <line:2283:5, line:2286:42> col:31 _S_test
| | |-TemplateTypeParmDecl 0x5c52468 <line:2283:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | |-TemplateTypeParmDecl 0x5c524d8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | |-TemplateTypeParmDecl 0x5c52548 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | `-CXXMethodDecl 0x5c52c20 <line:2284:7, line:2286:42> col:31 _S_test '__result_of_success<decltype((std::declval<_Tp1>() .* std::declval<_Fp>())(std::declval<_Args>()...)), std::__invoke_memfun_ref> (int)' static
| |   `-ParmVarDecl 0x5c52ac8 <col:39> col:42 'int'
| `-FunctionTemplateDecl 0x5c52e70 <line:2288:5, line:2289:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5c52d20 <line:2288:14> col:14 typename depth 0 index 0 ...
|   `-CXXMethodDecl 0x5c52dd0 <line:2289:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplateDecl 0x5c530f0 <line:2292:3, line:2297:5> line:2293:12 __result_of_memfun_ref
| |-TemplateTypeParmDecl 0x5c52ee0 <line:2292:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5c52f58 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| |-TemplateTypeParmDecl 0x5c52fc8 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| `-CXXRecordDecl 0x5c53060 <line:2293:5, line:2297:5> line:2293:12 struct __result_of_memfun_ref definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-private 'std::__result_of_memfun_ref_impl'
|   |-CXXRecordDecl 0x5c53440 <col:5, col:12> col:12 implicit struct __result_of_memfun_ref
|   `-TypedefDecl 0x5c536d8 <line:2296:7, col:61> col:61 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
|     `-DecltypeType 0x5c536a0 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
|       `-CallExpr 0x5c53638 <col:24, col:58> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c53528 <col:24, col:55> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5c52cc0 0x5c52e70
|         `-IntegerLiteral 0x5c53618 <col:57> 'int' 0
|-CXXRecordDecl 0x5c53748 <line:2300:3, line:2309:3> line:2300:10 referenced struct __result_of_memfun_deref_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c53b60 <col:3, col:10> col:10 implicit struct __result_of_memfun_deref_impl
| |-FunctionTemplateDecl 0x5c54460 <line:2302:5, line:2305:44> col:33 _S_test
| | |-TemplateTypeParmDecl 0x5c53bf0 <line:2302:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | |-TemplateTypeParmDecl 0x5c53c68 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | |-TemplateTypeParmDecl 0x5c53cd8 <col:43, col:55> col:55 referenced typename depth 0 index 2 ... _Args
| | `-CXXMethodDecl 0x5c543c0 <line:2303:7, line:2305:44> col:33 _S_test '__result_of_success<decltype(((*std::declval<_Tp1>()) .* std::declval<_Fp>())(std::declval<_Args>()...)), std::__invoke_memfun_deref> (int)' static
| |   `-ParmVarDecl 0x5c54268 <col:41> col:44 'int'
| `-FunctionTemplateDecl 0x5c54610 <line:2307:5, line:2308:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5c544c0 <line:2307:14> col:14 typename depth 0 index 0 ...
|   `-CXXMethodDecl 0x5c54570 <line:2308:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplateDecl 0x5c54890 <line:2311:3, line:2316:5> line:2312:12 __result_of_memfun_deref
| |-TemplateTypeParmDecl 0x5c54680 <line:2311:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5c546f8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| |-TemplateTypeParmDecl 0x5c54768 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| `-CXXRecordDecl 0x5c54800 <line:2312:5, line:2316:5> line:2312:12 struct __result_of_memfun_deref definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-private 'std::__result_of_memfun_deref_impl'
|   |-CXXRecordDecl 0x5c54be0 <col:5, col:12> col:12 implicit struct __result_of_memfun_deref
|   `-TypedefDecl 0x5c54e38 <line:2315:7, col:61> col:61 type 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))'
|     `-DecltypeType 0x5c54e00 'decltype(_S_test<_MemPtr, _Arg, _Args...>(0))' dependent
|       `-CallExpr 0x5c54dd8 <col:24, col:58> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5c54cc8 <col:24, col:55> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5c54460 0x5c54610
|         `-IntegerLiteral 0x5c54db8 <col:57> 'int' 0
|-CXXRecordDecl 0x5c54ea8 <line:2319:3, line:2328:3> line:2319:10 referenced struct __result_of_memobj_ref_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5c54fc8 <col:3, col:10> col:10 implicit struct __result_of_memobj_ref_impl
| |-FunctionTemplateDecl 0x5c556d0 <line:2321:5, line:2324:42> col:31 _S_test
| | |-TemplateTypeParmDecl 0x5c55058 <line:2321:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | |-TemplateTypeParmDecl 0x5c550c8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | `-CXXMethodDecl 0x5c55630 <line:2322:7, line:2324:42> col:31 _S_test '__result_of_success<decltype(std::declval<_Tp1>() .* std::declval<_Fp>()), std::__invoke_memobj_ref> (int)' static
| |   `-ParmVarDecl 0x5c554d8 <col:39> col:42 'int'
| `-FunctionTemplateDecl 0x5c558f8 <line:2326:5, line:2327:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5c55730 <line:2326:14> col:14 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x5c557a8 <col:24> col:24 typename depth 0 index 1
|   `-CXXMethodDecl 0x5c55858 <line:2327:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplateDecl 0x5c55af8 <line:2330:3, line:2335:5> line:2331:12 __result_of_memobj_ref
| |-TemplateTypeParmDecl 0x5c55968 <line:2330:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5c559d8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5c55a68 <line:2331:5, line:2335:5> line:2331:12 struct __result_of_memobj_ref definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-private 'std::__result_of_memobj_ref_impl'
|   |-CXXRecordDecl 0x5d18160 <col:5, col:12> col:12 implicit struct __result_of_memobj_ref
|   `-TypedefDecl 0x5d18368 <line:2334:7, col:51> col:51 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
|     `-DecltypeType 0x5d18330 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
|       `-CallExpr 0x5d18308 <col:24, col:48> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d18228 <col:24, col:45> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5c556d0 0x5c558f8
|         `-IntegerLiteral 0x5d182e8 <col:47> 'int' 0
|-CXXRecordDecl 0x5d183d8 <line:2338:3, line:2347:3> line:2338:10 referenced struct __result_of_memobj_deref_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5d184f8 <col:3, col:10> col:10 implicit struct __result_of_memobj_deref_impl
| |-FunctionTemplateDecl 0x5d18c30 <line:2340:5, line:2343:44> col:33 _S_test
| | |-TemplateTypeParmDecl 0x5d18588 <line:2340:14, col:23> col:23 referenced typename depth 0 index 0 _Fp
| | |-TemplateTypeParmDecl 0x5d185f8 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp1
| | `-CXXMethodDecl 0x5d18b90 <line:2341:7, line:2343:44> col:33 _S_test '__result_of_success<decltype((*std::declval<_Tp1>()) .* std::declval<_Fp>()), std::__invoke_memobj_deref> (int)' static
| |   `-ParmVarDecl 0x5d18a38 <col:41> col:44 'int'
| `-FunctionTemplateDecl 0x5d18e58 <line:2345:5, line:2346:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5d18c90 <line:2345:14> col:14 typename depth 0 index 0
|   |-TemplateTypeParmDecl 0x5d18d08 <col:24> col:24 typename depth 0 index 1
|   `-CXXMethodDecl 0x5d18db8 <line:2346:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplateDecl 0x5d19058 <line:2349:3, line:2354:5> line:2350:12 __result_of_memobj_deref
| |-TemplateTypeParmDecl 0x5d18ec8 <line:2349:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5d18f38 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5d18fc8 <line:2350:5, line:2354:5> line:2350:12 struct __result_of_memobj_deref definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-private 'std::__result_of_memobj_deref_impl'
|   |-CXXRecordDecl 0x5d19330 <col:5, col:12> col:12 implicit struct __result_of_memobj_deref
|   `-TypedefDecl 0x5d19538 <line:2353:7, col:51> col:51 type 'decltype(_S_test<_MemPtr, _Arg>(0))'
|     `-DecltypeType 0x5d19500 'decltype(_S_test<_MemPtr, _Arg>(0))' dependent
|       `-CallExpr 0x5d194d8 <col:24, col:48> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d193f8 <col:24, col:45> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5d18c30 0x5d18e58
|         `-IntegerLiteral 0x5d194b8 <col:47> 'int' 0
|-ClassTemplateDecl 0x5d19738 <line:2356:3, line:2357:12> col:12 __result_of_memobj
| |-TemplateTypeParmDecl 0x5d195a8 <line:2356:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5d19618 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5d196a8 <line:2357:5, col:12> col:12 struct __result_of_memobj
|-ClassTemplatePartialSpecializationDecl 0x5d19ca8 <line:2359:3, line:2370:5> line:2360:12 struct __result_of_memobj definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |-TemplateArgument type 'type-parameter-0-2'
| |-TemplateTypeParmDecl 0x5d19968 <line:2359:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5d199d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| |-TemplateTypeParmDecl 0x5d19a48 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| |-CXXRecordDecl 0x5d19f58 <line:2360:5, col:12> col:12 implicit struct __result_of_memobj
| |-TypedefDecl 0x5d1a320 <line:2362:7, line:2363:28> col:28 referenced _Argval 'typename remove_cv<typename remove_reference<_Arg>::type>::type'
| | `-DependentNameType 0x5d1a2b0 'typename remove_cv<typename remove_reference<_Arg>::type>::type' dependent
| |-TypedefDecl 0x5d1a3c0 <line:2364:7, col:30> col:30 referenced _MemPtr '_Res _Class::*'
| | `-MemberPointerType 0x5d19b00 '_Res _Class::*' dependent
| |   |-TemplateTypeParmType 0x5d19a20 '_Class' dependent depth 0 index 1
| |   | `-TemplateTypeParm 0x5d199d8 '_Class'
| |   `-TemplateTypeParmType 0x5d199b0 '_Res' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5d19968 '_Res'
| `-TypedefDecl 0x5d1ae50 <line:2365:7, line:2369:21> col:21 type 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg> >::type::type'
|   `-DependentNameType 0x5d1ade0 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memobj_ref<_MemPtr, _Arg>, __result_of_memobj_deref<_MemPtr, _Arg> >::type::type' dependent
|-ClassTemplateDecl 0x5d1b0d0 <line:2372:3, line:2373:12> col:12 __result_of_memfun
| |-TemplateTypeParmDecl 0x5d1aec0 <line:2372:12, col:21> col:21 typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5d1af38 <col:30, col:39> col:39 typename depth 0 index 1 _Arg
| |-TemplateTypeParmDecl 0x5d1afa8 <col:45, col:57> col:57 typename depth 0 index 2 ... _Args
| `-CXXRecordDecl 0x5d1b040 <line:2373:5, col:12> col:12 struct __result_of_memfun
|-ClassTemplatePartialSpecializationDecl 0x5d1b810 <line:2375:3, line:2386:5> line:2376:12 struct __result_of_memfun definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 type-parameter-0-1::*'
| |-TemplateArgument type 'type-parameter-0-2'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-3...'
| |-TemplateTypeParmDecl 0x5d1b378 <line:2375:12, col:21> col:21 referenced typename depth 0 index 0 _Res
| |-TemplateTypeParmDecl 0x5d1b3e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Class
| |-TemplateTypeParmDecl 0x5d1b458 <col:44, col:53> col:53 referenced typename depth 0 index 2 _Arg
| |-TemplateTypeParmDecl 0x5d1b4c8 <col:59, col:71> col:71 referenced typename depth 0 index 3 ... _Args
| |-CXXRecordDecl 0x5d1bb28 <line:2376:5, col:12> col:12 implicit struct __result_of_memfun
| |-TypedefDecl 0x5d1bdd0 <line:2378:7, line:2379:28> col:28 referenced _Argval 'typename remove_cv<typename remove_reference<_Arg>::type>::type'
| | `-DependentNameType 0x5d1bd60 'typename remove_cv<typename remove_reference<_Arg>::type>::type' dependent
| |-TypedefDecl 0x5d1be70 <line:2380:7, col:30> col:30 referenced _MemPtr '_Res _Class::*'
| | `-MemberPointerType 0x5d1b590 '_Res _Class::*' dependent
| |   |-TemplateTypeParmType 0x5d1b430 '_Class' dependent depth 0 index 1
| |   | `-TemplateTypeParm 0x5d1b3e8 '_Class'
| |   `-TemplateTypeParmType 0x5d1b3c0 '_Res' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5d1b378 '_Res'
| `-TypedefDecl 0x5d1e590 <line:2381:7, line:2385:21> col:21 type 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...> >::type::type'
|   `-DependentNameType 0x5d1e520 'typename conditional<__or_<is_same<_Argval, _Class>, is_base_of<_Class, _Argval> >::value, __result_of_memfun_ref<_MemPtr, _Arg, _Args...>, __result_of_memfun_deref<_MemPtr, _Arg, _Args...> >::type::type' dependent
|-ClassTemplateDecl 0x5d1e8b8 <line:2393:3, line:2397:5> line:2394:12 __inv_unwrap
| |-TemplateTypeParmDecl 0x5d1e600 <line:2393:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d1e790 <col:26, col:62> col:35 typename depth 0 index 1 _Up
| | `-TemplateArgument type 'typename decay<_Tp>::type'
| `-CXXRecordDecl 0x5d1e828 <line:2394:5, line:2397:5> line:2394:12 struct __inv_unwrap definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d1eb50 <col:5, col:12> col:12 implicit struct __inv_unwrap
|   `-TypeAliasDecl 0x5d1ebf0 <line:2396:7, col:20> col:13 type '_Tp'
|     `-TemplateTypeParmType 0x5d1e650 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5d1e600 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5d1ef98 <line:2399:3, line:2403:5> line:2400:12 struct __inv_unwrap definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'reference_wrapper<type-parameter-0-1>'
| |-TemplateTypeParmDecl 0x5d1ec68 <line:2399:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d1ecd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| |-CXXRecordDecl 0x5d1f248 <line:2400:5, col:12> col:12 implicit struct __inv_unwrap
| `-TypeAliasDecl 0x5d1f348 <line:2402:7, col:23> col:13 type '_Up &'
|   `-LValueReferenceType 0x5d1f310 '_Up &' dependent
|     `-TemplateTypeParmType 0x5d1ed20 '_Up' dependent depth 0 index 1
|       `-TemplateTypeParm 0x5d1ecd8 '_Up'
|-ClassTemplateDecl 0x5d1f648 <line:2405:3, line:2409:5> line:2406:12 __result_of_impl
| |-NonTypeTemplateParmDecl 0x5d1f3d0 <line:2405:12> col:16 'bool' depth 0 index 0
| |-NonTypeTemplateParmDecl 0x5d1f440 <col:18> col:22 'bool' depth 0 index 1
| |-TemplateTypeParmDecl 0x5d1f4a0 <col:24, col:33> col:33 typename depth 0 index 2 _Functor
| |-TemplateTypeParmDecl 0x5d1f518 <col:43, col:55> col:55 typename depth 0 index 3 ... _ArgTypes
| `-CXXRecordDecl 0x5d1f5b8 <line:2406:5, line:2409:5> line:2406:12 struct __result_of_impl definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d1f9e0 <col:5, col:12> col:12 implicit struct __result_of_impl
|   `-TypedefDecl 0x5d1fa80 <line:2408:7, col:30> col:30 type 'std::__failure_type'
|     `-RecordType 0x5c32450 'std::__failure_type'
|       `-CXXRecord 0x5c323c0 '__failure_type'
|-ClassTemplatePartialSpecializationDecl 0x5d206e8 <line:2411:3, line:2415:7> line:2412:12 struct __result_of_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__result_of_memobj<typename decay<_MemPtr>::type, typename __inv_unwrap<_Arg>::type>'
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5d1faf0 <line:2411:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5d203c8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| `-CXXRecordDecl 0x5d21030 <line:2412:5, col:12> col:12 implicit struct __result_of_impl
|-ClassTemplatePartialSpecializationDecl 0x5d21588 <line:2417:3, line:2421:7> line:2418:12 struct __result_of_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__result_of_memfun<typename decay<_MemPtr>::type, typename __inv_unwrap<_Arg>::type, _Args...>'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 1
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| | |-TemplateArgument type 'type-parameter-0-1'
| | `-TemplateArgument type 'type-parameter-0-2...'
| |-TemplateTypeParmDecl 0x5d210d8 <line:2417:12, col:21> col:21 referenced typename depth 0 index 0 _MemPtr
| |-TemplateTypeParmDecl 0x5d21148 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Arg
| |-TemplateTypeParmDecl 0x5d211b8 <col:45, col:57> col:57 referenced typename depth 0 index 2 ... _Args
| `-CXXRecordDecl 0x5d21e70 <line:2418:5, col:12> col:12 implicit struct __result_of_impl
|-CXXRecordDecl 0x5d21f18 <line:2424:3, line:2433:3> line:2424:10 referenced struct __result_of_other_impl definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5d22038 <col:3, col:10> col:10 implicit struct __result_of_other_impl
| |-FunctionTemplateDecl 0x5d22950 <line:2426:5, line:2429:37> col:26 _S_test
| | |-TemplateTypeParmDecl 0x5d220c8 <line:2426:14, col:23> col:23 referenced typename depth 0 index 0 _Fn
| | |-TemplateTypeParmDecl 0x5d22138 <col:28, col:40> col:40 referenced typename depth 0 index 1 ... _Args
| | `-CXXMethodDecl 0x5d228b0 <line:2427:7, line:2429:37> col:26 _S_test '__result_of_success<decltype(std::declval<_Fn>()(std::declval<_Args>()...)), std::__invoke_other> (int)' static
| |   `-ParmVarDecl 0x5d22758 <col:34> col:37 'int'
| `-FunctionTemplateDecl 0x5d22b00 <line:2431:5, line:2432:40> col:29 _S_test
|   |-TemplateTypeParmDecl 0x5d229b0 <line:2431:14> col:14 typename depth 0 index 0 ...
|   `-CXXMethodDecl 0x5d22a60 <line:2432:7, col:40> col:29 _S_test 'std::__failure_type (...)' static
|-ClassTemplatePartialSpecializationDecl 0x5d22f48 <line:2435:3, line:2440:5> line:2436:12 struct __result_of_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-private 'std::__result_of_other_impl'
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-1...'
| |-TemplateTypeParmDecl 0x5d22b70 <line:2435:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| |-TemplateTypeParmDecl 0x5d22be8 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| |-CXXRecordDecl 0x5d23318 <line:2436:5, col:12> col:12 implicit struct __result_of_impl
| `-TypedefDecl 0x5d23578 <line:2439:7, col:60> col:60 type 'decltype(_S_test<_Functor, _ArgTypes...>(0))'
|   `-DecltypeType 0x5d23540 'decltype(_S_test<_Functor, _ArgTypes...>(0))' dependent
|     `-CallExpr 0x5d234d0 <col:24, col:57> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5d233f0 <col:24, col:54> '<dependent type>' lvalue (no ADL) = '_S_test' 0x5d22950 0x5d22b00
|       `-IntegerLiteral 0x5d234b0 <col:56> 'int' 0
|-ClassTemplateDecl 0x5d23778 <line:2443:3, line:2454:7> line:2444:12 __invoke_result
| |-TemplateTypeParmDecl 0x5d235e8 <line:2443:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| |-TemplateTypeParmDecl 0x5d23658 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5d236e8 <line:2444:5, line:2454:7> line:2444:12 struct __invoke_result definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__result_of_impl<is_member_object_pointer<typename remove_reference<_Functor>::type>::value, is_member_function_pointer<typename remove_reference<_Functor>::type>::value, _Functor, _ArgTypes...>::type'
|   `-CXXRecordDecl 0x5d24240 <col:5, col:12> col:12 implicit struct __invoke_result
|-ClassTemplatePartialSpecializationDecl 0x5d25a00 <line:2456:3, line:2459:7> line:2457:12 struct result_of definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__invoke_result<_Functor, _ArgTypes...>'
| |-TemplateArgument type 'type-parameter-0-0 (type-parameter-0-1...)'
| |-TemplateTypeParmDecl 0x5d242e8 <line:2456:12, col:21> col:21 referenced typename depth 0 index 0 _Functor
| |-TemplateTypeParmDecl 0x5d24358 <col:31, col:43> col:43 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5d25d70 <line:2457:5, col:12> col:12 implicit struct result_of
|-TypeAliasTemplateDecl 0x5d26280 <line:2463:3, line:2465:71> col:5 aligned_storage_t
| |-NonTypeTemplateParmDecl 0x5d25e28 <line:2463:12, col:19> col:19 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| |-NonTypeTemplateParmDecl 0x5d25fe0 <col:25, line:2464:62> line:2463:32 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Align
| | `-TemplateArgument expr
| |   `-UnaryExprOrTypeTraitExpr 0x5d25fb0 <line:2464:6, col:62> 'unsigned long' __alignof 'typename __aligned_storage_msa<_Len>::__type'
| `-TypeAliasDecl 0x5d26220 <line:2465:5, col:71> col:11 aligned_storage_t 'typename aligned_storage<_Len, _Align>::type'
|   `-DependentNameType 0x5d261b0 'typename aligned_storage<_Len, _Align>::type' dependent
|-TypeAliasTemplateDecl 0x5d26660 <line:2467:3, line:2468:70> col:5 aligned_union_t
| |-NonTypeTemplateParmDecl 0x5d262e8 <line:2467:13, col:20> col:20 referenced 'std::size_t':'unsigned long' depth 0 index 0 _Len
| |-TemplateTypeParmDecl 0x5d26348 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Types
| `-TypeAliasDecl 0x5d26600 <line:2468:5, col:70> col:11 aligned_union_t 'typename aligned_union<_Len, _Types...>::type'
|   `-DependentNameType 0x5d26590 'typename aligned_union<_Len, _Types...>::type' dependent
|-TypeAliasTemplateDecl 0x5d268b0 <line:2471:3, line:2472:42> col:5 decay_t
| |-TemplateTypeParmDecl 0x5d266b8 <line:2471:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5d26850 <line:2472:5, col:42> col:11 decay_t 'typename decay<_Tp>::type'
|   `-DependentNameType 0x5d267e0 'typename decay<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5d26c30 <line:2475:3, line:2476:57> col:5 enable_if_t
| |-NonTypeTemplateParmDecl 0x5d26918 <line:2475:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| |-TemplateTypeParmDecl 0x5d26988 <col:24, col:39> col:33 referenced typename depth 0 index 1 _Tp
| | `-TemplateArgument type 'void'
| `-TypeAliasDecl 0x5d26bd0 <line:2476:5, col:57> col:11 enable_if_t 'typename enable_if<_Cond, _Tp>::type'
|   `-DependentNameType 0x5d26b60 'typename enable_if<_Cond, _Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5d27050 <line:2479:3, line:2480:75> col:5 conditional_t
| |-NonTypeTemplateParmDecl 0x5d26c98 <line:2479:12, col:17> col:17 referenced 'bool' depth 0 index 0 _Cond
| |-TemplateTypeParmDecl 0x5d26cf8 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
| |-TemplateTypeParmDecl 0x5d26d68 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Iffalse
| `-TypeAliasDecl 0x5d26ff0 <line:2480:5, col:75> col:11 conditional_t 'typename conditional<_Cond, _Iftrue, _Iffalse>::type'
|   `-DependentNameType 0x5d26f80 'typename conditional<_Cond, _Iftrue, _Iffalse>::type' dependent
|-TypeAliasTemplateDecl 0x5d27360 <line:2483:3, line:2484:57> col:5 common_type_t
| |-TemplateTypeParmDecl 0x5d270a8 <line:2483:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tp
| `-TypeAliasDecl 0x5d27300 <line:2484:5, col:57> col:11 common_type_t 'typename common_type<_Tp...>::type'
|   `-DependentNameType 0x5d27290 'typename common_type<_Tp...>::type' dependent
|-TypeAliasTemplateDecl 0x5d27600 <line:2487:3, line:2488:62> col:5 underlying_type_t
| |-TemplateTypeParmDecl 0x5d273b8 <line:2487:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5d275a0 <line:2488:5, col:62> col:11 underlying_type_t 'typename underlying_type<_Tp>::type'
|   `-DependentNameType 0x5d27530 'typename underlying_type<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5d278a0 <line:2491:3, line:2492:50> col:5 result_of_t
| |-TemplateTypeParmDecl 0x5d27658 <line:2491:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5d27840 <line:2492:5, col:50> col:11 result_of_t 'typename result_of<_Tp>::type'
|   `-DependentNameType 0x5d277d0 'typename result_of<_Tp>::type' dependent
|-TypeAliasTemplateDecl 0x5d28a40 <line:2495:3, col:42> col:25 __void_t
| |-TemplateTypeParmDecl 0x5d278f8 <col:12> col:12 typename depth 0 index 0 ...
| `-TypeAliasDecl 0x5d289e0 <col:25, col:42> col:31 __void_t 'void'
|   `-BuiltinType 0x5aca260 'void'
|-TypeAliasTemplateDecl 0x5d28b90 <line:2500:3, col:40> col:25 void_t
| |-TemplateTypeParmDecl 0x5d28a98 <col:12> col:12 typename depth 0 index 0 ...
| `-TypeAliasDecl 0x5d28b30 <col:25, col:40> col:31 void_t 'void'
|   `-BuiltinType 0x5aca260 'void'
|-ClassTemplateDecl 0x5d28f08 <line:2504:3, line:2510:5> line:2506:12 __detector
| |-TemplateTypeParmDecl 0x5d28be8 <line:2504:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| |-TemplateTypeParmDecl 0x5d28c58 <col:31, col:40> col:40 typename depth 0 index 1 _AlwaysVoid
| |-TemplateTemplateParmDecl 0x5d28d80 <line:2505:5, col:33> col:33 depth 0 index 2 _Op
| | `-TemplateTypeParmDecl 0x5d28cc8 <col:14> col:14 typename depth 1 index 0 ...
| |-TemplateTypeParmDecl 0x5d28dd8 <col:38, col:50> col:50 typename depth 0 index 3 ... _Args
| `-CXXRecordDecl 0x5d28e78 <line:2506:5, line:2510:5> line:2506:12 struct __detector definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d29350 <col:5, col:12> col:12 implicit struct __detector
|   |-TypeAliasDecl 0x5d293f0 <line:2508:7, col:23> col:13 value_t 'std::false_type':'std::integral_constant<bool, false>'
|   | `-TypedefType 0x5c2a8e0 'std::false_type' sugar
|   |   |-Typedef 0x5c28cc8 'false_type'
|   |   `-TemplateSpecializationType 0x5c28be0 'integral_constant<bool, false>' sugar integral_constant
|   |     |-TemplateArgument type 'bool'
|   |     |-TemplateArgument expr
|   |     | `-ConstantExpr 0x5c28ab0 <line:90:35> 'bool'
|   |     |   `-CXXBoolLiteralExpr 0x5c28a80 <col:35> 'bool' false
|   |     `-RecordType 0x5c28bc0 'std::integral_constant<bool, false>'
|   |       `-ClassTemplateSpecialization 0x5c28ac8 'integral_constant'
|   `-TypeAliasDecl 0x5d29460 <line:2509:7, col:20> col:13 type '_Default'
|     `-TemplateTypeParmType 0x5d28c30 '_Default' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5d28be8 '_Default'
|-ClassTemplatePartialSpecializationDecl 0x5d29ca8 <line:2513:3, line:2519:5> line:2515:12 struct __detector definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'void'
| |-TemplateArgument template _Op
| |-TemplateArgument pack
| | `-TemplateArgument type 'type-parameter-0-2...'
| |-TemplateTypeParmDecl 0x5d294d8 <line:2513:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| |-TemplateTemplateParmDecl 0x5d295d0 <col:31, col:59> col:59 depth 0 index 1 _Op
| | `-TemplateTypeParmDecl 0x5d29548 <col:40> col:40 typename depth 1 index 0 ...
| |-TemplateTypeParmDecl 0x5d29628 <line:2514:6, col:18> col:18 referenced typename depth 0 index 2 ... _Args
| |-CXXRecordDecl 0x5d2a088 <line:2515:5, col:12> col:12 implicit struct __detector
| |-TypeAliasDecl 0x5d2a128 <line:2517:7, col:23> col:13 value_t 'std::true_type':'std::integral_constant<bool, true>'
| | `-TypedefType 0x5c2da20 'std::true_type' sugar
| |   |-Typedef 0x5c28a18 'true_type'
| |   `-TemplateSpecializationType 0x5c28930 'integral_constant<bool, true>' sugar integral_constant
| |     |-TemplateArgument type 'bool'
| |     |-TemplateArgument expr
| |     | `-ConstantExpr 0x5c287f8 <line:87:35> 'bool'
| |     |   `-CXXBoolLiteralExpr 0x5c287a0 <col:35> 'bool' true
| |     `-RecordType 0x5c28910 'std::integral_constant<bool, true>'
| |       `-ClassTemplateSpecialization 0x5c28810 'integral_constant'
| `-TypeAliasDecl 0x5d2a280 <line:2518:7, col:32> col:13 type '_Op<_Args...>'
|   `-TemplateSpecializationType 0x5d2a1e0 '_Op<_Args...>' dependent _Op
|     `-TemplateArgument type '_Args...'
|-TypeAliasTemplateDecl 0x5d2a7d8 <line:2522:3, line:2524:67> col:5 __detected_or
| |-TemplateTypeParmDecl 0x5d2a2f8 <line:2522:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| |-TemplateTemplateParmDecl 0x5d2a3f0 <col:31, col:59> col:59 depth 0 index 1 _Op
| | `-TemplateTypeParmDecl 0x5d2a368 <col:40> col:40 typename depth 1 index 0 ...
| |-TemplateTypeParmDecl 0x5d2a448 <line:2523:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| `-TypeAliasDecl 0x5d2a778 <line:2524:5, col:67> col:11 __detected_or '__detector<_Default, void, _Op, _Args...>'
|   `-TemplateSpecializationType 0x5d2a600 '__detector<_Default, void, _Op, _Args...>' dependent __detector
|     |-TemplateArgument type '_Default'
|     |-TemplateArgument type 'void'
|     |-TemplateArgument template _Op
|     `-TemplateArgument type '_Args...'
|-TypeAliasTemplateDecl 0x5d2b8b0 <line:2527:3, line:2530:58> line:2529:5 __detected_or_t
| |-TemplateTypeParmDecl 0x5d2a830 <line:2527:12, col:21> col:21 referenced typename depth 0 index 0 _Default
| |-TemplateTemplateParmDecl 0x5d2a930 <col:31, col:59> col:59 depth 0 index 1 _Op
| | `-TemplateTypeParmDecl 0x5d2a8a8 <col:40> col:40 typename depth 1 index 0 ...
| |-TemplateTypeParmDecl 0x5d2a988 <line:2528:5, col:17> col:17 referenced typename depth 0 index 2 ... _Args
| `-TypeAliasDecl 0x5d2b850 <line:2529:5, line:2530:58> line:2529:11 __detected_or_t 'typename __detected_or<_Default, _Op, _Args...>::type'
|   `-DependentNameType 0x5d2b7e0 'typename __detected_or<_Default, _Op, _Args...>::type' dependent
|-ClassTemplateDecl 0x5d2ba20 <line:2548:3, line:2549:12> col:12 __is_swappable
| |-TemplateTypeParmDecl 0x5d2b908 <line:2548:13, col:22> col:22 typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d2b990 <line:2549:5, col:12> col:12 struct __is_swappable
|-ClassTemplateDecl 0x5d2bd20 <line:2551:3, line:2552:12> col:12 __is_nothrow_swappable
| |-TemplateTypeParmDecl 0x5d2bc08 <line:2551:13, col:22> col:22 typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d2bc90 <line:2552:5, col:12> col:12 struct __is_nothrow_swappable
|-ClassTemplateDecl 0x5d2c020 <line:2554:3, line:2555:11> col:11 tuple
| |-TemplateTypeParmDecl 0x5d2bf08 <line:2554:12, col:24> col:24 typename depth 0 index 0 ... _Elements
| `-CXXRecordDecl 0x5d2bf90 <line:2555:5, col:11> col:11 class tuple
|-ClassTemplateDecl 0x5d2c380 <line:2557:3, line:2559:7> line:2558:12 __is_tuple_like_impl
| |-TemplateTypeParmDecl 0x5d2c268 <line:2557:12> col:12 typename depth 0 index 0
| `-CXXRecordDecl 0x5d2c2f0 <line:2558:5, line:2559:7> line:2558:12 struct __is_tuple_like_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5d2c610 <col:5, col:12> col:12 implicit struct __is_tuple_like_impl
|-ClassTemplatePartialSpecializationDecl 0x5d2c920 <line:2561:3, line:2563:7> line:2562:12 struct __is_tuple_like_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::true_type':'std::integral_constant<bool, true>'
| |-TemplateArgument type 'tuple<type-parameter-0-0...>'
| |-TemplateTypeParmDecl 0x5d2c6b8 <line:2561:12, col:24> col:24 referenced typename depth 0 index 0 ... _Tps
| `-CXXRecordDecl 0x5d2cba8 <line:2562:5, col:12> col:12 implicit struct __is_tuple_like_impl
|-ClassTemplateDecl 0x5d2cd70 <line:2566:3, line:2570:7> line:2567:12 __is_tuple_like
| |-TemplateTypeParmDecl 0x5d2cc50 <line:2566:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d2cce0 <line:2567:5, line:2570:7> line:2567:12 struct __is_tuple_like definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_tuple_like_impl<typename remove_cv<typename remove_reference<_Tp>::type>::type>::type'
|   `-CXXRecordDecl 0x5d2e840 <col:5, col:12> col:12 implicit struct __is_tuple_like
|-FunctionTemplateDecl 0x5d2f5f8 <line:2572:3, line:2579:53> line:2577:5 swap
| |-TemplateTypeParmDecl 0x5d2e8e8 <line:2572:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d2f558 <line:2573:5, line:2579:53> line:2577:5 swap 'typename enable_if<__and_<__not_<__is_tuple_like<_Tp> >, is_move_constructible<_Tp>, is_move_assignable<_Tp> >::value>::type (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp> >::value)' inline
|   |-ParmVarDecl 0x5d2f078 <col:10, col:13> col:14 '_Tp &'
|   `-ParmVarDecl 0x5d2f0f0 <col:16, col:19> col:20 '_Tp &'
|-FunctionTemplateDecl 0x5d2ff78 <line:2581:3, line:2585:48> line:2584:5 swap
| |-TemplateTypeParmDecl 0x5d2f660 <line:2581:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-NonTypeTemplateParmDecl 0x5d2f6e8 <col:26, col:33> col:33 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Nm
| `-FunctionDecl 0x5d2fed8 <line:2582:5, line:2585:48> line:2584:5 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
|   |-ParmVarDecl 0x5d2fb48 <col:10, col:24> col:16 __a '_Tp (&)[_Nm]'
|   `-ParmVarDecl 0x5d2fc98 <col:27, col:41> col:33 __b '_Tp (&)[_Nm]'
|-NamespaceDecl 0x5d2ffe0 <line:2587:3, line:2611:3> line:2587:13 __swappable_details
| |-UsingDecl 0x5d30058 <line:2588:5, col:16> col:16 std::swap
| |-UsingShadowDecl 0x5d300b0 <col:16> col:16 implicit FunctionTemplate 0x5d2f5f8 'swap'
| |-UsingShadowDecl 0x5d30100 <col:16> col:16 implicit FunctionTemplate 0x5d2ff78 'swap'
| |-CXXRecordDecl 0x5d30150 <line:2590:5, line:2598:5> line:2590:12 referenced struct __do_is_swappable_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5d30268 <col:5, col:12> col:12 implicit struct __do_is_swappable_impl
| | |-FunctionTemplateDecl 0x5d30860 <line:2592:7, line:2594:36> col:26 __test
| | | |-TemplateTypeParmDecl 0x5d302f8 <line:2592:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5d30648 <col:30, line:2593:18> line:2592:30 typename depth 0 index 1
| | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))'
| | | `-CXXMethodDecl 0x5d307c0 <line:2594:9, col:36> col:26 __test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0x5d30708 <col:33> col:36 'int'
| | `-FunctionTemplateDecl 0x5d30a10 <line:2596:7, line:2597:37> col:27 __test
| |   |-TemplateTypeParmDecl 0x5d308c0 <line:2596:16> col:16 typename depth 0 index 0
| |   `-CXXMethodDecl 0x5d30970 <line:2597:9, col:37> col:27 __test 'std::false_type (...)' static
| `-CXXRecordDecl 0x5d30a80 <line:2600:5, line:2609:5> line:2600:12 referenced struct __do_is_nothrow_swappable_impl definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d30b98 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_impl
|   |-FunctionTemplateDecl 0x5d31338 <line:2602:7, line:2605:21> col:11 __test
|   | |-TemplateTypeParmDecl 0x5d30c28 <line:2602:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
|   | `-CXXMethodDecl 0x5d31298 <line:2603:9, line:2605:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp &>(), std::declval<_Tp &>()))> (int)' static
|   |   `-ParmVarDecl 0x5d31150 <col:18> col:21 'int'
|   `-FunctionTemplateDecl 0x5d314e0 <line:2607:7, line:2608:37> col:27 __test
|     |-TemplateTypeParmDecl 0x5d31398 <line:2607:16> col:16 typename depth 0 index 0
|     `-CXXMethodDecl 0x5d31440 <line:2608:9, col:37> col:27 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5d31670 <line:2613:3, line:2618:5> line:2614:12 __is_swappable_impl
| |-TemplateTypeParmDecl 0x5d31550 <line:2613:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d315e0 <line:2614:5, line:2618:5> line:2614:12 struct __is_swappable_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
|   |-CXXRecordDecl 0x5d31988 <col:5, col:12> col:12 implicit struct __is_swappable_impl
|   `-TypedefDecl 0x5d31b58 <line:2617:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
|     `-DecltypeType 0x5d31b20 'decltype(__test<_Tp>(0))' dependent
|       `-CallExpr 0x5d31af0 <col:24, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d31a40 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x5d30860 0x5d30a10
|         `-IntegerLiteral 0x5d31ad0 <col:36> 'int' 0
|-ClassTemplateDecl 0x5d31ce0 <line:2620:3, line:2625:5> line:2621:12 __is_nothrow_swappable_impl
| |-TemplateTypeParmDecl 0x5d31bc8 <line:2620:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d31c50 <line:2621:5, line:2625:5> line:2621:12 struct __is_nothrow_swappable_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
|   |-CXXRecordDecl 0x5d31fd8 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_impl
|   `-TypedefDecl 0x5d321a8 <line:2624:7, col:40> col:40 type 'decltype(__test<_Tp>(0))'
|     `-DecltypeType 0x5d32170 'decltype(__test<_Tp>(0))' dependent
|       `-CallExpr 0x5d32140 <col:24, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d32090 <col:24, col:34> '<dependent type>' lvalue (no ADL) = '__test' 0x5d31338 0x5d314e0
|         `-IntegerLiteral 0x5d32120 <col:36> 'int' 0
|-ClassTemplateDecl 0x5d32330 prev 0x5d2ba20 <line:2627:3, line:2630:7> line:2628:12 __is_swappable
| |-TemplateTypeParmDecl 0x5d32218 <line:2627:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d322a0 prev 0x5d2b990 <line:2628:5, line:2630:7> line:2628:12 struct __is_swappable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_swappable_impl<_Tp>::type'
|   `-CXXRecordDecl 0x5d32580 <col:5, col:12> col:12 implicit struct __is_swappable
|-ClassTemplateDecl 0x5d334c0 prev 0x5d2bd20 <line:2632:3, line:2635:7> line:2633:12 __is_nothrow_swappable
| |-TemplateTypeParmDecl 0x5d32628 <line:2632:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d33430 prev 0x5d2bc90 <line:2633:5, line:2635:7> line:2633:12 struct __is_nothrow_swappable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nothrow_swappable_impl<_Tp>::type'
|   `-CXXRecordDecl 0x5d33710 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable
|-ClassTemplateDecl 0x5d338d0 <line:2642:3, line:2645:7> line:2643:12 is_swappable
| |-TemplateTypeParmDecl 0x5d337b8 <line:2642:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d33840 <line:2643:5, line:2645:7> line:2643:12 struct is_swappable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_swappable_impl<_Tp>::type'
|   `-CXXRecordDecl 0x5d33c60 <col:5, col:12> col:12 implicit struct is_swappable
|-ClassTemplateDecl 0x5d33e20 <line:2648:3, line:2651:7> line:2649:12 is_nothrow_swappable
| |-TemplateTypeParmDecl 0x5d33d08 <line:2648:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d33d90 <line:2649:5, line:2651:7> line:2649:12 struct is_nothrow_swappable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nothrow_swappable_impl<_Tp>::type'
|   `-CXXRecordDecl 0x5d341b0 <col:5, col:12> col:12 implicit struct is_nothrow_swappable
|-VarTemplateDecl 0x5d34358 <line:2655:3, line:2657:26> line:2656:38 is_swappable_v
| |-TemplateTypeParmDecl 0x5d34258 <line:2655:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-VarDecl 0x5d342f0 <line:2656:23, line:2657:26> line:2656:38 is_swappable_v 'const bool' constexpr cinit
|   `-DependentScopeDeclRefExpr 0x5d34470 <line:2657:7, col:26> '<dependent type>' lvalue
|-VarTemplateDecl 0x5d345a8 <line:2660:3, line:2662:34> line:2661:38 is_nothrow_swappable_v
| |-TemplateTypeParmDecl 0x5d344a8 <line:2660:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-VarDecl 0x5d34540 <line:2661:23, line:2662:34> line:2661:38 is_nothrow_swappable_v 'const bool' constexpr cinit
|   `-DependentScopeDeclRefExpr 0x5d346c0 <line:2662:7, col:34> '<dependent type>' lvalue
|-NamespaceDecl 0x5d346f8 <line:2665:3, line:2693:3> line:2665:13 __swappable_with_details
| |-UsingDecl 0x5d34770 <line:2666:5, col:16> col:16 std::swap
| |-UsingShadowDecl 0x5d347c8 <col:16> col:16 implicit FunctionTemplate 0x5d2f5f8 'swap'
| |-UsingShadowDecl 0x5d34818 <col:16> col:16 implicit FunctionTemplate 0x5d2ff78 'swap'
| |-CXXRecordDecl 0x5d34868 <line:2668:5, line:2678:5> line:2668:12 referenced struct __do_is_swappable_with_impl definition
| | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5d34988 <col:5, col:12> col:12 implicit struct __do_is_swappable_with_impl
| | |-FunctionTemplateDecl 0x5d35310 <line:2670:7, line:2674:36> col:26 __test
| | | |-TemplateTypeParmDecl 0x5d34a18 <line:2670:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
| | | |-TemplateTypeParmDecl 0x5d34a88 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
| | | |-TemplateTypeParmDecl 0x5d34da8 <col:44, line:2671:18> line:2670:44 typename depth 0 index 2
| | | | `-TemplateArgument type 'decltype(swap(std::declval<_Tp>(), std::declval<_Up>()))'
| | | |-TemplateTypeParmDecl 0x5d350c8 <line:2672:16, line:2673:18> line:2672:16 typename depth 0 index 3
| | | | `-TemplateArgument type 'decltype(swap(std::declval<_Up>(), std::declval<_Tp>()))'
| | | `-CXXMethodDecl 0x5d35270 <line:2674:9, col:36> col:26 __test 'std::true_type (int)' static
| | |   `-ParmVarDecl 0x5d351b0 <col:33> col:36 'int'
| | `-FunctionTemplateDecl 0x5d36108 <line:2676:7, line:2677:37> col:27 __test
| |   |-TemplateTypeParmDecl 0x5d35370 <line:2676:16> col:16 typename depth 0 index 0
| |   |-TemplateTypeParmDecl 0x5d353e8 <col:26> col:26 typename depth 0 index 1
| |   `-CXXMethodDecl 0x5d36068 <line:2677:9, col:37> col:27 __test 'std::false_type (...)' static
| `-CXXRecordDecl 0x5d36178 <line:2680:5, line:2691:5> line:2680:12 referenced struct __do_is_nothrow_swappable_with_impl definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d36298 <col:5, col:12> col:12 implicit struct __do_is_nothrow_swappable_with_impl
|   |-FunctionTemplateDecl 0x5d36cf8 <line:2682:7, line:2687:21> col:11 __test
|   | |-TemplateTypeParmDecl 0x5d36328 <line:2682:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x5d36398 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
|   | `-CXXMethodDecl 0x5d36c58 <line:2683:9, line:2687:21> col:11 __test '__bool_constant<noexcept(swap(std::declval<_Tp>(), std::declval<_Up>())) && noexcept(swap(std::declval<_Up>(), std::declval<_Tp>()))> (int)' static
|   |   `-ParmVarDecl 0x5d36b10 <col:18> col:21 'int'
|   `-FunctionTemplateDecl 0x5d36f18 <line:2689:7, line:2690:37> col:27 __test
|     |-TemplateTypeParmDecl 0x5d36d58 <line:2689:16> col:16 typename depth 0 index 0
|     |-TemplateTypeParmDecl 0x5d36dc8 <col:26> col:26 typename depth 0 index 1
|     `-CXXMethodDecl 0x5d36e78 <line:2690:9, col:37> col:27 __test 'std::false_type (...)' static
|-ClassTemplateDecl 0x5d37118 <line:2695:3, line:2700:5> line:2696:12 __is_swappable_with_impl
| |-TemplateTypeParmDecl 0x5d36f88 <line:2695:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d36ff8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5d37088 <line:2696:5, line:2700:5> line:2696:12 struct __is_swappable_with_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__swappable_with_details::__do_is_swappable_with_impl':'std::__swappable_with_details::__do_is_swappable_with_impl'
|   |-CXXRecordDecl 0x5d37478 <col:5, col:12> col:12 implicit struct __is_swappable_with_impl
|   `-TypedefDecl 0x5d37688 <line:2699:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
|     `-DecltypeType 0x5d37650 'decltype(__test<_Tp, _Up>(0))' dependent
|       `-CallExpr 0x5d37620 <col:24, col:42> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d37540 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5d35310 0x5d36108
|         `-IntegerLiteral 0x5d37600 <col:41> 'int' 0
|-ClassTemplatePartialSpecializationDecl 0x5d378f8 <line:2703:3, line:2708:5> line:2704:12 struct __is_swappable_with_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__swappable_details::__do_is_swappable_impl':'std::__swappable_details::__do_is_swappable_impl'
| |-TemplateArgument type 'type-parameter-0-0 &'
| |-TemplateArgument type 'type-parameter-0-0 &'
| |-TemplateTypeParmDecl 0x5d376f8 <line:2703:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5d37bf0 <line:2704:5, col:12> col:12 implicit struct __is_swappable_with_impl
| `-TypedefDecl 0x5d37df8 <line:2707:7, col:41> col:41 type 'decltype(__test<_Tp &>(0))'
|   `-DecltypeType 0x5d37dc0 'decltype(__test<_Tp &>(0))' dependent
|     `-CallExpr 0x5d37d58 <col:24, col:38> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5d37ca8 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '__test' 0x5d30860 0x5d30a10
|       `-IntegerLiteral 0x5d37d38 <col:37> 'int' 0
|-ClassTemplateDecl 0x5d398c0 <line:2710:3, line:2715:5> line:2711:12 __is_nothrow_swappable_with_impl
| |-TemplateTypeParmDecl 0x5d37e68 <line:2710:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d37ed8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5d37f68 <line:2711:5, line:2715:5> line:2711:12 struct __is_nothrow_swappable_with_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__swappable_with_details::__do_is_nothrow_swappable_with_impl':'std::__swappable_with_details::__do_is_nothrow_swappable_with_impl'
|   |-CXXRecordDecl 0x5d39bf8 <col:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
|   `-TypedefDecl 0x5d39e08 <line:2714:7, col:45> col:45 type 'decltype(__test<_Tp, _Up>(0))'
|     `-DecltypeType 0x5d39dd0 'decltype(__test<_Tp, _Up>(0))' dependent
|       `-CallExpr 0x5d39da0 <col:24, col:42> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d39cc0 <col:24, col:39> '<dependent type>' lvalue (no ADL) = '__test' 0x5d36cf8 0x5d36f18
|         `-IntegerLiteral 0x5d39d80 <col:41> 'int' 0
|-ClassTemplatePartialSpecializationDecl 0x5d3a078 <line:2718:3, line:2723:5> line:2719:12 struct __is_nothrow_swappable_with_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__swappable_details::__do_is_nothrow_swappable_impl':'std::__swappable_details::__do_is_nothrow_swappable_impl'
| |-TemplateArgument type 'type-parameter-0-0 &'
| |-TemplateArgument type 'type-parameter-0-0 &'
| |-TemplateTypeParmDecl 0x5d39e78 <line:2718:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5d3a370 <line:2719:5, col:12> col:12 implicit struct __is_nothrow_swappable_with_impl
| `-TypedefDecl 0x5d3a538 <line:2722:7, col:41> col:41 type 'decltype(__test<_Tp &>(0))'
|   `-DecltypeType 0x5d3a500 'decltype(__test<_Tp &>(0))' dependent
|     `-CallExpr 0x5d3a4d8 <col:24, col:38> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5d3a428 <col:24, col:35> '<dependent type>' lvalue (no ADL) = '__test' 0x5d31338 0x5d314e0
|       `-IntegerLiteral 0x5d3a4b8 <col:37> 'int' 0
|-ClassTemplateDecl 0x5d3a738 <line:2726:3, line:2729:7> line:2727:12 is_swappable_with
| |-TemplateTypeParmDecl 0x5d3a5a8 <line:2726:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d3a618 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5d3a6a8 <line:2727:5, line:2729:7> line:2727:12 struct is_swappable_with definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_swappable_with_impl<_Tp, _Up>::type'
|   `-CXXRecordDecl 0x5d3aba0 <col:5, col:12> col:12 implicit struct is_swappable_with
|-ClassTemplateDecl 0x5d3add8 <line:2732:3, line:2735:7> line:2733:12 is_nothrow_swappable_with
| |-TemplateTypeParmDecl 0x5d3ac48 <line:2732:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d3acb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5d3ad48 <line:2733:5, line:2735:7> line:2733:12 struct is_nothrow_swappable_with definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_nothrow_swappable_with_impl<_Tp, _Up>::type'
|   `-CXXRecordDecl 0x5d3b240 <col:5, col:12> col:12 implicit struct is_nothrow_swappable_with
|-VarTemplateDecl 0x5d3b460 <line:2739:3, line:2741:36> line:2740:38 is_swappable_with_v
| |-TemplateTypeParmDecl 0x5d3b2e8 <line:2739:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d3b358 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-VarDecl 0x5d3b3f8 <line:2740:23, line:2741:36> line:2740:38 is_swappable_with_v 'const bool' constexpr cinit
|   `-DependentScopeDeclRefExpr 0x5d3b5c0 <line:2741:7, col:36> '<dependent type>' lvalue
|-VarTemplateDecl 0x5d3b770 <line:2744:3, line:2746:44> line:2745:38 is_nothrow_swappable_with_v
| |-TemplateTypeParmDecl 0x5d3b5f8 <line:2744:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5d3b668 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-VarDecl 0x5d3b708 <line:2745:23, line:2746:44> line:2745:38 is_nothrow_swappable_with_v 'const bool' constexpr cinit
|   `-DependentScopeDeclRefExpr 0x5d3d708 <line:2746:7, col:44> '<dependent type>' lvalue
|-ClassTemplateDecl 0x5d3d960 <line:2753:3, line:2754:47> col:12 __is_invocable_impl
| |-TemplateTypeParmDecl 0x5d3d740 <line:2753:12, col:21> col:21 typename depth 0 index 0 _Result
| |-TemplateTypeParmDecl 0x5d3d7b8 <col:30, col:39> col:39 typename depth 0 index 1 _Ret
| |-TemplateTypeParmDecl 0x5d3d838 <col:45, col:56> col:45 typename depth 0 index 2
| | `-TemplateArgument type 'void'
| `-CXXRecordDecl 0x5d3d8d0 <line:2754:5, col:47> col:12 struct __is_invocable_impl definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'std::false_type':'std::integral_constant<bool, false>'
|   `-CXXRecordDecl 0x5d3dc50 <col:5, col:12> col:12 implicit struct __is_invocable_impl
|-ClassTemplatePartialSpecializationDecl 0x5d3e110 <line:2756:3, line:2759:7> line:2757:12 struct __is_invocable_impl definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__or_<is_void<_Ret>, is_convertible<typename _Result::type, _Ret> >::type'
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateArgument type 'void'
| |-TemplateTypeParmDecl 0x5d3dcf8 <line:2756:12, col:21> col:21 referenced typename depth 0 index 0 _Result
| |-TemplateTypeParmDecl 0x5d3dd68 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Ret
| `-CXXRecordDecl 0x5d3e8b0 <line:2757:5, col:12> col:12 implicit struct __is_invocable_impl
|-ClassTemplateDecl 0x5d3eae8 <line:2761:3, line:2764:7> line:2762:12 __is_invocable
| |-TemplateTypeParmDecl 0x5d3e958 <line:2761:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d3e9c8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _ArgTypes
| `-CXXRecordDecl 0x5d3ea58 <line:2762:5, line:2764:7> line:2762:12 struct __is_invocable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__is_invocable_impl<__invoke_result<_Fn, _ArgTypes...>, void>::type'
|   `-CXXRecordDecl 0x5d3f160 <col:5, col:12> col:12 implicit struct __is_invocable
|-FunctionTemplateDecl 0x5d3f4f8 <line:2766:3, line:2772:5> line:2767:20 __call_is_nt
| |-TemplateTypeParmDecl 0x5d3f208 <line:2766:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d3f278 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| |-TemplateTypeParmDecl 0x5d3f2e8 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| `-FunctionDecl 0x5d3f458 <line:2767:5, line:2772:5> line:2767:20 constexpr __call_is_nt 'bool (std::__invoke_memfun_ref)'
|   |-ParmVarDecl 0x5d3f390 <col:33> col:52 'std::__invoke_memfun_ref'
|   `-CompoundStmt 0x5d40de0 <line:2768:5, line:2772:5>
|     |-DeclStmt 0x5d40a50 <line:2769:7, col:51>
|     | `-TypeAliasDecl 0x5d409f0 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
|     |   `-DependentNameType 0x5d40980 'typename __inv_unwrap<_Tp>::type' dependent
|     `-ReturnStmt 0x5d40dd0 <line:2770:7, line:2771:31>
|       `-CXXNoexceptExpr 0x5d40db0 <line:2770:14, line:2771:31> 'bool'
|         `-CallExpr 0x5d40d88 <line:2770:23, line:2771:30> '<dependent type>'
|           |-ParenExpr 0x5d40c70 <line:2770:23, col:64> '<dependent type>'
|           | `-BinaryOperator 0x5d40c50 <col:24, col:63> '<dependent type>' '.*'
|           |   |-CallExpr 0x5d40b58 <col:24, col:42> '<dependent type>'
|           |   | `-UnresolvedLookupExpr 0x5d40ad0 <col:24, col:40> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           |   `-CallExpr 0x5d40c30 <col:45, col:63> '<dependent type>'
|           |     `-UnresolvedLookupExpr 0x5d40ba8 <col:45, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           `-PackExpansionExpr 0x5d40d68 <line:2771:6, col:27> '<dependent type>'
|             `-CallExpr 0x5d40d48 <col:6, col:26> '<dependent type>'
|               `-UnresolvedLookupExpr 0x5d40cc0 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|-FunctionTemplateDecl 0x5d410f8 <line:2774:3, line:2779:5> line:2775:20 __call_is_nt
| |-TemplateTypeParmDecl 0x5d40e00 <line:2774:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d40e78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| |-TemplateTypeParmDecl 0x5d40ee8 <col:40, col:52> col:52 referenced typename depth 0 index 2 ... _Args
| `-FunctionDecl 0x5d41058 <line:2775:5, line:2779:5> line:2775:20 constexpr __call_is_nt 'bool (std::__invoke_memfun_deref)'
|   |-ParmVarDecl 0x5d40f90 <col:33> col:54 'std::__invoke_memfun_deref'
|   `-CompoundStmt 0x5d414d0 <line:2776:5, line:2779:5>
|     `-ReturnStmt 0x5d414c0 <line:2777:7, line:2778:31>
|       `-CXXNoexceptExpr 0x5d414a0 <line:2777:14, line:2778:31> 'bool'
|         `-CallExpr 0x5d41478 <line:2777:23, line:2778:30> '<dependent type>'
|           |-ParenExpr 0x5d41360 <line:2777:23, col:67> '<dependent type>'
|           | `-BinaryOperator 0x5d41340 <col:24, col:66> '<dependent type>' '.*'
|           |   |-ParenExpr 0x5d41248 <col:24, col:45> '<dependent type>'
|           |   | `-UnaryOperator 0x5d41230 <col:25, col:44> '<dependent type>' prefix '*' cannot overflow
|           |   |   `-CallExpr 0x5d41210 <col:26, col:44> '<dependent type>'
|           |   |     `-UnresolvedLookupExpr 0x5d41188 <col:26, col:42> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           |   `-CallExpr 0x5d41320 <col:48, col:66> '<dependent type>'
|           |     `-UnresolvedLookupExpr 0x5d41298 <col:48, col:64> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           `-PackExpansionExpr 0x5d41458 <line:2778:6, col:27> '<dependent type>'
|             `-CallExpr 0x5d41438 <col:6, col:26> '<dependent type>'
|               `-UnresolvedLookupExpr 0x5d413b0 <col:6, col:24> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|-FunctionTemplateDecl 0x5d41758 <line:2781:3, line:2786:5> line:2782:20 __call_is_nt
| |-TemplateTypeParmDecl 0x5d414e8 <line:2781:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d41558 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5d416b8 <line:2782:5, line:2786:5> line:2782:20 constexpr __call_is_nt 'bool (std::__invoke_memobj_ref)'
|   |-ParmVarDecl 0x5d415f8 <col:33> col:52 'std::__invoke_memobj_ref'
|   `-CompoundStmt 0x5d41c70 <line:2783:5, line:2786:5>
|     |-DeclStmt 0x5d41a30 <line:2784:7, col:51>
|     | `-TypeAliasDecl 0x5d419d0 <col:7, col:47> col:13 referenced _Up 'typename __inv_unwrap<_Tp>::type'
|     |   `-DependentNameType 0x5d41960 'typename __inv_unwrap<_Tp>::type' dependent
|     `-ReturnStmt 0x5d41c60 <line:2785:7, col:63>
|       `-CXXNoexceptExpr 0x5d41c40 <col:14, col:63> 'bool'
|         `-BinaryOperator 0x5d41c20 <col:23, col:62> '<dependent type>' '.*'
|           |-CallExpr 0x5d41b28 <col:23, col:41> '<dependent type>'
|           | `-UnresolvedLookupExpr 0x5d41aa0 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           `-CallExpr 0x5d41c00 <col:44, col:62> '<dependent type>'
|             `-UnresolvedLookupExpr 0x5d41b78 <col:44, col:60> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|-FunctionTemplateDecl 0x5d41f08 <line:2788:3, line:2792:5> line:2789:20 __call_is_nt
| |-TemplateTypeParmDecl 0x5d41c90 <line:2788:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d41d08 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5d41e68 <line:2789:5, line:2792:5> line:2789:20 constexpr __call_is_nt 'bool (std::__invoke_memobj_deref)'
|   |-ParmVarDecl 0x5d41da8 <col:33> col:54 'std::__invoke_memobj_deref'
|   `-CompoundStmt 0x5d421a0 <line:2790:5, line:2792:5>
|     `-ReturnStmt 0x5d42190 <line:2791:7, col:66>
|       `-CXXNoexceptExpr 0x5d42170 <col:14, col:66> 'bool'
|         `-BinaryOperator 0x5d42150 <col:23, col:65> '<dependent type>' '.*'
|           |-ParenExpr 0x5d42058 <col:23, col:44> '<dependent type>'
|           | `-UnaryOperator 0x5d42040 <col:24, col:43> '<dependent type>' prefix '*' cannot overflow
|           |   `-CallExpr 0x5d42020 <col:25, col:43> '<dependent type>'
|           |     `-UnresolvedLookupExpr 0x5d41f98 <col:25, col:41> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           `-CallExpr 0x5d42130 <col:47, col:65> '<dependent type>'
|             `-UnresolvedLookupExpr 0x5d420a8 <col:47, col:63> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|-FunctionTemplateDecl 0x5d42428 <line:2794:3, line:2798:5> line:2795:20 __call_is_nt
| |-TemplateTypeParmDecl 0x5d421b8 <line:2794:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d42228 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-FunctionDecl 0x5d42388 <line:2795:5, line:2798:5> line:2795:20 constexpr __call_is_nt 'bool (std::__invoke_other)'
|   |-ParmVarDecl 0x5d422c8 <col:33> col:47 'std::__invoke_other'
|   `-CompoundStmt 0x5d426b0 <line:2796:5, line:2798:5>
|     `-ReturnStmt 0x5d426a0 <line:2797:7, col:68>
|       `-CXXNoexceptExpr 0x5d42680 <col:14, col:68> 'bool'
|         `-CallExpr 0x5d42658 <col:23, col:67> '<dependent type>'
|           |-CallExpr 0x5d42540 <col:23, col:41> '<dependent type>'
|           | `-UnresolvedLookupExpr 0x5d424b8 <col:23, col:39> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|           `-PackExpansionExpr 0x5d42638 <col:43, col:64> '<dependent type>'
|             `-CallExpr 0x5d42618 <col:43, col:63> '<dependent type>'
|               `-UnresolvedLookupExpr 0x5d42590 <col:43, col:61> '<dependent type>' lvalue (no ADL) = 'declval' 0x5d07320
|-ClassTemplateDecl 0x5d428d0 <line:2800:3, line:2805:7> line:2801:12 __call_is_nothrow
| |-TemplateTypeParmDecl 0x5d426c8 <line:2800:12, col:21> col:21 typename depth 0 index 0 _Result
| |-TemplateTypeParmDecl 0x5d42738 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Fn
| |-TemplateTypeParmDecl 0x5d427a8 <col:44, col:56> col:56 referenced typename depth 0 index 2 ... _Args
| `-CXXRecordDecl 0x5d42840 <line:2801:5, line:2805:7> line:2801:12 struct __call_is_nothrow definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__bool_constant<std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type({}))>':'integral_constant<bool, std::__call_is_nt<_Fn, _Args...>(typename _Result::__invoke_type({}))>'
|   `-CXXRecordDecl 0x5d43158 <col:5, col:12> col:12 implicit struct __call_is_nothrow
|-TypeAliasTemplateDecl 0x5d436f0 <line:2807:3, line:2809:72> line:2808:5 __call_is_nothrow_
| |-TemplateTypeParmDecl 0x5d43200 <line:2807:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d43278 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-TypeAliasDecl 0x5d43690 <line:2808:5, line:2809:72> line:2808:11 __call_is_nothrow_ '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>'
|   `-TemplateSpecializationType 0x5d43560 '__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>' dependent __call_is_nothrow
|     |-TemplateArgument type '__invoke_result<_Fn, _Args...>'
|     |-TemplateArgument type '_Fn'
|     `-TemplateArgument type '_Args...'
|-ClassTemplateDecl 0x5d438d8 <line:2812:3, line:2816:7> line:2813:12 __is_nothrow_invocable
| |-TemplateTypeParmDecl 0x5d43748 <line:2812:12, col:21> col:21 referenced typename depth 0 index 0 _Fn
| |-TemplateTypeParmDecl 0x5d437b8 <col:26, col:38> col:38 referenced typename depth 0 index 1 ... _Args
| `-CXXRecordDecl 0x5d43848 <line:2813:5, line:2816:7> line:2813:12 struct __is_nothrow_invocable definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<__is_invocable<_Fn, _Args...>, __call_is_nothrow_<_Fn, _Args...> >::type'
|   `-CXXRecordDecl 0x5d44470 <col:5, col:12> col:12 implicit struct __is_nothrow_invocable
`-CXXRecordDecl 0x5d44518 <line:2818:3, line:2823:3> line:2818:10 struct __nonesuch definition
  |-DefinitionData empty aggregate standard_layout trivially_copyable trivial literal has_user_declared_ctor can_const_default_init
  | |-DefaultConstructor exists trivial defaulted_is_constexpr
  | |-CopyConstructor trivial user_declared has_const_param implicit_has_const_param
  | |-MoveConstructor
  | |-CopyAssignment trivial has_const_param user_declared implicit_has_const_param
  | |-MoveAssignment
  | `-Destructor trivial user_declared
  |-CXXRecordDecl 0x5d44638 <col:3, col:10> col:10 implicit referenced struct __nonesuch
  |-CXXConstructorDecl 0x5d44730 <line:2819:5, col:25> col:5 __nonesuch 'void ()' delete trivial
  |-CXXDestructorDecl 0x5d44820 <line:2820:5, col:26> col:5 ~__nonesuch 'void ()' delete trivial noexcept-unevaluated 0x5d44820
  |-CXXConstructorDecl 0x5d45508 <line:2821:5, col:42> col:5 __nonesuch 'void (const std::__nonesuch &)' delete trivial
  | `-ParmVarDecl 0x5d45440 <col:16, col:32> col:33 'const std::__nonesuch &'
  `-CXXMethodDecl 0x5d45658 <line:2822:5, col:46> col:10 operator= 'void (const std::__nonesuch &)' delete trivial
    `-ParmVarDecl 0x5d455c8 <col:20, col:36> col:37 'const std::__nonesuch &'
NamespaceDecl 0x5d47320 prev 0x5c27850 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/move.h:56:1, line:157:1> line:56:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5d47390 <col:31, col:56> Default
|-FunctionTemplateDecl 0x5d4ff40 <line:71:3, line:74:39> line:73:5 forward
| |-TemplateTypeParmDecl 0x5d473d0 <line:71:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d4fea0 <line:72:5, line:74:39> line:73:5 constexpr forward '_Tp &&(typename std::remove_reference<_Tp>::type &) noexcept'
|   |-ParmVarDecl 0x5d4fd70 <col:13, col:56> col:56 referenced __t 'typename std::remove_reference<_Tp>::type &'
|   `-CompoundStmt 0x5d50010 <line:74:5, col:39>
|     `-ReturnStmt 0x5d50000 <col:7, col:36>
|       `-CXXStaticCastExpr 0x5d4ffd0 <col:14, col:36> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|         `-DeclRefExpr 0x5d4ffa0 <col:33> 'typename std::remove_reference<_Tp>::type' lvalue ParmVar 0x5d4fd70 '__t' 'typename std::remove_reference<_Tp>::type &'
|-FunctionTemplateDecl 0x5d50400 <line:82:3, line:89:5> line:84:5 forward
| |-TemplateTypeParmDecl 0x5d50028 <line:82:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d50360 <line:83:5, line:89:5> line:84:5 constexpr forward '_Tp &&(typename std::remove_reference<_Tp>::type &&) noexcept'
|   |-ParmVarDecl 0x5d50230 <col:13, col:57> col:57 referenced __t 'typename std::remove_reference<_Tp>::type &&'
|   `-CompoundStmt 0x5d50740 <line:85:5, line:89:5>
|     |-DeclStmt 0x5d506b8 <line:86:7, line:87:55>
|     | `-StaticAssertDecl 0x5d50678 <line:86:7, line:87:54> line:86:7
|     |   |-UnaryOperator 0x5d50588 <col:21, col:53> '<dependent type>' prefix '!' cannot overflow
|     |   | `-DependentScopeDeclRefExpr 0x5d50550 <col:22, col:53> '<dependent type>' lvalue
|     |   `-StringLiteral 0x5d50618 <col:60, line:87:7> 'const char [63]' lvalue "template argument substituting _Tp is an lvalue reference type"
|     `-ReturnStmt 0x5d50730 <line:88:7, col:36>
|       `-CXXStaticCastExpr 0x5d50700 <col:14, col:36> '_Tp' xvalue static_cast<_Tp &&> <Dependent>
|         `-DeclRefExpr 0x5d506d0 <col:33> 'typename std::remove_reference<_Tp>::type' lvalue ParmVar 0x5d50230 '__t' 'typename std::remove_reference<_Tp>::type &&'
|-FunctionTemplateDecl 0x5d50b08 <line:96:3, line:99:77> line:98:5 move
| |-TemplateTypeParmDecl 0x5d50760 <line:96:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d50a68 <line:97:5, line:99:77> line:98:5 constexpr move 'typename std::remove_reference<_Tp>::type &&(_Tp &&) noexcept'
|   |-ParmVarDecl 0x5d50928 <col:10, col:16> col:16 referenced __t '_Tp &&'
|   `-CompoundStmt 0x5d50d20 <line:99:5, col:77>
|     `-ReturnStmt 0x5d50d10 <col:7, col:74>
|       `-CXXStaticCastExpr 0x5d50ce0 <col:14, col:74> 'typename std::remove_reference<_Tp>::type' xvalue static_cast<typename std::remove_reference<_Tp>::type &&> <Dependent>
|         `-DeclRefExpr 0x5d50c70 <col:71> '_Tp' lvalue ParmVar 0x5d50928 '__t' '_Tp &&'
|-ClassTemplateDecl 0x5d50e50 <line:102:3, line:105:57> line:103:12 __move_if_noexcept_cond
| |-TemplateTypeParmDecl 0x5d50d38 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5d50dc0 <line:103:5, line:105:57> line:103:12 struct __move_if_noexcept_cond definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__and_<__not_<is_nothrow_move_constructible<_Tp> >, is_copy_constructible<_Tp> >::type'
|   `-CXXRecordDecl 0x5d51530 <col:5, col:12> col:12 implicit struct __move_if_noexcept_cond
|-FunctionTemplateDecl 0x5d52050 <line:115:3, line:119:30> line:118:5 move_if_noexcept
| |-TemplateTypeParmDecl 0x5d515d8 <line:115:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d51fb0 <line:116:5, line:119:30> line:118:5 constexpr move_if_noexcept 'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp &, _Tp &&>::type (_Tp &) noexcept'
|   |-ParmVarDecl 0x5d51a38 <col:22, col:27> col:27 referenced __x '_Tp &'
|   `-CompoundStmt 0x5d52170 <line:119:5, col:30>
|     `-ReturnStmt 0x5d52160 <col:7, col:27>
|       `-CallExpr 0x5d52138 <col:14, col:27> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d520d0 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|         `-DeclRefExpr 0x5d52118 <col:24> '_Tp' lvalue ParmVar 0x5d51a38 '__x' '_Tp &'
|-FunctionTemplateDecl 0x5d523e0 <line:135:3, line:138:37> line:137:5 addressof
| |-TemplateTypeParmDecl 0x5d52188 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d52340 <line:136:5, line:138:37> line:137:5 addressof '_Tp *(_Tp &) noexcept' inline
|   |-ParmVarDecl 0x5d52248 <col:15, col:20> col:20 referenced __r '_Tp &'
|   `-CompoundStmt 0x5d52500 <line:138:5, col:37>
|     `-ReturnStmt 0x5d524f0 <col:7, col:34>
|       `-CallExpr 0x5d524c8 <col:14, col:34> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d52460 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x5c27320
|         `-DeclRefExpr 0x5d524a8 <col:31> '_Tp' lvalue ParmVar 0x5d52248 '__r' '_Tp &'
|-FunctionTemplateDecl 0x5d527f8 <line:142:3, line:143:37> col:16 addressof
| |-TemplateTypeParmDecl 0x5d52518 <line:142:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d52758 <line:143:5, col:37> col:16 addressof 'const _Tp *(const _Tp &&)' delete
|   `-ParmVarDecl 0x5d52608 <col:26, col:35> col:37 'const _Tp &&'
`-FunctionTemplateDecl 0x5d52c28 <line:146:3, line:153:5> line:148:5 __exchange
  |-TemplateTypeParmDecl 0x5d52858 <line:146:13, col:22> col:22 referenced typename depth 0 index 0 _Tp
  |-TemplateTypeParmDecl 0x5d528d8 <col:27, col:42> col:36 referenced typename depth 0 index 1 _Up
  | `-TemplateArgument type '_Tp'
  `-FunctionDecl 0x5d52b88 <line:147:5, line:153:5> line:148:5 __exchange '_Tp (_Tp &, _Up &&)' inline
    |-ParmVarDecl 0x5d529a8 <col:16, col:21> col:21 referenced __obj '_Tp &'
    |-ParmVarDecl 0x5d52a78 <col:28, col:34> col:34 referenced __new_val '_Up &&'
    `-CompoundStmt 0x5d52f68 <line:149:5, line:153:5>
      |-DeclStmt 0x5d52db8 <line:150:7, col:39>
      | `-VarDecl 0x5d52ca0 <col:7, col:38> col:11 referenced __old_val '_Tp' nrvo cinit
      |   `-CallExpr 0x5d52d90 <col:23, col:38> '<dependent type>'
      |     |-UnresolvedLookupExpr 0x5d52d28 <col:23, col:28> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
      |     `-DeclRefExpr 0x5d52d70 <col:33> '_Tp' lvalue ParmVar 0x5d529a8 '__obj' '_Tp &'
      |-BinaryOperator 0x5d52f10 <line:151:7, col:42> '<dependent type>' '='
      | |-DeclRefExpr 0x5d52dd0 <col:7> '_Tp' lvalue ParmVar 0x5d529a8 '__obj' '_Tp &'
      | `-CallExpr 0x5d52ee8 <col:15, col:42> '<dependent type>'
      |   |-UnresolvedLookupExpr 0x5d52e38 <col:15, col:31> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
      |   `-DeclRefExpr 0x5d52ec8 <col:33> '_Up' lvalue ParmVar 0x5d52a78 '__new_val' '_Up &&'
      `-ReturnStmt 0x5d52f50 <line:152:7, col:14>
        `-DeclRefExpr 0x5d52f30 <col:14> '_Tp' lvalue Var 0x5d52ca0 '__old_val' '_Tp'
NamespaceDecl 0x5d53330 prev 0x5d47320 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/move.h:166:1, line:223:1> line:166:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5d533a0 <col:31, col:56> Default
|-FunctionTemplateDecl 0x5d53f18 prev 0x5d2f5f8 <line:181:3, line:201:5> line:187:5 swap
| |-TemplateTypeParmDecl 0x5d533e0 <line:181:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5d53e78 prev 0x5d2f558 <line:182:5, line:201:5> line:187:5 swap 'typename enable_if<__and_<__not_<__is_tuple_like<_Tp> >, is_move_constructible<_Tp>, is_move_assignable<_Tp> >::value>::type (_Tp &, _Tp &) noexcept(__and_<is_nothrow_move_constructible<_Tp>, is_nothrow_move_assignable<_Tp> >::value)' inline
|   |-ParmVarDecl 0x5d53a28 <col:10, col:15> col:15 referenced __a '_Tp &'
|   |-ParmVarDecl 0x5d53aa0 <col:20, col:25> col:25 referenced __b '_Tp &'
|   `-CompoundStmt 0x5d55158 <line:194:5, line:201:5>
|     |-DeclStmt 0x5d54f60 <line:198:7, col:33>
|     | `-VarDecl 0x5d54e30 <col:7, col:32> col:11 referenced __tmp '_Tp' cinit
|     |   `-CallExpr 0x5d54f38 <col:19, col:32> '<dependent type>'
|     |     |-UnresolvedLookupExpr 0x5d54ed0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|     |     `-DeclRefExpr 0x5d54f18 <col:29> '_Tp' lvalue ParmVar 0x5d53a28 '__a' '_Tp &'
|     |-BinaryOperator 0x5d55048 <line:199:7, col:26> '<dependent type>' '='
|     | |-DeclRefExpr 0x5d54f78 <col:7> '_Tp' lvalue ParmVar 0x5d53a28 '__a' '_Tp &'
|     | `-CallExpr 0x5d55020 <col:13, col:26> '<dependent type>'
|     |   |-UnresolvedLookupExpr 0x5d54fb8 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|     |   `-DeclRefExpr 0x5d55000 <col:23> '_Tp' lvalue ParmVar 0x5d53aa0 '__b' '_Tp &'
|     `-BinaryOperator 0x5d55138 <line:200:7, col:28> '<dependent type>' '='
|       |-DeclRefExpr 0x5d55068 <col:7> '_Tp' lvalue ParmVar 0x5d53aa0 '__b' '_Tp &'
|       `-CallExpr 0x5d55110 <col:13, col:28> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5d550a8 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|         `-DeclRefExpr 0x5d550f0 <col:23> '_Tp' lvalue Var 0x5d54e30 '__tmp' '_Tp'
`-FunctionTemplateDecl 0x5d55948 prev 0x5d2ff78 <line:206:3, line:219:5> line:210:5 swap
  |-TemplateTypeParmDecl 0x5d55180 <line:206:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  |-NonTypeTemplateParmDecl 0x5d55208 <col:26, col:33> col:33 referenced 'std::size_t':'unsigned long' depth 0 index 1 _Nm
  `-FunctionDecl 0x5d558a8 prev 0x5d2fed8 <line:207:5, line:219:5> line:210:5 swap 'typename enable_if<__is_swappable<_Tp>::value>::type (_Tp (&)[_Nm], _Tp (&)[_Nm]) noexcept(__is_nothrow_swappable<_Tp>::value)' inline
    |-ParmVarDecl 0x5d55568 <col:10, col:24> col:16 referenced __a '_Tp (&)[_Nm]'
    |-ParmVarDecl 0x5d556b8 <col:27, col:41> col:33 referenced __b '_Tp (&)[_Nm]'
    `-CompoundStmt 0x5d55ca0 <line:216:5, line:219:5>
      `-ForStmt 0x5d55c68 <line:217:7, line:218:25>
        |-DeclStmt 0x5d55a60 <line:217:12, col:26>
        | `-VarDecl 0x5d559c0 <col:12, col:25> col:19 referenced __n 'std::size_t':'unsigned long' cinit
        |   `-ImplicitCastExpr 0x5d55a48 <col:25> 'std::size_t':'unsigned long' <IntegralCast>
        |     `-IntegerLiteral 0x5d55a28 <col:25> 'int' 0
        |-<<<NULL>>>
        |-BinaryOperator 0x5d55ad0 <col:28, col:34> 'bool' '<'
        | |-ImplicitCastExpr 0x5d55ab8 <col:28> 'std::size_t':'unsigned long' <LValueToRValue>
        | | `-DeclRefExpr 0x5d55a78 <col:28> 'std::size_t':'unsigned long' lvalue Var 0x5d559c0 '__n' 'std::size_t':'unsigned long'
        | `-DeclRefExpr 0x5d55a98 <col:34> 'std::size_t':'unsigned long' NonTypeTemplateParm 0x5d55208 '_Nm' 'std::size_t':'unsigned long'
        |-UnaryOperator 0x5d55b10 <col:39, col:41> 'std::size_t':'unsigned long' lvalue prefix '++'
        | `-DeclRefExpr 0x5d55af0 <col:41> 'std::size_t':'unsigned long' lvalue Var 0x5d559c0 '__n' 'std::size_t':'unsigned long'
        `-CallExpr 0x5d55c38 <line:218:2, col:25> '<dependent type>'
          |-UnresolvedLookupExpr 0x5d55b28 <col:2> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5d55948 0x5d53f18
          |-ArraySubscriptExpr 0x5d55bb8 <col:7, col:14> '<dependent type>' lvalue
          | |-DeclRefExpr 0x5d55b78 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x5d55568 '__a' '_Tp (&)[_Nm]'
          | `-DeclRefExpr 0x5d55b98 <col:11> 'std::size_t':'unsigned long' lvalue Var 0x5d559c0 '__n' 'std::size_t':'unsigned long'
          `-ArraySubscriptExpr 0x5d55c18 <col:17, col:24> '<dependent type>' lvalue
            |-DeclRefExpr 0x5d55bd8 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x5d556b8 '__b' '_Tp (&)[_Nm]'
            `-DeclRefExpr 0x5d55bf8 <col:21> 'std::size_t':'unsigned long' lvalue Var 0x5d559c0 '__n' 'std::size_t':'unsigned long'
LinkageSpecDecl 0x5d55cd8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/nested_exception.h:42:1, line:155:1> line:42:8 C++
`-NamespaceDecl 0x5d55d28 prev 0x5d53330 <line:44:1, line:153:1> line:44:11 std
  |-original Namespace 0x5b39a58 'std'
  |-CXXRecordDecl 0x5d55d98 <line:52:3, line:77:3> line:52:9 referenced class nested_exception definition
  | |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
  | | |-DefaultConstructor exists non_trivial user_provided
  | | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
  | | |-MoveConstructor needs_overload_resolution
  | | |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
  | | |-MoveAssignment needs_overload_resolution
  | | `-Destructor non_trivial user_declared needs_overload_resolution
  | |-VisibilityAttr 0x5d55eb8 <line:33:13> Implicit Default
  | |-CXXRecordDecl 0x5d55ef8 <line:52:3, col:9> col:9 implicit referenced class nested_exception
  | |-FieldDecl 0x5d55f98 <line:54:5, col:19> col:19 referenced _M_ptr 'std::__exception_ptr::exception_ptr'
  | |-AccessSpecDecl 0x5d55fe8 <line:56:3, col:9> col:3 public
  | |-CXXConstructorDecl 0x5d56078 <line:57:5, col:65> col:5 nested_exception 'void () noexcept'
  | | |-CXXCtorInitializer Field 0x5d55f98 '_M_ptr' 'std::__exception_ptr::exception_ptr'
  | | | `-ExprWithCleanups 0x5d56a18 <col:35, col:61> 'std::__exception_ptr::exception_ptr'
  | | |   `-CXXConstructExpr 0x5d569e8 <col:35, col:61> 'std::__exception_ptr::exception_ptr' 'void (std::__exception_ptr::exception_ptr &&) noexcept' elidable
  | | |     `-MaterializeTemporaryExpr 0x5d569d0 <col:42, col:60> 'std::__exception_ptr::exception_ptr' xvalue
  | | |       `-CXXBindTemporaryExpr 0x5d56990 <col:42, col:60> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5d56988)
  | | |         `-CallExpr 0x5d56968 <col:42, col:60> 'std::__exception_ptr::exception_ptr'
  | | |           `-ImplicitCastExpr 0x5d56950 <col:42> 'std::__exception_ptr::exception_ptr (*)() noexcept' <FunctionToPointerDecay>
  | | |             `-DeclRefExpr 0x5d56930 <col:42> 'std::__exception_ptr::exception_ptr () noexcept' lvalue Function 0x5c1f3f0 'current_exception' 'std::__exception_ptr::exception_ptr () noexcept'
  | | `-CompoundStmt 0x5d56a60 <col:63, col:65>
  | |-CXXConstructorDecl 0x5d56250 <line:59:5, col:64> col:5 nested_exception 'void (const std::nested_exception &)' default noexcept-unevaluated 0x5d56250
  | | `-ParmVarDecl 0x5d56158 <col:22, col:44> col:45 'const std::nested_exception &'
  | |-CXXMethodDecl 0x5d56440 <line:61:5, col:75> col:23 operator= 'std::nested_exception &(const std::nested_exception &)' default noexcept-unevaluated 0x5d56440
  | | `-ParmVarDecl 0x5d56310 <col:33, col:55> col:56 'const std::nested_exception &'
  | |-CXXDestructorDecl 0x5d56538 <line:63:5, col:33> col:13 ~nested_exception 'void () noexcept' virtual
  | |-CXXMethodDecl 0x5d56668 <line:66:5, line:72:5> line:67:5 referenced rethrow_nested 'void () const'
  | | |-CompoundStmt 0x5d56de0 <line:68:5, line:72:5>
  | | | |-IfStmt 0x5d56cc8 <line:69:7, line:70:26>
  | | | | |-ImplicitCastExpr 0x5d56b28 <line:69:11> 'bool' <UserDefinedConversion>
  | | | | | `-CXXMemberCallExpr 0x5d56b08 <col:11> 'bool'
  | | | | |   `-MemberExpr 0x5d56ad8 <col:11> '<bound member function type>' .operator bool 0x5c235f0
  | | | | |     `-MemberExpr 0x5d56a80 <col:11> 'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x5d55f98
  | | | | |       `-CXXThisExpr 0x5d56a70 <col:11> 'const std::nested_exception *' implicit this
  | | | | `-ExprWithCleanups 0x5d56cb0 <line:70:2, col:26> 'void'
  | | | |   `-CallExpr 0x5d56c30 <col:2, col:26> 'void'
  | | | |     |-ImplicitCastExpr 0x5d56c18 <col:2> 'void (*)(std::__exception_ptr::exception_ptr) __attribute__((noreturn))' <FunctionToPointerDecay>
  | | | |     | `-DeclRefExpr 0x5d56bc8 <col:2> 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))' lvalue Function 0x5c1f8b8 'rethrow_exception' 'void (std::__exception_ptr::exception_ptr) __attribute__((noreturn))'
  | | | |     `-CXXBindTemporaryExpr 0x5d56c90 <col:20> 'std::__exception_ptr::exception_ptr' (CXXTemporary 0x5d56c88)
  | | | |       `-CXXConstructExpr 0x5d56c58 <col:20> 'std::__exception_ptr::exception_ptr' 'void (const std::__exception_ptr::exception_ptr &) noexcept'
  | | | |         `-MemberExpr 0x5d56b98 <col:20> 'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x5d55f98
  | | | |           `-CXXThisExpr 0x5d56b88 <col:20> 'const std::nested_exception *' implicit this
  | | | `-CallExpr 0x5d56dc0 <line:71:7, col:22> 'void'
  | | |   `-ImplicitCastExpr 0x5d56da8 <col:7, col:12> 'void (*)() __attribute__((noreturn)) noexcept' <FunctionToPointerDecay>
  | | |     `-DeclRefExpr 0x5d56d18 <col:7, col:12> 'void () __attribute__((noreturn)) noexcept' lvalue Function 0x5c11180 'terminate' 'void () __attribute__((noreturn)) noexcept'
  | | `-CXX11NoReturnAttr 0x5d56708 <line:65:7>
  | `-CXXMethodDecl 0x5d567d0 <line:74:5, line:76:22> line:75:5 nested_ptr 'std::__exception_ptr::exception_ptr () const noexcept'
  |   `-CompoundStmt 0x5d58090 <line:76:5, col:22>
  |     `-ReturnStmt 0x5d58080 <col:7, col:14>
  |       `-CXXConstructExpr 0x5d58050 <col:14> 'std::__exception_ptr::exception_ptr' 'void (const std::__exception_ptr::exception_ptr &) noexcept'
  |         `-MemberExpr 0x5d58020 <col:14> 'const std::__exception_ptr::exception_ptr' lvalue ->_M_ptr 0x5d55f98
  |           `-CXXThisExpr 0x5d56e00 <col:14> 'const std::nested_exception *' implicit this
  |-ClassTemplateDecl 0x5d581c0 <line:79:3, line:89:5> line:80:12 _Nested_exception
  | |-TemplateTypeParmDecl 0x5d580a8 <line:79:12, col:21> col:21 referenced typename depth 0 index 0 _Except
  | `-CXXRecordDecl 0x5d58130 <line:80:5, line:89:5> line:80:12 struct _Nested_exception definition
  |   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
  |   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
  |   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
  |   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
  |   |-public '_Except'
  |   |-public 'std::nested_exception'
  |   |-VisibilityAttr 0x5d58410 <line:33:13> Implicit Default
  |   |-CXXRecordDecl 0x5d584d0 <line:80:5, col:12> col:12 implicit referenced struct _Nested_exception
  |   |-CXXConstructorDecl 0x5d58698 <line:82:7, line:84:9> line:82:16 _Nested_exception<_Except> 'void (const _Except &)'
  |   | |-ParmVarDecl 0x5d58598 <col:34, col:49> col:49 referenced __ex 'const _Except &'
  |   | |-CXXCtorInitializer '_Except'
  |   | | `-ParenListExpr 0x5d58960 <line:83:16, col:21> 'NULL TYPE'
  |   | |   `-DeclRefExpr 0x5d58940 <col:17> 'const _Except' lvalue ParmVar 0x5d58598 '__ex' 'const _Except &'
  |   | `-CompoundStmt 0x5d589c0 <line:84:7, col:9>
  |   `-CXXConstructorDecl 0x5d58878 <line:86:7, line:88:9> line:86:16 _Nested_exception<_Except> 'void (_Except &&)'
  |     |-ParmVarDecl 0x5d58788 <col:34, col:44> col:44 referenced __ex '_Except &&'
  |     |-CXXCtorInitializer '_Except'
  |     | `-ParenListExpr 0x5d58a30 <line:87:16, col:45> 'NULL TYPE'
  |     |   `-CXXStaticCastExpr 0x5d58a00 <col:17, col:44> '_Except' xvalue static_cast<_Except &&> <Dependent>
  |     |     `-DeclRefExpr 0x5d589d0 <col:40> '_Except' lvalue ParmVar 0x5d58788 '__ex' '_Except &&'
  |     `-CompoundStmt 0x5d58a90 <line:88:7, col:9>
  |-FunctionTemplateDecl 0x5d58d98 <line:94:3, line:100:5> line:96:5 __throw_with_nested_impl
  | |-TemplateTypeParmDecl 0x5d58aa0 <line:94:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-FunctionDecl 0x5d58cf8 <line:95:5, line:100:5> line:96:5 __throw_with_nested_impl 'void (_Tp &&, std::true_type)' inline
  |   |-ParmVarDecl 0x5d58b68 <col:30, col:36> col:36 referenced __t '_Tp &&'
  |   |-ParmVarDecl 0x5d58be0 <col:41> col:50 'std::true_type':'std::integral_constant<bool, true>'
  |   |-CompoundStmt 0x5d59288 <line:97:5, line:100:5>
  |   | |-DeclStmt 0x5d58fb0 <line:98:7, col:55>
  |   | | `-TypeAliasDecl 0x5d58f50 <col:7, col:51> col:13 referenced _Up 'typename remove_reference<_Tp>::type'
  |   | |   `-DependentNameType 0x5d58ee0 'typename remove_reference<_Tp>::type' dependent
  |   | `-CXXThrowExpr 0x5d59270 <line:99:7, col:58> 'void'
  |   |   `-CXXUnresolvedConstructExpr 0x5d59248 <col:13, col:58> '_Nested_exception<_Up>' '_Nested_exception<_Up>' list
  |   |     `-InitListExpr 0x5d59200 <col:35, col:58> 'void'
  |   |       `-CallExpr 0x5d591d8 <col:36, col:57> '<dependent type>'
  |   |         |-UnresolvedLookupExpr 0x5d59128 <col:36, col:52> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
  |   |         `-DeclRefExpr 0x5d591b8 <col:54> '_Tp' lvalue ParmVar 0x5d58b68 '__t' '_Tp &&'
  |   `-VisibilityAttr 0x5d58e00 <line:33:13> Implicit Default
  |-FunctionTemplateDecl 0x5d59598 <line:102:3, line:105:37> line:104:5 __throw_with_nested_impl
  | |-TemplateTypeParmDecl 0x5d592a8 <line:102:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-FunctionDecl 0x5d594f8 <line:103:5, line:105:37> line:104:5 __throw_with_nested_impl 'void (_Tp &&, std::false_type)' inline
  |   |-ParmVarDecl 0x5d59368 <col:30, col:36> col:36 referenced __t '_Tp &&'
  |   |-ParmVarDecl 0x5d593e0 <col:41> col:51 'std::false_type':'std::integral_constant<bool, false>'
  |   |-CompoundStmt 0x5d59778 <line:105:5, col:37>
  |   | `-CXXThrowExpr 0x5d59760 <col:7, col:34> 'void'
  |   |   `-CallExpr 0x5d59738 <col:13, col:34> '<dependent type>'
  |   |     |-UnresolvedLookupExpr 0x5d59688 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
  |   |     `-DeclRefExpr 0x5d59718 <col:31> '_Tp' lvalue ParmVar 0x5d59368 '__t' '_Tp &&'
  |   `-VisibilityAttr 0x5d59600 <line:33:13> Implicit Default
  |-FunctionTemplateDecl 0x5d599b8 <line:109:3, line:122:5> line:112:5 throw_with_nested
  | |-TemplateTypeParmDecl 0x5d59790 <line:109:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-FunctionDecl 0x5d59918 <line:111:5, line:122:5> line:112:5 throw_with_nested 'void (_Tp &&)' inline
  |   |-ParmVarDecl 0x5d59858 <col:23, col:29> col:29 referenced __t '_Tp &&'
  |   |-CompoundStmt 0x5d5ac88 <line:113:5, line:122:5>
  |   | |-DeclStmt 0x5d59be0 <line:114:7, col:44>
  |   | | `-TypeAliasDecl 0x5d59b80 <col:7, col:40> col:13 referenced _Up 'typename decay<_Tp>::type'
  |   | |   `-DependentNameType 0x5d59b10 'typename decay<_Tp>::type' dependent
  |   | |-DeclStmt 0x5d59fe8 <line:115:7, line:116:66>
  |   | | `-TypeAliasDecl 0x5d59f88 <line:115:7, line:116:65> line:115:13 referenced _CopyConstructible '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up> >'
  |   | |   `-TemplateSpecializationType 0x5d59ea0 '__and_<is_copy_constructible<_Up>, is_move_constructible<_Up> >' dependent __and_
  |   | |     |-TemplateArgument type 'is_copy_constructible<_Up>'
  |   | |     `-TemplateArgument type 'is_move_constructible<_Up>'
  |   | |-DeclStmt 0x5d5a1c8 <line:117:7, line:118:59>
  |   | | `-StaticAssertDecl 0x5d5a188 <line:117:7, line:118:58> line:117:7
  |   | |   |-DependentScopeDeclRefExpr 0x5d5a080 <col:21, col:41> '<dependent type>' lvalue
  |   | |   `-StringLiteral 0x5d5a138 <line:118:4> 'const char [53]' lvalue "throw_with_nested argument must be CopyConstructible"
  |   | |-DeclStmt 0x5d5aa10 <line:119:7, line:120:50>
  |   | | `-TypeAliasDecl 0x5d5a9b0 <line:119:7, line:120:49> line:119:13 referenced __nest '__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >'
  |   | |   `-TemplateSpecializationType 0x5d5a880 '__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >' dependent __and_
  |   | |     |-TemplateArgument type 'is_class<_Up>'
  |   | |     |-TemplateArgument type '__bool_constant<!__is_final(_Up)>':'integral_constant<bool, !__is_final(_Up)>'
  |   | |     `-TemplateArgument type '__not_<is_base_of<std::nested_exception, _Up> >'
  |   | `-CallExpr 0x5d5ac58 <line:121:7, col:69> '<dependent type>'
  |   |   |-UnresolvedLookupExpr 0x5d5aa48 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__throw_with_nested_impl' 0x5d58d98 0x5d59598
  |   |   |-CallExpr 0x5d5ab90 <col:37, col:58> '<dependent type>'
  |   |   | |-UnresolvedLookupExpr 0x5d5aae0 <col:37, col:53> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
  |   |   | `-DeclRefExpr 0x5d5ab70 <col:55> '_Tp' lvalue ParmVar 0x5d59858 '__t' '_Tp &&'
  |   |   `-CXXUnresolvedConstructExpr 0x5d5ac30 <col:61, col:68> '__nest':'__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >' '__nest':'__and_<is_class<_Up>, __bool_constant<!__is_final(_Up)>, __not_<is_base_of<std::nested_exception, _Up> > >' list
  |   |     `-InitListExpr 0x5d5abf0 <col:67, col:68> 'void'
  |   |-CXX11NoReturnAttr 0x5d59a18 <line:110:7>
  |   `-VisibilityAttr 0x5d59a58 <line:33:13> Implicit Default
  |-TypeAliasTemplateDecl 0x5d5b780 <line:125:3, line:130:8> line:126:5 __rethrow_if_nested_cond
  | |-TemplateTypeParmDecl 0x5d5acc0 <line:125:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-TypeAliasDecl 0x5d5b720 <line:126:5, line:130:8> line:126:11 __rethrow_if_nested_cond 'typename enable_if<__and_<is_polymorphic<_Tp>, __or_<__not_<is_base_of<nested_exception, _Tp> >, is_convertible<_Tp *, nested_exception *> > >::value>::type'
  |   `-DependentNameType 0x5d5b6b0 'typename enable_if<__and_<is_polymorphic<_Tp>, __or_<__not_<is_base_of<nested_exception, _Tp> >, is_convertible<_Tp *, nested_exception *> > >::value>::type' dependent
  |-FunctionTemplateDecl 0x5d5c158 <line:133:3, line:139:5> line:135:5 __rethrow_if_nested_impl
  | |-TemplateTypeParmDecl 0x5d5b7d8 <line:133:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
  | `-FunctionDecl 0x5d5c0b8 <line:134:5, line:139:5> line:135:5 __rethrow_if_nested_impl '__rethrow_if_nested_cond<_Ex> (const _Ex *)' inline
  |   |-ParmVarDecl 0x5d5bf88 <col:30, col:41> col:41 referenced __ptr 'const _Ex *'
  |   |-CompoundStmt 0x5d5c4b0 <line:136:5, line:139:5>
  |   | `-IfStmt 0x5d5c478 <line:137:7, line:138:27> has_var
  |   |   |-DeclStmt 0x5d5c498 <line:137:11, col:70>
  |   |   | `-VarDecl 0x5d5c230 <col:11, col:70> col:16 referenced __ne_ptr 'const std::nested_exception *':'const std::nested_exception *' cinit
  |   |   |   `-CXXDynamicCastExpr 0x5d5c2c8 <col:27, col:70> 'const std::nested_exception *' dynamic_cast<const class std::nested_exception *> <Dependent>
  |   |   |     `-DeclRefExpr 0x5d5c298 <col:65> 'const _Ex *' lvalue ParmVar 0x5d5bf88 '__ptr' 'const _Ex *'
  |   |   |-ImplicitCastExpr 0x5d5c3d8 <col:16> 'bool' <PointerToBoolean>
  |   |   | `-ImplicitCastExpr 0x5d5c3c0 <col:16> 'const std::nested_exception *':'const std::nested_exception *' <LValueToRValue>
  |   |   |   `-DeclRefExpr 0x5d5c3a0 <col:16> 'const std::nested_exception *':'const std::nested_exception *' lvalue Var 0x5d5c230 '__ne_ptr' 'const std::nested_exception *':'const std::nested_exception *'
  |   |   `-CXXMemberCallExpr 0x5d5c458 <line:138:2, col:27> 'void'
  |   |     `-MemberExpr 0x5d5c428 <col:2, col:12> '<bound member function type>' ->rethrow_nested 0x5d56668
  |   |       `-ImplicitCastExpr 0x5d5c410 <col:2> 'const std::nested_exception *':'const std::nested_exception *' <LValueToRValue>
  |   |         `-DeclRefExpr 0x5d5c3f0 <col:2> 'const std::nested_exception *':'const std::nested_exception *' lvalue Var 0x5d5c230 '__ne_ptr' 'const std::nested_exception *':'const std::nested_exception *'
  |   `-VisibilityAttr 0x5d5c1b8 <line:33:13> Implicit Default
  |-FunctionDecl 0x5d5c5a8 <line:142:3, line:144:5> line:143:3 __rethrow_if_nested_impl 'void (const void *)' inline
  | |-ParmVarDecl 0x5d5c4e0 <col:28, col:38> col:39 'const void *'
  | |-CompoundStmt 0x5d5c690 <line:144:3, col:5>
  | `-VisibilityAttr 0x5d5c650 <line:33:13> Implicit Default
  `-FunctionTemplateDecl 0x5d5c8c8 <line:147:3, line:150:62> line:149:5 rethrow_if_nested
    |-TemplateTypeParmDecl 0x5d5c6a0 <line:147:12, col:21> col:21 referenced typename depth 0 index 0 _Ex
    `-FunctionDecl 0x5d5c828 <line:148:5, line:150:62> line:149:5 rethrow_if_nested 'void (const _Ex &)' inline
      |-ParmVarDecl 0x5d5c768 <col:23, col:34> col:34 referenced __ex 'const _Ex &'
      |-CompoundStmt 0x5d5cab0 <line:150:5, col:62>
      | `-CallExpr 0x5d5ca88 <col:7, col:59> '<dependent type>'
      |   |-UnresolvedLookupExpr 0x5d5c988 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__rethrow_if_nested_impl' 0x5d5c158 0x5d5c5a8
      |   `-CallExpr 0x5d5ca60 <col:37, col:58> '<dependent type>'
      |     |-UnresolvedLookupExpr 0x5d5c9f8 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x5c27320
      |     `-DeclRefExpr 0x5d5ca40 <col:54> 'const _Ex' lvalue ParmVar 0x5d5c768 '__ex' 'const _Ex &'
      `-VisibilityAttr 0x5d5c928 <line:33:13> Implicit Default
NamespaceDecl 0x5d5cd68 prev 0x5d55d28 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/functexcept.h:42:1, line:108:1> line:42:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5d5cdd8 <col:31, col:56> Default
|-FunctionDecl 0x5d5ceb0 <line:47:3, line:48:59> col:3 __throw_bad_exception 'void () __attribute__((noreturn))'
|-FunctionDecl 0x5d5cfe8 <line:51:3, line:52:55> col:3 __throw_bad_alloc 'void () __attribute__((noreturn))'
|-FunctionDecl 0x5d5d120 <line:55:3, line:56:54> col:3 __throw_bad_cast 'void () __attribute__((noreturn))'
|-FunctionDecl 0x5d5d258 <line:58:3, line:59:56> col:3 __throw_bad_typeid 'void () __attribute__((noreturn))'
|-FunctionDecl 0x5d5d3d8 <line:62:3, line:63:64> col:3 __throw_logic_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5d310 <col:23, col:33> col:34 'const char *'
|-FunctionDecl 0x5d5d528 <line:65:3, line:66:65> col:3 __throw_domain_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5d498 <col:24, col:34> col:35 'const char *'
|-FunctionDecl 0x5d5d678 <line:68:3, line:69:69> col:3 __throw_invalid_argument 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5d5e8 <col:28, col:38> col:39 'const char *'
|-FunctionDecl 0x5d5d7c8 <line:71:3, line:72:65> col:3 __throw_length_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5d738 <col:24, col:34> col:35 'const char *'
|-FunctionDecl 0x5d5d918 <line:74:3, line:75:65> col:3 __throw_out_of_range 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5d888 <col:24, col:34> col:35 'const char *'
|-FunctionDecl 0x5d5db18 <line:77:3, line:79:53> line:78:3 __throw_out_of_range_fmt 'void (const char *, ...) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5d9d8 <col:28, col:38> col:39 'const char *'
|-FunctionDecl 0x5d5dc68 <line:81:3, line:82:66> col:3 __throw_runtime_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5dbd8 <col:25, col:35> col:36 'const char *'
|-FunctionDecl 0x5d5ddb8 <line:84:3, line:85:64> col:3 __throw_range_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5dd28 <col:23, col:33> col:34 'const char *'
|-FunctionDecl 0x5d5df08 <line:87:3, line:88:67> col:3 __throw_overflow_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5de78 <col:26, col:36> col:37 'const char *'
|-FunctionDecl 0x5d5eac8 <line:90:3, line:91:68> col:3 __throw_underflow_error 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5dfc8 <col:27, col:37> col:38 'const char *'
|-FunctionDecl 0x5d5ec18 <line:94:3, line:95:64> col:3 __throw_ios_failure 'void (const char *) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5eb88 <col:23, col:33> col:34 'const char *'
|-FunctionDecl 0x5d5ed68 <line:97:3, line:98:57> col:3 __throw_system_error 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5ecd8 <col:24> col:27 'int'
|-FunctionDecl 0x5d5eeb8 <line:100:3, line:101:57> col:3 __throw_future_error 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x5d5ee28 <col:24> col:27 'int'
`-FunctionDecl 0x5d5ef80 <line:104:3, line:105:59> col:3 __throw_bad_function_call 'void () __attribute__((noreturn))'
LinkageSpecDecl 0x5d5f040 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:67:1, line:413:1> line:67:8 C++
`-NamespaceDecl 0x5d5f0b0 prev 0x5d5cd68 <line:69:1, line:412:1> line:69:11 std
  |-original Namespace 0x5b39a58 'std'
  |-VisibilityAttr 0x5d5f120 <col:31, col:56> Default
  |-CXXRecordDecl 0x5d5f160 <line:73:3, col:24> col:10 referenced struct __true_type definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | `-CXXRecordDecl 0x5d5f278 <col:3, col:10> col:10 implicit struct __true_type
  |-CXXRecordDecl 0x5d5f320 <line:74:3, col:25> col:10 referenced struct __false_type definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | `-CXXRecordDecl 0x5d5f438 <col:3, col:10> col:10 implicit struct __false_type
  |-ClassTemplateDecl 0x5d5f5f8 <line:76:3, line:78:36> line:77:12 __truth_type
  | |-NonTypeTemplateParmDecl 0x5d5f4f0 <line:76:12> col:16 'bool' depth 0 index 0
  | |-CXXRecordDecl 0x5d5f568 <line:77:5, line:78:36> line:77:12 struct __truth_type definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d5f870 <col:5, col:12> col:12 implicit struct __truth_type
  | | `-TypedefDecl 0x5d5f910 <line:78:7, col:28> col:28 __type 'std::__false_type'
  | |   `-RecordType 0x5d5f3b0 'std::__false_type'
  | |     `-CXXRecord 0x5d5f320 '__false_type'
  | `-ClassTemplateSpecialization 0x5d5f9b8 '__truth_type'
  |-ClassTemplateSpecializationDecl 0x5d5f9b8 <line:80:3, line:82:35> line:81:12 struct __truth_type definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument integral 1
  | |-CXXRecordDecl 0x5d5fbd8 <col:5, col:12> col:12 implicit struct __truth_type
  | `-TypedefDecl 0x5d5fc78 <line:82:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d5fe78 <line:86:3, line:91:5> line:87:12 __traitor
  | |-TemplateTypeParmDecl 0x5d5fce8 <line:86:12, col:18> col:18 class depth 0 index 0 _Sp
  | |-TemplateTypeParmDecl 0x5d5fd58 <col:23, col:29> col:29 class depth 0 index 1 _Tp
  | `-CXXRecordDecl 0x5d5fde8 <line:87:5, line:91:5> line:87:12 struct __traitor definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d60110 <col:5, col:12> col:12 implicit struct __traitor
  |   |-EnumDecl 0x5d601a0 <line:89:7, col:65> col:7
  |   | `-EnumConstantDecl 0x5d60400 <col:14, col:63> col:14 referenced __value 'std::__traitor::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:89:7)'
  |   |   `-BinaryOperator 0x5d603e0 <col:24, col:63> 'bool' '||'
  |   |     |-CXXUnresolvedConstructExpr 0x5d602f8 <col:24, col:41> 'bool' 'bool'
  |   |     | `-DependentScopeDeclRefExpr 0x5d602c0 <col:29, col:34> '<dependent type>' lvalue
  |   |     `-CXXUnresolvedConstructExpr 0x5d603b8 <col:46, col:63> 'bool' 'bool'
  |   |       `-DependentScopeDeclRefExpr 0x5d60380 <col:51, col:56> '<dependent type>' lvalue
  |   `-TypedefDecl 0x5d60600 <line:90:7, col:54> col:54 __type 'typename __truth_type<__value>::__type'
  |     `-DependentNameType 0x5d60590 'typename __truth_type<__value>::__type' dependent
  |-ClassTemplateDecl 0x5d60808 <line:94:3, line:99:5> line:95:12 __are_same
  | |-TemplateTypeParmDecl 0x5d60670 <line:94:12> col:12 typename depth 0 index 0
  | |-TemplateTypeParmDecl 0x5d606e8 <col:22> col:22 typename depth 0 index 1
  | `-CXXRecordDecl 0x5d60778 <line:95:5, line:99:5> line:95:12 struct __are_same definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d61f30 <col:5, col:12> col:12 implicit struct __are_same
  |   |-EnumDecl 0x5d61fc0 <line:97:7, col:26> col:7
  |   | `-EnumConstantDecl 0x5d620a0 <col:14, col:24> col:14 __value 'std::__are_same::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:97:7)'
  |   |   `-IntegerLiteral 0x5d62080 <col:24> 'int' 0
  |   `-TypedefDecl 0x5d62100 <line:98:7, col:28> col:28 __type 'std::__false_type'
  |     `-RecordType 0x5d5f3b0 'std::__false_type'
  |       `-CXXRecord 0x5d5f320 '__false_type'
  |-ClassTemplatePartialSpecializationDecl 0x5d62348 <line:101:3, line:106:5> line:102:12 struct __are_same definition
  | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'type-parameter-0-0'
  | |-TemplateArgument type 'type-parameter-0-0'
  | |-TemplateTypeParmDecl 0x5d62170 <line:101:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d625c8 <line:102:5, col:12> col:12 implicit struct __are_same
  | |-EnumDecl 0x5d62658 <line:104:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d62740 <col:14, col:24> col:14 __value 'std::__are_same<type-parameter-0-0, type-parameter-0-0>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:104:7)'
  | |   `-IntegerLiteral 0x5d62720 <col:24> 'int' 1
  | `-TypedefDecl 0x5d627a0 <line:105:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d62930 <line:109:3, line:114:5> line:110:12 __is_void
  | |-TemplateTypeParmDecl 0x5d62810 <line:109:12, col:21> col:21 typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d628a0 <line:110:5, line:114:5> line:110:12 struct __is_void definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d62b80 <col:5, col:12> col:12 implicit struct __is_void
  | | |-EnumDecl 0x5d62c10 <line:112:7, col:26> col:7
  | | | `-EnumConstantDecl 0x5d62cf0 <col:14, col:24> col:14 __value 'std::__is_void::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:112:7)'
  | | |   `-IntegerLiteral 0x5d62cd0 <col:24> 'int' 0
  | | `-TypedefDecl 0x5d62d50 <line:113:7, col:28> col:28 __type 'std::__false_type'
  | |   `-RecordType 0x5d5f3b0 'std::__false_type'
  | |     `-CXXRecord 0x5d5f320 '__false_type'
  | `-ClassTemplateSpecialization 0x5d62de0 '__is_void'
  |-ClassTemplateSpecializationDecl 0x5d62de0 <line:116:3, line:121:5> line:117:12 struct __is_void definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'void'
  | |-CXXRecordDecl 0x5d62ff8 <col:5, col:12> col:12 implicit struct __is_void
  | |-EnumDecl 0x5d63088 <line:119:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d63188 <col:14, col:24> col:14 __value 'std::__is_void<void>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:119:7)'
  | |   `-ImplicitCastExpr 0x5d631d8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d63170 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d63150 <col:24> 'int' 1
  | `-TypedefDecl 0x5d63200 <line:120:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d63390 <line:126:3, line:131:5> line:127:12 __is_integer
  | |-TemplateTypeParmDecl 0x5d63270 <line:126:12, col:21> col:21 typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d63300 <line:127:5, line:131:5> line:127:12 struct __is_integer definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d635e0 <col:5, col:12> col:12 implicit struct __is_integer
  | | |-EnumDecl 0x5d63670 <line:129:7, col:26> col:7
  | | | `-EnumConstantDecl 0x5d63750 <col:14, col:24> col:14 __value 'std::__is_integer::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:129:7)'
  | | |   `-IntegerLiteral 0x5d63730 <col:24> 'int' 0
  | | `-TypedefDecl 0x5d637b0 <line:130:7, col:28> col:28 __type 'std::__false_type'
  | |   `-RecordType 0x5d5f3b0 'std::__false_type'
  | |     `-CXXRecord 0x5d5f320 '__false_type'
  | |-ClassTemplateSpecialization 0x5d63840 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d63cf0 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d68fe8 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d694a8 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d69960 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d69e10 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6a2c0 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6a778 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6ac38 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6f088 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6f548 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6fa08 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d6fec8 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d70388 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d70848 '__is_integer'
  | |-ClassTemplateSpecialization 0x5d74d20 '__is_integer'
  | `-ClassTemplateSpecialization 0x5d751d8 '__is_integer'
  |-ClassTemplateSpecializationDecl 0x5d63840 <line:137:3, line:142:5> line:138:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'bool'
  | |-CXXRecordDecl 0x5d63a58 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d63ae8 <line:140:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d63be8 <col:14, col:24> col:14 __value 'std::__is_integer<bool>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:140:7)'
  | |   `-ImplicitCastExpr 0x5d63c38 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d63bd0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d63bb0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d63c60 <line:141:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d63cf0 <line:144:3, line:149:5> line:145:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char'
  | |-CXXRecordDecl 0x5d68d50 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d68de0 <line:147:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d68ed8 <col:14, col:24> col:14 __value 'std::__is_integer<char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:147:7)'
  | |   `-ImplicitCastExpr 0x5d68f28 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d68ec0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d68ea0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d68f50 <line:148:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d68fe8 <line:151:3, line:156:5> line:152:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'signed char'
  | |-CXXRecordDecl 0x5d69208 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d69298 <line:154:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d69398 <col:14, col:24> col:14 __value 'std::__is_integer<signed char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:154:7)'
  | |   `-ImplicitCastExpr 0x5d693e8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d69380 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d69360 <col:24> 'int' 1
  | `-TypedefDecl 0x5d69410 <line:155:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d694a8 <line:158:3, line:163:5> line:159:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned char'
  | |-CXXRecordDecl 0x5d696c8 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d69758 <line:161:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d69858 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:161:7)'
  | |   `-ImplicitCastExpr 0x5d698a8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d69840 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d69820 <col:24> 'int' 1
  | `-TypedefDecl 0x5d698d0 <line:162:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d69960 <line:166:3, line:171:5> line:167:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'wchar_t'
  | |-CXXRecordDecl 0x5d69b78 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d69c08 <line:169:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d69d08 <col:14, col:24> col:14 __value 'std::__is_integer<wchar_t>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:169:7)'
  | |   `-ImplicitCastExpr 0x5d69d58 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d69cf0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d69cd0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d69d80 <line:170:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d69e10 <line:175:3, line:180:5> line:176:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char16_t'
  | |-CXXRecordDecl 0x5d6a028 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6a0b8 <line:178:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6a1b8 <col:14, col:24> col:14 __value 'std::__is_integer<char16_t>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:178:7)'
  | |   `-ImplicitCastExpr 0x5d6a208 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6a1a0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6a180 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6a230 <line:179:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6a2c0 <line:182:3, line:187:5> line:183:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char32_t'
  | |-CXXRecordDecl 0x5d6a4d8 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6a568 <line:185:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6a668 <col:14, col:24> col:14 __value 'std::__is_integer<char32_t>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:185:7)'
  | |   `-ImplicitCastExpr 0x5d6a6b8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6a650 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6a630 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6a6e0 <line:186:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6a778 <line:190:3, line:195:5> line:191:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'short'
  | |-CXXRecordDecl 0x5d6a998 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6aa28 <line:193:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6ab28 <col:14, col:24> col:14 __value 'std::__is_integer<short>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:193:7)'
  | |   `-ImplicitCastExpr 0x5d6ab78 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6ab10 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6aaf0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6aba0 <line:194:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6ac38 <line:197:3, line:202:5> line:198:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned short'
  | |-CXXRecordDecl 0x5d6ede8 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6ee78 <line:200:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6ef78 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned short>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:200:7)'
  | |   `-ImplicitCastExpr 0x5d6efc8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6ef60 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6ef40 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6eff0 <line:201:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6f088 <line:204:3, line:209:5> line:205:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'int'
  | |-CXXRecordDecl 0x5d6f2a8 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6f338 <line:207:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6f438 <col:14, col:24> col:14 __value 'std::__is_integer<int>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:207:7)'
  | |   `-ImplicitCastExpr 0x5d6f488 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6f420 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6f400 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6f4b0 <line:208:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6f548 <line:211:3, line:216:5> line:212:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned int'
  | |-CXXRecordDecl 0x5d6f768 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6f7f8 <line:214:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6f8f8 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned int>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:214:7)'
  | |   `-ImplicitCastExpr 0x5d6f948 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6f8e0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6f8c0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6f970 <line:215:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6fa08 <line:218:3, line:223:5> line:219:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'long'
  | |-CXXRecordDecl 0x5d6fc28 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d6fcb8 <line:221:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d6fdb8 <col:14, col:24> col:14 __value 'std::__is_integer<long>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:221:7)'
  | |   `-ImplicitCastExpr 0x5d6fe08 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d6fda0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d6fd80 <col:24> 'int' 1
  | `-TypedefDecl 0x5d6fe30 <line:222:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d6fec8 <line:225:3, line:230:5> line:226:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned long'
  | |-CXXRecordDecl 0x5d700e8 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d70178 <line:228:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d70278 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned long>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:228:7)'
  | |   `-ImplicitCastExpr 0x5d702c8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d70260 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d70240 <col:24> 'int' 1
  | `-TypedefDecl 0x5d702f0 <line:229:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d70388 <line:232:3, line:237:5> line:233:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'long long'
  | |-CXXRecordDecl 0x5d705a8 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d70638 <line:235:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d70738 <col:14, col:24> col:14 __value 'std::__is_integer<long long>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:235:7)'
  | |   `-ImplicitCastExpr 0x5d70788 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d70720 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d70700 <col:24> 'int' 1
  | `-TypedefDecl 0x5d707b0 <line:236:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d70848 <line:239:3, line:244:5> line:240:12 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned long long'
  | |-CXXRecordDecl 0x5d70a68 <col:5, col:12> col:12 implicit struct __is_integer
  | |-EnumDecl 0x5d70af8 <line:242:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d70bf8 <col:14, col:24> col:14 __value 'std::__is_integer<unsigned long long>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:242:7)'
  | |   `-ImplicitCastExpr 0x5d70c48 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d70be0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d70bc0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d70c70 <line:243:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d74d20 <line:261:1, col:94> col:19 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type '__int128'
  | |-CXXRecordDecl 0x5d74f38 <col:12, col:19> col:19 implicit struct __is_integer
  | |-EnumDecl 0x5d74fc8 <col:44, col:63> col:44
  | | `-EnumConstantDecl 0x5d750c8 <col:51, col:61> col:51 __value 'std::__is_integer<__int128>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:261:44)'
  | |   `-ImplicitCastExpr 0x5d75118 <col:61> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d750b0 <col:61> 'int'
  | |       `-IntegerLiteral 0x5d75090 <col:61> 'int' 1
  | `-TypedefDecl 0x5d75140 <col:66, col:86> col:86 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d751d8 <col:97, col:199> col:115 struct __is_integer definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned __int128'
  | |-CXXRecordDecl 0x5d753f8 <col:108, col:115> col:115 implicit struct __is_integer
  | |-EnumDecl 0x5d75488 <col:149, col:168> col:149
  | | `-EnumConstantDecl 0x5d75588 <col:156, col:166> col:156 __value 'std::__is_integer<unsigned __int128>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:261:149)'
  | |   `-ImplicitCastExpr 0x5d755d8 <col:166> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d75570 <col:166> 'int'
  | |       `-IntegerLiteral 0x5d75550 <col:166> 'int' 1
  | `-TypedefDecl 0x5d75600 <col:171, col:191> col:191 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d75790 <line:278:3, line:283:5> line:279:12 __is_floating
  | |-TemplateTypeParmDecl 0x5d75670 <line:278:12, col:21> col:21 typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d75700 <line:279:5, line:283:5> line:279:12 struct __is_floating definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d759e0 <col:5, col:12> col:12 implicit struct __is_floating
  | | |-EnumDecl 0x5d75a70 <line:281:7, col:26> col:7
  | | | `-EnumConstantDecl 0x5d75b50 <col:14, col:24> col:14 __value 'std::__is_floating::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:281:7)'
  | | |   `-IntegerLiteral 0x5d75b30 <col:24> 'int' 0
  | | `-TypedefDecl 0x5d75bb0 <line:282:7, col:28> col:28 __type 'std::__false_type'
  | |   `-RecordType 0x5d5f3b0 'std::__false_type'
  | |     `-CXXRecord 0x5d5f320 '__false_type'
  | |-ClassTemplateSpecialization 0x5d75c48 '__is_floating'
  | |-ClassTemplateSpecialization 0x5d76108 '__is_floating'
  | `-ClassTemplateSpecialization 0x5d765c8 '__is_floating'
  |-ClassTemplateSpecializationDecl 0x5d75c48 <line:286:3, line:291:5> line:287:12 struct __is_floating definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'float'
  | |-CXXRecordDecl 0x5d75e68 <col:5, col:12> col:12 implicit struct __is_floating
  | |-EnumDecl 0x5d75ef8 <line:289:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d75ff8 <col:14, col:24> col:14 __value 'std::__is_floating<float>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:289:7)'
  | |   `-ImplicitCastExpr 0x5d76048 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d75fe0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d75fc0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d76070 <line:290:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d76108 <line:293:3, line:298:5> line:294:12 struct __is_floating definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'double'
  | |-CXXRecordDecl 0x5d76328 <col:5, col:12> col:12 implicit struct __is_floating
  | |-EnumDecl 0x5d763b8 <line:296:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d764b8 <col:14, col:24> col:14 __value 'std::__is_floating<double>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:296:7)'
  | |   `-ImplicitCastExpr 0x5d76508 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d764a0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d76480 <col:24> 'int' 1
  | `-TypedefDecl 0x5d76530 <line:297:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d765c8 <line:300:3, line:305:5> line:301:12 struct __is_floating definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'long double'
  | |-CXXRecordDecl 0x5d767e8 <col:5, col:12> col:12 implicit struct __is_floating
  | |-EnumDecl 0x5d76878 <line:303:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d76978 <col:14, col:24> col:14 __value 'std::__is_floating<long double>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:303:7)'
  | |   `-ImplicitCastExpr 0x5d769c8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d76960 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d76940 <col:24> 'int' 1
  | `-TypedefDecl 0x5d769f0 <line:304:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d76b80 <line:310:3, line:315:5> line:311:12 __is_pointer
  | |-TemplateTypeParmDecl 0x5d76a60 <line:310:12, col:21> col:21 typename depth 0 index 0 _Tp
  | `-CXXRecordDecl 0x5d76af0 <line:311:5, line:315:5> line:311:12 struct __is_pointer definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d7acd0 <col:5, col:12> col:12 implicit struct __is_pointer
  |   |-EnumDecl 0x5d7ad60 <line:313:7, col:26> col:7
  |   | `-EnumConstantDecl 0x5d7ae40 <col:14, col:24> col:14 __value 'std::__is_pointer::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:313:7)'
  |   |   `-IntegerLiteral 0x5d7ae20 <col:24> 'int' 0
  |   `-TypedefDecl 0x5d7aea0 <line:314:7, col:28> col:28 __type 'std::__false_type'
  |     `-RecordType 0x5d5f3b0 'std::__false_type'
  |       `-CXXRecord 0x5d5f320 '__false_type'
  |-ClassTemplatePartialSpecializationDecl 0x5d7b0a0 <line:317:3, line:322:5> line:318:12 struct __is_pointer definition
  | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'type-parameter-0-0 *'
  | |-TemplateTypeParmDecl 0x5d7af10 <line:317:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d7b2c8 <line:318:5, col:12> col:12 implicit struct __is_pointer
  | |-EnumDecl 0x5d7b358 <line:320:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d7b440 <col:14, col:24> col:14 __value 'std::__is_pointer<type-parameter-0-0 *>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:320:7)'
  | |   `-IntegerLiteral 0x5d7b420 <col:24> 'int' 1
  | `-TypedefDecl 0x5d7b4a0 <line:321:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d7b630 <line:327:3, line:330:7> line:328:12 __is_arithmetic
  | |-TemplateTypeParmDecl 0x5d7b510 <line:327:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-CXXRecordDecl 0x5d7b5a0 <line:328:5, line:330:7> line:328:12 struct __is_arithmetic definition
  |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-public '__traitor<__is_integer<_Tp>, __is_floating<_Tp> >'
  |   `-CXXRecordDecl 0x5d7bb10 <col:5, col:12> col:12 implicit struct __is_arithmetic
  |-ClassTemplateDecl 0x5d7bcd0 <line:335:3, line:338:7> line:336:12 __is_scalar
  | |-TemplateTypeParmDecl 0x5d7bbb8 <line:335:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-CXXRecordDecl 0x5d7bc40 <line:336:5, line:338:7> line:336:12 struct __is_scalar definition
  |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-public '__traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >'
  |   `-CXXRecordDecl 0x5d7c1b0 <col:5, col:12> col:12 implicit struct __is_scalar
  |-ClassTemplateDecl 0x5d7c370 <line:343:3, line:348:5> line:344:12 __is_char
  | |-TemplateTypeParmDecl 0x5d7c258 <line:343:12, col:21> col:21 typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d7c2e0 <line:344:5, line:348:5> line:344:12 struct __is_char definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d7c5c0 <col:5, col:12> col:12 implicit struct __is_char
  | | |-EnumDecl 0x5d7c650 <line:346:7, col:26> col:7
  | | | `-EnumConstantDecl 0x5d7c730 <col:14, col:24> col:14 __value 'std::__is_char::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:346:7)'
  | | |   `-IntegerLiteral 0x5d7c710 <col:24> 'int' 0
  | | `-TypedefDecl 0x5d7c790 <line:347:7, col:28> col:28 __type 'std::__false_type'
  | |   `-RecordType 0x5d5f3b0 'std::__false_type'
  | |     `-CXXRecord 0x5d5f320 '__false_type'
  | |-ClassTemplateSpecialization 0x5d7c820 '__is_char'
  | `-ClassTemplateSpecialization 0x5d7f6e0 '__is_char'
  |-ClassTemplateSpecializationDecl 0x5d7c820 <line:350:3, line:355:5> line:351:12 struct __is_char definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char'
  | |-CXXRecordDecl 0x5d7ca38 <col:5, col:12> col:12 implicit struct __is_char
  | |-EnumDecl 0x5d7cac8 <line:353:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d7f5d8 <col:14, col:24> col:14 __value 'std::__is_char<char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:353:7)'
  | |   `-ImplicitCastExpr 0x5d7f628 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d7f5c0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d7cb90 <col:24> 'int' 1
  | `-TypedefDecl 0x5d7f650 <line:354:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d7f6e0 <line:358:3, line:363:5> line:359:12 struct __is_char definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'wchar_t'
  | |-CXXRecordDecl 0x5d7f8f8 <col:5, col:12> col:12 implicit struct __is_char
  | |-EnumDecl 0x5d7f988 <line:361:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d7fa88 <col:14, col:24> col:14 __value 'std::__is_char<wchar_t>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:361:7)'
  | |   `-ImplicitCastExpr 0x5d7fad8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d7fa70 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d7fa50 <col:24> 'int' 1
  | `-TypedefDecl 0x5d7fb00 <line:362:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d7fc90 <line:366:3, line:371:5> line:367:12 __is_byte
  | |-TemplateTypeParmDecl 0x5d7fb70 <line:366:12, col:21> col:21 typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d7fc00 <line:367:5, line:371:5> line:367:12 struct __is_byte definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d7fee0 <col:5, col:12> col:12 implicit struct __is_byte
  | | |-EnumDecl 0x5d7ff70 <line:369:7, col:26> col:7
  | | | `-EnumConstantDecl 0x5d80050 <col:14, col:24> col:14 __value 'std::__is_byte::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:369:7)'
  | | |   `-IntegerLiteral 0x5d80030 <col:24> 'int' 0
  | | `-TypedefDecl 0x5d800b0 <line:370:7, col:28> col:28 __type 'std::__false_type'
  | |   `-RecordType 0x5d5f3b0 'std::__false_type'
  | |     `-CXXRecord 0x5d5f320 '__false_type'
  | |-ClassTemplateSpecialization 0x5d80140 '__is_byte'
  | |-ClassTemplateSpecialization 0x5d805f8 '__is_byte'
  | `-ClassTemplateSpecialization 0x5d80ab8 '__is_byte'
  |-ClassTemplateSpecializationDecl 0x5d80140 <line:373:3, line:378:5> line:374:12 struct __is_byte definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char'
  | |-CXXRecordDecl 0x5d80358 <col:5, col:12> col:12 implicit struct __is_byte
  | |-EnumDecl 0x5d803e8 <line:376:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d804e8 <col:14, col:24> col:14 __value 'std::__is_byte<char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:376:7)'
  | |   `-ImplicitCastExpr 0x5d80538 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d804d0 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d804b0 <col:24> 'int' 1
  | `-TypedefDecl 0x5d80560 <line:377:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d805f8 <line:380:3, line:385:5> line:381:12 struct __is_byte definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'signed char'
  | |-CXXRecordDecl 0x5d80818 <col:5, col:12> col:12 implicit struct __is_byte
  | |-EnumDecl 0x5d808a8 <line:383:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d809a8 <col:14, col:24> col:14 __value 'std::__is_byte<signed char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:383:7)'
  | |   `-ImplicitCastExpr 0x5d809f8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d80990 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d80970 <col:24> 'int' 1
  | `-TypedefDecl 0x5d80a20 <line:384:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateSpecializationDecl 0x5d80ab8 <line:387:3, line:392:5> line:388:12 struct __is_byte definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned char'
  | |-CXXRecordDecl 0x5d80cd8 <col:5, col:12> col:12 implicit struct __is_byte
  | |-EnumDecl 0x5d80d68 <line:390:7, col:26> col:7
  | | `-EnumConstantDecl 0x5d80e68 <col:14, col:24> col:14 __value 'std::__is_byte<unsigned char>::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:390:7)'
  | |   `-ImplicitCastExpr 0x5d80eb8 <col:24> 'unsigned int' <IntegralCast>
  | |     `-ConstantExpr 0x5d80e50 <col:24> 'int'
  | |       `-IntegerLiteral 0x5d80e30 <col:24> 'int' 1
  | `-TypedefDecl 0x5d80ee0 <line:391:7, col:27> col:27 __type 'std::__true_type'
  |   `-RecordType 0x5d5f1f0 'std::__true_type'
  |     `-CXXRecord 0x5d5f160 '__true_type'
  |-ClassTemplateDecl 0x5d81070 <line:397:3, line:402:5> line:398:12 __is_move_iterator
  | |-TemplateTypeParmDecl 0x5d80f50 <line:397:12, col:21> col:21 typename depth 0 index 0 _Tp
  | `-CXXRecordDecl 0x5d80fe0 <line:398:5, line:402:5> line:398:12 struct __is_move_iterator definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d812c0 <col:5, col:12> col:12 implicit struct __is_move_iterator
  |   |-EnumDecl 0x5d81350 <line:400:7, col:26> col:7
  |   | `-EnumConstantDecl 0x5d81430 <col:14, col:24> col:14 __value 'std::__is_move_iterator::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/cpp_type_traits.h:400:7)'
  |   |   `-IntegerLiteral 0x5d81410 <col:24> 'int' 0
  |   `-TypedefDecl 0x5d81490 <line:401:7, col:28> col:28 __type 'std::__false_type'
  |     `-RecordType 0x5d5f3b0 'std::__false_type'
  |       `-CXXRecord 0x5d5f320 '__false_type'
  `-FunctionTemplateDecl 0x5d85e28 <line:406:3, line:409:20> line:408:5 __miter_base
    |-TemplateTypeParmDecl 0x5d81500 <line:406:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
    `-FunctionDecl 0x5d85d88 <line:407:5, line:409:20> line:408:5 __miter_base '_Iterator (_Iterator)' inline
      |-ParmVarDecl 0x5d85c90 <col:18, col:28> col:28 referenced __it '_Iterator'
      `-CompoundStmt 0x5d85eb8 <line:409:5, col:20>
        `-ReturnStmt 0x5d85ea8 <col:7, col:14>
          `-DeclRefExpr 0x5d85e88 <col:14> '_Iterator' lvalue ParmVar 0x5d85c90 '__it' '_Iterator'
LinkageSpecDecl 0x5d85f70 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/type_traits.h:37:1, line:219:1> line:37:8 C++
`-NamespaceDecl 0x5d85fe0 prev 0x5c11d78 <line:39:1, line:218:1> line:39:11 __gnu_cxx
  |-original Namespace 0x5b95a90 '__gnu_cxx'
  |-VisibilityAttr 0x5d86050 <col:37, col:62> Default
  |-ClassTemplateDecl 0x5d86228 <line:44:3, line:46:7> line:45:12 __enable_if
  | |-NonTypeTemplateParmDecl 0x5d860a0 <line:44:12> col:16 'bool' depth 0 index 0
  | |-TemplateTypeParmDecl 0x5d86100 <col:18> col:18 typename depth 0 index 1
  | `-CXXRecordDecl 0x5d86198 <line:45:5, line:46:7> line:45:12 struct __enable_if definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   `-CXXRecordDecl 0x5d864e0 <col:5, col:12> col:12 implicit struct __enable_if
  |-ClassTemplatePartialSpecializationDecl 0x5d86778 <line:48:3, line:50:27> line:49:12 struct __enable_if definition
  | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument integral 1
  | |-TemplateArgument type 'type-parameter-0-0'
  | |-TemplateTypeParmDecl 0x5d86588 <line:48:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d86a08 <line:49:5, col:12> col:12 implicit struct __enable_if
  | `-TypedefDecl 0x5d86aa8 <line:50:7, col:19> col:19 __type '_Tp'
  |   `-TemplateTypeParmType 0x5d865d0 '_Tp' dependent depth 0 index 0
  |     `-TemplateTypeParm 0x5d86588 '_Tp'
  |-ClassTemplateDecl 0x5d86d20 <line:54:3, line:56:31> line:55:12 __conditional_type
  | |-NonTypeTemplateParmDecl 0x5d86b28 <line:54:12, col:17> col:17 'bool' depth 0 index 0 _Cond
  | |-TemplateTypeParmDecl 0x5d86b88 <col:24, col:33> col:33 referenced typename depth 0 index 1 _Iftrue
  | |-TemplateTypeParmDecl 0x5d86bf8 <col:42, col:51> col:51 typename depth 0 index 2 _Iffalse
  | `-CXXRecordDecl 0x5d86c90 <line:55:5, line:56:31> line:55:12 struct __conditional_type definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d86ff0 <col:5, col:12> col:12 implicit struct __conditional_type
  |   `-TypedefDecl 0x5d87090 <line:56:7, col:23> col:23 __type '_Iftrue'
  |     `-TemplateTypeParmType 0x5d86bd0 '_Iftrue' dependent depth 0 index 1
  |       `-TemplateTypeParm 0x5d86b88 '_Iftrue'
  |-ClassTemplatePartialSpecializationDecl 0x5d873d0 <line:58:3, line:60:32> line:59:12 struct __conditional_type definition
  | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument integral 0
  | |-TemplateArgument type 'type-parameter-0-0'
  | |-TemplateArgument type 'type-parameter-0-1'
  | |-TemplateTypeParmDecl 0x5d87100 <line:58:12, col:21> col:21 referenced typename depth 0 index 0 _Iftrue
  | |-TemplateTypeParmDecl 0x5d87178 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Iffalse
  | |-CXXRecordDecl 0x5d876b8 <line:59:5, col:12> col:12 implicit struct __conditional_type
  | `-TypedefDecl 0x5d87758 <line:60:7, col:24> col:24 __type '_Iffalse'
  |   `-TemplateTypeParmType 0x5d871c0 '_Iffalse' dependent depth 0 index 1
  |     `-TemplateTypeParm 0x5d87178 '_Iffalse'
  |-ClassTemplateDecl 0x5d878e0 <line:64:3, line:72:5> line:65:12 __add_unsigned
  | |-TemplateTypeParmDecl 0x5d877c8 <line:64:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d87850 <line:65:5, line:72:5> line:65:12 struct __add_unsigned definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d87b30 <col:5, col:12> col:12 implicit struct __add_unsigned
  | | |-AccessSpecDecl 0x5d87bc0 <line:67:5, col:12> col:5 private
  | | |-TypedefDecl 0x5d89078 <line:68:7, col:65> col:65 referenced __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
  | | | `-TemplateSpecializationType 0x5d88f90 '__enable_if<std::__is_integer<_Tp>::__value, _Tp>' dependent __enable_if
  | | |   |-TemplateArgument expr
  | | |   | `-DependentScopeDeclRefExpr 0x5d88ed0 <col:27, col:51> '<dependent type>' lvalue
  | | |   `-TemplateArgument type '_Tp'
  | | |-AccessSpecDecl 0x5d890d0 <line:70:5, col:11> col:5 public
  | | `-TypedefDecl 0x5d89210 <line:71:7, col:42> col:42 __type 'typename __if_type::__type'
  | |   `-DependentNameType 0x5d891a0 'typename __if_type::__type' dependent
  | |-ClassTemplateSpecialization 0x5d892a0 '__add_unsigned'
  | |-ClassTemplateSpecialization 0x5d895f8 '__add_unsigned'
  | |-ClassTemplateSpecialization 0x5d89958 '__add_unsigned'
  | |-ClassTemplateSpecialization 0x5d89cb8 '__add_unsigned'
  | |-ClassTemplateSpecialization 0x5d8a018 '__add_unsigned'
  | |-ClassTemplateSpecialization 0x5d8a378 '__add_unsigned'
  | |-ClassTemplateSpecialization 0x5d8a6d0 '__add_unsigned'
  | `-ClassTemplateSpecialization 0x5d8a8a0 '__add_unsigned'
  |-ClassTemplateSpecializationDecl 0x5d892a0 <line:74:3, line:76:37> line:75:12 struct __add_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char'
  | |-CXXRecordDecl 0x5d894b8 <col:5, col:12> col:12 implicit struct __add_unsigned
  | `-TypedefDecl 0x5d89560 <line:76:7, col:29> col:29 __type 'unsigned char'
  |   `-BuiltinType 0x5aca360 'unsigned char'
  |-ClassTemplateSpecializationDecl 0x5d895f8 <line:78:3, line:80:37> line:79:12 struct __add_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'signed char'
  | |-CXXRecordDecl 0x5d89818 <col:5, col:12> col:12 implicit struct __add_unsigned
  | `-TypedefDecl 0x5d898c0 <line:80:7, col:29> col:29 __type 'unsigned char'
  |   `-BuiltinType 0x5aca360 'unsigned char'
  |-ClassTemplateSpecializationDecl 0x5d89958 <line:82:3, line:84:38> line:83:12 struct __add_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'short'
  | |-CXXRecordDecl 0x5d89b78 <col:5, col:12> col:12 implicit struct __add_unsigned
  | `-TypedefDecl 0x5d89c20 <line:84:7, col:30> col:30 __type 'unsigned short'
  |   `-BuiltinType 0x5aca380 'unsigned short'
  |-ClassTemplateSpecializationDecl 0x5d89cb8 <line:86:3, line:88:36> line:87:12 struct __add_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'int'
  | |-CXXRecordDecl 0x5d89ed8 <col:5, col:12> col:12 implicit struct __add_unsigned
  | `-TypedefDecl 0x5d89f80 <line:88:7, col:28> col:28 __type 'unsigned int'
  |   `-BuiltinType 0x5aca3a0 'unsigned int'
  |-ClassTemplateSpecializationDecl 0x5d8a018 <line:90:3, line:92:37> line:91:12 struct __add_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'long'
  | |-CXXRecordDecl 0x5d8a238 <col:5, col:12> col:12 implicit struct __add_unsigned
  | `-TypedefDecl 0x5d8a2e0 <line:92:7, col:29> col:29 __type 'unsigned long'
  |   `-BuiltinType 0x5aca3c0 'unsigned long'
  |-ClassTemplateSpecializationDecl 0x5d8a378 <line:94:3, line:96:42> line:95:12 struct __add_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'long long'
  | |-CXXRecordDecl 0x5d8a598 <col:5, col:12> col:12 implicit struct __add_unsigned
  | `-TypedefDecl 0x5d8a640 <line:96:7, col:34> col:34 __type 'unsigned long long'
  |   `-BuiltinType 0x5aca3e0 'unsigned long long'
  |-ClassTemplateSpecializationDecl 0x5d8a6d0 <line:99:3, line:100:31> col:12 struct __add_unsigned
  | `-TemplateArgument type 'bool'
  |-ClassTemplateSpecializationDecl 0x5d8a8a0 <line:102:3, line:103:34> col:12 struct __add_unsigned
  | `-TemplateArgument type 'wchar_t'
  |-ClassTemplateDecl 0x5d8ab70 <line:107:3, line:115:5> line:108:12 __remove_unsigned
  | |-TemplateTypeParmDecl 0x5d8aa50 <line:107:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-CXXRecordDecl 0x5d8aae0 <line:108:5, line:115:5> line:108:12 struct __remove_unsigned definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d8b860 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | | |-AccessSpecDecl 0x5d8b8f0 <line:110:5, col:12> col:5 private
  | | |-TypedefDecl 0x5d8bb48 <line:111:7, col:65> col:65 referenced __if_type '__enable_if<std::__is_integer<_Tp>::__value, _Tp>'
  | | | `-TemplateSpecializationType 0x5d8ba60 '__enable_if<std::__is_integer<_Tp>::__value, _Tp>' dependent __enable_if
  | | |   |-TemplateArgument expr
  | | |   | `-DependentScopeDeclRefExpr 0x5d8ba10 <col:27, col:51> '<dependent type>' lvalue
  | | |   `-TemplateArgument type '_Tp'
  | | |-AccessSpecDecl 0x5d8bba0 <line:113:5, col:11> col:5 public
  | | `-TypedefDecl 0x5d8bc90 <line:114:7, col:42> col:42 __type 'typename __if_type::__type'
  | |   `-DependentNameType 0x5d8bc20 'typename __if_type::__type' dependent
  | |-ClassTemplateSpecialization 0x5d8bd20 '__remove_unsigned'
  | |-ClassTemplateSpecialization 0x5d8c078 '__remove_unsigned'
  | |-ClassTemplateSpecialization 0x5d8c3d8 '__remove_unsigned'
  | |-ClassTemplateSpecialization 0x5d8c738 '__remove_unsigned'
  | |-ClassTemplateSpecialization 0x5d8ca98 '__remove_unsigned'
  | |-ClassTemplateSpecialization 0x5d8cdf8 '__remove_unsigned'
  | |-ClassTemplateSpecialization 0x5d8d150 '__remove_unsigned'
  | `-ClassTemplateSpecialization 0x5d8d320 '__remove_unsigned'
  |-ClassTemplateSpecializationDecl 0x5d8bd20 <line:117:3, line:119:35> line:118:12 struct __remove_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'char'
  | |-CXXRecordDecl 0x5d8bf38 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | `-TypedefDecl 0x5d8bfe0 <line:119:7, col:27> col:27 __type 'signed char'
  |   `-BuiltinType 0x5aca2c0 'signed char'
  |-ClassTemplateSpecializationDecl 0x5d8c078 <line:121:3, line:123:35> line:122:12 struct __remove_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned char'
  | |-CXXRecordDecl 0x5d8c298 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | `-TypedefDecl 0x5d8c340 <line:123:7, col:27> col:27 __type 'signed char'
  |   `-BuiltinType 0x5aca2c0 'signed char'
  |-ClassTemplateSpecializationDecl 0x5d8c3d8 <line:125:3, line:127:29> line:126:12 struct __remove_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned short'
  | |-CXXRecordDecl 0x5d8c5f8 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | `-TypedefDecl 0x5d8c6a0 <line:127:7, col:21> col:21 __type 'short'
  |   `-BuiltinType 0x5aca2e0 'short'
  |-ClassTemplateSpecializationDecl 0x5d8c738 <line:129:3, line:131:27> line:130:12 struct __remove_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned int'
  | |-CXXRecordDecl 0x5d8c958 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | `-TypedefDecl 0x5d8ca00 <line:131:7, col:19> col:19 __type 'int'
  |   `-BuiltinType 0x5aca300 'int'
  |-ClassTemplateSpecializationDecl 0x5d8ca98 <line:133:3, line:135:28> line:134:12 struct __remove_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned long'
  | |-CXXRecordDecl 0x5d8ccb8 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | `-TypedefDecl 0x5d8cd60 <line:135:7, col:20> col:20 __type 'long'
  |   `-BuiltinType 0x5aca320 'long'
  |-ClassTemplateSpecializationDecl 0x5d8cdf8 <line:137:3, line:139:33> line:138:12 struct __remove_unsigned definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'unsigned long long'
  | |-CXXRecordDecl 0x5d8d018 <col:5, col:12> col:12 implicit struct __remove_unsigned
  | `-TypedefDecl 0x5d8d0c0 <line:139:7, col:25> col:25 __type 'long long'
  |   `-BuiltinType 0x5aca340 'long long'
  |-ClassTemplateSpecializationDecl 0x5d8d150 <line:142:3, line:143:34> col:12 struct __remove_unsigned
  | `-TemplateArgument type 'bool'
  |-ClassTemplateSpecializationDecl 0x5d8d320 <line:145:3, line:146:37> col:12 struct __remove_unsigned
  | `-TemplateArgument type 'wchar_t'
  |-FunctionTemplateDecl 0x5d8d728 <line:150:3, line:153:26> line:152:5 __is_null_pointer
  | |-TemplateTypeParmDecl 0x5d8d4d0 <line:150:12, col:21> col:21 referenced typename depth 0 index 0 _Type
  | `-FunctionDecl 0x5d8d688 <line:151:5, line:153:26> line:152:5 __is_null_pointer 'bool (_Type *)' inline
  |   |-ParmVarDecl 0x5d8d598 <col:23, col:30> col:30 referenced __ptr '_Type *'
  |   `-CompoundStmt 0x5d8d7f8 <line:153:5, col:26>
  |     `-ReturnStmt 0x5d8d7e8 <col:7, col:23>
  |       `-BinaryOperator 0x5d8d7c8 <col:14, col:23> '<dependent type>' '=='
  |         |-DeclRefExpr 0x5d8d788 <col:14> '_Type *' lvalue ParmVar 0x5d8d598 '__ptr' '_Type *'
  |         `-IntegerLiteral 0x5d8d7a8 <col:23> 'int' 0
  |-FunctionTemplateDecl 0x5d8f158 <line:155:3, line:158:21> line:157:5 __is_null_pointer
  | |-TemplateTypeParmDecl 0x5d8d810 <line:155:12, col:21> col:21 referenced typename depth 0 index 0 _Type
  | `-FunctionDecl 0x5d8f0b8 <line:156:5, line:158:21> line:157:5 __is_null_pointer 'bool (_Type)' inline
  |   |-ParmVarDecl 0x5d8efc0 <col:23> col:28 '_Type'
  |   `-CompoundStmt 0x5d8f1d8 <line:158:5, col:21>
  |     `-ReturnStmt 0x5d8f1c8 <col:7, col:14>
  |       `-CXXBoolLiteralExpr 0x5d8f1b8 <col:14> 'bool' false
  |-FunctionDecl 0x5d8f358 <line:161:3, line:163:18> line:162:3 __is_null_pointer 'bool (std::nullptr_t)' inline
  | |-ParmVarDecl 0x5d8f268 <col:21, col:26> col:35 'std::nullptr_t':'nullptr_t'
  | `-CompoundStmt 0x5d8f420 <line:163:3, col:18>
  |   `-ReturnStmt 0x5d8f410 <col:5, col:12>
  |     `-CXXBoolLiteralExpr 0x5d8f400 <col:12> 'bool' true
  |-ClassTemplateDecl 0x5d8f6d8 <line:167:3, line:169:30> line:168:12 __promote
  | |-TemplateTypeParmDecl 0x5d8f438 <line:167:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-NonTypeTemplateParmDecl 0x5d8f5c8 <col:26, col:57> col:31 'bool' depth 0 index 1
  | | `-TemplateArgument expr
  | |   `-DependentScopeDeclRefExpr 0x5d8f580 <col:33, col:57> '<dependent type>' lvalue
  | |-CXXRecordDecl 0x5d8f648 <line:168:5, line:169:30> line:168:12 struct __promote definition
  | | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveConstructor exists simple trivial needs_implicit
  | | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | | |-MoveAssignment exists simple trivial needs_implicit
  | | | `-Destructor simple irrelevant trivial needs_implicit
  | | |-CXXRecordDecl 0x5d8f990 <col:5, col:12> col:12 implicit struct __promote
  | | `-TypedefDecl 0x5d8fa38 <line:169:7, col:22> col:22 __type 'double'
  | |   `-BuiltinType 0x5aca420 'double'
  | |-ClassTemplateSpecialization 0x5d90500 '__promote'
  | |-ClassTemplateSpecialization 0x5d90d80 '__promote'
  | `-ClassTemplateSpecialization 0x5d92530 '__promote'
  |-ClassTemplatePartialSpecializationDecl 0x5d8fc98 <line:174:3, line:176:7> line:175:12 struct __promote definition
  | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'type-parameter-0-0'
  | |-TemplateArgument integral 0
  | |-TemplateTypeParmDecl 0x5d8faa8 <line:174:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | `-CXXRecordDecl 0x5d8ff28 <line:175:5, col:12> col:12 implicit struct __promote
  |-ClassTemplateSpecializationDecl 0x5d90500 <line:178:3, line:180:35> line:179:12 struct __promote definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'long double'
  | |-TemplateArgument integral 0
  | |-CXXRecordDecl 0x5d90738 <col:5, col:12> col:12 implicit struct __promote
  | `-TypedefDecl 0x5d907e0 <line:180:7, col:27> col:27 __type 'long double'
  |   `-BuiltinType 0x5aca440 'long double'
  |-ClassTemplateSpecializationDecl 0x5d90d80 <line:182:3, line:184:30> line:183:12 struct __promote definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'double'
  | |-TemplateArgument integral 0
  | |-CXXRecordDecl 0x5d91ee8 <col:5, col:12> col:12 implicit struct __promote
  | `-TypedefDecl 0x5d91f90 <line:184:7, col:22> col:22 __type 'double'
  |   `-BuiltinType 0x5aca420 'double'
  |-ClassTemplateSpecializationDecl 0x5d92530 <line:186:3, line:188:29> line:187:12 struct __promote definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveConstructor exists simple trivial needs_implicit
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial needs_implicit
  | |-TemplateArgument type 'float'
  | |-TemplateArgument integral 0
  | |-CXXRecordDecl 0x5d92768 <col:5, col:12> col:12 implicit struct __promote
  | `-TypedefDecl 0x5d92810 <line:188:7, col:21> col:21 __type 'float'
  |   `-BuiltinType 0x5aca400 'float'
  |-ClassTemplateDecl 0x5d93138 <line:190:3, line:196:5> line:193:12 __promote_2
  | |-TemplateTypeParmDecl 0x5d92880 <line:190:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-TemplateTypeParmDecl 0x5d928f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
  | |-TemplateTypeParmDecl 0x5d92c50 <line:191:12, col:53> col:21 referenced typename depth 0 index 2 _Tp2
  | | `-TemplateArgument type 'typename __promote<_Tp>::__type'
  | |-TemplateTypeParmDecl 0x5d93000 <line:192:12, col:53> col:21 referenced typename depth 0 index 3 _Up2
  | | `-TemplateArgument type 'typename __promote<_Up>::__type'
  | `-CXXRecordDecl 0x5d930a8 <line:193:5, line:196:5> line:193:12 struct __promote_2 definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d93430 <col:5, col:12> col:12 implicit struct __promote_2
  |   `-TypedefDecl 0x5d935a8 <line:195:7, col:43> col:43 __type 'typeof (_Tp2() + _Up2())'
  |     `-TypeOfExprType 0x5d93560 'typeof (_Tp2() + _Up2())' dependent
  |       `-ParenExpr 0x5d93540 <col:25, col:41> '<dependent type>'
  |         `-BinaryOperator 0x5d93520 <col:26, col:40> '<dependent type>' '+'
  |           |-CXXUnresolvedConstructExpr 0x5d934d0 <col:26, col:31> '_Tp2' '_Tp2'
  |           `-CXXUnresolvedConstructExpr 0x5d93500 <col:35, col:40> '_Up2' '_Up2'
  |-ClassTemplateDecl 0x5d94c38 <line:198:3, line:205:5> line:202:12 __promote_3
  | |-TemplateTypeParmDecl 0x5d93618 <line:198:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
  | |-TemplateTypeParmDecl 0x5d93688 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
  | |-TemplateTypeParmDecl 0x5d936f8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
  | |-TemplateTypeParmDecl 0x5d93970 <line:199:12, col:53> col:21 referenced typename depth 0 index 3 _Tp2
  | | `-TemplateArgument type 'typename __promote<_Tp>::__type'
  | |-TemplateTypeParmDecl 0x5d93bf0 <line:200:12, col:53> col:21 referenced typename depth 0 index 4 _Up2
  | | `-TemplateArgument type 'typename __promote<_Up>::__type'
  | |-TemplateTypeParmDecl 0x5d94ac0 <line:201:12, col:53> col:21 referenced typename depth 0 index 5 _Vp2
  | | `-TemplateArgument type 'typename __promote<_Vp>::__type'
  | `-CXXRecordDecl 0x5d94ba8 <line:202:5, line:205:5> line:202:12 struct __promote_3 definition
  |   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5d94f90 <col:5, col:12> col:12 implicit struct __promote_3
  |   `-TypedefDecl 0x5d95158 <line:204:7, col:52> col:52 __type 'typeof (_Tp2() + _Up2() + _Vp2())'
  |     `-TypeOfExprType 0x5d95110 'typeof (_Tp2() + _Up2() + _Vp2())' dependent
  |       `-ParenExpr 0x5d950f0 <col:25, col:50> '<dependent type>'
  |         `-BinaryOperator 0x5d950d0 <col:26, col:49> '<dependent type>' '+'
  |           |-BinaryOperator 0x5d95080 <col:26, col:40> '<dependent type>' '+'
  |           | |-CXXUnresolvedConstructExpr 0x5d95030 <col:26, col:31> '_Tp2' '_Tp2'
  |           | `-CXXUnresolvedConstructExpr 0x5d95060 <col:35, col:40> '_Up2' '_Up2'
  |           `-CXXUnresolvedConstructExpr 0x5d950b0 <col:44, col:49> '_Vp2' '_Vp2'
  `-ClassTemplateDecl 0x5d95ff8 <line:207:3, line:215:5> line:212:12 __promote_4
    |-TemplateTypeParmDecl 0x5d951c8 <line:207:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
    |-TemplateTypeParmDecl 0x5d95238 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
    |-TemplateTypeParmDecl 0x5d952a8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _Vp
    |-TemplateTypeParmDecl 0x5d95318 <col:54, col:63> col:63 referenced typename depth 0 index 3 _Wp
    |-TemplateTypeParmDecl 0x5d95590 <line:208:12, col:53> col:21 referenced typename depth 0 index 4 _Tp2
    | `-TemplateArgument type 'typename __promote<_Tp>::__type'
    |-TemplateTypeParmDecl 0x5d95810 <line:209:12, col:53> col:21 referenced typename depth 0 index 5 _Up2
    | `-TemplateArgument type 'typename __promote<_Up>::__type'
    |-TemplateTypeParmDecl 0x5d95a90 <line:210:12, col:53> col:21 referenced typename depth 0 index 6 _Vp2
    | `-TemplateArgument type 'typename __promote<_Vp>::__type'
    |-TemplateTypeParmDecl 0x5d95e70 <line:211:12, col:53> col:21 referenced typename depth 0 index 7 _Wp2
    | `-TemplateArgument type 'typename __promote<_Wp>::__type'
    `-CXXRecordDecl 0x5d95f68 <line:212:5, line:215:5> line:212:12 struct __promote_4 definition
      |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
      | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
      | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
      | |-MoveConstructor exists simple trivial needs_implicit
      | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
      | |-MoveAssignment exists simple trivial needs_implicit
      | `-Destructor simple irrelevant trivial needs_implicit
      |-CXXRecordDecl 0x5d963b0 <col:5, col:12> col:12 implicit struct __promote_4
      `-TypedefDecl 0x5d965c8 <line:214:7, col:61> col:61 __type 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())'
        `-TypeOfExprType 0x5d96580 'typeof (_Tp2() + _Up2() + _Vp2() + _Wp2())' dependent
          `-ParenExpr 0x5d96560 <col:25, col:59> '<dependent type>'
            `-BinaryOperator 0x5d96540 <col:26, col:58> '<dependent type>' '+'
              |-BinaryOperator 0x5d964f0 <col:26, col:49> '<dependent type>' '+'
              | |-BinaryOperator 0x5d964a0 <col:26, col:40> '<dependent type>' '+'
              | | |-CXXUnresolvedConstructExpr 0x5d96450 <col:26, col:31> '_Tp2' '_Tp2'
              | | `-CXXUnresolvedConstructExpr 0x5d96480 <col:35, col:40> '_Up2' '_Up2'
              | `-CXXUnresolvedConstructExpr 0x5d964d0 <col:44, col:49> '_Vp2' '_Vp2'
              `-CXXUnresolvedConstructExpr 0x5d96520 <col:53, col:58> '_Wp2' '_Wp2'
NamespaceDecl 0x5d96758 prev 0x5d85fe0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/numeric_traits.h:37:1, line:131:1> line:37:11 __gnu_cxx
|-original Namespace 0x5b95a90 '__gnu_cxx'
|-VisibilityAttr 0x5d967c8 <col:37, col:62> Default
|-ClassTemplateDecl 0x5d97750 <line:54:3, line:65:5> line:55:12 __numeric_traits_integer
| |-TemplateTypeParmDecl 0x5d96808 <line:54:12, col:21> col:21 referenced typename depth 0 index 0 _Value
| `-CXXRecordDecl 0x5d96890 <line:55:5, line:65:5> line:55:12 struct __numeric_traits_integer definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d979a0 <col:5, col:12> col:12 implicit struct __numeric_traits_integer
|   |-VarDecl 0x5d97a40 <line:58:7, col:123> col:27 __min 'const _Value' static cinit
|   | `-ParenExpr 0x5d97e90 <col:35, col:123> '<dependent type>'
|   |   `-ConditionalOperator 0x5d97e60 <col:36, col:122> '<dependent type>'
|   |     |-ParenExpr 0x5d97b98 <col:36, col:53> '<dependent type>'
|   |     | `-BinaryOperator 0x5d97b78 <col:37, col:52> '<dependent type>' '<'
|   |     |   |-CStyleCastExpr 0x5d97b30 <col:37, col:48> '_Value' <Dependent>
|   |     |   | `-ParenExpr 0x5d97b10 <col:45, col:48> 'int'
|   |     |   |   `-UnaryOperator 0x5d97ac8 <col:46, col:47> 'int' prefix '-'
|   |     |   |     `-IntegerLiteral 0x5d97aa8 <col:47> 'int' 1
|   |     |   `-IntegerLiteral 0x5d97b58 <col:52> 'int' 0
|   |     |-BinaryOperator 0x5d97de8 <col:57, col:110> '<dependent type>' '<<'
|   |     | |-CStyleCastExpr 0x5d97be8 <col:57, col:65> '_Value' <Dependent>
|   |     | | `-IntegerLiteral 0x5d97bb8 <col:65> 'int' 1
|   |     | `-ParenExpr 0x5d97dc8 <col:70, col:110> '<dependent type>'
|   |     |   `-BinaryOperator 0x5d97da8 <col:71, col:109> '<dependent type>' '-'
|   |     |     |-BinaryOperator 0x5d97c78 <col:71, col:88> 'unsigned long' '*'
|   |     |     | |-UnaryExprOrTypeTraitExpr 0x5d97c20 <col:71, col:84> 'unsigned long' sizeof '_Value'
|   |     |     | `-ImplicitCastExpr 0x5d97c60 <col:88> 'unsigned long' <IntegralCast>
|   |     |     |   `-IntegerLiteral 0x5d97c40 <col:88> 'int' 8
|   |     |     `-ParenExpr 0x5d97d88 <col:92, col:109> '<dependent type>'
|   |     |       `-BinaryOperator 0x5d97d68 <col:93, col:108> '<dependent type>' '<'
|   |     |         |-CStyleCastExpr 0x5d97d20 <col:93, col:104> '_Value' <Dependent>
|   |     |         | `-ParenExpr 0x5d97d00 <col:101, col:104> 'int'
|   |     |         |   `-UnaryOperator 0x5d97cb8 <col:102, col:103> 'int' prefix '-'
|   |     |         |     `-IntegerLiteral 0x5d97c98 <col:103> 'int' 1
|   |     |         `-IntegerLiteral 0x5d97d48 <col:108> 'int' 0
|   |     `-CStyleCastExpr 0x5d97e38 <col:114, col:122> '_Value' <Dependent>
|   |       `-IntegerLiteral 0x5d97e08 <col:122> 'int' 0
|   |-VarDecl 0x5d97ec0 <line:59:7, col:151> col:27 __max 'const _Value' static cinit
|   | `-ParenExpr 0x5d984c8 <col:35, col:151> '<dependent type>'
|   |   `-ConditionalOperator 0x5d98498 <col:36, col:150> '<dependent type>'
|   |     |-ParenExpr 0x5d98018 <col:36, col:53> '<dependent type>'
|   |     | `-BinaryOperator 0x5d97ff8 <col:37, col:52> '<dependent type>' '<'
|   |     |   |-CStyleCastExpr 0x5d97fb0 <col:37, col:48> '_Value' <Dependent>
|   |     |   | `-ParenExpr 0x5d97f90 <col:45, col:48> 'int'
|   |     |   |   `-UnaryOperator 0x5d97f48 <col:46, col:47> 'int' prefix '-'
|   |     |   |     `-IntegerLiteral 0x5d97f28 <col:47> 'int' 1
|   |     |   `-IntegerLiteral 0x5d97fd8 <col:52> 'int' 0
|   |     |-ParenExpr 0x5d98408 <col:57, col:137> '<dependent type>'
|   |     | `-BinaryOperator 0x5d983e8 <col:58, col:136> '<dependent type>' '+'
|   |     |   |-ParenExpr 0x5d983a8 <col:58, col:132> '<dependent type>'
|   |     |   | `-BinaryOperator 0x5d98388 <col:59, col:131> '<dependent type>' '<<'
|   |     |   |   |-ParenExpr 0x5d98348 <col:59, col:126> '<dependent type>'
|   |     |   |   | `-BinaryOperator 0x5d98328 <col:60, col:125> '<dependent type>' '-'
|   |     |   |   |   |-ParenExpr 0x5d982e8 <col:60, col:121> '<dependent type>'
|   |     |   |   |   | `-BinaryOperator 0x5d982c8 <col:61, col:120> '<dependent type>' '<<'
|   |     |   |   |   |   |-CStyleCastExpr 0x5d98068 <col:61, col:69> '_Value' <Dependent>
|   |     |   |   |   |   | `-IntegerLiteral 0x5d98038 <col:69> 'int' 1
|   |     |   |   |   |   `-ParenExpr 0x5d982a8 <col:74, col:120> '<dependent type>'
|   |     |   |   |   |     `-BinaryOperator 0x5d98288 <col:75, col:119> '<dependent type>' '-'
|   |     |   |   |   |       |-ParenExpr 0x5d98248 <col:75, col:115> '<dependent type>'
|   |     |   |   |   |       | `-BinaryOperator 0x5d98228 <col:76, col:114> '<dependent type>' '-'
|   |     |   |   |   |       |   |-BinaryOperator 0x5d980f8 <col:76, col:93> 'unsigned long' '*'
|   |     |   |   |   |       |   | |-UnaryExprOrTypeTraitExpr 0x5d980a0 <col:76, col:89> 'unsigned long' sizeof '_Value'
|   |     |   |   |   |       |   | `-ImplicitCastExpr 0x5d980e0 <col:93> 'unsigned long' <IntegralCast>
|   |     |   |   |   |       |   |   `-IntegerLiteral 0x5d980c0 <col:93> 'int' 8
|   |     |   |   |   |       |   `-ParenExpr 0x5d98208 <col:97, col:114> '<dependent type>'
|   |     |   |   |   |       |     `-BinaryOperator 0x5d981e8 <col:98, col:113> '<dependent type>' '<'
|   |     |   |   |   |       |       |-CStyleCastExpr 0x5d981a0 <col:98, col:109> '_Value' <Dependent>
|   |     |   |   |   |       |       | `-ParenExpr 0x5d98180 <col:106, col:109> 'int'
|   |     |   |   |   |       |       |   `-UnaryOperator 0x5d98138 <col:107, col:108> 'int' prefix '-'
|   |     |   |   |   |       |       |     `-IntegerLiteral 0x5d98118 <col:108> 'int' 1
|   |     |   |   |   |       |       `-IntegerLiteral 0x5d981c8 <col:113> 'int' 0
|   |     |   |   |   |       `-IntegerLiteral 0x5d98268 <col:119> 'int' 1
|   |     |   |   |   `-IntegerLiteral 0x5d98308 <col:125> 'int' 1
|   |     |   |   `-IntegerLiteral 0x5d98368 <col:131> 'int' 1
|   |     |   `-IntegerLiteral 0x5d983c8 <col:136> 'int' 1
|   |     `-UnaryOperator 0x5d98480 <col:141, col:150> '<dependent type>' prefix '~' cannot overflow
|   |       `-CStyleCastExpr 0x5d98458 <col:142, col:150> '_Value' <Dependent>
|   |         `-IntegerLiteral 0x5d98428 <col:150> 'int' 0
|   |-VarDecl 0x5d984f8 <line:63:7, col:56> col:25 __is_signed 'const bool' static cinit
|   | `-ParenExpr 0x5d98650 <col:39, col:56> '<dependent type>'
|   |   `-BinaryOperator 0x5d98630 <col:40, col:55> '<dependent type>' '<'
|   |     |-CStyleCastExpr 0x5d985e8 <col:40, col:51> '_Value' <Dependent>
|   |     | `-ParenExpr 0x5d985c8 <col:48, col:51> 'int'
|   |     |   `-UnaryOperator 0x5d98580 <col:49, col:50> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x5d98560 <col:50> 'int' 1
|   |     `-IntegerLiteral 0x5d98610 <col:55> 'int' 0
|   `-VarDecl 0x5d98688 <line:64:7, col:75> col:24 __digits 'const int' static cinit
|     `-ParenExpr 0x5d988a8 <col:35, col:75> '<dependent type>'
|       `-BinaryOperator 0x5d98888 <col:36, col:74> '<dependent type>' '-'
|         |-BinaryOperator 0x5d98758 <col:36, col:53> 'unsigned long' '*'
|         | |-UnaryExprOrTypeTraitExpr 0x5d98700 <col:36, col:49> 'unsigned long' sizeof '_Value'
|         | `-ImplicitCastExpr 0x5d98740 <col:53> 'unsigned long' <IntegralCast>
|         |   `-IntegerLiteral 0x5d98720 <col:53> 'int' 8
|         `-ParenExpr 0x5d98868 <col:57, col:74> '<dependent type>'
|           `-BinaryOperator 0x5d98848 <col:58, col:73> '<dependent type>' '<'
|             |-CStyleCastExpr 0x5d98800 <col:58, col:69> '_Value' <Dependent>
|             | `-ParenExpr 0x5d987e0 <col:66, col:69> 'int'
|             |   `-UnaryOperator 0x5d98798 <col:67, col:68> 'int' prefix '-'
|             |     `-IntegerLiteral 0x5d98778 <col:68> 'int' 1
|             `-IntegerLiteral 0x5d98828 <col:73> 'int' 0
|-VarDecl 0x5d98ae8 parent 0x5d96890 prev 0x5d97a40 <line:67:3, line:68:52> col:52 __min 'const _Value'
|-VarDecl 0x5d98d98 parent 0x5d96890 prev 0x5d97ec0 <line:70:3, line:71:52> col:52 __max 'const _Value'
|-VarDecl 0x5d99028 parent 0x5d96890 prev 0x5d984f8 <line:73:3, line:74:50> col:50 __is_signed 'const bool'
|-VarDecl 0x5d992c0 parent 0x5d96890 prev 0x5d98688 <line:76:3, line:77:49> col:49 __digits 'const int'
|-ClassTemplateDecl 0x5d99480 <line:99:3, line:109:5> line:100:12 __numeric_traits_floating
| |-TemplateTypeParmDecl 0x5d99368 <line:99:12, col:21> col:21 referenced typename depth 0 index 0 _Value
| `-CXXRecordDecl 0x5d993f0 <line:100:5, line:109:5> line:100:12 struct __numeric_traits_floating definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d9a3b0 <col:5, col:12> col:12 implicit struct __numeric_traits_floating
|   |-VarDecl 0x5d9a458 <line:103:7, col:159> col:24 __max_digits10 'const int' static cinit
|   | `-ImplicitCastExpr 0x5d9aa60 <col:41, col:159> 'const int' <IntegralCast>
|   |   `-ParenExpr 0x5d9aa40 <col:41, col:159> 'long'
|   |     `-BinaryOperator 0x5d9aa20 <col:42, col:155> 'long' '+'
|   |       |-ImplicitCastExpr 0x5d9aa08 <col:42> 'long' <IntegralCast>
|   |       | `-IntegerLiteral 0x5d9a4c0 <col:42> 'int' 2
|   |       `-BinaryOperator 0x5d9a9e8 <col:46, col:155> 'long' '/'
|   |         |-BinaryOperator 0x5d9a990 <col:46, col:148> 'long' '*'
|   |         | |-ImplicitCastExpr 0x5d9a978 <col:46, col:144> 'long' <IntegralCast>
|   |         | | `-ParenExpr 0x5d9a938 <col:46, col:144> 'int'
|   |         | |   `-ConditionalOperator 0x5d9a908 <col:47, col:142> 'int'
|   |         | |     |-DependentScopeDeclRefExpr 0x5d9a690 <col:47, col:79> '<dependent type>' lvalue
|   |         | |     |-IntegerLiteral 0x5d9a6c8 <col:89> 'int' 24
|   |         | |     `-ConditionalOperator 0x5d9a8d8 <col:94, col:142> 'int'
|   |         | |       |-DependentScopeDeclRefExpr 0x5d9a860 <col:94, col:127> '<dependent type>' lvalue
|   |         | |       |-IntegerLiteral 0x5d9a898 <col:137> 'int' 53
|   |         | |       `-IntegerLiteral 0x5d9a8b8 <col:142> 'int' 64
|   |         | `-IntegerLiteral 0x5d9a958 <col:148> 'long' 643
|   |         `-ImplicitCastExpr 0x5d9a9d0 <col:155> 'long' <IntegralCast>
|   |           `-IntegerLiteral 0x5d9a9b0 <col:155> 'int' 2136
|   |-VarDecl 0x5d9aa88 <line:106:7, col:39> col:25 __is_signed 'const bool' static cinit
|   | `-CXXBoolLiteralExpr 0x5d9aaf0 <col:39> 'bool' true
|   |-VarDecl 0x5d9ab70 <line:107:7, col:134> col:24 __digits10 'const int' static cinit
|   | `-ParenExpr 0x5d9af58 <col:37, col:134> 'int'
|   |   `-ConditionalOperator 0x5d9af28 <col:38, col:132> 'int'
|   |     |-DependentScopeDeclRefExpr 0x5d9ad10 <col:38, col:70> '<dependent type>' lvalue
|   |     |-IntegerLiteral 0x5d9ad48 <col:80> 'int' 6
|   |     `-ConditionalOperator 0x5d9aef8 <col:84, col:132> 'int'
|   |       |-DependentScopeDeclRefExpr 0x5d9ae80 <col:84, col:117> '<dependent type>' lvalue
|   |       |-IntegerLiteral 0x5d9aeb8 <col:127> 'int' 15
|   |       `-IntegerLiteral 0x5d9aed8 <col:132> 'int' 18
|   `-VarDecl 0x5d9af90 <line:108:7, col:144> col:24 __max_exponent10 'const int' static cinit
|     `-ParenExpr 0x5d9b378 <col:43, col:144> 'int'
|       `-ConditionalOperator 0x5d9b348 <col:44, col:140> 'int'
|         |-DependentScopeDeclRefExpr 0x5d9b130 <col:44, col:76> '<dependent type>' lvalue
|         |-IntegerLiteral 0x5d9b168 <col:86> 'int' 38
|         `-ConditionalOperator 0x5d9b318 <col:91, col:140> 'int'
|           |-DependentScopeDeclRefExpr 0x5d9b2a0 <col:91, col:124> '<dependent type>' lvalue
|           |-IntegerLiteral 0x5d9b2d8 <col:134> 'int' 308
|           `-IntegerLiteral 0x5d9b2f8 <col:140> 'int' 4932
|-VarDecl 0x5d9b5a0 parent 0x5d993f0 prev 0x5d9a458 <line:111:3, line:112:50> col:50 __max_digits10 'const int'
|-VarDecl 0x5d9b828 parent 0x5d993f0 prev 0x5d9aa88 <line:114:3, line:115:51> col:51 __is_signed 'const bool'
|-VarDecl 0x5d9bac0 parent 0x5d993f0 prev 0x5d9ab70 <line:117:3, line:118:50> col:50 __digits10 'const int'
|-VarDecl 0x5d9bd50 parent 0x5d993f0 prev 0x5d9af90 <line:120:3, line:121:50> col:50 __max_exponent10 'const int'
`-ClassTemplateDecl 0x5d9bf10 <line:123:3, line:128:7> line:124:12 __numeric_traits
  |-TemplateTypeParmDecl 0x5d9bdf8 <line:123:12, col:21> col:21 referenced typename depth 0 index 0 _Value
  `-CXXRecordDecl 0x5d9be80 <line:124:5, line:128:7> line:124:12 struct __numeric_traits definition
    |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
    | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
    | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
    | |-MoveConstructor exists simple trivial needs_implicit
    | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
    | |-MoveAssignment exists simple trivial needs_implicit
    | `-Destructor simple irrelevant trivial needs_implicit
    |-public '__conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type'
    `-CXXRecordDecl 0x5d9db60 <col:5, col:12> col:12 implicit struct __numeric_traits
NamespaceDecl 0x5d9dc28 prev 0x5d5f0b0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:65:1, line:536:1> line:65:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5d9dc98 <col:31, col:56> Default
|-CXXRecordDecl 0x5d9dcd8 <line:76:3, col:78> col:10 referenced struct piecewise_construct_t definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5d9ddf8 <col:3, col:10> col:10 implicit referenced struct piecewise_construct_t
| |-CXXConstructorDecl 0x5d9def0 <col:34, col:75> col:43 referenced constexpr piecewise_construct_t 'void () noexcept' default trivial
| |-CXXConstructorDecl 0x5d9e098 <col:10> col:10 implicit constexpr piecewise_construct_t 'void (const std::piecewise_construct_t &)' inline default trivial noexcept-unevaluated 0x5d9e098
| | `-ParmVarDecl 0x5d9e1a8 <col:10> col:10 'const std::piecewise_construct_t &'
| |-CXXConstructorDecl 0x5d9e248 <col:10> col:10 implicit used constexpr piecewise_construct_t 'void (std::piecewise_construct_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5d9e358 <col:10> col:10 'std::piecewise_construct_t &&'
| | `-CompoundStmt 0x5d9e530 <col:10>
| `-CXXDestructorDecl 0x5d9e3f8 <col:10> col:10 implicit referenced ~piecewise_construct_t 'void () noexcept' inline default trivial
|-VarDecl 0x5d9dff0 <line:79:21, line:80:27> line:79:53 piecewise_construct 'const std::piecewise_construct_t' constexpr cinit
| `-ExprWithCleanups 0x5d9e570 <line:80:5, col:27> 'const std::piecewise_construct_t'
|   `-CXXConstructExpr 0x5d9e540 <col:5, col:27> 'const std::piecewise_construct_t' 'void (std::piecewise_construct_t &&) noexcept' elidable
|     `-MaterializeTemporaryExpr 0x5d9e4e0 <col:5, col:27> 'std::piecewise_construct_t' xvalue
|       `-CXXTemporaryObjectExpr 0x5d9e3c8 <col:5, col:27> 'std::piecewise_construct_t' 'void () noexcept' zeroing
|-ClassTemplateDecl 0x5d9e7c0 prev 0x5d2c020 <line:83:3, line:84:11> col:11 tuple
| |-TemplateTypeParmDecl 0x5d9e6a0 <line:83:12> col:12 typename depth 0 index 0 ...
| `-CXXRecordDecl 0x5d9e730 prev 0x5d2bf90 <line:84:5, col:11> col:11 class tuple
|-ClassTemplateDecl 0x5d9e9b8 <line:86:3, line:87:12> col:12 _Index_tuple
| |-NonTypeTemplateParmDecl 0x5d9e8b0 <line:86:12, col:17> col:26 'std::size_t':'unsigned long' depth 0 index 0 ...
| `-CXXRecordDecl 0x5d9e928 <line:87:5, col:12> col:12 struct _Index_tuple
|-ClassTemplateDecl 0x5d9ee20 <line:94:3, line:152:3> line:95:12 _PCC
| |-NonTypeTemplateParmDecl 0x5d9ec28 <line:94:13> col:17 'bool' depth 0 index 0
| |-TemplateTypeParmDecl 0x5d9ec88 <col:19, col:28> col:28 referenced typename depth 0 index 1 _T1
| |-TemplateTypeParmDecl 0x5d9ecf8 <col:33, col:42> col:42 referenced typename depth 0 index 2 _T2
| `-CXXRecordDecl 0x5d9ed90 <line:95:5, line:152:3> line:95:12 struct _PCC definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5d9f0f0 <col:5, col:12> col:12 implicit struct _PCC
|   |-FunctionTemplateDecl 0x5d9f378 <line:97:7, line:102:7> line:98:29 _ConstructiblePair
|   | |-TemplateTypeParmDecl 0x5d9f180 <line:97:17, col:26> col:26 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5d9f1f8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
|   | `-CXXMethodDecl 0x5d9f2d8 <line:98:7, line:102:7> line:98:29 constexpr _ConstructiblePair 'bool ()' static
|   |   `-CompoundStmt 0x5da1ed8 <line:99:7, line:102:7>
|   |     `-ReturnStmt 0x5da1ec8 <line:100:2, line:101:45>
|   |       `-DependentScopeDeclRefExpr 0x5da1e90 <line:100:9, line:101:45> '<dependent type>' lvalue
|   |-FunctionTemplateDecl 0x5d9f598 <line:104:7, line:109:7> line:105:29 _ImplicitlyConvertiblePair
|   | |-TemplateTypeParmDecl 0x5d9f3d0 <line:104:17, col:26> col:26 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5d9f448 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
|   | `-CXXMethodDecl 0x5d9f4f8 <line:105:7, line:109:7> line:105:29 constexpr _ImplicitlyConvertiblePair 'bool ()' static
|   |   `-CompoundStmt 0x5da23f8 <line:106:7, line:109:7>
|   |     `-ReturnStmt 0x5da23e8 <line:107:2, line:108:43>
|   |       `-DependentScopeDeclRefExpr 0x5da23b0 <line:107:9, line:108:43> '<dependent type>' lvalue
|   |-FunctionTemplateDecl 0x5d9f7b8 <line:111:7, line:116:7> line:112:29 _MoveConstructiblePair
|   | |-TemplateTypeParmDecl 0x5d9f5f0 <line:111:17, col:26> col:26 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5d9f668 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
|   | `-CXXMethodDecl 0x5d9f718 <line:112:7, line:116:7> line:112:29 constexpr _MoveConstructiblePair 'bool ()' static
|   |   `-CompoundStmt 0x5da29d8 <line:113:7, line:116:7>
|   |     `-ReturnStmt 0x5da29c8 <line:114:2, line:115:40>
|   |       `-DependentScopeDeclRefExpr 0x5da2990 <line:114:9, line:115:40> '<dependent type>' lvalue
|   |-FunctionTemplateDecl 0x5da1378 <line:118:7, line:123:7> line:119:29 _ImplicitlyMoveConvertiblePair
|   | |-TemplateTypeParmDecl 0x5d9f810 <line:118:17, col:26> col:26 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5da1220 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
|   | `-CXXMethodDecl 0x5da12d8 <line:119:7, line:123:7> line:119:29 constexpr _ImplicitlyMoveConvertiblePair 'bool ()' static
|   |   `-CompoundStmt 0x5da2ef8 <line:120:7, line:123:7>
|   |     `-ReturnStmt 0x5da2ee8 <line:121:2, line:122:38>
|   |       `-DependentScopeDeclRefExpr 0x5da2eb0 <line:121:9, line:122:38> '<dependent type>' lvalue
|   |-FunctionTemplateDecl 0x5da1610 <line:125:7, line:137:7> line:126:29 _CopyMovePair
|   | |-NonTypeTemplateParmDecl 0x5da13e0 <line:125:17, col:22> col:22 referenced 'bool' depth 1 index 0 __implicit
|   | |-TemplateTypeParmDecl 0x5da1440 <col:34, col:43> col:43 referenced typename depth 1 index 1 _U1
|   | |-TemplateTypeParmDecl 0x5da14b8 <col:48, col:57> col:57 referenced typename depth 1 index 2 _U2
|   | `-CXXMethodDecl 0x5da1570 <line:126:7, line:137:7> line:126:29 constexpr _CopyMovePair 'bool ()' static
|   |   `-CompoundStmt 0x5da6e18 <line:127:7, line:137:7>
|   |     |-DeclStmt 0x5da6488 <line:128:2, line:129:34>
|   |     | `-TypeAliasDecl 0x5da6428 <line:128:2, line:129:33> line:128:8 referenced __do_converts '__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >'
|   |     |   `-TemplateSpecializationType 0x5da6340 '__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2> >' dependent __and_
|   |     |     |-TemplateArgument type 'is_convertible<const _U1 &, _T1>'
|   |     |     `-TemplateArgument type 'is_convertible<_U2 &&, _T2>'
|   |     |-DeclStmt 0x5da6860 <line:130:2, line:132:40>
|   |     | `-TypeAliasDecl 0x5da6800 <line:130:2, line:132:36> line:130:8 referenced __converts 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'
|   |     |   `-DependentNameType 0x5da6790 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type' dependent
|   |     `-ReturnStmt 0x5da6e08 <line:133:2, line:136:12>
|   |       `-DependentScopeDeclRefExpr 0x5da6dd0 <line:133:9, line:136:12> '<dependent type>' lvalue
|   `-FunctionTemplateDecl 0x5da18a0 <line:139:7, line:151:7> line:140:29 _MoveCopyPair
|     |-NonTypeTemplateParmDecl 0x5da1678 <line:139:17, col:22> col:22 referenced 'bool' depth 1 index 0 __implicit
|     |-TemplateTypeParmDecl 0x5da16d8 <col:34, col:43> col:43 referenced typename depth 1 index 1 _U1
|     |-TemplateTypeParmDecl 0x5da1748 <col:48, col:57> col:57 referenced typename depth 1 index 2 _U2
|     `-CXXMethodDecl 0x5da1800 <line:140:7, line:151:7> line:140:29 constexpr _MoveCopyPair 'bool ()' static
|       `-CompoundStmt 0x5da7d88 <line:141:7, line:151:7>
|         |-DeclStmt 0x5da7398 <line:142:2, line:143:39>
|         | `-TypeAliasDecl 0x5da7338 <line:142:2, line:143:38> line:142:8 referenced __do_converts '__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >'
|         |   `-TemplateSpecializationType 0x5da7250 '__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2> >' dependent __and_
|         |     |-TemplateArgument type 'is_convertible<_U1 &&, _T1>'
|         |     `-TemplateArgument type 'is_convertible<const _U2 &, _T2>'
|         |-DeclStmt 0x5da7770 <line:144:2, line:146:40>
|         | `-TypeAliasDecl 0x5da7710 <line:144:2, line:146:36> line:144:8 referenced __converts 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type'
|         |   `-DependentNameType 0x5da76a0 'typename conditional<__implicit, __do_converts, __not_<__do_converts> >::type' dependent
|         `-ReturnStmt 0x5da7d78 <line:147:2, line:150:12>
|           `-DependentScopeDeclRefExpr 0x5da7d40 <line:147:9, line:150:12> '<dependent type>' lvalue
|-ClassTemplatePartialSpecializationDecl 0x5da8080 <line:154:3, line:180:3> line:155:12 struct _PCC definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 0
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTypeParmDecl 0x5da7db0 <line:154:13, col:22> col:22 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5da7e28 <col:27, col:36> col:36 referenced typename depth 0 index 1 _T2
| |-CXXRecordDecl 0x5da86e8 <line:155:5, col:12> col:12 implicit struct _PCC
| |-FunctionTemplateDecl 0x5da8968 <line:157:7, line:161:7> line:158:29 _ConstructiblePair
| | |-TemplateTypeParmDecl 0x5da8778 <line:157:17, col:26> col:26 typename depth 1 index 0 _U1
| | |-TemplateTypeParmDecl 0x5da87e8 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| | `-CXXMethodDecl 0x5da88c8 <line:158:7, line:161:7> line:158:29 constexpr _ConstructiblePair 'bool ()' static
| |   `-CompoundStmt 0x5da9058 <line:159:7, line:161:7>
| |     `-ReturnStmt 0x5da9048 <line:160:2, col:9>
| |       `-CXXBoolLiteralExpr 0x5da9038 <col:9> 'bool' false
| |-FunctionTemplateDecl 0x5da8b88 <line:163:7, line:167:7> line:164:29 _ImplicitlyConvertiblePair
| | |-TemplateTypeParmDecl 0x5da89c0 <line:163:17, col:26> col:26 typename depth 1 index 0 _U1
| | |-TemplateTypeParmDecl 0x5da8a38 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| | `-CXXMethodDecl 0x5da8ae8 <line:164:7, line:167:7> line:164:29 constexpr _ImplicitlyConvertiblePair 'bool ()' static
| |   `-CompoundStmt 0x5da9090 <line:165:7, line:167:7>
| |     `-ReturnStmt 0x5da9080 <line:166:2, col:9>
| |       `-CXXBoolLiteralExpr 0x5da9070 <col:9> 'bool' false
| |-FunctionTemplateDecl 0x5da8da8 <line:169:7, line:173:7> line:170:29 _MoveConstructiblePair
| | |-TemplateTypeParmDecl 0x5da8be0 <line:169:17, col:26> col:26 typename depth 1 index 0 _U1
| | |-TemplateTypeParmDecl 0x5da8c58 <col:31, col:40> col:40 typename depth 1 index 1 _U2
| | `-CXXMethodDecl 0x5da8d08 <line:170:7, line:173:7> line:170:29 constexpr _MoveConstructiblePair 'bool ()' static
| |   `-CompoundStmt 0x5da90c8 <line:171:7, line:173:7>
| |     `-ReturnStmt 0x5da90b8 <line:172:2, col:9>
| |       `-CXXBoolLiteralExpr 0x5da90a8 <col:9> 'bool' false
| `-FunctionTemplateDecl 0x5da8fc8 <line:175:7, line:179:7> line:176:29 _ImplicitlyMoveConvertiblePair
|   |-TemplateTypeParmDecl 0x5da8e00 <line:175:17, col:26> col:26 typename depth 1 index 0 _U1
|   |-TemplateTypeParmDecl 0x5da8e78 <col:31, col:40> col:40 typename depth 1 index 1 _U2
|   `-CXXMethodDecl 0x5da8f28 <line:176:7, line:179:7> line:176:29 constexpr _ImplicitlyMoveConvertiblePair 'bool ()' static
|     `-CompoundStmt 0x5da9100 <line:177:7, line:179:7>
|       `-ReturnStmt 0x5da90f0 <line:178:2, col:9>
|         `-CXXBoolLiteralExpr 0x5da90e0 <col:9> 'bool' false
|-CXXRecordDecl 0x5da9118 <line:185:3, line:187:3> line:185:10 referenced struct __nonesuch_no_braces definition
| |-DefinitionData empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists trivial needs_overload_resolution
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists trivial needs_overload_resolution
| | `-Destructor trivial needs_overload_resolution
| |-public 'std::__nonesuch':'std::__nonesuch'
| |-CXXRecordDecl 0x5da92e8 <col:3, col:10> col:10 implicit referenced struct __nonesuch_no_braces
| |-CXXConstructorDecl 0x5da9458 <line:186:5, col:61> col:14 __nonesuch_no_braces 'void (const std::__nonesuch &)' delete
| | `-ParmVarDecl 0x5da9388 <col:35, col:51> col:52 'const std::__nonesuch &'
| |-CXXConstructorDecl 0x5da9538 <line:185:10> col:10 implicit __nonesuch_no_braces 'void (const std::__nonesuch_no_braces &)' inline default_delete trivial noexcept-unevaluated 0x5da9538
| | `-ParmVarDecl 0x5da9648 <col:10> col:10 'const std::__nonesuch_no_braces &'
| |-CXXConstructorDecl 0x5da96e8 <col:10> col:10 implicit __nonesuch_no_braces 'void (std::__nonesuch_no_braces &&)' inline default_delete trivial noexcept-unevaluated 0x5da96e8
| | `-ParmVarDecl 0x5da97f8 <col:10> col:10 'std::__nonesuch_no_braces &&'
| |-CXXMethodDecl 0x5da9898 <col:10> col:10 implicit operator= 'std::__nonesuch_no_braces &(std::__nonesuch_no_braces &&)' inline default_delete trivial noexcept-unevaluated 0x5da9898
| | `-ParmVarDecl 0x5da99a8 <col:10> col:10 'std::__nonesuch_no_braces &&'
| `-CXXDestructorDecl 0x5da9a30 <col:10> col:10 implicit ~__nonesuch_no_braces 'void ()' inline default_delete trivial noexcept-unevaluated 0x5da9a30
|-ClassTemplateDecl 0x5da9ca8 <line:197:3, line:434:5> line:198:12 pair
| |-TemplateTypeParmDecl 0x5da9b10 <line:197:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5da9b88 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-CXXRecordDecl 0x5da9c18 <line:198:5, line:434:5> line:198:12 struct pair definition
|   |-DefinitionData standard_layout has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists non_trivial user_provided constexpr
|   | |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists user_declared
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5da9f40 <col:5, col:12> col:12 implicit referenced struct pair
|   |-TypedefDecl 0x5da9fe0 <line:200:7, col:19> col:19 referenced first_type '_T1'
|   | `-TemplateTypeParmType 0x5da9b60 '_T1' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5da9b10 '_T1'
|   |-TypedefDecl 0x5daa048 <line:201:7, col:19> col:19 referenced second_type '_T2'
|   | `-TemplateTypeParmType 0x5da9bd0 '_T2' dependent depth 0 index 1
|   |   `-TemplateTypeParm 0x5da9b88 '_T2'
|   |-FieldDecl 0x5daa0b0 <line:203:7, col:11> col:11 referenced first '_T1'
|   |-FieldDecl 0x5daa110 <line:204:7, col:11> col:11 referenced second '_T2'
|   |-FunctionTemplateDecl 0x5daad70 <line:211:7, line:219:29> line:218:17 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5daa170 <line:211:17, col:32> col:26 referenced typename depth 1 index 0 _U1
|   | | `-TemplateArgument type '_T1'
|   | |-TemplateTypeParmDecl 0x5daa1f8 <line:212:17, col:32> col:26 referenced typename depth 1 index 1 _U2
|   | | `-TemplateArgument type '_T2'
|   | |-NonTypeTemplateParmDecl 0x5daa850 <line:213:17, line:216:59> col:57 'typename enable_if<__and_<__is_implicitly_default_constructible<_U1>, __is_implicitly_default_constructible<_U2> >::value, bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5daa820 <col:59> 'bool' true
|   | `-CXXConstructorDecl 0x5daa940 <line:218:7, line:219:29> line:218:17 constexpr pair<_T1, _T2> 'void ()'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc8f68 <line:219:14, col:15> 'NULL TYPE'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc8fa8 <col:24, col:25> 'NULL TYPE'
|   |   `-CompoundStmt 0x5dc8ff8 <col:27, col:29>
|   |-FunctionTemplateDecl 0x5dac030 <line:222:7, line:232:29> line:231:26 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5daadd8 <line:222:17, col:32> col:26 referenced typename depth 1 index 0 _U1
|   | | `-TemplateArgument type '_T1'
|   | |-TemplateTypeParmDecl 0x5daae58 <line:223:17, col:32> col:26 referenced typename depth 1 index 1 _U2
|   | | `-TemplateArgument type '_T2'
|   | |-NonTypeTemplateParmDecl 0x5dab890 <line:224:17, line:230:59> col:57 'typename enable_if<__and_<is_default_constructible<_U1>, is_default_constructible<_U2>, __not_<__and_<__is_implicitly_default_constructible<_U1>, __is_implicitly_default_constructible<_U2> > > >::value, bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5dab860 <col:59> 'bool' false
|   | `-CXXConstructorDecl 0x5dab938 <line:231:7, line:232:29> line:231:26 constexpr pair<_T1, _T2> 'void ()'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc9008 <line:232:14, col:15> 'NULL TYPE'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9048 <col:24, col:25> 'NULL TYPE'
|   |   `-CompoundStmt 0x5dc9098 <col:27, col:29>
|   |-TypeAliasDecl 0x5dac270 <line:241:7, col:40> col:13 referenced _PCCP '_PCC<true, _T1, _T2>'
|   | `-TemplateSpecializationType 0x5dac140 '_PCC<true, _T1, _T2>' dependent _PCC
|   |   |-TemplateArgument expr
|   |   | `-ConstantExpr 0x5dac0b8 <col:26> 'bool'
|   |   |   `-CXXBoolLiteralExpr 0x5dac088 <col:26> 'bool' true
|   |   |-TemplateArgument type '_T1'
|   |   `-TemplateArgument type '_T2'
|   |-FunctionTemplateDecl 0x5dacfd0 <line:243:7, line:250:35> line:249:17 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5dac2e0 <line:243:16, col:31> col:25 referenced typename depth 1 index 0 _U1
|   | | `-TemplateArgument type '_T1'
|   | |-TemplateTypeParmDecl 0x5dac368 <col:36, col:49> col:45 referenced typename depth 1 index 1 _U2
|   | | `-TemplateArgument type '_T2'
|   | |-NonTypeTemplateParmDecl 0x5dac950 <col:54, line:248:38> col:37 'typename enable_if<_PCCP::template _ConstructiblePair<_U1, _U2>() && _PCCP::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5dac920 <col:38> 'bool' true
|   | `-CXXConstructorDecl 0x5dacbf8 <line:249:7, line:250:35> line:249:17 constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
|   |   |-ParmVarDecl 0x5daca18 <col:22, col:33> col:33 referenced __a 'const _T1 &'
|   |   |-ParmVarDecl 0x5dacae8 <col:38, col:49> col:49 referenced __b 'const _T2 &'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc90c8 <line:250:14, col:18> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc90a8 <col:15> 'const _T1' lvalue ParmVar 0x5daca18 '__a' 'const _T1 &'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9130 <col:27, col:31> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc9110 <col:28> 'const _T2' lvalue ParmVar 0x5dacae8 '__b' 'const _T2 &'
|   |   `-CompoundStmt 0x5dc9188 <col:33, col:35>
|   |-FunctionTemplateDecl 0x5dadb70 <line:252:8, line:259:35> line:258:26 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5dad048 <line:252:17, col:32> col:26 referenced typename depth 1 index 0 _U1
|   | | `-TemplateArgument type '_T1'
|   | |-TemplateTypeParmDecl 0x5dad0c8 <col:37, col:50> col:46 referenced typename depth 1 index 1 _U2
|   | | `-TemplateArgument type '_T2'
|   | |-NonTypeTemplateParmDecl 0x5dad5d0 <col:55, line:257:38> col:37 'typename enable_if<_PCCP::template _ConstructiblePair<_U1, _U2>() && !_PCCP::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5dad5a0 <col:38> 'bool' false
|   | `-CXXConstructorDecl 0x5dad778 <line:258:7, line:259:35> line:258:26 constexpr pair<_T1, _T2> 'void (const _T1 &, const _T2 &)'
|   |   |-ParmVarDecl 0x5dad668 <col:31, col:42> col:42 referenced __a 'const _T1 &'
|   |   |-ParmVarDecl 0x5dad6e0 <col:47, col:58> col:58 referenced __b 'const _T2 &'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc91b8 <line:259:14, col:18> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc9198 <col:15> 'const _T1' lvalue ParmVar 0x5dad668 '__a' 'const _T1 &'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9220 <col:27, col:31> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc9200 <col:28> 'const _T2' lvalue ParmVar 0x5dad6e0 '__b' 'const _T2 &'
|   |   `-CompoundStmt 0x5dc9278 <col:33, col:35>
|   |-TypeAliasTemplateDecl 0x5dae2b0 <line:269:7, line:272:16> line:270:9 _PCCFP
|   | |-TemplateTypeParmDecl 0x5dadbd8 <line:269:17, col:26> col:26 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5dadc48 <col:31, col:40> col:40 referenced typename depth 1 index 1 _U2
|   | `-TypeAliasDecl 0x5dae250 <line:270:9, line:272:16> line:270:15 _PCCFP '_PCC<!is_same<_T1, _U1>::value || !is_same<_T2, _U2>::value, _T1, _T2>'
|   |   `-TemplateSpecializationType 0x5dae120 '_PCC<!is_same<_T1, _U1>::value || !is_same<_T2, _U2>::value, _T1, _T2>' dependent _PCC
|   |     |-TemplateArgument expr
|   |     | `-BinaryOperator 0x5dae040 <col:29, line:271:31> '<dependent type>' '||'
|   |     |   |-UnaryOperator 0x5dade78 <line:270:29, col:49> '<dependent type>' prefix '!' cannot overflow
|   |     |   | `-DependentScopeDeclRefExpr 0x5dade40 <col:30, col:49> '<dependent type>' lvalue
|   |     |   `-UnaryOperator 0x5dae028 <line:271:11, col:31> '<dependent type>' prefix '!' cannot overflow
|   |     |     `-DependentScopeDeclRefExpr 0x5dadff0 <col:12, col:31> '<dependent type>' lvalue
|   |     |-TemplateArgument type '_T1'
|   |     `-TemplateArgument type '_T2'
|   |-FunctionTemplateDecl 0x5db1450 <line:274:7, line:281:50> line:280:19 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5dae308 <line:274:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5dae378 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | |-NonTypeTemplateParmDecl 0x5db0340 <col:44, line:279:18> col:17 'typename enable_if<_PCCFP<_U1, _U2>::template _ConstructiblePair<_U1, _U2>() && _PCCFP<_U1, _U2>::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db0310 <col:18> 'bool' true
|   | `-CXXConstructorDecl 0x5db0688 <line:280:9, line:281:50> line:280:19 constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
|   |   |-ParmVarDecl 0x5db0598 <col:24, col:46> col:46 referenced __p 'const pair<_U1, _U2> &'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc92f0 <line:281:16, col:26> 'NULL TYPE'
|   |   |   `-CXXDependentScopeMemberExpr 0x5dc92a8 <col:17, col:21> '<dependent type>' lvalue .first
|   |   |     `-DeclRefExpr 0x5dc9288 <col:17> 'const pair<_U1, _U2>' lvalue ParmVar 0x5db0598 '__p' 'const pair<_U1, _U2> &'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc93a0 <col:35, col:46> 'NULL TYPE'
|   |   |   `-CXXDependentScopeMemberExpr 0x5dc9358 <col:36, col:40> '<dependent type>' lvalue .second
|   |   |     `-DeclRefExpr 0x5dc9338 <col:36> 'const pair<_U1, _U2>' lvalue ParmVar 0x5db0598 '__p' 'const pair<_U1, _U2> &'
|   |   `-CompoundStmt 0x5dc93f8 <col:48, col:50>
|   |-FunctionTemplateDecl 0x5db3b70 <line:283:7, line:290:43> line:289:21 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db14b0 <line:283:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5db1528 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | |-NonTypeTemplateParmDecl 0x5db2b10 <col:44, line:288:38> col:37 'typename enable_if<_PCCFP<_U1, _U2>::template _ConstructiblePair<_U1, _U2>() && !_PCCFP<_U1, _U2>::template _ImplicitlyConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db2ae0 <col:38> 'bool' false
|   | `-CXXConstructorDecl 0x5db2d98 <line:289:2, line:290:43> line:289:21 constexpr pair<_T1, _T2> 'void (const pair<_U1, _U2> &)'
|   |   |-ParmVarDecl 0x5db2cd8 <col:26, col:48> col:48 referenced __p 'const pair<_U1, _U2> &'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc9470 <line:290:9, col:19> 'NULL TYPE'
|   |   |   `-CXXDependentScopeMemberExpr 0x5dc9428 <col:10, col:14> '<dependent type>' lvalue .first
|   |   |     `-DeclRefExpr 0x5dc9408 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x5db2cd8 '__p' 'const pair<_U1, _U2> &'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9520 <col:28, col:39> 'NULL TYPE'
|   |   |   `-CXXDependentScopeMemberExpr 0x5dc94d8 <col:29, col:33> '<dependent type>' lvalue .second
|   |   |     `-DeclRefExpr 0x5dc94b8 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x5db2cd8 '__p' 'const pair<_U1, _U2> &'
|   |   `-CompoundStmt 0x5dc9578 <col:41, col:43>
|   |-CXXConstructorDecl 0x5db44f8 <line:292:7, col:43> col:17 constexpr pair<_T1, _T2> 'void (const pair<_T1, _T2> &)' default
|   | `-ParmVarDecl 0x5db3c08 <col:22, col:32> col:33 'const pair<_T1, _T2> &'
|   |-CXXConstructorDecl 0x5db46a8 <line:293:7, col:38> col:17 constexpr pair<_T1, _T2> 'void (pair<_T1, _T2> &&)' default
|   | `-ParmVarDecl 0x5db45e8 <col:22, col:26> col:28 'pair<_T1, _T2> &&'
|   |-FunctionTemplateDecl 0x5db50c0 <line:296:7, line:301:55> line:300:18 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db4758 <line:296:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-NonTypeTemplateParmDecl 0x5db4b80 <col:30, line:299:38> col:37 'typename enable_if<_PCCP::template _MoveCopyPair<true, _U1, _T2>(), bool>::type' depth 1 index 1
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db4b50 <col:38> 'bool' true
|   | `-CXXConstructorDecl 0x5db4dc8 <line:300:8, line:301:55> line:300:18 constexpr pair<_T1, _T2> 'void (_U1 &&, const _T2 &)'
|   |   |-ParmVarDecl 0x5db4c38 <col:23, col:29> col:29 referenced __x '_U1 &&'
|   |   |-ParmVarDecl 0x5db4cb0 <col:34, col:45> col:45 referenced __y 'const _T2 &'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc96a8 <line:301:15, col:38> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dc9680 <col:16, col:37> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dc95d0 <col:16, col:32> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dc9660 <col:34> '_U1' lvalue ParmVar 0x5db4c38 '__x' '_U1 &&'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9710 <col:47, col:51> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc96f0 <col:48> 'const _T2' lvalue ParmVar 0x5db4cb0 '__y' 'const _T2 &'
|   |   `-CompoundStmt 0x5dc9768 <col:53, col:55>
|   |-FunctionTemplateDecl 0x5db5a10 <line:303:7, line:308:55> line:307:27 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db5128 <line:303:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-NonTypeTemplateParmDecl 0x5db5510 <col:30, line:306:38> col:37 'typename enable_if<_PCCP::template _MoveCopyPair<false, _U1, _T2>(), bool>::type' depth 1 index 1
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db54e0 <col:38> 'bool' false
|   | `-CXXConstructorDecl 0x5db5718 <line:307:8, line:308:55> line:307:27 constexpr pair<_T1, _T2> 'void (_U1 &&, const _T2 &)'
|   |   |-ParmVarDecl 0x5db55c8 <col:32, col:38> col:38 referenced __x '_U1 &&'
|   |   |-ParmVarDecl 0x5db5640 <col:43, col:54> col:54 referenced __y 'const _T2 &'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc9898 <line:308:15, col:38> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dc9870 <col:16, col:37> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dc97c0 <col:16, col:32> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dc9850 <col:34> '_U1' lvalue ParmVar 0x5db55c8 '__x' '_U1 &&'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9900 <col:47, col:51> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc98e0 <col:48> 'const _T2' lvalue ParmVar 0x5db5640 '__y' 'const _T2 &'
|   |   `-CompoundStmt 0x5dc9958 <col:53, col:55>
|   |-FunctionTemplateDecl 0x5db63e0 <line:310:7, line:315:55> line:314:18 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db5a78 <line:310:16, col:25> col:25 referenced typename depth 1 index 0 _U2
|   | |-NonTypeTemplateParmDecl 0x5db5ea0 <col:30, line:313:38> col:37 'typename enable_if<_PCCP::template _CopyMovePair<true, _T1, _U2>(), bool>::type' depth 1 index 1
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db5e70 <col:38> 'bool' true
|   | `-CXXConstructorDecl 0x5db60e8 <line:314:8, line:315:55> line:314:18 constexpr pair<_T1, _T2> 'void (const _T1 &, _U2 &&)'
|   |   |-ParmVarDecl 0x5db5f30 <col:23, col:34> col:34 referenced __x 'const _T1 &'
|   |   |-ParmVarDecl 0x5db5fd8 <col:39, col:45> col:45 referenced __y '_U2 &&'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc9988 <line:315:15, col:19> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc9968 <col:16> 'const _T1' lvalue ParmVar 0x5db5f30 '__x' 'const _T1 &'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9af0 <col:28, col:51> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dc9ac8 <col:29, col:50> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dc9a18 <col:29, col:45> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dc9aa8 <col:47> '_U2' lvalue ParmVar 0x5db5fd8 '__y' '_U2 &&'
|   |   `-CompoundStmt 0x5dc9b48 <col:53, col:55>
|   |-FunctionTemplateDecl 0x5db80e0 <line:317:7, line:322:55> line:321:17 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db6448 <line:317:16, col:25> col:25 referenced typename depth 1 index 0 _U2
|   | |-NonTypeTemplateParmDecl 0x5db7be0 <col:30, line:320:38> col:37 'typename enable_if<_PCCP::template _CopyMovePair<false, _T1, _U2>(), bool>::type' depth 1 index 1
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db7bb0 <col:38> 'bool' false
|   | `-CXXConstructorDecl 0x5db7de8 <line:321:8, line:322:55> line:321:17 pair<_T1, _T2> 'void (const _T1 &, _U2 &&)'
|   |   |-ParmVarDecl 0x5db7c70 <col:22, col:33> col:33 referenced __x 'const _T1 &'
|   |   |-ParmVarDecl 0x5db7d18 <col:38, col:44> col:44 referenced __y '_U2 &&'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc9b78 <line:322:15, col:19> 'NULL TYPE'
|   |   |   `-DeclRefExpr 0x5dc9b58 <col:16> 'const _T1' lvalue ParmVar 0x5db7c70 '__x' 'const _T1 &'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9ce0 <col:28, col:51> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dc9cb8 <col:29, col:50> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dc9c08 <col:29, col:45> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dc9c98 <col:47> '_U2' lvalue ParmVar 0x5db7d18 '__y' '_U2 &&'
|   |   `-CompoundStmt 0x5dc9d38 <col:53, col:55>
|   |-FunctionTemplateDecl 0x5db8d70 <line:324:7, line:331:68> line:330:12 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db8148 <line:324:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5db81b8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | |-NonTypeTemplateParmDecl 0x5db8720 <col:44, line:329:38> col:37 'typename enable_if<_PCCP::template _MoveConstructiblePair<_U1, _U2>() && _PCCP::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db86f0 <col:38> 'bool' true
|   | `-CXXConstructorDecl 0x5db8998 <line:330:2, line:331:68> line:330:12 constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
|   |   |-ParmVarDecl 0x5db87e8 <col:17, col:23> col:23 referenced __x '_U1 &&'
|   |   |-ParmVarDecl 0x5db8888 <col:28, col:34> col:34 referenced __y '_U2 &&'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dc9e68 <line:331:9, col:32> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dc9e40 <col:10, col:31> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dc9d90 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dc9e20 <col:28> '_U1' lvalue ParmVar 0x5db87e8 '__x' '_U1 &&'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dc9fd0 <col:41, col:64> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dc9fa8 <col:42, col:63> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dc9ef8 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dc9f88 <col:60> '_U2' lvalue ParmVar 0x5db8888 '__y' '_U2 &&'
|   |   `-CompoundStmt 0x5dca028 <col:66, col:68>
|   |-FunctionTemplateDecl 0x5dba9a0 <line:333:7, line:340:68> line:339:21 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5db8dd8 <line:333:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5db8e48 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | |-NonTypeTemplateParmDecl 0x5db9350 <col:44, line:338:38> col:37 'typename enable_if<_PCCP::template _MoveConstructiblePair<_U1, _U2>() && !_PCCP::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5db9320 <col:38> 'bool' false
|   | `-CXXConstructorDecl 0x5db9588 <line:339:2, line:340:68> line:339:21 constexpr pair<_T1, _T2> 'void (_U1 &&, _U2 &&)'
|   |   |-ParmVarDecl 0x5db9418 <col:26, col:32> col:32 referenced __x '_U1 &&'
|   |   |-ParmVarDecl 0x5db94b8 <col:37, col:43> col:43 referenced __y '_U2 &&'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dca158 <line:340:9, col:32> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dca130 <col:10, col:31> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dca080 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dca110 <col:28> '_U1' lvalue ParmVar 0x5db9418 '__x' '_U1 &&'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dca2c0 <col:41, col:64> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dca298 <col:42, col:63> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dca1e8 <col:42, col:58> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-DeclRefExpr 0x5dca278 <col:60> '_U2' lvalue ParmVar 0x5db94b8 '__y' '_U2 &&'
|   |   `-CompoundStmt 0x5dca318 <col:66, col:68>
|   |-FunctionTemplateDecl 0x5dbca60 <line:343:7, line:351:44> line:349:12 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5dbaa08 <line:343:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5dbaa78 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | |-NonTypeTemplateParmDecl 0x5dbb9b0 <col:44, line:348:38> col:37 'typename enable_if<_PCCFP<_U1, _U2>::template _MoveConstructiblePair<_U1, _U2>() && _PCCFP<_U1, _U2>::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5dbb980 <col:38> 'bool' true
|   | `-CXXConstructorDecl 0x5dbbc98 <line:349:2, line:351:44> line:349:12 constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
|   |   |-ParmVarDecl 0x5dbbba8 <col:17, col:34> col:34 referenced __p 'pair<_U1, _U2> &&'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dca490 <line:350:9, col:38> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dca468 <col:10, col:37> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dca370 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-CXXDependentScopeMemberExpr 0x5dca420 <col:28, col:32> '<dependent type>' lvalue .first
|   |   |       `-DeclRefExpr 0x5dca400 <col:28> 'pair<_U1, _U2>' lvalue ParmVar 0x5dbbba8 '__p' 'pair<_U1, _U2> &&'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dca640 <line:351:10, col:40> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dca618 <col:11, col:39> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dca520 <col:11, col:27> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-CXXDependentScopeMemberExpr 0x5dca5d0 <col:29, col:33> '<dependent type>' lvalue .second
|   |   |       `-DeclRefExpr 0x5dca5b0 <col:29> 'pair<_U1, _U2>' lvalue ParmVar 0x5dbbba8 '__p' 'pair<_U1, _U2> &&'
|   |   `-CompoundStmt 0x5dca698 <col:42, col:44>
|   |-FunctionTemplateDecl 0x5dbfde0 <line:353:7, line:361:44> line:359:21 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5dbcac0 <line:353:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5dbcb38 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | |-NonTypeTemplateParmDecl 0x5dbda50 <col:44, line:358:38> col:37 'typename enable_if<_PCCFP<_U1, _U2>::template _MoveConstructiblePair<_U1, _U2>() && !_PCCFP<_U1, _U2>::template _ImplicitlyMoveConvertiblePair<_U1, _U2>(), bool>::type' depth 1 index 2
|   | | `-TemplateArgument expr
|   | |   `-CXXBoolLiteralExpr 0x5dbda20 <col:38> 'bool' false
|   | `-CXXConstructorDecl 0x5dbdcd8 <line:359:2, line:361:44> line:359:21 constexpr pair<_T1, _T2> 'void (pair<_U1, _U2> &&)'
|   |   |-ParmVarDecl 0x5dbdc18 <col:26, col:43> col:43 referenced __p 'pair<_U1, _U2> &&'
|   |   |-CXXCtorInitializer Field 0x5daa0b0 'first' '_T1'
|   |   | `-ParenListExpr 0x5dca810 <line:360:9, col:38> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dca7e8 <col:10, col:37> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dca6f0 <col:10, col:26> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-CXXDependentScopeMemberExpr 0x5dca7a0 <col:28, col:32> '<dependent type>' lvalue .first
|   |   |       `-DeclRefExpr 0x5dca780 <col:28> 'pair<_U1, _U2>' lvalue ParmVar 0x5dbdc18 '__p' 'pair<_U1, _U2> &&'
|   |   |-CXXCtorInitializer Field 0x5daa110 'second' '_T2'
|   |   | `-ParenListExpr 0x5dca9c0 <line:361:10, col:40> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dca998 <col:11, col:39> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dca8a0 <col:11, col:27> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |     `-CXXDependentScopeMemberExpr 0x5dca950 <col:29, col:33> '<dependent type>' lvalue .second
|   |   |       `-DeclRefExpr 0x5dca930 <col:29> 'pair<_U1, _U2>' lvalue ParmVar 0x5dbdc18 '__p' 'pair<_U1, _U2> &&'
|   |   `-CompoundStmt 0x5dcaa18 <col:42, col:44>
|   |-FunctionTemplateDecl 0x5dc0550 <line:363:7, line:364:71> col:9 pair<_T1, _T2>
|   | |-TemplateTypeParmDecl 0x5dbfe40 <line:363:16, col:28> col:28 referenced typename depth 1 index 0 ... _Args1
|   | |-TemplateTypeParmDecl 0x5dbfeb8 <col:36, col:48> col:48 referenced typename depth 1 index 1 ... _Args2
|   | `-CXXConstructorDecl 0x5dc04a8 <line:364:9, col:71> col:9 pair<_T1, _T2> 'void (std::piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>)'
|   |   |-ParmVarDecl 0x5dbff88 <col:14> col:35 'std::piecewise_construct_t'
|   |   |-ParmVarDecl 0x5dc0180 <col:37, col:52> col:53 'tuple<_Args1...>'
|   |   `-ParmVarDecl 0x5dc0380 <col:55, col:70> col:71 'tuple<_Args2...>'
|   |-CXXMethodDecl 0x5dc0cb8 <line:366:7, line:375:7> line:367:7 operator= 'pair<_T1, _T2> &(typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type)'
|   | |-ParmVarDecl 0x5dc0b90 <col:17, line:370:51> col:51 referenced __p 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
|   | `-CompoundStmt 0x5dcabf0 <line:371:7, line:375:7>
|   |   |-BinaryOperator 0x5dcaad0 <line:372:2, col:14> '<dependent type>' '='
|   |   | |-MemberExpr 0x5dcaa38 <col:2> '_T1' lvalue ->first 0x5daa0b0
|   |   | | `-CXXThisExpr 0x5dcaa28 <col:2> 'pair<_T1, _T2> *' implicit this
|   |   | `-CXXDependentScopeMemberExpr 0x5dcaa88 <col:10, col:14> '<dependent type>' lvalue .first
|   |   |   `-DeclRefExpr 0x5dcaa68 <col:10> 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type' lvalue ParmVar 0x5dc0b90 '__p' 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
|   |   |-BinaryOperator 0x5dcab98 <line:373:2, col:15> '<dependent type>' '='
|   |   | |-MemberExpr 0x5dcab00 <col:2> '_T2' lvalue ->second 0x5daa110
|   |   | | `-CXXThisExpr 0x5dcaaf0 <col:2> 'pair<_T1, _T2> *' implicit this
|   |   | `-CXXDependentScopeMemberExpr 0x5dcab50 <col:11, col:15> '<dependent type>' lvalue .second
|   |   |   `-DeclRefExpr 0x5dcab30 <col:11> 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type' lvalue ParmVar 0x5dc0b90 '__p' 'typename conditional<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
|   |   `-ReturnStmt 0x5dcabe0 <line:374:2, col:10>
|   |     `-UnaryOperator 0x5dcabc8 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dcabb8 <col:10> 'pair<_T1, _T2> *' this
|   |-CXXMethodDecl 0x5dc14a8 <line:377:7, line:381:63> line:378:7 operator= 'pair<_T1, _T2> &(typename conditional<__not_<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> > >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type)' delete
|   | `-ParmVarDecl 0x5dc13b0 <col:17, line:381:51> col:51 __p 'typename conditional<__not_<__and_<is_copy_assignable<_T1>, is_copy_assignable<_T2> > >::value, const pair<_T1, _T2> &, const __nonesuch_no_braces &>::type'
|   |-CXXMethodDecl 0x5dc1c20 <line:383:7, line:394:7> line:384:7 operator= 'pair<_T1, _T2> &(typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type) noexcept(__and_<is_nothrow_move_assignable<_T1>, is_nothrow_move_assignable<_T2> >::value)'
|   | |-ParmVarDecl 0x5dc1b20 <col:17, line:387:41> col:41 referenced __p 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type'
|   | `-CompoundStmt 0x5dcb028 <line:390:7, line:394:7>
|   |   |-BinaryOperator 0x5dcade0 <line:391:2, col:44> '<dependent type>' '='
|   |   | |-MemberExpr 0x5dcac28 <col:2> '_T1' lvalue ->first 0x5daa0b0
|   |   | | `-CXXThisExpr 0x5dcac18 <col:2> 'pair<_T1, _T2> *' implicit this
|   |   | `-CallExpr 0x5dcadb8 <col:10, col:44> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x5dcacc0 <col:10, col:33> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |   `-CXXDependentScopeMemberExpr 0x5dcad70 <col:35, col:39> '<dependent type>' lvalue .first
|   |   |     `-DeclRefExpr 0x5dcad50 <col:35> 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type' lvalue ParmVar 0x5dc1b20 '__p' 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type'
|   |   |-BinaryOperator 0x5dcafd0 <line:392:2, col:47> '<dependent type>' '='
|   |   | |-MemberExpr 0x5dcae10 <col:2> '_T2' lvalue ->second 0x5daa110
|   |   | | `-CXXThisExpr 0x5dcae00 <col:2> 'pair<_T1, _T2> *' implicit this
|   |   | `-CallExpr 0x5dcafa8 <col:11, col:47> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x5dcaeb0 <col:11, col:35> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |   |   `-CXXDependentScopeMemberExpr 0x5dcaf60 <col:37, col:41> '<dependent type>' lvalue .second
|   |   |     `-DeclRefExpr 0x5dcaf40 <col:37> 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type' lvalue ParmVar 0x5dc1b20 '__p' 'typename conditional<__and_<is_move_assignable<_T1>, is_move_assignable<_T2> >::value, pair<_T1, _T2> &&, __nonesuch_no_braces &&>::type'
|   |   `-ReturnStmt 0x5dcb018 <line:393:2, col:10>
|   |     `-UnaryOperator 0x5dcb000 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dcaff0 <col:10> 'pair<_T1, _T2> *' this
|   |-FunctionTemplateDecl 0x5dc2808 <line:396:7, line:405:2> line:400:2 operator=
|   | |-TemplateTypeParmDecl 0x5dc1cc8 <line:396:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5dc1d38 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | `-CXXMethodDecl 0x5dc2768 <line:397:7, line:405:2> line:400:2 operator= 'typename enable_if<__and_<is_assignable<_T1 &, const _U1 &>, is_assignable<_T2 &, const _U2 &> >::value, pair<_T1, _T2> &>::type (const pair<_U1, _U2> &)'
|   |   |-ParmVarDecl 0x5dc2668 <col:12, col:34> col:34 referenced __p 'const pair<_U1, _U2> &'
|   |   `-CompoundStmt 0x5dcb270 <line:401:2, line:405:2>
|   |     |-BinaryOperator 0x5dcb0f8 <line:402:4, col:16> '<dependent type>' '='
|   |     | |-MemberExpr 0x5dcb060 <col:4> '_T1' lvalue ->first 0x5daa0b0
|   |     | | `-CXXThisExpr 0x5dcb050 <col:4> 'pair<_T1, _T2> *' implicit this
|   |     | `-CXXDependentScopeMemberExpr 0x5dcb0b0 <col:12, col:16> '<dependent type>' lvalue .first
|   |     |   `-DeclRefExpr 0x5dcb090 <col:12> 'const pair<_U1, _U2>' lvalue ParmVar 0x5dc2668 '__p' 'const pair<_U1, _U2> &'
|   |     |-BinaryOperator 0x5dcb1c0 <line:403:4, col:17> '<dependent type>' '='
|   |     | |-MemberExpr 0x5dcb128 <col:4> '_T2' lvalue ->second 0x5daa110
|   |     | | `-CXXThisExpr 0x5dcb118 <col:4> 'pair<_T1, _T2> *' implicit this
|   |     | `-CXXDependentScopeMemberExpr 0x5dcb178 <col:13, col:17> '<dependent type>' lvalue .second
|   |     |   `-DeclRefExpr 0x5dcb158 <col:13> 'const pair<_U1, _U2>' lvalue ParmVar 0x5dc2668 '__p' 'const pair<_U1, _U2> &'
|   |     `-ReturnStmt 0x5dcb260 <line:404:4, col:12>
|   |       `-UnaryOperator 0x5dcb248 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
|   |         `-CXXThisExpr 0x5dcb238 <col:12> 'pair<_T1, _T2> *' this
|   |-FunctionTemplateDecl 0x5dc3348 <line:407:7, line:416:2> line:411:2 operator=
|   | |-TemplateTypeParmDecl 0x5dc2868 <line:407:16, col:25> col:25 referenced typename depth 1 index 0 _U1
|   | |-TemplateTypeParmDecl 0x5dc28d8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _U2
|   | `-CXXMethodDecl 0x5dc32a8 <line:408:7, line:416:2> line:411:2 operator= 'typename enable_if<__and_<is_assignable<_T1 &, _U1 &&>, is_assignable<_T2 &, _U2 &&> >::value, pair<_T1, _T2> &>::type (pair<_U1, _U2> &&)'
|   |   |-ParmVarDecl 0x5dc31a8 <col:12, col:29> col:29 referenced __p 'pair<_U1, _U2> &&'
|   |   `-CompoundStmt 0x5dcb6c0 <line:412:2, line:416:2>
|   |     |-BinaryOperator 0x5dcb440 <line:413:4, col:39> '<dependent type>' '='
|   |     | |-MemberExpr 0x5dcb2a8 <col:4> '_T1' lvalue ->first 0x5daa0b0
|   |     | | `-CXXThisExpr 0x5dcb298 <col:4> 'pair<_T1, _T2> *' implicit this
|   |     | `-CallExpr 0x5dcb418 <col:12, col:39> '<dependent type>'
|   |     |   |-UnresolvedLookupExpr 0x5dcb320 <col:12, col:28> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |     |   `-CXXDependentScopeMemberExpr 0x5dcb3d0 <col:30, col:34> '<dependent type>' lvalue .first
|   |     |     `-DeclRefExpr 0x5dcb3b0 <col:30> 'pair<_U1, _U2>' lvalue ParmVar 0x5dc31a8 '__p' 'pair<_U1, _U2> &&'
|   |     |-BinaryOperator 0x5dcb608 <line:414:4, col:41> '<dependent type>' '='
|   |     | |-MemberExpr 0x5dcb470 <col:4> '_T2' lvalue ->second 0x5daa110
|   |     | | `-CXXThisExpr 0x5dcb460 <col:4> 'pair<_T1, _T2> *' implicit this
|   |     | `-CallExpr 0x5dcb5e0 <col:13, col:41> '<dependent type>'
|   |     |   |-UnresolvedLookupExpr 0x5dcb4e8 <col:13, col:29> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
|   |     |   `-CXXDependentScopeMemberExpr 0x5dcb598 <col:31, col:35> '<dependent type>' lvalue .second
|   |     |     `-DeclRefExpr 0x5dcb578 <col:31> 'pair<_U1, _U2>' lvalue ParmVar 0x5dc31a8 '__p' 'pair<_U1, _U2> &&'
|   |     `-ReturnStmt 0x5dcb6b0 <line:415:4, col:12>
|   |       `-UnaryOperator 0x5dcb698 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
|   |         `-CXXThisExpr 0x5dcb688 <col:12> 'pair<_T1, _T2> *' this
|   |-CXXMethodDecl 0x5dc34b0 <line:418:7, line:426:7> line:419:7 swap 'void (pair<_T1, _T2> &) noexcept(__and_<__is_nothrow_swappable<_T1>, __is_nothrow_swappable<_T2> >::value)'
|   | |-ParmVarDecl 0x5dc33b8 <col:12, col:18> col:18 referenced __p 'pair<_T1, _T2> &'
|   | `-CompoundStmt 0x5dcba50 <line:422:7, line:426:7>
|   |   |-DeclStmt 0x5dcb7e8 <line:423:2, col:17>
|   |   | `-UsingDecl 0x5dcb6f0 <col:2, col:13> col:13 std::swap
|   |   |-CallExpr 0x5dcb8f8 <line:424:2, col:23> '<dependent type>'
|   |   | |-UnresolvedLookupExpr 0x5dcb800 <col:2> '<dependent type>' lvalue (ADL) = 'swap' 0x5dcb798 0x5dcb748
|   |   | |-MemberExpr 0x5dcb860 <col:7> '_T1' lvalue ->first 0x5daa0b0
|   |   | | `-CXXThisExpr 0x5dcb850 <col:7> 'pair<_T1, _T2> *' implicit this
|   |   | `-CXXDependentScopeMemberExpr 0x5dcb8b0 <col:14, col:18> '<dependent type>' lvalue .first
|   |   |   `-DeclRefExpr 0x5dcb890 <col:14> 'pair<_T1, _T2>' lvalue ParmVar 0x5dc33b8 '__p' 'pair<_T1, _T2> &'
|   |   `-CallExpr 0x5dcba20 <line:425:2, col:25> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x5dcb928 <col:2> '<dependent type>' lvalue (ADL) = 'swap' 0x5dcb798 0x5dcb748
|   |     |-MemberExpr 0x5dcb988 <col:7> '_T2' lvalue ->second 0x5daa110
|   |     | `-CXXThisExpr 0x5dcb978 <col:7> 'pair<_T1, _T2> *' implicit this
|   |     `-CXXDependentScopeMemberExpr 0x5dcb9d8 <col:15, col:19> '<dependent type>' lvalue .second
|   |       `-DeclRefExpr 0x5dcb9b8 <col:15> 'pair<_T1, _T2>' lvalue ParmVar 0x5dc33b8 '__p' 'pair<_T1, _T2> &'
|   |-AccessSpecDecl 0x5dc3558 <line:428:5, col:12> col:5 private
|   `-FunctionTemplateDecl 0x5dc8700 <line:429:7, line:432:68> line:431:9 pair<_T1, _T2>
|     |-TemplateTypeParmDecl 0x5dc3580 <line:429:16, col:28> col:28 referenced typename depth 1 index 0 ... _Args1
|     |-NonTypeTemplateParmDecl 0x5dc3648 <col:36, col:51> col:51 referenced 'std::size_t':'unsigned long' depth 1 index 1 ... _Indexes1
|     |-TemplateTypeParmDecl 0x5dc36a8 <line:430:16, col:28> col:28 referenced typename depth 1 index 2 ... _Args2
|     |-NonTypeTemplateParmDecl 0x5dc3798 <col:36, col:51> col:51 referenced 'std::size_t':'unsigned long' depth 1 index 3 ... _Indexes2
|     `-CXXConstructorDecl 0x5dc8658 <line:431:9, line:432:68> line:431:9 pair<_T1, _T2> 'void (tuple<_Args1...> &, tuple<_Args2...> &, _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)'
|       |-ParmVarDecl 0x5dc39b0 <col:14, col:30> col:31 'tuple<_Args1...> &'
|       |-ParmVarDecl 0x5dc8190 <col:33, col:49> col:50 'tuple<_Args2...> &'
|       |-ParmVarDecl 0x5dc8350 <line:432:14, col:39> col:40 '_Index_tuple<_Indexes1...>'
|       `-ParmVarDecl 0x5dc8510 <col:42, col:67> col:68 '_Index_tuple<_Indexes2...>'
|-FunctionTemplateDecl 0x5dcc038 <line:441:3, line:444:66> line:443:5 operator==
| |-TemplateTypeParmDecl 0x5dcba78 <line:441:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dcbae8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dcbf98 <line:442:5, line:444:66> line:443:5 constexpr operator== 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |-ParmVarDecl 0x5dcbce8 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dcbe88 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dcd180 <line:444:5, col:66>
|     `-ReturnStmt 0x5dcd170 <col:7, col:58>
|       `-BinaryOperator 0x5dcd150 <col:14, col:58> '<dependent type>' '&&'
|         |-CXXOperatorCallExpr 0x5dccfc0 <col:14, col:31> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5dccf70 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5dcc038 0x5bfd038
|         | |-CXXDependentScopeMemberExpr 0x5dccec0 <col:14, col:18> '<dependent type>' lvalue .first
|         | | `-DeclRefExpr 0x5dcc0a0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcbce8 '__x' 'const pair<_T1, _T2> &'
|         | `-CXXDependentScopeMemberExpr 0x5dccf28 <col:27, col:31> '<dependent type>' lvalue .first
|         |   `-DeclRefExpr 0x5dccf08 <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcbe88 '__y' 'const pair<_T1, _T2> &'
|         `-CXXOperatorCallExpr 0x5dcd118 <col:40, col:58> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5dcd0c8 <col:51> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5dcc038 0x5bfd038
|           |-CXXDependentScopeMemberExpr 0x5dcd018 <col:40, col:44> '<dependent type>' lvalue .second
|           | `-DeclRefExpr 0x5dccff8 <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcbce8 '__x' 'const pair<_T1, _T2> &'
|           `-CXXDependentScopeMemberExpr 0x5dcd080 <col:54, col:58> '<dependent type>' lvalue .second
|             `-DeclRefExpr 0x5dcd060 <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcbe88 '__y' 'const pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dcd6e8 <line:447:3, line:451:65> line:449:5 operator<
| |-TemplateTypeParmDecl 0x5dcd198 <line:447:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dcd208 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dcd648 <line:448:5, line:451:65> line:449:5 constexpr operator< 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |-ParmVarDecl 0x5dcd3d8 <col:15, col:37> col:37 referenced __x 'const pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dcd578 <col:42, col:64> col:64 referenced __y 'const pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dcdbe8 <line:450:5, line:451:65>
|     `-ReturnStmt 0x5dcdbd8 <line:450:7, line:451:62>
|       `-BinaryOperator 0x5dcdbb8 <line:450:14, line:451:62> '<dependent type>' '||'
|         |-CXXOperatorCallExpr 0x5dcd868 <line:450:14, col:30> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5dcd820 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8
|         | |-CXXDependentScopeMemberExpr 0x5dcd790 <col:14, col:18> '<dependent type>' lvalue .first
|         | | `-DeclRefExpr 0x5dcd750 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcd3d8 '__x' 'const pair<_T1, _T2> &'
|         | `-CXXDependentScopeMemberExpr 0x5dcd7d8 <col:26, col:30> '<dependent type>' lvalue .first
|         |   `-DeclRefExpr 0x5dcd770 <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcd578 '__y' 'const pair<_T1, _T2> &'
|         `-ParenExpr 0x5dcdb98 <line:451:10, col:62> '<dependent type>'
|           `-BinaryOperator 0x5dcdb78 <col:11, col:56> '<dependent type>' '&&'
|             |-UnaryOperator 0x5dcda10 <col:11, col:34> '<dependent type>' prefix '!' cannot overflow
|             | `-ParenExpr 0x5dcd9f0 <col:12, col:34> '<dependent type>'
|             |   `-CXXOperatorCallExpr 0x5dcd9b8 <col:13, col:29> '<dependent type>'
|             |     |-UnresolvedLookupExpr 0x5dcd970 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8
|             |     |-CXXDependentScopeMemberExpr 0x5dcd8e0 <col:13, col:17> '<dependent type>' lvalue .first
|             |     | `-DeclRefExpr 0x5dcd8a0 <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcd578 '__y' 'const pair<_T1, _T2> &'
|             |     `-CXXDependentScopeMemberExpr 0x5dcd928 <col:25, col:29> '<dependent type>' lvalue .first
|             |       `-DeclRefExpr 0x5dcd8c0 <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcd3d8 '__x' 'const pair<_T1, _T2> &'
|             `-CXXOperatorCallExpr 0x5dcdb40 <col:39, col:56> '<dependent type>'
|               |-UnresolvedLookupExpr 0x5dcdaf8 <col:50> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8
|               |-CXXDependentScopeMemberExpr 0x5dcda68 <col:39, col:43> '<dependent type>' lvalue .second
|               | `-DeclRefExpr 0x5dcda28 <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcd3d8 '__x' 'const pair<_T1, _T2> &'
|               `-CXXDependentScopeMemberExpr 0x5dcdab0 <col:52, col:56> '<dependent type>' lvalue .second
|                 `-DeclRefExpr 0x5dcda48 <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcd578 '__y' 'const pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dce158 <line:454:3, line:457:29> line:456:5 operator!=
| |-TemplateTypeParmDecl 0x5dcdc00 <line:454:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dcdc78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dce0b8 <line:455:5, line:457:29> line:456:5 constexpr operator!= 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |-ParmVarDecl 0x5dcde48 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dcdfe8 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dce2d0 <line:457:5, col:29>
|     `-ReturnStmt 0x5dce2c0 <col:7, col:26>
|       `-UnaryOperator 0x5dce2a8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5dce288 <col:15, col:26> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5dce250 <col:16, col:23> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5dce200 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5dcc038 0x5bfd038
|             |-DeclRefExpr 0x5dce1c0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcde48 '__x' 'const pair<_T1, _T2> &'
|             `-DeclRefExpr 0x5dce1e0 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcdfe8 '__y' 'const pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dce838 <line:460:3, line:463:25> line:462:5 operator>
| |-TemplateTypeParmDecl 0x5dce2e8 <line:460:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dce358 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dce798 <line:461:5, line:463:25> line:462:5 constexpr operator> 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |-ParmVarDecl 0x5dce528 <col:15, col:37> col:37 referenced __x 'const pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dce6c8 <col:42, col:64> col:64 referenced __y 'const pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dce970 <line:463:5, col:25>
|     `-ReturnStmt 0x5dce960 <col:7, col:20>
|       `-CXXOperatorCallExpr 0x5dce928 <col:14, col:20> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5dce8e0 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8
|         |-DeclRefExpr 0x5dce8a0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dce6c8 '__y' 'const pair<_T1, _T2> &'
|         `-DeclRefExpr 0x5dce8c0 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dce528 '__x' 'const pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dceed8 <line:466:3, line:469:28> line:468:5 operator<=
| |-TemplateTypeParmDecl 0x5dce988 <line:466:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dce9f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dcee38 <line:467:5, line:469:28> line:468:5 constexpr operator<= 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |-ParmVarDecl 0x5dcebc8 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dced68 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dcf048 <line:469:5, col:28>
|     `-ReturnStmt 0x5dcf038 <col:7, col:25>
|       `-UnaryOperator 0x5dcf020 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5dcf000 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5dcefc8 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5dcef80 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8
|             |-DeclRefExpr 0x5dcef40 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dced68 '__y' 'const pair<_T1, _T2> &'
|             `-DeclRefExpr 0x5dcef60 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcebc8 '__x' 'const pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dcf5b8 <line:472:3, line:475:28> line:474:5 operator>=
| |-TemplateTypeParmDecl 0x5dcf060 <line:472:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dcf0d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dcf518 <line:473:5, line:475:28> line:474:5 constexpr operator>= 'bool (const pair<_T1, _T2> &, const pair<_T1, _T2> &)' inline
|   |-ParmVarDecl 0x5dcf2a8 <col:16, col:38> col:38 referenced __x 'const pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dcf448 <col:43, col:65> col:65 referenced __y 'const pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dcf728 <line:475:5, col:28>
|     `-ReturnStmt 0x5dcf718 <col:7, col:25>
|       `-UnaryOperator 0x5dcf700 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5dcf6e0 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5dcf6a8 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5dcf660 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8
|             |-DeclRefExpr 0x5dcf620 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcf2a8 '__x' 'const pair<_T1, _T2> &'
|             `-DeclRefExpr 0x5dcf640 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x5dcf448 '__y' 'const pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dd0318 <line:481:3, line:492:22> line:490:5 swap
| |-TemplateTypeParmDecl 0x5dcf740 <line:481:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dcf7b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dd0278 <line:482:5, line:492:22> line:490:5 swap 'typename enable_if<__and_<__is_swappable<_T1>, __is_swappable<_T2> >::value>::type (pair<_T1, _T2> &, pair<_T1, _T2> &) noexcept(noexcept(__x.swap(__y)))' inline
|   |-ParmVarDecl 0x5dcfed8 <col:10, col:26> col:26 referenced __x 'pair<_T1, _T2> &'
|   |-ParmVarDecl 0x5dd0078 <col:31, col:47> col:47 referenced __y 'pair<_T1, _T2> &'
|   `-CompoundStmt 0x5dd0430 <line:492:5, col:22>
|     `-CallExpr 0x5dd0408 <col:7, col:19> '<dependent type>'
|       |-CXXDependentScopeMemberExpr 0x5dd03a0 <col:7, col:11> '<dependent type>' lvalue .swap
|       | `-DeclRefExpr 0x5dd0380 <col:7> 'pair<_T1, _T2>' lvalue ParmVar 0x5dcfed8 '__x' 'pair<_T1, _T2> &'
|       `-DeclRefExpr 0x5dd03e8 <col:16> 'pair<_T1, _T2>' lvalue ParmVar 0x5dd0078 '__y' 'pair<_T1, _T2> &'
|-FunctionTemplateDecl 0x5dd0e68 <line:495:3, line:498:42> col:5 swap
| |-TemplateTypeParmDecl 0x5dd0448 <line:495:12, col:21> col:21 referenced typename depth 0 index 0 _T1
| |-TemplateTypeParmDecl 0x5dd04b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
| `-FunctionDecl 0x5dd0dc8 <line:496:5, line:498:42> col:5 swap 'typename enable_if<!__and_<__is_swappable<_T1>, __is_swappable<_T2> >::value>::type (pair<_T1, _T2> &, pair<_T1, _T2> &)' delete
|   |-ParmVarDecl 0x5dd0b08 <col:10, col:24> col:25 'pair<_T1, _T2> &'
|   `-ParmVarDecl 0x5dd0ca8 <col:27, col:41> col:42 'pair<_T1, _T2> &'
`-FunctionTemplateDecl 0x5dd16b0 <line:516:3, line:525:5> line:519:5 make_pair
  |-TemplateTypeParmDecl 0x5dd0ee0 <line:516:12, col:21> col:21 referenced typename depth 0 index 0 _T1
  |-TemplateTypeParmDecl 0x5dd0f58 <col:26, col:35> col:35 referenced typename depth 0 index 1 _T2
  `-FunctionDecl 0x5dd1610 <line:517:5, line:525:5> line:519:5 constexpr make_pair 'pair<typename __decay_and_strip<_T1>::__type, typename __decay_and_strip<_T2>::__type> (_T1 &&, _T2 &&)'
    |-ParmVarDecl 0x5dd1428 <col:15, col:21> col:21 referenced __x '_T1 &&'
    |-ParmVarDecl 0x5dd14c8 <col:26, col:32> col:32 referenced __y '_T2 &&'
    `-CompoundStmt 0x5dd1e90 <line:520:5, line:525:5>
      |-DeclStmt 0x5dd1888 <line:521:7, col:65>
      | `-TypedefDecl 0x5dd1830 <col:7, col:55> col:55 referenced __ds_type1 'typename __decay_and_strip<_T1>::__type'
      |   `-DependentNameType 0x5dd17c0 'typename __decay_and_strip<_T1>::__type' dependent
      |-DeclStmt 0x5dd1a08 <line:522:7, col:65>
      | `-TypedefDecl 0x5dd19b0 <col:7, col:55> col:55 referenced __ds_type2 'typename __decay_and_strip<_T2>::__type'
      |   `-DependentNameType 0x5dd1940 'typename __decay_and_strip<_T2>::__type' dependent
      |-DeclStmt 0x5dd1bc0 <line:523:7, col:55>
      | `-TypedefDecl 0x5dd1b68 <col:7, col:44> col:44 referenced __pair_type 'pair<__ds_type1, __ds_type2>'
      |   `-TemplateSpecializationType 0x5dd1a80 'pair<__ds_type1, __ds_type2>' dependent pair
      |     |-TemplateArgument type '__ds_type1':'typename __decay_and_strip<_T1>::__type'
      |     `-TemplateArgument type '__ds_type2':'typename __decay_and_strip<_T2>::__type'
      `-ReturnStmt 0x5dd1e80 <line:524:7, col:72>
        `-CXXUnresolvedConstructExpr 0x5dd1e50 <col:14, col:72> '__pair_type':'pair<__ds_type1, __ds_type2>' '__pair_type':'pair<__ds_type1, __ds_type2>'
          |-CallExpr 0x5dd1d08 <col:26, col:47> '<dependent type>'
          | |-UnresolvedLookupExpr 0x5dd1c58 <col:26, col:42> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
          | `-DeclRefExpr 0x5dd1ce8 <col:44> '_T1' lvalue ParmVar 0x5dd1428 '__x' '_T1 &&'
          `-CallExpr 0x5dd1e28 <col:50, col:71> '<dependent type>'
            |-UnresolvedLookupExpr 0x5dd1d78 <col:50, col:66> '<dependent type>' lvalue (no ADL) = 'forward' 0x5d4ff40 0x5d50400
            `-DeclRefExpr 0x5dd1e08 <col:68> '_T2' lvalue ParmVar 0x5dd14c8 '__y' '_T2 &&'
NamespaceDecl 0x5dd3160 prev 0x5d9dc28 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator_base_types.h:70:1, line:239:1> line:70:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5dd31d0 <col:31, col:56> Default
|-CXXRecordDecl 0x5dd3210 <line:89:3, col:31> col:10 referenced struct input_iterator_tag definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5dd3328 <col:3, col:10> col:10 implicit struct input_iterator_tag
|-CXXRecordDecl 0x5dd33d0 <line:92:3, col:32> col:10 struct output_iterator_tag definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x5dd34e8 <col:3, col:10> col:10 implicit struct output_iterator_tag
|-CXXRecordDecl 0x5dd3590 <line:95:3, col:61> col:10 referenced struct forward_iterator_tag definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::input_iterator_tag'
| `-CXXRecordDecl 0x5dd36e8 <col:3, col:10> col:10 implicit struct forward_iterator_tag
|-CXXRecordDecl 0x5dd3790 <line:99:3, col:69> col:10 referenced struct bidirectional_iterator_tag definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::forward_iterator_tag'
| `-CXXRecordDecl 0x5dd38e8 <col:3, col:10> col:10 implicit struct bidirectional_iterator_tag
|-CXXRecordDecl 0x5dd3990 <line:103:3, col:75> col:10 referenced struct random_access_iterator_tag definition
| |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'std::bidirectional_iterator_tag'
| `-CXXRecordDecl 0x5dd3ae8 <col:3, col:10> col:10 implicit struct random_access_iterator_tag
|-ClassTemplateDecl 0x5dd3f20 <line:116:3, line:130:5> line:118:12 iterator
| |-TemplateTypeParmDecl 0x5dd3b90 <line:116:12, col:21> col:21 referenced typename depth 0 index 0 _Category
| |-TemplateTypeParmDecl 0x5dd3c08 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Tp
| |-TemplateTypeParmDecl 0x5dd3c88 <col:46, col:67> col:55 referenced typename depth 0 index 2 _Distance
| | `-TemplateArgument type 'std::ptrdiff_t':'long'
| |-TemplateTypeParmDecl 0x5dd3d38 <line:117:12, col:35> col:21 referenced typename depth 0 index 3 _Pointer
| | `-TemplateArgument type '_Tp *'
| |-TemplateTypeParmDecl 0x5dd3de8 <col:38, col:63> col:47 referenced typename depth 0 index 4 _Reference
| | `-TemplateArgument type '_Tp &'
| `-CXXRecordDecl 0x5dd3e90 <line:118:5, line:130:5> line:118:12 struct iterator definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5dd4230 <col:5, col:12> col:12 implicit struct iterator
|   |-TypedefDecl 0x5dd42d0 <line:121:7, col:25> col:25 iterator_category '_Category'
|   | `-TemplateTypeParmType 0x5dd3be0 '_Category' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5dd3b90 '_Category'
|   |-TypedefDecl 0x5dd4338 <line:123:7, col:19> col:19 value_type '_Tp'
|   | `-TemplateTypeParmType 0x5dd3c50 '_Tp' dependent depth 0 index 1
|   |   `-TemplateTypeParm 0x5dd3c08 '_Tp'
|   |-TypedefDecl 0x5dd43a0 <line:125:7, col:25> col:25 difference_type '_Distance'
|   | `-TemplateTypeParmType 0x5dd3cd0 '_Distance' dependent depth 0 index 2
|   |   `-TemplateTypeParm 0x5dd3c88 '_Distance'
|   |-TypedefDecl 0x5dd4408 <line:127:7, col:24> col:24 pointer '_Pointer'
|   | `-TemplateTypeParmType 0x5dd3d80 '_Pointer' dependent depth 0 index 3
|   |   `-TemplateTypeParm 0x5dd3d38 '_Pointer'
|   `-TypedefDecl 0x5dd4470 <line:129:7, col:26> col:26 reference '_Reference'
|     `-TemplateTypeParmType 0x5dd3e30 '_Reference' dependent depth 0 index 4
|       `-TemplateTypeParm 0x5dd3de8 '_Reference'
|-ClassTemplateDecl 0x5dd46e8 <line:143:3, line:144:32> col:12 __iterator_traits
| |-TemplateTypeParmDecl 0x5dd44e0 <line:143:12, col:21> col:21 typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5dd45c0 <col:32, <scratch space>:92:1> /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator_base_types.h:143:32 typename depth 0 index 1
| | `-TemplateArgument type '__void_t<>':'void'
| `-CXXRecordDecl 0x5dd4658 <line:144:5, col:32> col:12 struct __iterator_traits definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   `-CXXRecordDecl 0x5dd4980 <col:5, col:12> col:12 implicit struct __iterator_traits
|-ClassTemplatePartialSpecializationDecl 0x5dd5258 <line:146:3, line:159:5> line:147:12 struct __iterator_traits definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateArgument type 'void'
| |-TemplateTypeParmDecl 0x5dd4a28 <line:146:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-CXXRecordDecl 0x5dd54d8 <line:147:5, col:12> col:12 implicit struct __iterator_traits
| |-TypedefDecl 0x5dd55c0 <line:154:7, col:53> col:53 iterator_category 'typename _Iterator::iterator_category'
| | `-DependentNameType 0x5dd4b20 'typename _Iterator::iterator_category' dependent
| |-TypedefDecl 0x5dd5670 <line:155:7, col:46> col:46 value_type 'typename _Iterator::value_type'
| | `-DependentNameType 0x5dd4be0 'typename _Iterator::value_type' dependent
| |-TypedefDecl 0x5dd5720 <line:156:7, col:51> col:51 difference_type 'typename _Iterator::difference_type'
| | `-DependentNameType 0x5dd4ca0 'typename _Iterator::difference_type' dependent
| |-TypedefDecl 0x5dd57d0 <line:157:7, col:43> col:43 pointer 'typename _Iterator::pointer'
| | `-DependentNameType 0x5dd4d60 'typename _Iterator::pointer' dependent
| `-TypedefDecl 0x5dd5880 <line:158:7, col:45> col:45 reference 'typename _Iterator::reference'
|   `-DependentNameType 0x5dd4e20 'typename _Iterator::reference' dependent
|-ClassTemplateDecl 0x5dd5a10 <line:161:3, line:163:45> line:162:12 iterator_traits
| |-TemplateTypeParmDecl 0x5dd58f0 <line:161:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-CXXRecordDecl 0x5dd5980 <line:162:5, line:163:45> line:162:12 struct iterator_traits definition
|   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public '__iterator_traits<_Iterator>'
|   `-CXXRecordDecl 0x5dd5d10 <col:5, col:12> col:12 implicit struct iterator_traits
|-ClassTemplatePartialSpecializationDecl 0x5dd5f40 <line:177:3, line:185:5> line:178:12 struct iterator_traits definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 *'
| |-TemplateTypeParmDecl 0x5dd5db8 <line:177:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5dd6168 <line:178:5, col:12> col:12 implicit struct iterator_traits
| |-TypedefDecl 0x5dd6208 <line:180:7, col:42> col:42 iterator_category 'std::random_access_iterator_tag'
| | `-RecordType 0x5dd3a20 'std::random_access_iterator_tag'
| |   `-CXXRecord 0x5dd3990 'random_access_iterator_tag'
| |-TypedefDecl 0x5dd6270 <line:181:7, col:19> col:19 value_type '_Tp'
| | `-TemplateTypeParmType 0x5dd5e00 '_Tp' dependent depth 0 index 0
| |   `-TemplateTypeParm 0x5dd5db8 '_Tp'
| |-TypedefDecl 0x5dd62d8 <line:182:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | `-TypedefType 0x5bfaa00 'std::ptrdiff_t' sugar
| |   |-Typedef 0x5b39b50 'ptrdiff_t'
| |   `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5dd6340 <line:183:7, col:20> col:20 pointer '_Tp *'
| | `-PointerType 0x5dd5e40 '_Tp *' dependent
| |   `-TemplateTypeParmType 0x5dd5e00 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5dd5db8 '_Tp'
| `-TypedefDecl 0x5dd63d8 <line:184:7, col:20> col:20 reference '_Tp &'
|   `-LValueReferenceType 0x5dd63a0 '_Tp &' dependent
|     `-TemplateTypeParmType 0x5dd5e00 '_Tp' dependent depth 0 index 0
|       `-TemplateTypeParm 0x5dd5db8 '_Tp'
|-ClassTemplatePartialSpecializationDecl 0x5dd65d0 <line:188:3, line:196:5> line:189:12 struct iterator_traits definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'const type-parameter-0-0 *'
| |-TemplateTypeParmDecl 0x5dd6448 <line:188:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5dd67f8 <line:189:5, col:12> col:12 implicit struct iterator_traits
| |-TypedefDecl 0x5dd6898 <line:191:7, col:42> col:42 iterator_category 'std::random_access_iterator_tag'
| | `-RecordType 0x5dd3a20 'std::random_access_iterator_tag'
| |   `-CXXRecord 0x5dd3990 'random_access_iterator_tag'
| |-TypedefDecl 0x5dd6900 <line:192:7, col:19> col:19 value_type '_Tp'
| | `-TemplateTypeParmType 0x5dd6490 '_Tp' dependent depth 0 index 0
| |   `-TemplateTypeParm 0x5dd6448 '_Tp'
| |-TypedefDecl 0x5dd6968 <line:193:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | `-TypedefType 0x5bfaa00 'std::ptrdiff_t' sugar
| |   |-Typedef 0x5b39b50 'ptrdiff_t'
| |   `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5dd69d0 <line:194:7, col:26> col:26 pointer 'const _Tp *'
| | `-PointerType 0x5dd64d0 'const _Tp *' dependent
| |   `-QualType 0x5dd6491 'const _Tp' const
| |     `-TemplateTypeParmType 0x5dd6490 '_Tp' dependent depth 0 index 0
| |       `-TemplateTypeParm 0x5dd6448 '_Tp'
| `-TypedefDecl 0x5dd6a68 <line:195:7, col:26> col:26 reference 'const _Tp &'
|   `-LValueReferenceType 0x5dd6a30 'const _Tp &' dependent
|     `-QualType 0x5dd6491 'const _Tp' const
|       `-TemplateTypeParmType 0x5dd6490 '_Tp' dependent depth 0 index 0
|         `-TemplateTypeParm 0x5dd6448 '_Tp'
|-FunctionTemplateDecl 0x5dd6e78 <line:202:3, line:206:68> line:205:5 __iterator_category
| |-TemplateTypeParmDecl 0x5dd6ad8 <line:202:12, col:21> col:21 referenced typename depth 0 index 0 _Iter
| `-FunctionDecl 0x5dd6dd8 <line:203:5, line:206:68> line:205:5 constexpr __iterator_category 'typename iterator_traits<_Iter>::iterator_category (const _Iter &)' inline
|   |-ParmVarDecl 0x5dd6cd8 <col:25, col:36> col:37 'const _Iter &'
|   `-CompoundStmt 0x5dd7020 <line:206:5, col:68>
|     `-ReturnStmt 0x5dd7010 <col:7, col:65>
|       `-CXXUnresolvedConstructExpr 0x5dd6ff0 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category' 'typename iterator_traits<_Iter>::iterator_category'
`-TypeAliasTemplateDecl 0x5dd75a0 <line:231:3, line:235:40> line:232:5 _RequireInputIter
  |-TemplateTypeParmDecl 0x5dd7038 <line:231:12, col:21> col:21 referenced typename depth 0 index 0 _InIter
  `-TypeAliasDecl 0x5dd7540 <line:232:5, line:235:40> line:232:11 _RequireInputIter 'typename enable_if<is_convertible<typename iterator_traits<_InIter>::iterator_category, input_iterator_tag>::value>::type'
    `-DependentNameType 0x5dd74d0 'typename enable_if<is_convertible<typename iterator_traits<_InIter>::iterator_category, input_iterator_tag>::value>::type' dependent
NamespaceDecl 0x5dd7698 prev 0x5dd3160 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator_base_funcs.h:67:1, line:233:1> line:67:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5dd7708 <col:31, col:56> Default
|-ClassTemplateDecl 0x5dd7860 <line:71:3, col:30> col:30 _List_iterator
| |-TemplateTypeParmDecl 0x5dd7748 <col:13> col:13 typename depth 0 index 0
| `-CXXRecordDecl 0x5dd77d0 <col:23, col:30> col:30 struct _List_iterator
|-ClassTemplateDecl 0x5dd7b60 <line:72:3, col:30> col:30 _List_const_iterator
| |-TemplateTypeParmDecl 0x5dd7a48 <col:13> col:13 typename depth 0 index 0
| `-CXXRecordDecl 0x5dd7ad0 <col:23, col:30> col:30 struct _List_const_iterator
|-FunctionTemplateDecl 0x5dd81c8 <line:77:3, line:93:5> line:80:5 __distance
| |-TemplateTypeParmDecl 0x5dd7d48 <line:77:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| `-FunctionDecl 0x5dd8128 <line:78:5, line:93:5> line:80:5 constexpr __distance 'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator, std::input_iterator_tag)' inline
|   |-ParmVarDecl 0x5dd7f00 <col:16, col:31> col:31 referenced __first '_InputIterator'
|   |-ParmVarDecl 0x5dd7f78 <col:40, col:55> col:55 referenced __last '_InputIterator'
|   |-ParmVarDecl 0x5dd7ff0 <line:81:16> col:34 'std::input_iterator_tag'
|   `-CompoundStmt 0x5dd8598 <line:82:5, line:93:5>
|     |-DeclStmt 0x5dd83d8 <line:86:7, col:72>
|     | `-VarDecl 0x5dd8350 <col:7, col:71> col:65 referenced __n 'typename iterator_traits<_InputIterator>::difference_type' nrvo cinit
|     |   `-IntegerLiteral 0x5dd83b8 <col:71> 'int' 0
|     |-WhileStmt 0x5dd8548 <line:87:7, line:91:2>
|     | |-CXXOperatorCallExpr 0x5dd8480 <line:87:14, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5dd8430 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158
|     | | |-DeclRefExpr 0x5dd83f0 <col:14> '_InputIterator' lvalue ParmVar 0x5dd7f00 '__first' '_InputIterator'
|     | | `-DeclRefExpr 0x5dd8410 <col:25> '_InputIterator' lvalue ParmVar 0x5dd7f78 '__last' '_InputIterator'
|     | `-CompoundStmt 0x5dd8528 <line:88:2, line:91:2>
|     |   |-UnaryOperator 0x5dd84d8 <line:89:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     |   | `-DeclRefExpr 0x5dd84b8 <col:6> '_InputIterator' lvalue ParmVar 0x5dd7f00 '__first' '_InputIterator'
|     |   `-UnaryOperator 0x5dd8510 <line:90:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x5dd84f0 <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x5dd8350 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
|     `-ReturnStmt 0x5dd8580 <line:92:7, col:14>
|       `-DeclRefExpr 0x5dd8560 <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x5dd8350 '__n' 'typename iterator_traits<_InputIterator>::difference_type'
|-FunctionTemplateDecl 0x5dd8a18 <line:95:3, line:105:5> line:98:5 __distance
| |-TemplateTypeParmDecl 0x5dd85c0 <line:95:12, col:21> col:21 referenced typename depth 0 index 0 _RandomAccessIterator
| `-FunctionDecl 0x5dd8978 <line:96:5, line:105:5> line:98:5 constexpr __distance 'typename iterator_traits<_RandomAccessIterator>::difference_type (_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag)' inline
|   |-ParmVarDecl 0x5dd8750 <col:16, col:38> col:38 referenced __first '_RandomAccessIterator'
|   |-ParmVarDecl 0x5dd87c8 <col:47, col:69> col:69 referenced __last '_RandomAccessIterator'
|   |-ParmVarDecl 0x5dd8840 <line:99:16> col:42 'std::random_access_iterator_tag'
|   `-CompoundStmt 0x5dd8af8 <line:100:5, line:105:5>
|     `-ReturnStmt 0x5dd8ae8 <line:104:7, col:23>
|       `-BinaryOperator 0x5dd8ac8 <col:14, col:23> '<dependent type>' '-'
|         |-DeclRefExpr 0x5dd8a88 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x5dd87c8 '__last' '_RandomAccessIterator'
|         `-DeclRefExpr 0x5dd8aa8 <col:23> '_RandomAccessIterator' lvalue ParmVar 0x5dd8750 '__first' '_RandomAccessIterator'
|-FunctionTemplateDecl 0x5dda370 <line:135:3, line:143:5> line:138:5 distance
| |-TemplateTypeParmDecl 0x5dd8b10 <line:135:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| `-FunctionDecl 0x5dd8e38 <line:136:5, line:143:5> line:138:5 distance 'typename iterator_traits<_InputIterator>::difference_type (_InputIterator, _InputIterator)' inline
|   |-ParmVarDecl 0x5dd8ca0 <col:14, col:29> col:29 referenced __first '_InputIterator'
|   |-ParmVarDecl 0x5dd8d18 <col:38, col:53> col:53 referenced __last '_InputIterator'
|   `-CompoundStmt 0x5dda598 <line:139:5, line:143:5>
|     `-ReturnStmt 0x5dda588 <line:141:7, line:142:42>
|       `-CallExpr 0x5dda550 <line:141:14, line:142:42> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5dda410 <line:141:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__distance' 0x5dd81c8 0x5dd8a18
|         |-DeclRefExpr 0x5dda460 <col:30> '_InputIterator' lvalue ParmVar 0x5dd8ca0 '__first' '_InputIterator'
|         |-DeclRefExpr 0x5dda480 <col:39> '_InputIterator' lvalue ParmVar 0x5dd8d18 '__last' '_InputIterator'
|         `-CallExpr 0x5dda528 <line:142:9, col:41> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5dda4c0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x5dd6e78
|           `-DeclRefExpr 0x5dda508 <col:34> '_InputIterator' lvalue ParmVar 0x5dd8ca0 '__first' '_InputIterator'
|-FunctionTemplateDecl 0x5dda9a8 <line:145:3, line:154:5> line:147:5 __advance
| |-TemplateTypeParmDecl 0x5dda5b0 <line:145:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| |-TemplateTypeParmDecl 0x5dda628 <col:37, col:46> col:46 referenced typename depth 0 index 1 _Distance
| `-FunctionDecl 0x5dda908 <line:146:5, line:154:5> line:147:5 constexpr __advance 'void (_InputIterator &, _Distance, std::input_iterator_tag)' inline
|   |-ParmVarDecl 0x5dda6f8 <col:15, col:31> col:31 referenced __i '_InputIterator &'
|   |-ParmVarDecl 0x5dda770 <col:36, col:46> col:46 referenced __n '_Distance'
|   |-ParmVarDecl 0x5dda7e8 <col:51> col:69 'std::input_iterator_tag'
|   `-CompoundStmt 0x5ddaac8 <line:148:5, line:154:5>
|     |-NullStmt 0x5ddaa18 <line:151:33>
|     `-WhileStmt 0x5ddaab0 <line:152:7, line:153:4>
|       |-UnaryOperator 0x5ddaa60 <line:152:14, col:17> '<dependent type>' postfix '--' cannot overflow
|       | `-DeclRefExpr 0x5ddaa20 <col:14> '_Distance' lvalue ParmVar 0x5dda770 '__n' '_Distance'
|       `-UnaryOperator 0x5ddaa98 <line:153:2, col:4> '<dependent type>' prefix '++' cannot overflow
|         `-DeclRefExpr 0x5ddaa78 <col:4> '_InputIterator' lvalue ParmVar 0x5dda6f8 '__i' '_InputIterator &'
|-FunctionTemplateDecl 0x5ddaed8 <line:156:3, line:170:5> line:158:5 __advance
| |-TemplateTypeParmDecl 0x5ddaae8 <line:156:12, col:21> col:21 referenced typename depth 0 index 0 _BidirectionalIterator
| |-TemplateTypeParmDecl 0x5ddab58 <col:45, col:54> col:54 referenced typename depth 0 index 1 _Distance
| `-FunctionDecl 0x5ddae38 <line:157:5, line:170:5> line:158:5 constexpr __advance 'void (_BidirectionalIterator &, _Distance, std::bidirectional_iterator_tag)' inline
|   |-ParmVarDecl 0x5ddac28 <col:15, col:39> col:39 referenced __i '_BidirectionalIterator &'
|   |-ParmVarDecl 0x5ddaca0 <col:44, col:54> col:54 referenced __n '_Distance'
|   |-ParmVarDecl 0x5ddad18 <line:159:8> col:34 'std::bidirectional_iterator_tag'
|   `-CompoundStmt 0x5ddb180 <line:160:5, line:170:5>
|     `-IfStmt 0x5ddb158 <line:164:7, line:169:6> has_else
|       |-CXXOperatorCallExpr 0x5ddafd0 <line:164:11, col:17> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x5ddaf88 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838
|       | |-DeclRefExpr 0x5ddaf48 <col:11> '_Distance' lvalue ParmVar 0x5ddaca0 '__n' '_Distance'
|       | `-IntegerLiteral 0x5ddaf68 <col:17> 'int' 0
|       |-WhileStmt 0x5ddb098 <line:165:9, line:166:6>
|       | |-UnaryOperator 0x5ddb048 <line:165:16, col:19> '<dependent type>' postfix '--' cannot overflow
|       | | `-DeclRefExpr 0x5ddb008 <col:16> '_Distance' lvalue ParmVar 0x5ddaca0 '__n' '_Distance'
|       | `-UnaryOperator 0x5ddb080 <line:166:4, col:6> '<dependent type>' prefix '++' cannot overflow
|       |   `-DeclRefExpr 0x5ddb060 <col:6> '_BidirectionalIterator' lvalue ParmVar 0x5ddac28 '__i' '_BidirectionalIterator &'
|       `-WhileStmt 0x5ddb140 <line:168:9, line:169:6>
|         |-UnaryOperator 0x5ddb0f0 <line:168:16, col:19> '<dependent type>' postfix '++' cannot overflow
|         | `-DeclRefExpr 0x5ddb0b0 <col:16> '_Distance' lvalue ParmVar 0x5ddaca0 '__n' '_Distance'
|         `-UnaryOperator 0x5ddb128 <line:169:4, col:6> '<dependent type>' prefix '--' cannot overflow
|           `-DeclRefExpr 0x5ddb108 <col:6> '_BidirectionalIterator' lvalue ParmVar 0x5ddac28 '__i' '_BidirectionalIterator &'
|-FunctionTemplateDecl 0x5ddb588 <line:172:3, line:181:5> line:174:5 __advance
| |-TemplateTypeParmDecl 0x5ddb198 <line:172:12, col:21> col:21 referenced typename depth 0 index 0 _RandomAccessIterator
| |-TemplateTypeParmDecl 0x5ddb208 <col:44, col:53> col:53 referenced typename depth 0 index 1 _Distance
| `-FunctionDecl 0x5ddb4e8 <line:173:5, line:181:5> line:174:5 constexpr __advance 'void (_RandomAccessIterator &, _Distance, std::random_access_iterator_tag)' inline
|   |-ParmVarDecl 0x5ddb2d8 <col:15, col:38> col:38 referenced __i '_RandomAccessIterator &'
|   |-ParmVarDecl 0x5ddb350 <col:43, col:53> col:53 referenced __n '_Distance'
|   |-ParmVarDecl 0x5ddb3c8 <line:175:15> col:41 'std::random_access_iterator_tag'
|   `-CompoundStmt 0x5ddb668 <line:176:5, line:181:5>
|     `-CompoundAssignOperator 0x5ddb638 <line:180:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|       |-DeclRefExpr 0x5ddb5f8 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x5ddb2d8 '__i' '_RandomAccessIterator &'
|       `-DeclRefExpr 0x5ddb618 <col:14> '_Distance' lvalue ParmVar 0x5ddb350 '__n' '_Distance'
|-FunctionTemplateDecl 0x5ddb9f8 <line:195:3, line:202:5> line:197:5 advance
| |-TemplateTypeParmDecl 0x5ddb680 <line:195:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator
| |-TemplateTypeParmDecl 0x5ddb6f8 <col:37, col:46> col:46 referenced typename depth 0 index 1 _Distance
| `-FunctionDecl 0x5ddb958 <line:196:5, line:202:5> line:197:5 advance 'void (_InputIterator &, _Distance)' inline
|   |-ParmVarDecl 0x5ddb7c8 <col:13, col:29> col:29 referenced __i '_InputIterator &'
|   |-ParmVarDecl 0x5ddb840 <col:34, col:44> col:44 referenced __n '_Distance'
|   `-CompoundStmt 0x5ddbdb0 <line:198:5, line:202:5>
|     |-DeclStmt 0x5ddbbf8 <line:200:7, col:74>
|     | `-VarDecl 0x5ddbb70 <col:7, col:71> col:65 referenced __d 'typename iterator_traits<_InputIterator>::difference_type' cinit
|     |   `-DeclRefExpr 0x5ddbbd8 <col:71> '_Distance' lvalue ParmVar 0x5ddb840 '__n' '_Distance'
|     `-CallExpr 0x5ddbd78 <line:201:7, col:61> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5ddbc30 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__advance' 0x5dda9a8 0x5ddaed8 0x5ddb588
|       |-DeclRefExpr 0x5ddbc88 <col:22> '_InputIterator' lvalue ParmVar 0x5ddb7c8 '__i' '_InputIterator &'
|       |-DeclRefExpr 0x5ddbca8 <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x5ddbb70 '__d' 'typename iterator_traits<_InputIterator>::difference_type'
|       `-CallExpr 0x5ddbd50 <col:32, col:60> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5ddbce8 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '__iterator_category' 0x5dd6e78
|         `-DeclRefExpr 0x5ddbd30 <col:57> '_InputIterator' lvalue ParmVar 0x5ddb7c8 '__i' '_InputIterator &'
|-FunctionTemplateDecl 0x5ddc1c8 <line:206:3, line:216:5> line:208:5 next
| |-TemplateTypeParmDecl 0x5ddbdd0 <line:206:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| `-FunctionDecl 0x5ddc128 <line:207:5, line:216:5> line:208:5 next '_ForwardIterator (_ForwardIterator, typename iterator_traits<_ForwardIterator>::difference_type)' inline
|   |-ParmVarDecl 0x5ddbe70 <col:10, col:27> col:27 referenced __x '_ForwardIterator'
|   |-ParmVarDecl 0x5ddbff0 <col:32, line:209:60> col:54 referenced __n 'typename iterator_traits<_ForwardIterator>::difference_type' cinit
|   | `-IntegerLiteral 0x5ddc058 <col:60> 'int' 1
|   `-CompoundStmt 0x5ddc338 <line:210:5, line:216:5>
|     |-CallExpr 0x5ddc2d8 <line:214:7, col:28> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x5ddc250 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x5ddb9f8
|     | |-DeclRefExpr 0x5ddc298 <col:20> '_ForwardIterator' lvalue ParmVar 0x5ddbe70 '__x' '_ForwardIterator'
|     | `-DeclRefExpr 0x5ddc2b8 <col:25> 'typename iterator_traits<_ForwardIterator>::difference_type' lvalue ParmVar 0x5ddbff0 '__n' 'typename iterator_traits<_ForwardIterator>::difference_type'
|     `-ReturnStmt 0x5ddc328 <line:215:7, col:14>
|       `-DeclRefExpr 0x5ddc308 <col:14> '_ForwardIterator' lvalue ParmVar 0x5ddbe70 '__x' '_ForwardIterator'
`-FunctionTemplateDecl 0x5ddc708 <line:218:3, line:228:5> line:220:5 prev
  |-TemplateTypeParmDecl 0x5ddc358 <line:218:12, col:21> col:21 referenced typename depth 0 index 0 _BidirectionalIterator
  `-FunctionDecl 0x5ddc668 <line:219:5, line:228:5> line:220:5 prev '_BidirectionalIterator (_BidirectionalIterator, typename iterator_traits<_BidirectionalIterator>::difference_type)' inline
    |-ParmVarDecl 0x5ddc3f0 <col:10, col:33> col:33 referenced __x '_BidirectionalIterator'
    |-ParmVarDecl 0x5ddc570 <col:38, line:221:66> col:60 referenced __n 'typename iterator_traits<_BidirectionalIterator>::difference_type' cinit
    | `-IntegerLiteral 0x5ddc5d8 <col:66> 'int' 1
    `-CompoundStmt 0x5ddc890 <line:222:5, line:228:5>
      |-CallExpr 0x5ddc830 <line:226:7, col:29> '<dependent type>'
      | |-UnresolvedLookupExpr 0x5ddc790 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x5ddb9f8
      | |-DeclRefExpr 0x5ddc7d8 <col:20> '_BidirectionalIterator' lvalue ParmVar 0x5ddc3f0 '__x' '_BidirectionalIterator'
      | `-UnaryOperator 0x5ddc818 <col:25, col:26> '<dependent type>' prefix '-' cannot overflow
      |   `-DeclRefExpr 0x5ddc7f8 <col:26> 'typename iterator_traits<_BidirectionalIterator>::difference_type' lvalue ParmVar 0x5ddc570 '__n' 'typename iterator_traits<_BidirectionalIterator>::difference_type'
      `-ReturnStmt 0x5ddc880 <line:227:7, col:14>
        `-DeclRefExpr 0x5ddc860 <col:14> '_BidirectionalIterator' lvalue ParmVar 0x5ddc3f0 '__x' '_BidirectionalIterator'
NamespaceDecl 0x5ddcd50 prev 0x5dd7698 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/ptr_traits.h:37:1, line:150:1> line:37:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5ddcdc0 <col:31, col:56> Default
|-CXXRecordDecl 0x5ddce00 <line:41:3, col:9> col:9 referenced class __undefined
|-ClassTemplateDecl 0x5ddcfd0 <line:44:3, line:46:33> line:45:12 __get_first_arg
| |-TemplateTypeParmDecl 0x5ddceb0 <line:44:12, col:21> col:21 typename depth 0 index 0 _Tp
| `-CXXRecordDecl 0x5ddcf40 <line:45:5, line:46:33> line:45:12 struct __get_first_arg definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5ddd220 <col:5, col:12> col:12 implicit struct __get_first_arg
|   `-TypeAliasDecl 0x5ddd2c0 <line:46:7, col:20> col:13 type 'std::__undefined'
|     `-RecordType 0x5ddce90 'std::__undefined'
|       `-CXXRecord 0x5ddce00 '__undefined'
|-ClassTemplatePartialSpecializationDecl 0x5ddd9b0 <line:48:3, line:51:25> line:50:12 struct __get_first_arg definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type '<type-parameter-0-1, type-parameter-0-2...>'
| |-TemplateTemplateParmDecl 0x5ddd438 <line:48:12, col:50> col:50 depth 0 index 0 _Template
| | |-TemplateTypeParmDecl 0x5ddd338 <col:21> col:21 typename depth 1 index 0
| | `-TemplateTypeParmDecl 0x5ddd3a8 <col:31> col:31 typename depth 1 index 1 ...
| |-TemplateTypeParmDecl 0x5ddd490 <col:61, col:70> col:70 referenced typename depth 0 index 1 _Tp
| |-TemplateTypeParmDecl 0x5ddd508 <line:49:12, col:24> col:24 referenced typename depth 0 index 2 ... _Types
| |-CXXRecordDecl 0x5dddc18 <line:50:5, col:12> col:12 implicit struct __get_first_arg
| `-TypeAliasDecl 0x5dddcb8 <line:51:7, col:20> col:13 type '_Tp'
|   `-TemplateTypeParmType 0x5ddd4e0 '_Tp' dependent depth 0 index 1
|     `-TemplateTypeParm 0x5ddd490 '_Tp'
|-TypeAliasTemplateDecl 0x5dddf80 <line:53:3, line:54:62> col:5 __get_first_arg_t
| |-TemplateTypeParmDecl 0x5dddd30 <line:53:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5dddf20 <line:54:5, col:62> col:11 __get_first_arg_t 'typename __get_first_arg<_Tp>::type'
|   `-DependentNameType 0x5dddeb0 'typename __get_first_arg<_Tp>::type' dependent
|-ClassTemplateDecl 0x5dde168 <line:57:3, line:59:7> line:58:12 __replace_first_arg
| |-TemplateTypeParmDecl 0x5dddfd8 <line:57:12, col:21> col:21 typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5dde048 <col:26, col:35> col:35 typename depth 0 index 1 _Up
| `-CXXRecordDecl 0x5dde0d8 <line:58:5, line:59:7> line:58:12 struct __replace_first_arg definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   `-CXXRecordDecl 0x5de00e0 <col:5, col:12> col:12 implicit struct __replace_first_arg
|-ClassTemplatePartialSpecializationDecl 0x5de0788 <line:61:3, line:64:47> line:63:12 struct __replace_first_arg definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type '<type-parameter-0-2, type-parameter-0-3...>'
| |-TemplateArgument type 'type-parameter-0-1'
| |-TemplateTemplateParmDecl 0x5de0288 <line:61:12, col:50> col:50 depth 0 index 0 _Template
| | |-TemplateTypeParmDecl 0x5de0188 <col:21> col:21 typename depth 1 index 0
| | `-TemplateTypeParmDecl 0x5de01f8 <col:31> col:31 typename depth 1 index 1 ...
| |-TemplateTypeParmDecl 0x5de02e0 <col:61, col:70> col:70 referenced typename depth 0 index 1 _Up
| |-TemplateTypeParmDecl 0x5de0358 <line:62:12, col:21> col:21 referenced typename depth 0 index 2 _Tp
| |-TemplateTypeParmDecl 0x5de03c8 <col:26, col:38> col:38 referenced typename depth 0 index 3 ... _Types
| |-CXXRecordDecl 0x5de0a48 <line:63:5, col:12> col:12 implicit struct __replace_first_arg
| `-TypeAliasDecl 0x5de0c88 <line:64:7, col:44> col:13 type '_Template<_Up, _Types...>'
|   `-TemplateSpecializationType 0x5de0ba0 '_Template<_Up, _Types...>' dependent _Template
|     |-TemplateArgument type '_Up'
|     `-TemplateArgument type '_Types...'
|-TypeAliasTemplateDecl 0x5de1010 <line:66:3, line:67:75> col:5 __replace_first_arg_t
| |-TemplateTypeParmDecl 0x5de0d00 <line:66:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5de0d78 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Up
| `-TypeAliasDecl 0x5de0fb0 <line:67:5, col:75> col:11 __replace_first_arg_t 'typename __replace_first_arg<_Tp, _Up>::type'
|   `-DependentNameType 0x5de0f40 'typename __replace_first_arg<_Tp, _Up>::type' dependent
|-TypeAliasTemplateDecl 0x5de14c0 <line:69:3, line:71:70> line:70:5 __make_not_void
| |-TemplateTypeParmDecl 0x5de1068 <line:69:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-TypeAliasDecl 0x5de1460 <line:70:5, line:71:70> line:70:11 __make_not_void 'typename conditional<is_void<_Tp>::value, __undefined, _Tp>::type'
|   `-DependentNameType 0x5de13f0 'typename conditional<is_void<_Tp>::value, __undefined, _Tp>::type' dependent
|-ClassTemplateDecl 0x5de1630 <line:77:3, line:116:5> line:78:12 pointer_traits
| |-TemplateTypeParmDecl 0x5de1518 <line:77:12, col:21> col:21 referenced typename depth 0 index 0 _Ptr
| `-CXXRecordDecl 0x5de15a0 <line:78:5, line:116:5> line:78:12 struct pointer_traits definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5de1880 <col:5, col:12> col:12 implicit struct pointer_traits
|   |-AccessSpecDecl 0x5de1910 <line:80:5, col:12> col:5 private
|   |-TypeAliasTemplateDecl 0x5de1b10 <line:81:7, line:82:39> col:2 __element_type
|   | |-TemplateTypeParmDecl 0x5de1938 <line:81:16, col:25> col:25 typename depth 1 index 0 _Tp
|   | `-TypeAliasDecl 0x5de1ab0 <line:82:2, col:39> col:8 __element_type 'typename _Tp::element_type'
|   |   `-DependentNameType 0x5de1a40 'typename _Tp::element_type' dependent
|   |-TypeAliasTemplateDecl 0x5de1d20 <line:84:7, line:85:42> col:2 __difference_type
|   | |-TemplateTypeParmDecl 0x5de1b68 <line:84:16, col:25> col:25 typename depth 1 index 0 _Tp
|   | `-TypeAliasDecl 0x5de1cc0 <line:85:2, col:42> col:8 __difference_type 'typename _Tp::difference_type'
|   |   `-DependentNameType 0x5de1c50 'typename _Tp::difference_type' dependent
|   |-ClassTemplateDecl 0x5de1f90 <line:87:7, line:88:52> col:9 __rebind
|   | |-TemplateTypeParmDecl 0x5de1d78 <line:87:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x5de1de8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _Up
|   | |-TemplateTypeParmDecl 0x5de1e68 <col:44, col:55> col:44 typename depth 1 index 2
|   | | `-TemplateArgument type 'void'
|   | `-CXXRecordDecl 0x5de1f00 <line:88:2, col:52> col:9 struct __rebind definition
|   |   |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   |   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial needs_implicit
|   |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-public '__replace_first_arg<_Tp, _Up>'
|   |   `-CXXRecordDecl 0x5de2390 <col:2, col:9> col:9 implicit struct __rebind
|   |-ClassTemplatePartialSpecializationDecl 0x5de2940 <line:90:7, line:92:53> line:91:9 struct __rebind definition
|   | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveConstructor exists simple trivial needs_implicit
|   | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | | |-MoveAssignment exists simple trivial needs_implicit
|   | | `-Destructor simple irrelevant trivial needs_implicit
|   | |-TemplateArgument type 'type-parameter-1-0'
|   | |-TemplateArgument type 'type-parameter-1-1'
|   | |-TemplateArgument type 'void'
|   | |-TemplateTypeParmDecl 0x5de2438 <line:90:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
|   | |-TemplateTypeParmDecl 0x5de24a8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _Up
|   | |-CXXRecordDecl 0x5de2be8 <line:91:2, col:9> col:9 implicit struct __rebind
|   | `-TypeAliasDecl 0x5de2d20 <line:92:4, col:50> col:10 type 'typename _Tp::rebind<_Up>'
|   |   `-DependentTemplateSpecializationType 0x5de2620 'typename _Tp::rebind<_Up>' dependent
|   |-AccessSpecDecl 0x5de2d98 <line:94:5, col:11> col:5 public
|   |-TypeAliasDecl 0x5de2dd0 <line:96:7, col:23> col:13 pointer '_Ptr'
|   | `-TemplateTypeParmType 0x5de1560 '_Ptr' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5de1518 '_Ptr'
|   |-TypeAliasDecl 0x5de39a8 <line:99:7, line:100:65> line:99:13 referenced element_type '__detected_or_t<__get_first_arg_t<_Ptr>, __element_type, _Ptr>':'typename __detected_or<typename __get_first_arg<type-parameter-0-0>::type, __element_type, type-parameter-0-0>::type'
|   | `-TemplateSpecializationType 0x5de3870 '__detected_or_t<__get_first_arg_t<_Ptr>, __element_type, _Ptr>' sugar dependent alias __detected_or_t
|   |   |-TemplateArgument type '__get_first_arg_t<_Ptr>':'typename __get_first_arg<type-parameter-0-0>::type'
|   |   |-TemplateArgument template __element_type
|   |   |-TemplateArgument type '_Ptr'
|   |   |-DependentNameType 0x5de3820 'typename __detected_or<typename __get_first_arg<type-parameter-0-0>::type, __element_type, type-parameter-0-0>::type' dependent
|   |   `-DependentNameType 0x5de3820 'typename __detected_or<typename __get_first_arg<type-parameter-0-0>::type, __element_type, type-parameter-0-0>::type' dependent
|   |-TypeAliasDecl 0x5de6978 <line:103:7, line:104:54> line:103:13 difference_type '__detected_or_t<std::ptrdiff_t, __difference_type, _Ptr>':'typename __detected_or<long, __difference_type, type-parameter-0-0>::type'
|   | `-TemplateSpecializationType 0x5de6840 '__detected_or_t<std::ptrdiff_t, __difference_type, _Ptr>' sugar dependent alias __detected_or_t
|   |   |-TemplateArgument type 'std::ptrdiff_t':'long'
|   |   |-TemplateArgument template __difference_type
|   |   |-TemplateArgument type '_Ptr'
|   |   |-DependentNameType 0x5de67f0 'typename __detected_or<long, __difference_type, type-parameter-0-0>::type' dependent
|   |   `-DependentNameType 0x5de67f0 'typename __detected_or<long, __difference_type, type-parameter-0-0>::type' dependent
|   |-TypeAliasTemplateDecl 0x5de6cd0 <line:107:7, line:108:54> col:9 rebind
|   | |-TemplateTypeParmDecl 0x5de69d8 <line:107:16, col:25> col:25 referenced typename depth 1 index 0 _Up
|   | `-TypeAliasDecl 0x5de6c70 <line:108:9, col:54> col:15 rebind 'typename __rebind<_Ptr, _Up>::type'
|   |   `-DependentNameType 0x5de6c00 'typename __rebind<_Ptr, _Up>::type' dependent
|   |-CXXMethodDecl 0x5de73c8 <line:110:7, line:112:39> line:111:7 pointer_to '_Ptr (__make_not_void<std::pointer_traits::element_type> &)' static
|   | |-ParmVarDecl 0x5de72a0 <col:18, col:49> col:49 referenced __e '__make_not_void<std::pointer_traits::element_type> &'
|   | `-CompoundStmt 0x5de7830 <line:112:7, col:39>
|   |   `-ReturnStmt 0x5de7820 <col:9, col:36>
|   |     `-CallExpr 0x5de77f8 <col:16, col:36> '<dependent type>'
|   |       |-DependentScopeDeclRefExpr 0x5de77a0 <col:16, col:22> '<dependent type>' lvalue
|   |       `-DeclRefExpr 0x5de77d8 <col:33> '__make_not_void<std::pointer_traits::element_type>':'typename conditional<is_void<typename __detector<typename __get_first_arg<type-parameter-0-0>::type, void, __element_type, type-parameter-0-0>::type>::value, __undefined, typename __detector<typename __get_first_arg<type-parameter-0-0>::type, void, __element_type, type-parameter-0-0>::type>::type' lvalue ParmVar 0x5de72a0 '__e' '__make_not_void<std::pointer_traits::element_type> &'
|   `-StaticAssertDecl 0x5de76f8 <line:114:7, line:115:71> line:114:7
|     |-UnaryOperator 0x5de7608 <col:21, col:58> '<dependent type>' prefix '!' cannot overflow
|     | `-DependentScopeDeclRefExpr 0x5de75d0 <col:22, col:58> '<dependent type>' lvalue
|     `-StringLiteral 0x5de7698 <line:115:4> 'const char [66]' lvalue "pointer type defines element_type or is like SomePointer<T, Args>"
|-ClassTemplatePartialSpecializationDecl 0x5de79d0 <line:122:3, line:143:5> line:123:12 struct pointer_traits definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'type-parameter-0-0 *'
| |-TemplateTypeParmDecl 0x5de7848 <line:122:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-CXXRecordDecl 0x5de7bf8 <line:123:5, col:12> col:12 implicit struct pointer_traits
| |-TypedefDecl 0x5de7c98 <line:126:7, col:20> col:20 referenced pointer '_Tp *'
| | `-PointerType 0x5de78d0 '_Tp *' dependent
| |   `-TemplateTypeParmType 0x5de7890 '_Tp' dependent depth 0 index 0
| |     `-TemplateTypeParm 0x5de7848 '_Tp'
| |-TypedefDecl 0x5de7d00 <line:128:7, col:19> col:19 referenced element_type '_Tp'
| | `-TemplateTypeParmType 0x5de7890 '_Tp' dependent depth 0 index 0
| |   `-TemplateTypeParm 0x5de7848 '_Tp'
| |-TypedefDecl 0x5de7d68 <line:130:7, col:25> col:25 difference_type 'std::ptrdiff_t':'long'
| | `-TypedefType 0x5bfaa00 'std::ptrdiff_t' sugar
| |   |-Typedef 0x5b39b50 'ptrdiff_t'
| |   `-BuiltinType 0x5aca320 'long'
| |-TypeAliasTemplateDecl 0x5de7f18 <line:132:7, line:133:27> col:9 rebind
| | |-TemplateTypeParmDecl 0x5de7dc0 <line:132:16, col:25> col:25 referenced typename depth 1 index 0 _Up
| | `-TypeAliasDecl 0x5de7eb8 <line:133:9, col:27> col:15 rebind '_Up *'
| |   `-PointerType 0x5de7e80 '_Up *' dependent
| |     `-TemplateTypeParmType 0x5de7e10 '_Up' dependent depth 1 index 0
| |       `-TemplateTypeParm 0x5de7dc0 '_Up'
| `-CXXMethodDecl 0x5de8520 <line:140:7, line:142:37> line:141:7 pointer_to 'std::pointer_traits<type-parameter-0-0 *>::pointer (__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type> &) noexcept' static
|   |-ParmVarDecl 0x5de83f0 <col:18, col:49> col:49 referenced __r '__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type> &'
|   `-CompoundStmt 0x5de86c0 <line:142:7, col:37>
|     `-ReturnStmt 0x5de86b0 <col:9, col:34>
|       `-CallExpr 0x5de8688 <col:16, col:34> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5de8618 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'addressof' 0x5d523e0 0x5d527f8
|         `-DeclRefExpr 0x5de8668 <col:31> '__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type>':'typename conditional<is_void<type-parameter-0-0>::value, __undefined, type-parameter-0-0>::type' lvalue ParmVar 0x5de83f0 '__r' '__make_not_void<std::pointer_traits<type-parameter-0-0 *>::element_type> &'
`-TypeAliasTemplateDecl 0x5de8a68 <line:146:3, line:147:76> col:5 __ptr_rebind
  |-TemplateTypeParmDecl 0x5de86d8 <line:146:12, col:21> col:21 referenced typename depth 0 index 0 _Ptr
  |-TemplateTypeParmDecl 0x5de8748 <col:27, col:36> col:36 referenced typename depth 0 index 1 _Tp
  `-TypeAliasDecl 0x5de8a08 <line:147:5, col:76> col:11 __ptr_rebind 'typename pointer_traits<_Ptr>::rebind<_Tp>'
    `-DependentTemplateSpecializationType 0x5de8930 'typename pointer_traits<_Ptr>::rebind<_Tp>' dependent
NamespaceDecl 0x5de8ae0 prev 0x5ddcd50 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator.h:72:1, line:744:1> line:72:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5de8b50 <col:31, col:56> Default
|-ClassTemplateDecl 0x5de8cb0 <line:100:3, line:285:5> line:101:11 reverse_iterator
| |-TemplateTypeParmDecl 0x5de8b90 <line:100:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-CXXRecordDecl 0x5de8c20 <line:101:5, line:285:5> line:101:11 class reverse_iterator definition
|   |-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor exists non_trivial user_provided
|   | |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
|   | |-MoveConstructor
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference>'
|   |-CXXRecordDecl 0x5de96e0 <col:5, col:11> col:11 implicit referenced class reverse_iterator
|   |-AccessSpecDecl 0x5de9770 <line:108:5, col:14> col:5 protected
|   |-FieldDecl 0x5de97a8 <line:109:7, col:17> col:17 referenced current '_Iterator'
|   |-TypedefDecl 0x5de98b0 <line:111:7, col:42> col:42 referenced __traits_type 'iterator_traits<_Iterator>'
|   | `-TemplateSpecializationType 0x5de9810 'iterator_traits<_Iterator>' dependent iterator_traits
|   |   `-TemplateArgument type '_Iterator'
|   |-AccessSpecDecl 0x5de9908 <line:113:5, col:11> col:5 public
|   |-TypedefDecl 0x5de9940 <line:114:7, col:25> col:25 referenced iterator_type '_Iterator'
|   | `-TemplateTypeParmType 0x5de8be0 '_Iterator' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5de8b90 '_Iterator'
|   |-TypedefDecl 0x5de9a60 <line:115:7, col:55> col:55 referenced difference_type 'typename __traits_type::difference_type'
|   | `-DependentNameType 0x5de99f0 'typename __traits_type::difference_type' dependent
|   |-TypedefDecl 0x5de9b40 <line:116:7, col:47> col:47 referenced pointer 'typename __traits_type::pointer'
|   | `-DependentNameType 0x5de9ad0 'typename __traits_type::pointer' dependent
|   |-TypedefDecl 0x5de9c20 <line:117:7, col:49> col:49 referenced reference 'typename __traits_type::reference'
|   | `-DependentNameType 0x5de9bb0 'typename __traits_type::reference' dependent
|   |-CXXConstructorDecl 0x5de9ce0 <line:126:7, col:40> col:7 reverse_iterator<_Iterator> 'void ()'
|   | |-CXXCtorInitializer Field 0x5de97a8 'current' '_Iterator'
|   | | `-ParenListExpr 0x5dec158 <col:35, col:36> 'NULL TYPE'
|   | `-CompoundStmt 0x5dec1a0 <col:38, col:40>
|   |-CXXConstructorDecl 0x5de9e88 <line:131:7, line:132:60> col:7 reverse_iterator<_Iterator> 'void (std::reverse_iterator::iterator_type)'
|   | |-ParmVarDecl 0x5de9dc0 <col:24, col:38> col:38 referenced __x 'std::reverse_iterator::iterator_type':'_Iterator'
|   | |-CXXCtorInitializer Field 0x5de97a8 'current' '_Iterator'
|   | | `-ParenListExpr 0x5dec1d0 <col:52, col:56> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x5dec1b0 <col:53> 'std::reverse_iterator::iterator_type':'_Iterator' lvalue ParmVar 0x5de9dc0 '__x' 'std::reverse_iterator::iterator_type':'_Iterator'
|   | `-CompoundStmt 0x5dec220 <col:58, col:60>
|   |-CXXConstructorDecl 0x5dea038 <line:138:7, line:139:32> line:138:7 reverse_iterator<_Iterator> 'void (const reverse_iterator<_Iterator> &)'
|   | |-ParmVarDecl 0x5de9f78 <col:24, col:48> col:48 referenced __x 'const reverse_iterator<_Iterator> &'
|   | |-CXXCtorInitializer Field 0x5de97a8 'current' '_Iterator'
|   | | `-ParenListExpr 0x5dec298 <line:139:16, col:28> 'NULL TYPE'
|   | |   `-CXXDependentScopeMemberExpr 0x5dec250 <col:17, col:21> '<dependent type>' lvalue .current
|   | |     `-DeclRefExpr 0x5dec230 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5de9f78 '__x' 'const reverse_iterator<_Iterator> &'
|   | `-CompoundStmt 0x5dec2e8 <col:30, col:32>
|   |-FunctionTemplateDecl 0x5dea460 <line:145:7, line:148:26> line:147:9 reverse_iterator<_Iterator>
|   | |-TemplateTypeParmDecl 0x5dea0e8 <line:145:16, col:25> col:25 referenced typename depth 1 index 0 _Iter
|   | `-CXXConstructorDecl 0x5dea3b8 <line:147:9, line:148:26> line:147:9 reverse_iterator<_Iterator> 'void (const reverse_iterator<_Iter> &)'
|   |   |-ParmVarDecl 0x5dea2c0 <col:26, col:57> col:57 referenced __x 'const reverse_iterator<_Iter> &'
|   |   |-CXXCtorInitializer Field 0x5de97a8 'current' '_Iterator'
|   |   | `-ParenListExpr 0x5dec380 <line:148:11, col:22> 'NULL TYPE'
|   |   |   `-CallExpr 0x5dec360 <col:12, col:21> '<dependent type>'
|   |   |     `-CXXDependentScopeMemberExpr 0x5dec318 <col:12, col:16> '<dependent type>' lvalue .base
|   |   |       `-DeclRefExpr 0x5dec2f8 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x5dea2c0 '__x' 'const reverse_iterator<_Iter> &'
|   |   `-CompoundStmt 0x5dec3d0 <col:24, col:26>
|   |-CXXMethodDecl 0x5dea538 <line:153:28, line:155:25> line:154:7 base 'std::reverse_iterator::iterator_type () const'
|   | `-CompoundStmt 0x5dec430 <line:155:7, col:25>
|   |   `-ReturnStmt 0x5dec420 <col:9, col:16>
|   |     `-MemberExpr 0x5dec3f0 <col:16> 'const _Iterator' lvalue ->current 0x5de97a8
|   |       `-CXXThisExpr 0x5dec3e0 <col:16> 'const reverse_iterator<_Iterator> *' implicit this
|   |-CXXMethodDecl 0x5deb2f0 <line:167:28, line:172:7> line:168:7 referenced operator* 'std::reverse_iterator::reference () const'
|   | `-CompoundStmt 0x5dec5d8 <line:169:7, line:172:7>
|   |   |-DeclStmt 0x5dec500 <line:170:2, col:27>
|   |   | `-VarDecl 0x5dec458 <col:2, col:20> col:12 referenced __tmp '_Iterator' cinit
|   |   |   `-MemberExpr 0x5dec4d0 <col:20> 'const _Iterator' lvalue ->current 0x5de97a8
|   |   |     `-CXXThisExpr 0x5dec4c0 <col:20> 'const reverse_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5dec5c8 <line:171:2, col:12>
|   |     `-UnaryOperator 0x5dec5b0 <col:9, col:12> '<dependent type>' prefix '*' cannot overflow
|   |       `-UnaryOperator 0x5dec598 <col:10, col:12> '<dependent type>' prefix '--' cannot overflow
|   |         `-DeclRefExpr 0x5dec578 <col:12> '_Iterator' lvalue Var 0x5dec458 '__tmp' '_Iterator'
|   |-CXXMethodDecl 0x5deb428 <line:179:28, line:181:32> line:180:7 operator-> 'std::reverse_iterator::pointer () const'
|   | `-CompoundStmt 0x5dec6a0 <line:181:7, col:32>
|   |   `-ReturnStmt 0x5dec690 <col:9, col:29>
|   |     `-UnaryOperator 0x5dec678 <col:16, col:29> '<dependent type>' prefix '&' cannot overflow
|   |       `-ParenExpr 0x5dec658 <col:17, col:29> '<dependent type>'
|   |         `-CallExpr 0x5dec638 <col:18, col:28> '<dependent type>'
|   |           `-MemberExpr 0x5dec608 <col:18, col:26> '<bound member function type>' ->operator* 0x5deb2f0
|   |             `-CXXThisExpr 0x5dec5f8 <col:18> 'const reverse_iterator<_Iterator> *' implicit this
|   |-CXXMethodDecl 0x5deb548 <line:188:28, line:193:7> line:189:7 operator++ 'reverse_iterator<_Iterator> &()'
|   | `-CompoundStmt 0x5dec748 <line:190:7, line:193:7>
|   |   |-UnaryOperator 0x5dec6f8 <line:191:2, col:4> '<dependent type>' prefix '--' cannot overflow
|   |   | `-MemberExpr 0x5dec6c8 <col:4> '_Iterator' lvalue ->current 0x5de97a8
|   |   |   `-CXXThisExpr 0x5dec6b8 <col:4> 'reverse_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5dec738 <line:192:2, col:10>
|   |     `-UnaryOperator 0x5dec720 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dec710 <col:10> 'reverse_iterator<_Iterator> *' this
|   |-CXXMethodDecl 0x5deb6c8 <line:200:28, line:206:7> line:201:7 operator++ 'reverse_iterator<_Iterator> (int)'
|   | |-ParmVarDecl 0x5deb600 <col:18> col:21 'int'
|   | `-CompoundStmt 0x5dec8b0 <line:202:7, line:206:7>
|   |   |-DeclStmt 0x5dec808 <line:203:2, col:32>
|   |   | `-VarDecl 0x5dec778 <col:2, col:28> col:19 referenced __tmp 'reverse_iterator<_Iterator>' nrvo cinit
|   |   |   `-UnaryOperator 0x5dec7f0 <col:27, col:28> '<dependent type>' prefix '*' cannot overflow
|   |   |     `-CXXThisExpr 0x5dec7e0 <col:28> 'reverse_iterator<_Iterator> *' this
|   |   |-UnaryOperator 0x5dec860 <line:204:2, col:4> '<dependent type>' prefix '--' cannot overflow
|   |   | `-MemberExpr 0x5dec830 <col:4> '_Iterator' lvalue ->current 0x5de97a8
|   |   |   `-CXXThisExpr 0x5dec820 <col:4> 'reverse_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5dec898 <line:205:2, col:9>
|   |     `-DeclRefExpr 0x5dec878 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x5dec778 '__tmp' 'reverse_iterator<_Iterator>'
|   |-CXXMethodDecl 0x5deb790 <line:213:28, line:218:7> line:214:7 operator-- 'reverse_iterator<_Iterator> &()'
|   | `-CompoundStmt 0x5dec968 <line:215:7, line:218:7>
|   |   |-UnaryOperator 0x5dec918 <line:216:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5dec8e8 <col:4> '_Iterator' lvalue ->current 0x5de97a8
|   |   |   `-CXXThisExpr 0x5dec8d8 <col:4> 'reverse_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5dec958 <line:217:2, col:10>
|   |     `-UnaryOperator 0x5dec940 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dec930 <col:10> 'reverse_iterator<_Iterator> *' this
|   |-CXXMethodDecl 0x5deb8d8 <line:225:28, line:231:7> line:226:7 operator-- 'reverse_iterator<_Iterator> (int)'
|   | |-ParmVarDecl 0x5deb848 <col:18> col:21 'int'
|   | `-CompoundStmt 0x5decad0 <line:227:7, line:231:7>
|   |   |-DeclStmt 0x5deca28 <line:228:2, col:32>
|   |   | `-VarDecl 0x5dec998 <col:2, col:28> col:19 referenced __tmp 'reverse_iterator<_Iterator>' nrvo cinit
|   |   |   `-UnaryOperator 0x5deca10 <col:27, col:28> '<dependent type>' prefix '*' cannot overflow
|   |   |     `-CXXThisExpr 0x5deca00 <col:28> 'reverse_iterator<_Iterator> *' this
|   |   |-UnaryOperator 0x5deca80 <line:229:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5deca50 <col:4> '_Iterator' lvalue ->current 0x5de97a8
|   |   |   `-CXXThisExpr 0x5deca40 <col:4> 'reverse_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5decab8 <line:230:2, col:9>
|   |     `-DeclRefExpr 0x5deca98 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x5dec998 '__tmp' 'reverse_iterator<_Iterator>'
|   |-CXXMethodDecl 0x5debaa8 <line:238:28, line:240:49> line:239:7 operator+ 'reverse_iterator<_Iterator> (std::reverse_iterator::difference_type) const'
|   | |-ParmVarDecl 0x5deb9b0 <col:17, col:33> col:33 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5decbc0 <line:240:7, col:49>
|   |   `-ReturnStmt 0x5decbb0 <col:9, col:46>
|   |     `-CXXUnresolvedConstructExpr 0x5decb88 <col:16, col:46> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
|   |       `-BinaryOperator 0x5decb68 <col:33, col:43> '<dependent type>' '-'
|   |         |-MemberExpr 0x5decb18 <col:33> 'const _Iterator' lvalue ->current 0x5de97a8
|   |         | `-CXXThisExpr 0x5decb08 <col:33> 'const reverse_iterator<_Iterator> *' implicit this
|   |         `-DeclRefExpr 0x5decb48 <col:43> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5deb9b0 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   |-CXXMethodDecl 0x5debc58 <line:248:28, line:253:7> line:249:7 operator+= 'reverse_iterator<_Iterator> &(std::reverse_iterator::difference_type)'
|   | |-ParmVarDecl 0x5debb60 <col:18, col:34> col:34 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5decca0 <line:250:7, line:253:7>
|   |   |-CompoundAssignOperator 0x5decc38 <line:251:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | |-MemberExpr 0x5decbe8 <col:2> '_Iterator' lvalue ->current 0x5de97a8
|   |   | | `-CXXThisExpr 0x5decbd8 <col:2> 'reverse_iterator<_Iterator> *' implicit this
|   |   | `-DeclRefExpr 0x5decc18 <col:13> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5debb60 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   |   `-ReturnStmt 0x5decc90 <line:252:2, col:10>
|   |     `-UnaryOperator 0x5decc78 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5decc68 <col:10> 'reverse_iterator<_Iterator> *' this
|   |-CXXMethodDecl 0x5debda0 <line:260:28, line:262:49> line:261:7 operator- 'reverse_iterator<_Iterator> (std::reverse_iterator::difference_type) const'
|   | |-ParmVarDecl 0x5debd10 <col:17, col:33> col:33 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5decd88 <line:262:7, col:49>
|   |   `-ReturnStmt 0x5decd78 <col:9, col:46>
|   |     `-CXXUnresolvedConstructExpr 0x5decd50 <col:16, col:46> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
|   |       `-BinaryOperator 0x5decd30 <col:33, col:43> '<dependent type>' '+'
|   |         |-MemberExpr 0x5decce0 <col:33> 'const _Iterator' lvalue ->current 0x5de97a8
|   |         | `-CXXThisExpr 0x5deccd0 <col:33> 'const reverse_iterator<_Iterator> *' implicit this
|   |         `-DeclRefExpr 0x5decd10 <col:43> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5debd10 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   |-CXXMethodDecl 0x5debee8 <line:270:28, line:275:7> line:271:7 operator-= 'reverse_iterator<_Iterator> &(std::reverse_iterator::difference_type)'
|   | |-ParmVarDecl 0x5debe58 <col:18, col:34> col:34 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5dece68 <line:272:7, line:275:7>
|   |   |-CompoundAssignOperator 0x5dece00 <line:273:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | |-MemberExpr 0x5decdb0 <col:2> '_Iterator' lvalue ->current 0x5de97a8
|   |   | | `-CXXThisExpr 0x5decda0 <col:2> 'reverse_iterator<_Iterator> *' implicit this
|   |   | `-DeclRefExpr 0x5decde0 <col:13> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5debe58 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|   |   `-ReturnStmt 0x5dece58 <line:274:2, col:10>
|   |     `-UnaryOperator 0x5dece40 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dece30 <col:10> 'reverse_iterator<_Iterator> *' this
|   `-CXXMethodDecl 0x5dec098 <line:282:28, line:284:32> line:283:7 operator[] 'std::reverse_iterator::reference (std::reverse_iterator::difference_type) const'
|     |-ParmVarDecl 0x5debfa0 <col:18, col:34> col:34 referenced __n 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|     `-CompoundStmt 0x5decf98 <line:284:7, col:32>
|       `-ReturnStmt 0x5decf88 <col:9, col:29>
|         `-UnaryOperator 0x5decf70 <col:16, col:29> '<dependent type>' prefix '*' cannot overflow
|           `-ParenExpr 0x5decf50 <col:17, col:29> '<dependent type>'
|             `-BinaryOperator 0x5decf30 <col:18, col:26> '<dependent type>' '+'
|               |-UnaryOperator 0x5decef8 <col:18, col:19> '<dependent type>' prefix '*' cannot overflow
|               | `-CXXThisExpr 0x5decee8 <col:19> 'const reverse_iterator<_Iterator> *' this
|               `-DeclRefExpr 0x5decf10 <col:26> 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5debfa0 '__n' 'std::reverse_iterator::difference_type':'typename __traits_type::difference_type'
|-FunctionTemplateDecl 0x5ded458 <line:297:3, line:301:40> line:299:5 operator==
| |-TemplateTypeParmDecl 0x5decfb0 <line:297:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5ded3b8 <line:298:5, line:301:40> line:299:5 operator== 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5ded150 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5ded2a0 <line:300:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5ded670 <line:301:5, col:40>
|     `-ReturnStmt 0x5ded660 <col:7, col:37>
|       `-CXXOperatorCallExpr 0x5ded628 <col:14, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5ded5d0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5ded458 0x5bfd038 0x5dcc038
|         |-CallExpr 0x5ded528 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5ded4e0 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5ded4c0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5ded150 '__x' 'const reverse_iterator<_Iterator> &'
|         `-CallExpr 0x5ded5b0 <col:28, col:37> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5ded568 <col:28, col:32> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5ded548 <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5ded2a0 '__y' 'const reverse_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5dedab8 <line:303:3, line:307:39> line:305:5 operator<
| |-TemplateTypeParmDecl 0x5ded688 <line:303:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5deda18 <line:304:5, line:307:39> line:305:5 operator< 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5ded7f0 <col:15, col:50> col:50 referenced __x 'const reverse_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5ded940 <line:306:8, col:43> col:43 referenced __y 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5dedcc8 <line:307:5, col:39>
|     `-ReturnStmt 0x5dedcb8 <col:7, col:36>
|       `-CXXOperatorCallExpr 0x5dedc80 <col:14, col:36> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5dedc30 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dedab8 0x5dcd6e8
|         |-CallExpr 0x5dedb88 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5dedb40 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5dedb20 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5ded940 '__y' 'const reverse_iterator<_Iterator> &'
|         `-CallExpr 0x5dedc10 <col:27, col:36> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5dedbc8 <col:27, col:31> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5dedba8 <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5ded7f0 '__x' 'const reverse_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5dee118 <line:309:3, line:313:29> line:311:5 operator!=
| |-TemplateTypeParmDecl 0x5dedce0 <line:309:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5dee078 <line:310:5, line:313:29> line:311:5 operator!= 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5dede50 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5dedfa0 <line:312:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5dee298 <line:313:5, col:29>
|     `-ReturnStmt 0x5dee288 <col:7, col:26>
|       `-UnaryOperator 0x5dee270 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5dee250 <col:15, col:26> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5dee218 <col:16, col:23> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5dee1c0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5ded458 0x5bfd038 0x5dcc038
|             |-DeclRefExpr 0x5dee180 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5dede50 '__x' 'const reverse_iterator<_Iterator> &'
|             `-DeclRefExpr 0x5dee1a0 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5dedfa0 '__y' 'const reverse_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5dee6e8 <line:315:3, line:319:25> line:317:5 operator>
| |-TemplateTypeParmDecl 0x5dee2b0 <line:315:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5dee648 <line:316:5, line:319:25> line:317:5 operator> 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5dee420 <col:15, col:50> col:50 referenced __x 'const reverse_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5dee570 <line:318:8, col:43> col:43 referenced __y 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5dee828 <line:319:5, col:25>
|     `-ReturnStmt 0x5dee818 <col:7, col:20>
|       `-CXXOperatorCallExpr 0x5dee7e0 <col:14, col:20> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5dee790 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dedab8 0x5dcd6e8
|         |-DeclRefExpr 0x5dee750 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5dee570 '__y' 'const reverse_iterator<_Iterator> &'
|         `-DeclRefExpr 0x5dee770 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5dee420 '__x' 'const reverse_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5deec78 <line:321:3, line:325:28> line:323:5 operator<=
| |-TemplateTypeParmDecl 0x5dee840 <line:321:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5deebd8 <line:322:5, line:325:28> line:323:5 operator<= 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5dee9b0 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5deeb00 <line:324:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5deedf0 <line:325:5, col:28>
|     `-ReturnStmt 0x5deede0 <col:7, col:25>
|       `-UnaryOperator 0x5deedc8 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5deeda8 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5deed70 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5deed20 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dedab8 0x5dcd6e8
|             |-DeclRefExpr 0x5deece0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5deeb00 '__y' 'const reverse_iterator<_Iterator> &'
|             `-DeclRefExpr 0x5deed00 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5dee9b0 '__x' 'const reverse_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5def238 <line:327:3, line:331:28> line:329:5 operator>=
| |-TemplateTypeParmDecl 0x5deee08 <line:327:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5def198 <line:328:5, line:331:28> line:329:5 operator>= 'bool (const reverse_iterator<_Iterator> &, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5deef70 <col:16, col:51> col:51 referenced __x 'const reverse_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5def0c0 <line:330:9, col:44> col:44 referenced __y 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5df0900 <line:331:5, col:28>
|     `-ReturnStmt 0x5df08f0 <col:7, col:25>
|       `-UnaryOperator 0x5df08d8 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5df08b8 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5df0880 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5df0830 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dedab8 0x5dcd6e8
|             |-DeclRefExpr 0x5def2a0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5deef70 '__x' 'const reverse_iterator<_Iterator> &'
|             `-DeclRefExpr 0x5def2c0 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5def0c0 '__y' 'const reverse_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5df0e78 <line:335:3, line:339:40> line:337:5 operator==
| |-TemplateTypeParmDecl 0x5df0918 <line:335:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df0988 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df0dd8 <line:336:5, line:339:40> line:337:5 operator== 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5df0b00 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df0cc0 <line:338:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df1098 <line:339:5, col:40>
|     `-ReturnStmt 0x5df1088 <col:7, col:37>
|       `-CXXOperatorCallExpr 0x5df1050 <col:14, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5df0ff0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5df0e78 0x5ded458 0x5bfd038 0x5dcc038
|         |-CallExpr 0x5df0f48 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5df0f00 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5df0ee0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df0b00 '__x' 'const reverse_iterator<_IteratorL> &'
|         `-CallExpr 0x5df0fd0 <col:28, col:37> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5df0f88 <col:28, col:32> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5df0f68 <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df0cc0 '__y' 'const reverse_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5df1568 <line:341:3, line:345:39> line:343:5 operator<
| |-TemplateTypeParmDecl 0x5df10b0 <line:341:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df1128 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df14c8 <line:342:5, line:345:39> line:343:5 operator< 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5df12a0 <col:15, col:51> col:51 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df13f0 <line:344:8, col:44> col:44 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df1780 <line:345:5, col:39>
|     `-ReturnStmt 0x5df1770 <col:7, col:36>
|       `-CXXOperatorCallExpr 0x5df1738 <col:14, col:36> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5df16e0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5df1568 0x5dedab8 0x5dcd6e8
|         |-CallExpr 0x5df1638 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5df15f0 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5df15d0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df13f0 '__y' 'const reverse_iterator<_IteratorR> &'
|         `-CallExpr 0x5df16c0 <col:27, col:36> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5df1678 <col:27, col:31> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5df1658 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df12a0 '__x' 'const reverse_iterator<_IteratorL> &'
|-FunctionTemplateDecl 0x5df1c48 <line:347:3, line:351:29> line:349:5 operator!=
| |-TemplateTypeParmDecl 0x5df1798 <line:347:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df1808 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df1ba8 <line:348:5, line:351:29> line:349:5 operator!= 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5df1980 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df1ad0 <line:350:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df1dd0 <line:351:5, col:29>
|     `-ReturnStmt 0x5df1dc0 <col:7, col:26>
|       `-UnaryOperator 0x5df1da8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5df1d88 <col:15, col:26> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5df1d50 <col:16, col:23> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5df1cf0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5df0e78 0x5ded458 0x5bfd038 0x5dcc038
|             |-DeclRefExpr 0x5df1cb0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df1980 '__x' 'const reverse_iterator<_IteratorL> &'
|             `-DeclRefExpr 0x5df1cd0 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df1ad0 '__y' 'const reverse_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5df2298 <line:353:3, line:357:25> line:355:5 operator>
| |-TemplateTypeParmDecl 0x5df1de8 <line:353:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df1e58 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df21f8 <line:354:5, line:357:25> line:355:5 operator> 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5df1fd0 <col:15, col:51> col:51 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df2120 <line:356:8, col:44> col:44 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df23e0 <line:357:5, col:25>
|     `-ReturnStmt 0x5df23d0 <col:7, col:20>
|       `-CXXOperatorCallExpr 0x5df2398 <col:14, col:20> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5df2340 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5df1568 0x5dedab8 0x5dcd6e8
|         |-DeclRefExpr 0x5df2300 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df2120 '__y' 'const reverse_iterator<_IteratorR> &'
|         `-DeclRefExpr 0x5df2320 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df1fd0 '__x' 'const reverse_iterator<_IteratorL> &'
|-FunctionTemplateDecl 0x5df28a8 <line:359:3, line:363:28> line:361:5 operator<=
| |-TemplateTypeParmDecl 0x5df23f8 <line:359:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df2468 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df2808 <line:360:5, line:363:28> line:361:5 operator<= 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5df25e0 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df2730 <line:362:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df2a28 <line:363:5, col:28>
|     `-ReturnStmt 0x5df2a18 <col:7, col:25>
|       `-UnaryOperator 0x5df2a00 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5df29e0 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5df29a8 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5df2950 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5df1568 0x5dedab8 0x5dcd6e8
|             |-DeclRefExpr 0x5df2910 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df2730 '__y' 'const reverse_iterator<_IteratorR> &'
|             `-DeclRefExpr 0x5df2930 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df25e0 '__x' 'const reverse_iterator<_IteratorL> &'
|-FunctionTemplateDecl 0x5df2ef8 <line:365:3, line:369:28> line:367:5 operator>=
| |-TemplateTypeParmDecl 0x5df2a40 <line:365:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df2ab8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df2e58 <line:366:5, line:369:28> line:367:5 operator>= 'bool (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5df2c30 <col:16, col:52> col:52 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df2d80 <line:368:9, col:45> col:45 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df3078 <line:369:5, col:28>
|     `-ReturnStmt 0x5df3068 <col:7, col:25>
|       `-UnaryOperator 0x5df3050 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5df3030 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5df2ff8 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5df2fa0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5df1568 0x5dedab8 0x5dcd6e8
|             |-DeclRefExpr 0x5df2f60 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df2c30 '__x' 'const reverse_iterator<_IteratorL> &'
|             `-DeclRefExpr 0x5df2f80 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df2d80 '__y' 'const reverse_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5df3738 <line:387:3, line:392:39> line:389:5 operator-
| |-TemplateTypeParmDecl 0x5df3090 <line:387:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5df3108 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5df3698 <line:388:5, line:392:39> line:389:5 operator- 'auto (const reverse_iterator<_IteratorL> &, const reverse_iterator<_IteratorR> &) -> decltype(__y.base() - __x.base())' inline
|   |-ParmVarDecl 0x5df3280 <col:15, col:51> col:51 referenced __x 'const reverse_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5df33d0 <line:390:8, col:44> col:44 referenced __y 'const reverse_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5df3940 <line:392:5, col:39>
|     `-ReturnStmt 0x5df3930 <col:7, col:36>
|       `-CXXOperatorCallExpr 0x5df38f8 <col:14, col:36> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5df38b0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738
|         |-CallExpr 0x5df3808 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5df37c0 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5df37a0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x5df33d0 '__y' 'const reverse_iterator<_IteratorR> &'
|         `-CallExpr 0x5df3890 <col:27, col:36> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5df3848 <col:27, col:31> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5df3828 <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x5df3280 '__x' 'const reverse_iterator<_IteratorL> &'
|-FunctionTemplateDecl 0x5df3ee8 <line:395:3, line:399:61> line:397:5 operator+
| |-TemplateTypeParmDecl 0x5df3958 <line:395:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5df3e48 <line:396:5, line:399:61> line:397:5 operator+ 'reverse_iterator<_Iterator> (typename reverse_iterator<_Iterator>::difference_type, const reverse_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5df3bc0 <col:15, col:69> col:69 referenced __n 'typename reverse_iterator<_Iterator>::difference_type'
|   |-ParmVarDecl 0x5df3d10 <line:398:8, col:43> col:43 referenced __x 'const reverse_iterator<_Iterator> &'
|   `-CompoundStmt 0x5df4160 <line:399:5, col:61>
|     `-ReturnStmt 0x5df4150 <col:7, col:58>
|       `-CXXUnresolvedConstructExpr 0x5df4128 <col:14, col:58> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
|         `-CXXOperatorCallExpr 0x5df40f0 <col:42, col:55> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5df40a8 <col:53> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738
|           |-CallExpr 0x5df4068 <col:42, col:51> '<dependent type>'
|           | `-CXXDependentScopeMemberExpr 0x5df4020 <col:42, col:46> '<dependent type>' lvalue .base
|           |   `-DeclRefExpr 0x5df4000 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x5df3d10 '__x' 'const reverse_iterator<_Iterator> &'
|           `-DeclRefExpr 0x5df4088 <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x5df3bc0 '__n' 'typename reverse_iterator<_Iterator>::difference_type'
|-FunctionTemplateDecl 0x5df4448 <line:403:3, line:406:48> line:405:5 __make_reverse_iterator
| |-TemplateTypeParmDecl 0x5df4178 <line:403:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5df43a8 <line:404:5, line:406:48> line:405:5 __make_reverse_iterator 'reverse_iterator<_Iterator> (_Iterator)' inline
|   |-ParmVarDecl 0x5df4290 <col:29, col:39> col:39 referenced __i '_Iterator'
|   `-CompoundStmt 0x5df45b8 <line:406:5, col:48>
|     `-ReturnStmt 0x5df45a8 <col:7, col:45>
|       `-CXXUnresolvedConstructExpr 0x5df4580 <col:14, col:45> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
|         `-DeclRefExpr 0x5df4560 <col:42> '_Iterator' lvalue ParmVar 0x5df4290 '__i' '_Iterator'
|-FunctionTemplateDecl 0x5df48e0 <line:414:3, line:417:48> line:416:5 make_reverse_iterator
| |-TemplateTypeParmDecl 0x5df45d0 <line:414:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5df4840 <line:415:5, line:417:48> line:416:5 make_reverse_iterator 'reverse_iterator<_Iterator> (_Iterator)' inline
|   |-ParmVarDecl 0x5df46f0 <col:27, col:37> col:37 referenced __i '_Iterator'
|   `-CompoundStmt 0x5df4a48 <line:417:5, col:48>
|     `-ReturnStmt 0x5df4a38 <col:7, col:45>
|       `-CXXUnresolvedConstructExpr 0x5df4a10 <col:14, col:45> 'reverse_iterator<_Iterator>' 'reverse_iterator<_Iterator>'
|         `-DeclRefExpr 0x5df49f0 <col:42> '_Iterator' lvalue ParmVar 0x5df46f0 '__i' '_Iterator'
|-FunctionTemplateDecl 0x5df4f18 <line:422:3, line:426:66> line:424:5 __niter_base
| |-TemplateTypeParmDecl 0x5df4a60 <line:422:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5df4e78 <line:423:5, line:426:66> line:424:5 __niter_base 'auto (reverse_iterator<_Iterator>) -> decltype(__make_reverse_iterator(__niter_base(__it.base())))'
|   |-ParmVarDecl 0x5df4ba0 <col:18, col:46> col:46 referenced __it 'reverse_iterator<_Iterator>'
|   `-CompoundStmt 0x5df50f0 <line:426:5, col:66>
|     `-ReturnStmt 0x5df50e0 <col:7, col:63>
|       `-CallExpr 0x5df50b8 <col:14, col:63> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5df4f78 <col:14> '<overloaded function type>' lvalue (ADL) = '__make_reverse_iterator' 0x5df4448
|         `-CallExpr 0x5df5090 <col:38, col:62> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5df4fc0 <col:38> '<overloaded function type>' lvalue (ADL) = '__niter_base' 0x5df4f18
|           `-CallExpr 0x5df5070 <col:51, col:61> '<dependent type>'
|             `-CXXDependentScopeMemberExpr 0x5df5028 <col:51, col:56> '<dependent type>' lvalue .base
|               `-DeclRefExpr 0x5df5008 <col:51> 'reverse_iterator<_Iterator>' lvalue ParmVar 0x5df4ba0 '__it' 'reverse_iterator<_Iterator>'
|-ClassTemplatePartialSpecializationDecl 0x5df5300 parent 0x5d5f0b0 <line:428:3, line:431:7> line:429:12 struct __is_move_iterator definition
| |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public '__is_move_iterator<_Iterator>'
| |-TemplateArgument type 'reverse_iterator<type-parameter-0-0>'
| |-TemplateTypeParmDecl 0x5df5108 <line:428:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-CXXRecordDecl 0x5df5620 <line:429:5, col:12> col:12 implicit struct __is_move_iterator
|-FunctionTemplateDecl 0x5df5b78 <line:433:3, line:437:66> line:435:5 __miter_base
| |-TemplateTypeParmDecl 0x5df56c8 <line:433:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5df5ad8 <line:434:5, line:437:66> line:435:5 __miter_base 'auto (reverse_iterator<_Iterator>) -> decltype(__make_reverse_iterator(__miter_base(__it.base())))'
|   |-ParmVarDecl 0x5df5800 <col:18, col:46> col:46 referenced __it 'reverse_iterator<_Iterator>'
|   `-CompoundStmt 0x5df5d58 <line:437:5, col:66>
|     `-ReturnStmt 0x5df5d48 <col:7, col:63>
|       `-CallExpr 0x5df5d20 <col:14, col:63> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5df5bd8 <col:14> '<overloaded function type>' lvalue (ADL) = '__make_reverse_iterator' 0x5df4448
|         `-CallExpr 0x5df5cf8 <col:38, col:62> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5df5c20 <col:38> '<overloaded function type>' lvalue (ADL) = '__miter_base' 0x5df5b78 0x5d85e28
|           `-CallExpr 0x5df5cd8 <col:51, col:61> '<dependent type>'
|             `-CXXDependentScopeMemberExpr 0x5df5c90 <col:51, col:56> '<dependent type>' lvalue .base
|               `-DeclRefExpr 0x5df5c70 <col:51> 'reverse_iterator<_Iterator>' lvalue ParmVar 0x5df5800 '__it' 'reverse_iterator<_Iterator>'
|-ClassTemplateDecl 0x5df5e90 <line:451:3, line:515:5> line:452:11 back_insert_iterator
| |-TemplateTypeParmDecl 0x5df5d70 <line:451:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| `-CXXRecordDecl 0x5df5e00 <line:452:5, line:515:5> line:452:11 class back_insert_iterator definition
|   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'iterator<std::output_iterator_tag, void, void, void, void>':'std::iterator<std::output_iterator_tag, void, void, void, void>'
|   |-CXXRecordDecl 0x5df67d8 <col:5, col:11> col:11 implicit referenced class back_insert_iterator
|   |-AccessSpecDecl 0x5df6868 <line:455:5, col:14> col:5 protected
|   |-FieldDecl 0x5df68c8 <line:456:7, col:19> col:19 referenced container '_Container *'
|   |-AccessSpecDecl 0x5df6918 <line:458:5, col:11> col:5 public
|   |-TypedefDecl 0x5df6950 <line:460:7, col:26> col:26 container_type '_Container'
|   | `-TemplateTypeParmType 0x5df5dc0 '_Container' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5df5d70 '_Container'
|   |-CXXConstructorDecl 0x5df6b18 <line:463:7, line:465:44> line:464:7 back_insert_iterator<_Container> 'void (_Container &)'
|   | |-ParmVarDecl 0x5df69e8 <col:28, col:40> col:40 referenced __x '_Container &'
|   | |-CXXCtorInitializer Field 0x5df68c8 'container' '_Container *'
|   | | `-ParenListExpr 0x5df7510 <line:465:18, col:40> 'NULL TYPE'
|   | |   `-CallExpr 0x5df74e8 <col:19, col:39> '<dependent type>'
|   | |     |-UnresolvedLookupExpr 0x5df7480 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x5c27320
|   | |     `-DeclRefExpr 0x5df74c8 <col:36> '_Container' lvalue ParmVar 0x5df69e8 '__x' '_Container &'
|   | `-CompoundStmt 0x5df7560 <col:42, col:44>
|   |-CXXMethodDecl 0x5df6df8 <line:486:7, line:491:7> line:487:7 operator= 'back_insert_iterator<_Container> &(const typename _Container::value_type &)'
|   | |-ParmVarDecl 0x5df6cd0 <col:17, col:56> col:56 referenced __value 'const typename _Container::value_type &'
|   | `-CompoundStmt 0x5df7678 <line:488:7, line:491:7>
|   |   |-CallExpr 0x5df7618 <line:489:2, col:30> '<dependent type>'
|   |   | |-CXXDependentScopeMemberExpr 0x5df75b0 <col:2, col:13> '<dependent type>' lvalue ->push_back
|   |   | | `-MemberExpr 0x5df7580 <col:2> '_Container *' lvalue ->container 0x5df68c8
|   |   | |   `-CXXThisExpr 0x5df7570 <col:2> 'back_insert_iterator<_Container> *' implicit this
|   |   | `-DeclRefExpr 0x5df75f8 <col:23> 'const typename _Container::value_type' lvalue ParmVar 0x5df6cd0 '__value' 'const typename _Container::value_type &'
|   |   `-ReturnStmt 0x5df7668 <line:490:2, col:10>
|   |     `-UnaryOperator 0x5df7650 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5df7640 <col:10> 'back_insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5df7058 <line:493:7, line:498:7> line:494:7 operator= 'back_insert_iterator<_Container> &(typename _Container::value_type &&)'
|   | |-ParmVarDecl 0x5df6f60 <col:17, col:51> col:51 referenced __value 'typename _Container::value_type &&'
|   | `-CompoundStmt 0x5df7830 <line:495:7, line:498:7>
|   |   |-CallExpr 0x5df77d0 <line:496:2, col:41> '<dependent type>'
|   |   | |-CXXDependentScopeMemberExpr 0x5df76d8 <col:2, col:13> '<dependent type>' lvalue ->push_back
|   |   | | `-MemberExpr 0x5df76a8 <col:2> '_Container *' lvalue ->container 0x5df68c8
|   |   | |   `-CXXThisExpr 0x5df7698 <col:2> 'back_insert_iterator<_Container> *' implicit this
|   |   | `-CallExpr 0x5df77a8 <col:23, col:40> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x5df7740 <col:23, col:28> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|   |   |   `-DeclRefExpr 0x5df7788 <col:33> 'typename _Container::value_type' lvalue ParmVar 0x5df6f60 '__value' 'typename _Container::value_type &&'
|   |   `-ReturnStmt 0x5df7820 <line:497:2, col:10>
|   |     `-UnaryOperator 0x5df7808 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5df77f8 <col:10> 'back_insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5df7148 <line:502:7, line:504:23> line:503:7 operator* 'back_insert_iterator<_Container> &()'
|   | `-CompoundStmt 0x5df7888 <line:504:7, col:23>
|   |   `-ReturnStmt 0x5df7878 <col:9, col:17>
|   |     `-UnaryOperator 0x5df7860 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5df7850 <col:17> 'back_insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5df7208 <line:507:7, line:509:23> line:508:7 operator++ 'back_insert_iterator<_Container> &()'
|   | `-CompoundStmt 0x5df78d8 <line:509:7, col:23>
|   |   `-ReturnStmt 0x5df78c8 <col:9, col:17>
|   |     `-UnaryOperator 0x5df78b0 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5df78a0 <col:17> 'back_insert_iterator<_Container> *' this
|   `-CXXMethodDecl 0x5df7388 <line:512:7, line:514:23> line:513:7 operator++ 'back_insert_iterator<_Container> (int)'
|     |-ParmVarDecl 0x5df72c0 <col:18> col:21 'int'
|     `-CompoundStmt 0x5df7928 <line:514:7, col:23>
|       `-ReturnStmt 0x5df7918 <col:9, col:17>
|         `-UnaryOperator 0x5df7900 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|           `-CXXThisExpr 0x5df78f0 <col:17> 'back_insert_iterator<_Container> *' this
|-FunctionTemplateDecl 0x5df7c38 <line:528:3, line:531:53> line:530:5 back_inserter
| |-TemplateTypeParmDecl 0x5df7940 <line:528:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| `-FunctionDecl 0x5df7b98 <line:529:5, line:531:53> line:530:5 back_inserter 'back_insert_iterator<_Container> (_Container &)' inline
|   |-ParmVarDecl 0x5df7a88 <col:19, col:31> col:31 referenced __x '_Container &'
|   `-CompoundStmt 0x5df7da8 <line:531:5, col:53>
|     `-ReturnStmt 0x5df7d98 <col:7, col:50>
|       `-CXXUnresolvedConstructExpr 0x5df7d70 <col:14, col:50> 'back_insert_iterator<_Container>' 'back_insert_iterator<_Container>'
|         `-DeclRefExpr 0x5df7d50 <col:47> '_Container' lvalue ParmVar 0x5df7a88 '__x' '_Container &'
|-ClassTemplateDecl 0x5df7ee0 <line:543:3, line:606:5> line:544:11 front_insert_iterator
| |-TemplateTypeParmDecl 0x5df7dc0 <line:543:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| `-CXXRecordDecl 0x5df7e50 <line:544:5, line:606:5> line:544:11 class front_insert_iterator definition
|   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'iterator<std::output_iterator_tag, void, void, void, void>':'std::iterator<std::output_iterator_tag, void, void, void, void>'
|   |-CXXRecordDecl 0x5df82e0 <col:5, col:11> col:11 implicit referenced class front_insert_iterator
|   |-AccessSpecDecl 0x5df8370 <line:547:5, col:14> col:5 protected
|   |-FieldDecl 0x5df83d8 <line:548:7, col:19> col:19 referenced container '_Container *'
|   |-AccessSpecDecl 0x5df8428 <line:550:5, col:11> col:5 public
|   |-TypedefDecl 0x5df8460 <line:552:7, col:26> col:26 container_type '_Container'
|   | `-TemplateTypeParmType 0x5df7e10 '_Container' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5df7dc0 '_Container'
|   |-CXXConstructorDecl 0x5df85f8 <line:555:7, line:556:44> line:555:16 front_insert_iterator<_Container> 'void (_Container &)'
|   | |-ParmVarDecl 0x5df84f8 <col:38, col:50> col:50 referenced __x '_Container &'
|   | |-CXXCtorInitializer Field 0x5df83d8 'container' '_Container *'
|   | | `-ParenListExpr 0x5df9ff8 <line:556:18, col:40> 'NULL TYPE'
|   | |   `-CallExpr 0x5df9fd0 <col:19, col:39> '<dependent type>'
|   | |     |-UnresolvedLookupExpr 0x5df9f68 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x5c27320
|   | |     `-DeclRefExpr 0x5df9fb0 <col:36> '_Container' lvalue ParmVar 0x5df84f8 '__x' '_Container &'
|   | `-CompoundStmt 0x5dfa048 <col:42, col:44>
|   |-CXXMethodDecl 0x5df9928 <line:577:7, line:582:7> line:578:7 operator= 'front_insert_iterator<_Container> &(const typename _Container::value_type &)'
|   | |-ParmVarDecl 0x5df8780 <col:17, col:56> col:56 referenced __value 'const typename _Container::value_type &'
|   | `-CompoundStmt 0x5dfa160 <line:579:7, line:582:7>
|   |   |-CallExpr 0x5dfa100 <line:580:2, col:31> '<dependent type>'
|   |   | |-CXXDependentScopeMemberExpr 0x5dfa098 <col:2, col:13> '<dependent type>' lvalue ->push_front
|   |   | | `-MemberExpr 0x5dfa068 <col:2> '_Container *' lvalue ->container 0x5df83d8
|   |   | |   `-CXXThisExpr 0x5dfa058 <col:2> 'front_insert_iterator<_Container> *' implicit this
|   |   | `-DeclRefExpr 0x5dfa0e0 <col:24> 'const typename _Container::value_type' lvalue ParmVar 0x5df8780 '__value' 'const typename _Container::value_type &'
|   |   `-ReturnStmt 0x5dfa150 <line:581:2, col:10>
|   |     `-UnaryOperator 0x5dfa138 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfa128 <col:10> 'front_insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5df9b58 <line:584:7, line:589:7> line:585:7 operator= 'front_insert_iterator<_Container> &(typename _Container::value_type &&)'
|   | |-ParmVarDecl 0x5df9a60 <col:17, col:51> col:51 referenced __value 'typename _Container::value_type &&'
|   | `-CompoundStmt 0x5dfa318 <line:586:7, line:589:7>
|   |   |-CallExpr 0x5dfa2b8 <line:587:2, col:42> '<dependent type>'
|   |   | |-CXXDependentScopeMemberExpr 0x5dfa1c0 <col:2, col:13> '<dependent type>' lvalue ->push_front
|   |   | | `-MemberExpr 0x5dfa190 <col:2> '_Container *' lvalue ->container 0x5df83d8
|   |   | |   `-CXXThisExpr 0x5dfa180 <col:2> 'front_insert_iterator<_Container> *' implicit this
|   |   | `-CallExpr 0x5dfa290 <col:24, col:41> '<dependent type>'
|   |   |   |-UnresolvedLookupExpr 0x5dfa228 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|   |   |   `-DeclRefExpr 0x5dfa270 <col:34> 'typename _Container::value_type' lvalue ParmVar 0x5df9a60 '__value' 'typename _Container::value_type &&'
|   |   `-ReturnStmt 0x5dfa308 <line:588:2, col:10>
|   |     `-UnaryOperator 0x5dfa2f0 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfa2e0 <col:10> 'front_insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5df9c48 <line:593:7, line:595:23> line:594:7 operator* 'front_insert_iterator<_Container> &()'
|   | `-CompoundStmt 0x5dfa370 <line:595:7, col:23>
|   |   `-ReturnStmt 0x5dfa360 <col:9, col:17>
|   |     `-UnaryOperator 0x5dfa348 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfa338 <col:17> 'front_insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5df9d08 <line:598:7, line:600:23> line:599:7 operator++ 'front_insert_iterator<_Container> &()'
|   | `-CompoundStmt 0x5dfa3c0 <line:600:7, col:23>
|   |   `-ReturnStmt 0x5dfa3b0 <col:9, col:17>
|   |     `-UnaryOperator 0x5dfa398 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfa388 <col:17> 'front_insert_iterator<_Container> *' this
|   `-CXXMethodDecl 0x5df9e88 <line:603:7, line:605:23> line:604:7 operator++ 'front_insert_iterator<_Container> (int)'
|     |-ParmVarDecl 0x5df9dc0 <col:18> col:21 'int'
|     `-CompoundStmt 0x5dfa410 <line:605:7, col:23>
|       `-ReturnStmt 0x5dfa400 <col:9, col:17>
|         `-UnaryOperator 0x5dfa3e8 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|           `-CXXThisExpr 0x5dfa3d8 <col:17> 'front_insert_iterator<_Container> *' this
|-FunctionTemplateDecl 0x5dfa718 <line:619:3, line:622:54> line:621:5 front_inserter
| |-TemplateTypeParmDecl 0x5dfa428 <line:619:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| `-FunctionDecl 0x5dfa678 <line:620:5, line:622:54> line:621:5 front_inserter 'front_insert_iterator<_Container> (_Container &)' inline
|   |-ParmVarDecl 0x5dfa568 <col:20, col:32> col:32 referenced __x '_Container &'
|   `-CompoundStmt 0x5dfa888 <line:622:5, col:54>
|     `-ReturnStmt 0x5dfa878 <col:7, col:51>
|       `-CXXUnresolvedConstructExpr 0x5dfa850 <col:14, col:51> 'front_insert_iterator<_Container>' 'front_insert_iterator<_Container>'
|         `-DeclRefExpr 0x5dfa830 <col:48> '_Container' lvalue ParmVar 0x5dfa568 '__x' '_Container &'
|-ClassTemplateDecl 0x5dfa9c0 <line:638:3, line:720:5> line:639:11 insert_iterator
| |-TemplateTypeParmDecl 0x5dfa8a0 <line:638:12, col:21> col:21 referenced typename depth 0 index 0 _Container
| `-CXXRecordDecl 0x5dfa930 <line:639:5, line:720:5> line:639:11 class insert_iterator definition
|   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-public 'iterator<std::output_iterator_tag, void, void, void, void>':'std::iterator<std::output_iterator_tag, void, void, void, void>'
|   |-CXXRecordDecl 0x5dfadc0 <col:5, col:11> col:11 implicit referenced class insert_iterator
|   |-AccessSpecDecl 0x5dfae50 <line:642:5, col:14> col:5 protected
|   |-FieldDecl 0x5dfaeb8 <line:643:7, col:19> col:19 referenced container '_Container *'
|   |-FieldDecl 0x5dfafe0 <line:644:7, col:37> col:37 referenced iter 'typename _Container::iterator'
|   |-AccessSpecDecl 0x5dfb030 <line:646:5, col:11> col:5 public
|   |-TypedefDecl 0x5dfb068 <line:648:7, col:26> col:26 container_type '_Container'
|   | `-TemplateTypeParmType 0x5dfa8f0 '_Container' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5dfa8a0 '_Container'
|   |-CXXConstructorDecl 0x5dfb308 <line:654:7, line:655:54> line:654:7 insert_iterator<_Container> 'void (_Container &, typename _Container::iterator)'
|   | |-ParmVarDecl 0x5dfb0f8 <col:23, col:35> col:35 referenced __x '_Container &'
|   | |-ParmVarDecl 0x5dfb1b8 <col:40, col:70> col:70 referenced __i 'typename _Container::iterator'
|   | |-CXXCtorInitializer Field 0x5dfaeb8 'container' '_Container *'
|   | | `-ParenListExpr 0x5dfbc78 <line:655:18, col:40> 'NULL TYPE'
|   | |   `-CallExpr 0x5dfbc50 <col:19, col:39> '<dependent type>'
|   | |     |-UnresolvedLookupExpr 0x5dfbbe8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '__addressof' 0x5c27320
|   | |     `-DeclRefExpr 0x5dfbc30 <col:36> '_Container' lvalue ParmVar 0x5dfb0f8 '__x' '_Container &'
|   | |-CXXCtorInitializer Field 0x5dfafe0 'iter' 'typename _Container::iterator'
|   | | `-ParenListExpr 0x5dfbce0 <col:47, col:51> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x5dfbcc0 <col:48> 'typename _Container::iterator' lvalue ParmVar 0x5dfb1b8 '__i' 'typename _Container::iterator'
|   | `-CompoundStmt 0x5dfbd38 <col:53, col:54>
|   |-CXXMethodDecl 0x5dfb5a8 <line:689:7, line:695:7> line:690:7 operator= 'insert_iterator<_Container> &(const typename _Container::value_type &)'
|   | |-ParmVarDecl 0x5dfb480 <col:17, col:56> col:56 referenced __value 'const typename _Container::value_type &'
|   | `-CompoundStmt 0x5dfbf50 <line:691:7, line:695:7>
|   |   |-BinaryOperator 0x5dfbea0 <line:692:2, col:40> '<dependent type>' '='
|   |   | |-MemberExpr 0x5dfbd58 <col:2> 'typename _Container::iterator' lvalue ->iter 0x5dfafe0
|   |   | | `-CXXThisExpr 0x5dfbd48 <col:2> 'insert_iterator<_Container> *' implicit this
|   |   | `-CallExpr 0x5dfbe70 <col:9, col:40> '<dependent type>'
|   |   |   |-CXXDependentScopeMemberExpr 0x5dfbdc8 <col:9, col:20> '<dependent type>' lvalue ->insert
|   |   |   | `-MemberExpr 0x5dfbd98 <col:9> '_Container *' lvalue ->container 0x5dfaeb8
|   |   |   |   `-CXXThisExpr 0x5dfbd88 <col:9> 'insert_iterator<_Container> *' implicit this
|   |   |   |-MemberExpr 0x5dfbe20 <col:27> 'typename _Container::iterator' lvalue ->iter 0x5dfafe0
|   |   |   | `-CXXThisExpr 0x5dfbe10 <col:27> 'insert_iterator<_Container> *' implicit this
|   |   |   `-DeclRefExpr 0x5dfbe50 <col:33> 'const typename _Container::value_type' lvalue ParmVar 0x5dfb480 '__value' 'const typename _Container::value_type &'
|   |   |-UnaryOperator 0x5dfbf00 <line:693:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5dfbed0 <col:4> 'typename _Container::iterator' lvalue ->iter 0x5dfafe0
|   |   |   `-CXXThisExpr 0x5dfbec0 <col:4> 'insert_iterator<_Container> *' implicit this
|   |   `-ReturnStmt 0x5dfbf40 <line:694:2, col:10>
|   |     `-UnaryOperator 0x5dfbf28 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfbf18 <col:10> 'insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5dfb7d8 <line:697:7, line:703:7> line:698:7 operator= 'insert_iterator<_Container> &(typename _Container::value_type &&)'
|   | |-ParmVarDecl 0x5dfb6e0 <col:17, col:51> col:51 referenced __value 'typename _Container::value_type &&'
|   | `-CompoundStmt 0x5dfc210 <line:699:7, line:703:7>
|   |   |-BinaryOperator 0x5dfc160 <line:700:2, col:51> '<dependent type>' '='
|   |   | |-MemberExpr 0x5dfbf88 <col:2> 'typename _Container::iterator' lvalue ->iter 0x5dfafe0
|   |   | | `-CXXThisExpr 0x5dfbf78 <col:2> 'insert_iterator<_Container> *' implicit this
|   |   | `-CallExpr 0x5dfc130 <col:9, col:51> '<dependent type>'
|   |   |   |-CXXDependentScopeMemberExpr 0x5dfbff8 <col:9, col:20> '<dependent type>' lvalue ->insert
|   |   |   | `-MemberExpr 0x5dfbfc8 <col:9> '_Container *' lvalue ->container 0x5dfaeb8
|   |   |   |   `-CXXThisExpr 0x5dfbfb8 <col:9> 'insert_iterator<_Container> *' implicit this
|   |   |   |-MemberExpr 0x5dfc050 <col:27> 'typename _Container::iterator' lvalue ->iter 0x5dfafe0
|   |   |   | `-CXXThisExpr 0x5dfc040 <col:27> 'insert_iterator<_Container> *' implicit this
|   |   |   `-CallExpr 0x5dfc108 <col:33, col:50> '<dependent type>'
|   |   |     |-UnresolvedLookupExpr 0x5dfc0a0 <col:33, col:38> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|   |   |     `-DeclRefExpr 0x5dfc0e8 <col:43> 'typename _Container::value_type' lvalue ParmVar 0x5dfb6e0 '__value' 'typename _Container::value_type &&'
|   |   |-UnaryOperator 0x5dfc1c0 <line:701:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5dfc190 <col:4> 'typename _Container::iterator' lvalue ->iter 0x5dfafe0
|   |   |   `-CXXThisExpr 0x5dfc180 <col:4> 'insert_iterator<_Container> *' implicit this
|   |   `-ReturnStmt 0x5dfc200 <line:702:2, col:10>
|   |     `-UnaryOperator 0x5dfc1e8 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfc1d8 <col:10> 'insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5dfb8c8 <line:707:7, line:709:23> line:708:7 operator* 'insert_iterator<_Container> &()'
|   | `-CompoundStmt 0x5dfc270 <line:709:7, col:23>
|   |   `-ReturnStmt 0x5dfc260 <col:9, col:17>
|   |     `-UnaryOperator 0x5dfc248 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfc238 <col:17> 'insert_iterator<_Container> *' this
|   |-CXXMethodDecl 0x5dfb988 <line:712:7, line:714:23> line:713:7 operator++ 'insert_iterator<_Container> &()'
|   | `-CompoundStmt 0x5dfc2c0 <line:714:7, col:23>
|   |   `-ReturnStmt 0x5dfc2b0 <col:9, col:17>
|   |     `-UnaryOperator 0x5dfc298 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5dfc288 <col:17> 'insert_iterator<_Container> *' this
|   `-CXXMethodDecl 0x5dfbb08 <line:717:7, line:719:23> line:718:7 operator++ 'insert_iterator<_Container> &(int)'
|     |-ParmVarDecl 0x5dfba40 <col:18> col:21 'int'
|     `-CompoundStmt 0x5dfc310 <line:719:7, col:23>
|       `-ReturnStmt 0x5dfc300 <col:9, col:17>
|         `-UnaryOperator 0x5dfc2e8 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|           `-CXXThisExpr 0x5dfc2d8 <col:17> 'insert_iterator<_Container> *' this
`-FunctionTemplateDecl 0x5dfc738 <line:733:3, line:739:5> line:735:5 inserter
  |-TemplateTypeParmDecl 0x5dfc328 <line:733:12, col:21> col:21 referenced typename depth 0 index 0 _Container
  |-TemplateTypeParmDecl 0x5dfc398 <col:33, col:42> col:42 referenced typename depth 0 index 1 _Iterator
  `-FunctionDecl 0x5dfc698 <line:734:5, line:739:5> line:735:5 inserter 'insert_iterator<_Container> (_Container &, _Iterator)' inline
    |-ParmVarDecl 0x5dfc4e8 <col:14, col:26> col:26 referenced __x '_Container &'
    |-ParmVarDecl 0x5dfc560 <col:31, col:41> col:41 referenced __i '_Iterator'
    `-CompoundStmt 0x5dfc998 <line:736:5, line:739:5>
      `-ReturnStmt 0x5dfc988 <line:737:7, line:738:41>
        `-CXXUnresolvedConstructExpr 0x5dfc958 <line:737:14, line:738:41> 'insert_iterator<_Container>' 'insert_iterator<_Container>'
          |-DeclRefExpr 0x5dfc850 <line:737:42> '_Container' lvalue ParmVar 0x5dfc4e8 '__x' '_Container &'
          `-CXXUnresolvedConstructExpr 0x5dfc930 <line:738:7, col:40> 'typename _Container::iterator' 'typename _Container::iterator'
            `-DeclRefExpr 0x5dfc910 <col:37> '_Iterator' lvalue ParmVar 0x5dfc560 '__i' '_Iterator'
NamespaceDecl 0x5dfd4d0 prev 0x5d96758 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator.h:746:1, line:975:1> line:746:11 __gnu_cxx
|-original Namespace 0x5b95a90 '__gnu_cxx'
|-VisibilityAttr 0x5dfd540 <col:37, col:62> Default
|-UsingDecl 0x5dfd588 <line:757:3, col:14> col:14 std::iterator_traits
|-UsingShadowDecl 0x5dfd5e0 <col:14> col:14 implicit ClassTemplate 0x5dd5a10 'iterator_traits'
|-UsingDecl 0x5dfd638 <line:758:3, col:14> col:14 std::iterator
|-UsingShadowDecl 0x5dfd690 <col:14> col:14 implicit ClassTemplate 0x5dd3f20 'iterator'
|-ClassTemplateDecl 0x5e01250 <line:759:3, line:846:5> line:760:11 __normal_iterator
| |-TemplateTypeParmDecl 0x5dfd6e0 <line:759:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5dfd758 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-CXXRecordDecl 0x5dfd7e8 <line:760:5, line:846:5> line:760:11 class __normal_iterator definition
|   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists non_trivial user_provided constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5e014e0 <col:5, col:11> col:11 implicit referenced class __normal_iterator
|   |-AccessSpecDecl 0x5e01570 <line:762:5, col:14> col:5 protected
|   |-FieldDecl 0x5e015a8 <line:763:7, col:17> col:17 referenced _M_current '_Iterator'
|   |-TypedefDecl 0x5e016b0 <line:765:7, col:42> col:42 referenced __traits_type 'iterator_traits<_Iterator>'
|   | `-TemplateSpecializationType 0x5e01610 'iterator_traits<_Iterator>' dependent iterator_traits
|   |   `-TemplateArgument type '_Iterator'
|   |-AccessSpecDecl 0x5e01708 <line:767:5, col:11> col:5 public
|   |-TypedefDecl 0x5e01740 <line:768:7, col:25> col:25 iterator_type '_Iterator'
|   | `-TemplateTypeParmType 0x5dfd730 '_Iterator' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5dfd6e0 '_Iterator'
|   |-TypedefDecl 0x5e01860 <line:769:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category'
|   | `-DependentNameType 0x5e017f0 'typename __traits_type::iterator_category' dependent
|   |-TypedefDecl 0x5e01940 <line:770:7, col:50> col:50 value_type 'typename __traits_type::value_type'
|   | `-DependentNameType 0x5e018d0 'typename __traits_type::value_type' dependent
|   |-TypedefDecl 0x5e01a20 <line:771:7, col:55> col:55 referenced difference_type 'typename __traits_type::difference_type'
|   | `-DependentNameType 0x5e019b0 'typename __traits_type::difference_type' dependent
|   |-TypedefDecl 0x5e01b00 <line:772:7, col:49> col:49 referenced reference 'typename __traits_type::reference'
|   | `-DependentNameType 0x5e01a90 'typename __traits_type::reference' dependent
|   |-TypedefDecl 0x5e01be0 <line:773:7, col:47> col:47 referenced pointer 'typename __traits_type::pointer'
|   | `-DependentNameType 0x5e01b70 'typename __traits_type::pointer' dependent
|   |-CXXConstructorDecl 0x5e01ca8 <line:775:7, line:776:35> line:775:17 constexpr __normal_iterator<_Iterator, _Container> 'void () noexcept'
|   | |-CXXCtorInitializer Field 0x5e015a8 '_M_current' '_Iterator'
|   | | `-ParenListExpr 0x5e038c8 <line:776:19, col:31> 'NULL TYPE'
|   | |   `-CXXUnresolvedConstructExpr 0x5e038a8 <col:20, col:30> '_Iterator' '_Iterator'
|   | `-CompoundStmt 0x5e03918 <col:33, col:35>
|   |-CXXConstructorDecl 0x5e01e50 <line:778:7, line:780:27> line:779:7 __normal_iterator<_Iterator, _Container> 'void (const _Iterator &) noexcept'
|   | |-ParmVarDecl 0x5e01d88 <col:25, col:42> col:42 referenced __i 'const _Iterator &'
|   | |-CXXCtorInitializer Field 0x5e015a8 '_M_current' '_Iterator'
|   | | `-ParenListExpr 0x5e03948 <line:780:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x5e03928 <col:20> 'const _Iterator' lvalue ParmVar 0x5e01d88 '__i' 'const _Iterator &'
|   | `-CompoundStmt 0x5e03998 <col:25, col:27>
|   |-FunctionTemplateDecl 0x5e027c8 <line:783:7, line:788:36> line:784:9 __normal_iterator<_Iterator, _Container>
|   | |-TemplateTypeParmDecl 0x5e01f00 <line:783:16, col:25> col:25 referenced typename depth 1 index 0 _Iter
|   | `-CXXConstructorDecl 0x5e02720 <line:784:9, line:788:36> line:784:9 __normal_iterator<_Iterator, _Container> 'void (const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &) noexcept'
|   |   |-ParmVarDecl 0x5e02628 <col:27, line:787:31> col:31 referenced __i 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'
|   |   |-CXXCtorInitializer Field 0x5e015a8 '_M_current' '_Iterator'
|   |   | `-ParenListExpr 0x5e03a30 <line:788:21, col:32> 'NULL TYPE'
|   |   |   `-CallExpr 0x5e03a10 <col:22, col:31> '<dependent type>'
|   |   |     `-CXXDependentScopeMemberExpr 0x5e039c8 <col:22, col:26> '<dependent type>' lvalue .base
|   |   |       `-DeclRefExpr 0x5e039a8 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x5e02628 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &'
|   |   `-CompoundStmt 0x5e03a80 <col:34, col:36>
|   |-CXXMethodDecl 0x5e028d0 <line:791:7, line:793:29> line:792:7 operator* '__gnu_cxx::__normal_iterator::reference () const noexcept'
|   | `-CompoundStmt 0x5e03b20 <line:793:7, col:29>
|   |   `-ReturnStmt 0x5e03b10 <col:9, col:17>
|   |     `-UnaryOperator 0x5e03af8 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
|   |       `-MemberExpr 0x5e03ac8 <col:17> 'const _Iterator' lvalue ->_M_current 0x5e015a8
|   |         `-CXXThisExpr 0x5e03ab8 <col:17> 'const __normal_iterator<_Iterator, _Container> *' implicit this
|   |-CXXMethodDecl 0x5e029e0 <line:795:7, line:797:28> line:796:7 operator-> '__gnu_cxx::__normal_iterator::pointer () const noexcept'
|   | `-CompoundStmt 0x5e03b88 <line:797:7, col:28>
|   |   `-ReturnStmt 0x5e03b78 <col:9, col:16>
|   |     `-MemberExpr 0x5e03b48 <col:16> 'const _Iterator' lvalue ->_M_current 0x5e015a8
|   |       `-CXXThisExpr 0x5e03b38 <col:16> 'const __normal_iterator<_Iterator, _Container> *' implicit this
|   |-CXXMethodDecl 0x5e02b30 <line:799:7, line:804:7> line:800:7 operator++ '__normal_iterator<_Iterator, _Container> &() noexcept'
|   | `-CompoundStmt 0x5e03c30 <line:801:7, line:804:7>
|   |   |-UnaryOperator 0x5e03be0 <line:802:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5e03bb0 <col:4> '_Iterator' lvalue ->_M_current 0x5e015a8
|   |   |   `-CXXThisExpr 0x5e03ba0 <col:4> '__normal_iterator<_Iterator, _Container> *' implicit this
|   |   `-ReturnStmt 0x5e03c20 <line:803:2, col:10>
|   |     `-UnaryOperator 0x5e03c08 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e03bf8 <col:10> '__normal_iterator<_Iterator, _Container> *' this
|   |-CXXMethodDecl 0x5e02ce0 <line:806:7, line:808:49> line:807:7 operator++ '__normal_iterator<_Iterator, _Container> (int) noexcept'
|   | |-ParmVarDecl 0x5e02be8 <col:18> col:21 'int'
|   | `-CompoundStmt 0x5e03d10 <line:808:7, col:49>
|   |   `-ReturnStmt 0x5e03d00 <col:9, col:46>
|   |     `-CXXUnresolvedConstructExpr 0x5e03cd8 <col:16, col:46> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
|   |       `-UnaryOperator 0x5e03cc0 <col:34, col:44> '<dependent type>' postfix '++' cannot overflow
|   |         `-MemberExpr 0x5e03c70 <col:34> '_Iterator' lvalue ->_M_current 0x5e015a8
|   |           `-CXXThisExpr 0x5e03c60 <col:34> '__normal_iterator<_Iterator, _Container> *' implicit this
|   |-CXXMethodDecl 0x5e02db0 <line:811:7, line:816:7> line:812:7 operator-- '__normal_iterator<_Iterator, _Container> &() noexcept'
|   | `-CompoundStmt 0x5e03db8 <line:813:7, line:816:7>
|   |   |-UnaryOperator 0x5e03d68 <line:814:2, col:4> '<dependent type>' prefix '--' cannot overflow
|   |   | `-MemberExpr 0x5e03d38 <col:4> '_Iterator' lvalue ->_M_current 0x5e015a8
|   |   |   `-CXXThisExpr 0x5e03d28 <col:4> '__normal_iterator<_Iterator, _Container> *' implicit this
|   |   `-ReturnStmt 0x5e03da8 <line:815:2, col:10>
|   |     `-UnaryOperator 0x5e03d90 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e03d80 <col:10> '__normal_iterator<_Iterator, _Container> *' this
|   |-CXXMethodDecl 0x5e02f00 <line:818:7, line:820:49> line:819:7 operator-- '__normal_iterator<_Iterator, _Container> (int) noexcept'
|   | |-ParmVarDecl 0x5e02e68 <col:18> col:21 'int'
|   | `-CompoundStmt 0x5e03e98 <line:820:7, col:49>
|   |   `-ReturnStmt 0x5e03e88 <col:9, col:46>
|   |     `-CXXUnresolvedConstructExpr 0x5e03e60 <col:16, col:46> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
|   |       `-UnaryOperator 0x5e03e48 <col:34, col:44> '<dependent type>' postfix '--' cannot overflow
|   |         `-MemberExpr 0x5e03df8 <col:34> '_Iterator' lvalue ->_M_current 0x5e015a8
|   |           `-CXXThisExpr 0x5e03de8 <col:34> '__normal_iterator<_Iterator, _Container> *' implicit this
|   |-CXXMethodDecl 0x5e030b0 <line:823:7, line:825:33> line:824:7 operator[] '__gnu_cxx::__normal_iterator::reference (__gnu_cxx::__normal_iterator::difference_type) const noexcept'
|   | |-ParmVarDecl 0x5e02fe0 <col:18, col:34> col:34 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e03f40 <line:825:7, col:33>
|   |   `-ReturnStmt 0x5e03f30 <col:9, col:30>
|   |     `-ArraySubscriptExpr 0x5e03f10 <col:16, col:30> '<dependent type>' lvalue
|   |       |-MemberExpr 0x5e03ec0 <col:16> 'const _Iterator' lvalue ->_M_current 0x5e015a8
|   |       | `-CXXThisExpr 0x5e03eb0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' implicit this
|   |       `-DeclRefExpr 0x5e03ef0 <col:27> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e02fe0 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   |-CXXMethodDecl 0x5e03260 <line:827:7, line:829:42> line:828:7 operator+= '__normal_iterator<_Iterator, _Container> &(__gnu_cxx::__normal_iterator::difference_type) noexcept'
|   | |-ParmVarDecl 0x5e03168 <col:18, col:34> col:34 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e04020 <line:829:7, col:42>
|   |   |-CompoundAssignOperator 0x5e03fb8 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | |-MemberExpr 0x5e03f68 <col:9> '_Iterator' lvalue ->_M_current 0x5e015a8
|   |   | | `-CXXThisExpr 0x5e03f58 <col:9> '__normal_iterator<_Iterator, _Container> *' implicit this
|   |   | `-DeclRefExpr 0x5e03f98 <col:23> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e03168 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   |   `-ReturnStmt 0x5e04010 <col:28, col:36>
|   |     `-UnaryOperator 0x5e03ff8 <col:35, col:36> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e03fe8 <col:36> '__normal_iterator<_Iterator, _Container> *' this
|   |-CXXMethodDecl 0x5e03410 <line:831:7, line:833:53> line:832:7 operator+ '__normal_iterator<_Iterator, _Container> (__gnu_cxx::__normal_iterator::difference_type) const noexcept'
|   | |-ParmVarDecl 0x5e03318 <col:17, col:33> col:33 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e04108 <line:833:7, col:53>
|   |   `-ReturnStmt 0x5e040f8 <col:9, col:50>
|   |     `-CXXUnresolvedConstructExpr 0x5e040d0 <col:16, col:50> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
|   |       `-BinaryOperator 0x5e040b0 <col:34, col:47> '<dependent type>' '+'
|   |         |-MemberExpr 0x5e04060 <col:34> 'const _Iterator' lvalue ->_M_current 0x5e015a8
|   |         | `-CXXThisExpr 0x5e04050 <col:34> 'const __normal_iterator<_Iterator, _Container> *' implicit this
|   |         `-DeclRefExpr 0x5e04090 <col:47> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e03318 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   |-CXXMethodDecl 0x5e03560 <line:835:7, line:837:42> line:836:7 operator-= '__normal_iterator<_Iterator, _Container> &(__gnu_cxx::__normal_iterator::difference_type) noexcept'
|   | |-ParmVarDecl 0x5e034c8 <col:18, col:34> col:34 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e041e8 <line:837:7, col:42>
|   |   |-CompoundAssignOperator 0x5e04180 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | |-MemberExpr 0x5e04130 <col:9> '_Iterator' lvalue ->_M_current 0x5e015a8
|   |   | | `-CXXThisExpr 0x5e04120 <col:9> '__normal_iterator<_Iterator, _Container> *' implicit this
|   |   | `-DeclRefExpr 0x5e04160 <col:23> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e034c8 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   |   `-ReturnStmt 0x5e041d8 <col:28, col:36>
|   |     `-UnaryOperator 0x5e041c0 <col:35, col:36> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e041b0 <col:36> '__normal_iterator<_Iterator, _Container> *' this
|   |-CXXMethodDecl 0x5e036b0 <line:839:7, line:841:53> line:840:7 operator- '__normal_iterator<_Iterator, _Container> (__gnu_cxx::__normal_iterator::difference_type) const noexcept'
|   | |-ParmVarDecl 0x5e03618 <col:17, col:33> col:33 referenced __n '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e042d0 <line:841:7, col:53>
|   |   `-ReturnStmt 0x5e042c0 <col:9, col:50>
|   |     `-CXXUnresolvedConstructExpr 0x5e04298 <col:16, col:50> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
|   |       `-BinaryOperator 0x5e04278 <col:34, col:47> '<dependent type>' '-'
|   |         |-MemberExpr 0x5e04228 <col:34> 'const _Iterator' lvalue ->_M_current 0x5e015a8
|   |         | `-CXXThisExpr 0x5e04218 <col:34> 'const __normal_iterator<_Iterator, _Container> *' implicit this
|   |         `-DeclRefExpr 0x5e04258 <col:47> '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e03618 '__n' '__gnu_cxx::__normal_iterator::difference_type':'typename __traits_type::difference_type'
|   `-CXXMethodDecl 0x5e037e0 <line:843:7, line:845:28> line:844:7 base 'const _Iterator &() const noexcept'
|     `-CompoundStmt 0x5e04338 <line:845:7, col:28>
|       `-ReturnStmt 0x5e04328 <col:9, col:16>
|         `-MemberExpr 0x5e042f8 <col:16> 'const _Iterator' lvalue ->_M_current 0x5e015a8
|           `-CXXThisExpr 0x5e042e8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' implicit this
|-FunctionTemplateDecl 0x5e04a80 <line:857:3, line:862:44> line:859:5 operator==
| |-TemplateTypeParmDecl 0x5e04350 <line:857:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e043c8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e04438 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e049e0 <line:858:5, line:862:44> line:859:5 operator== 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e04698 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e048c8 <line:860:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e04c88 <line:862:5, col:44>
|     `-ReturnStmt 0x5e04c78 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e04c40 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e04bf8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80
|         |-CallExpr 0x5e04b50 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e04b08 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e04ae8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e04698 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e04bd8 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e04b90 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e04b70 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e048c8 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e069a0 <line:864:3, line:869:44> line:866:5 operator==
| |-TemplateTypeParmDecl 0x5e04ca0 <line:864:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e04d18 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e06900 <line:865:5, line:869:44> line:866:5 operator== 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e04f18 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e050b8 <line:867:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e06bb0 <line:869:5, col:44>
|     `-ReturnStmt 0x5e06ba0 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e06b68 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e06b18 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e069a0 0x5e04a80
|         |-CallExpr 0x5e06a70 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e06a28 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e06a08 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e04f18 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e06af8 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e06ab0 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e06a90 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e050b8 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
|-FunctionTemplateDecl 0x5e07190 <line:871:3, line:876:44> line:873:5 operator!=
| |-TemplateTypeParmDecl 0x5e06bc8 <line:871:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e06c38 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e06ca8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e070f0 <line:872:5, line:876:44> line:873:5 operator!= 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e06e78 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e07018 <line:874:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e07398 <line:876:5, col:44>
|     `-ReturnStmt 0x5e07388 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e07350 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e07308 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5e07190
|         |-CallExpr 0x5e07260 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e07218 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e071f8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e06e78 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e072e8 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e072a0 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e07280 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e07018 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e07910 <line:878:3, line:883:44> line:880:5 operator!=
| |-TemplateTypeParmDecl 0x5e073b0 <line:878:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e07428 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e07870 <line:879:5, line:883:44> line:880:5 operator!= 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e075f8 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e07798 <line:881:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e07b20 <line:883:5, col:44>
|     `-ReturnStmt 0x5e07b10 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e07ad8 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e07a88 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5e07910 0x5e07190
|         |-CallExpr 0x5e079e0 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e07998 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e07978 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e075f8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e07a68 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e07a20 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e07a00 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e07798 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
|-FunctionTemplateDecl 0x5e08100 <line:886:3, line:891:43> line:888:5 operator<
| |-TemplateTypeParmDecl 0x5e07b38 <line:886:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e07ba8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e07c18 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e08060 <line:887:5, line:891:43> line:888:5 operator< 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e07de8 <col:15, col:64> col:64 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e07f88 <line:889:8, col:57> col:57 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e08308 <line:891:5, col:43>
|     `-ReturnStmt 0x5e082f8 <col:7, col:40>
|       `-CXXOperatorCallExpr 0x5e082c0 <col:14, col:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e08278 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e08100
|         |-CallExpr 0x5e081d0 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e08188 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e08168 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e07de8 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e08258 <col:29, col:40> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e08210 <col:29, col:35> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e081f0 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e07f88 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e08880 <line:893:3, line:898:43> line:895:5 operator<
| |-TemplateTypeParmDecl 0x5e08320 <line:893:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e08398 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e087e0 <line:894:5, line:898:43> line:895:5 operator< 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e08568 <col:15, col:63> col:63 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e08708 <line:896:8, col:56> col:56 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e08a90 <line:898:5, col:43>
|     `-ReturnStmt 0x5e08a80 <col:7, col:40>
|       `-CXXOperatorCallExpr 0x5e08a48 <col:14, col:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e089f8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e08880 0x5e08100
|         |-CallExpr 0x5e08950 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e08908 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e088e8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e08568 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e089d8 <col:29, col:40> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e08990 <col:29, col:35> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e08970 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e08708 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
|-FunctionTemplateDecl 0x5e09070 <line:900:3, line:905:43> line:902:5 operator>
| |-TemplateTypeParmDecl 0x5e08aa8 <line:900:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e08b18 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e08b88 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e08fd0 <line:901:5, line:905:43> line:902:5 operator> 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e08d58 <col:15, col:64> col:64 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e08ef8 <line:903:8, col:57> col:57 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e09278 <line:905:5, col:43>
|     `-ReturnStmt 0x5e09268 <col:7, col:40>
|       `-CXXOperatorCallExpr 0x5e09230 <col:14, col:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e091e8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5e09070
|         |-CallExpr 0x5e09140 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e090f8 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e090d8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e08d58 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e091c8 <col:29, col:40> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e09180 <col:29, col:35> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e09160 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e08ef8 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e097f0 <line:907:3, line:912:43> line:909:5 operator>
| |-TemplateTypeParmDecl 0x5e09290 <line:907:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e09308 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e09750 <line:908:5, line:912:43> line:909:5 operator> 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e094d8 <col:15, col:63> col:63 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e09678 <line:910:8, col:56> col:56 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e09a00 <line:912:5, col:43>
|     `-ReturnStmt 0x5e099f0 <col:7, col:40>
|       `-CXXOperatorCallExpr 0x5e099b8 <col:14, col:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e09968 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5e097f0 0x5e09070
|         |-CallExpr 0x5e098c0 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e09878 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e09858 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e094d8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e09948 <col:29, col:40> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e09900 <col:29, col:35> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e098e0 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e09678 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
|-FunctionTemplateDecl 0x5e09fe0 <line:914:3, line:919:44> line:916:5 operator<=
| |-TemplateTypeParmDecl 0x5e09a18 <line:914:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e09a88 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e09af8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e09f40 <line:915:5, line:919:44> line:916:5 operator<= 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e09cc8 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e09e68 <line:917:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e0a1e8 <line:919:5, col:44>
|     `-ReturnStmt 0x5e0a1d8 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e0a1a0 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e0a158 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x5e09fe0
|         |-CallExpr 0x5e0a0b0 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e0a068 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e0a048 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e09cc8 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e0a138 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e0a0f0 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e0a0d0 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e09e68 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e0a760 <line:921:3, line:926:44> line:923:5 operator<=
| |-TemplateTypeParmDecl 0x5e0a200 <line:921:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e0a278 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e0a6c0 <line:922:5, line:926:44> line:923:5 operator<= 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e0a448 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e0a5e8 <line:924:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e0a9a8 <line:926:5, col:44>
|     `-ReturnStmt 0x5e0a998 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e0a960 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e0a910 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator<=' 0x5e0a760 0x5e09fe0
|         |-CallExpr 0x5e0a830 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e0a7e8 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e0a7c8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0a448 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e0a8b8 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e0a870 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e0a850 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0a5e8 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
|-FunctionTemplateDecl 0x5e0af90 <line:928:3, line:933:44> line:930:5 operator>=
| |-TemplateTypeParmDecl 0x5e0a9c0 <line:928:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e0aa38 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e0aaa8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e0aef0 <line:929:5, line:933:44> line:930:5 operator>= 'bool (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e0ac78 <col:16, col:65> col:65 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e0ae18 <line:931:9, col:58> col:58 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e0b198 <line:933:5, col:44>
|     `-ReturnStmt 0x5e0b188 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e0b150 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e0b108 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x5e0af90
|         |-CallExpr 0x5e0b060 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e0b018 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e0aff8 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e0ac78 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e0b0e8 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e0b0a0 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e0b080 <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e0ae18 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e0b710 <line:935:3, line:940:44> line:937:5 operator>=
| |-TemplateTypeParmDecl 0x5e0b1b0 <line:935:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e0b228 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e0b670 <line:936:5, line:940:44> line:937:5 operator>= 'bool (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e0b3f8 <col:16, col:64> col:64 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e0b598 <line:938:9, col:57> col:57 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e0b920 <line:940:5, col:44>
|     `-ReturnStmt 0x5e0b910 <col:7, col:41>
|       `-CXXOperatorCallExpr 0x5e0b8d8 <col:14, col:41> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e0b888 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator>=' 0x5e0b710 0x5e0af90
|         |-CallExpr 0x5e0b7e0 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e0b798 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e0b778 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0b3f8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e0b868 <col:30, col:41> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e0b820 <col:30, col:36> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e0b800 <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0b598 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
|-FunctionTemplateDecl 0x5e0c0f0 <line:946:3, line:958:43> line:950:5 operator-
| |-TemplateTypeParmDecl 0x5e0b938 <line:946:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e0b9a8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| |-TemplateTypeParmDecl 0x5e0ba18 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Container
| `-FunctionDecl 0x5e0c050 <line:949:5, line:958:43> line:950:5 operator- 'auto (const __normal_iterator<_IteratorL, _Container> &, const __normal_iterator<_IteratorR, _Container> &) noexcept -> decltype(__lhs.base() - __rhs.base())' inline
|   |-ParmVarDecl 0x5e0bbe8 <col:15, col:64> col:64 referenced __lhs 'const __normal_iterator<_IteratorL, _Container> &'
|   |-ParmVarDecl 0x5e0bd88 <line:951:8, col:57> col:57 referenced __rhs 'const __normal_iterator<_IteratorR, _Container> &'
|   `-CompoundStmt 0x5e0c2f8 <line:958:5, col:43>
|     `-ReturnStmt 0x5e0c2e8 <col:7, col:40>
|       `-CXXOperatorCallExpr 0x5e0c2b0 <col:14, col:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e0c268 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5e0c0f0
|         |-CallExpr 0x5e0c1c0 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e0c178 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e0c158 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x5e0bbe8 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &'
|         `-CallExpr 0x5e0c248 <col:29, col:40> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e0c200 <col:29, col:35> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e0c1e0 <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x5e0bd88 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'
|-FunctionTemplateDecl 0x5e0ca40 <line:960:3, line:965:43> line:962:5 operator-
| |-TemplateTypeParmDecl 0x5e0c310 <line:960:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e0c388 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
| `-FunctionDecl 0x5e0c9a0 <line:961:5, line:965:43> line:962:5 operator- 'typename __normal_iterator<_Iterator, _Container>::difference_type (const __normal_iterator<_Iterator, _Container> &, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
|   |-ParmVarDecl 0x5e0c6d8 <col:15, col:63> col:63 referenced __lhs 'const __normal_iterator<_Iterator, _Container> &'
|   |-ParmVarDecl 0x5e0c878 <line:963:8, col:56> col:56 referenced __rhs 'const __normal_iterator<_Iterator, _Container> &'
|   `-CompoundStmt 0x5e0cc50 <line:965:5, col:43>
|     `-ReturnStmt 0x5e0cc40 <col:7, col:40>
|       `-CXXOperatorCallExpr 0x5e0cc08 <col:14, col:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e0cbb8 <col:27> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5e0ca40 0x5e0c0f0
|         |-CallExpr 0x5e0cb10 <col:14, col:25> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e0cac8 <col:14, col:20> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e0caa8 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0c6d8 '__lhs' 'const __normal_iterator<_Iterator, _Container> &'
|         `-CallExpr 0x5e0cb98 <col:29, col:40> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e0cb50 <col:29, col:35> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e0cb30 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0c878 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'
`-FunctionTemplateDecl 0x5e0d318 <line:967:3, line:972:74> line:969:5 operator+
  |-TemplateTypeParmDecl 0x5e0cc68 <line:967:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
  |-TemplateTypeParmDecl 0x5e0ccd8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
  `-FunctionDecl 0x5e0d278 <line:968:5, line:972:74> line:969:5 operator+ '__normal_iterator<_Iterator, _Container> (typename __normal_iterator<_Iterator, _Container>::difference_type, const __normal_iterator<_Iterator, _Container> &) noexcept' inline
    |-ParmVarDecl 0x5e0cf80 <col:15, line:970:8> col:8 referenced __n 'typename __normal_iterator<_Iterator, _Container>::difference_type'
    |-ParmVarDecl 0x5e0d128 <col:13, col:61> col:61 referenced __i 'const __normal_iterator<_Iterator, _Container> &'
    `-CompoundStmt 0x5e0d5e8 <line:972:5, col:74>
      `-ReturnStmt 0x5e0d5d8 <col:7, col:71>
        `-CXXUnresolvedConstructExpr 0x5e0d5b0 <col:14, col:71> '__normal_iterator<_Iterator, _Container>' '__normal_iterator<_Iterator, _Container>'
          `-CXXOperatorCallExpr 0x5e0d578 <col:55, col:68> '<dependent type>'
            |-UnresolvedLookupExpr 0x5e0d530 <col:66> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5e0d318
            |-CallExpr 0x5e0d4f0 <col:55, col:64> '<dependent type>'
            | `-CXXDependentScopeMemberExpr 0x5e0d4a8 <col:55, col:59> '<dependent type>' lvalue .base
            |   `-DeclRefExpr 0x5e0d488 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0d128 '__i' 'const __normal_iterator<_Iterator, _Container> &'
            `-DeclRefExpr 0x5e0d510 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x5e0cf80 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type'
NamespaceDecl 0x5e0de20 prev 0x5de8ae0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator.h:977:1, line:987:1> line:977:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5e0de90 <col:31, col:56> Default
`-FunctionTemplateDecl 0x5e0e308 <line:981:3, line:984:27> line:983:5 __niter_base
  |-TemplateTypeParmDecl 0x5e0ded0 <line:981:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
  |-TemplateTypeParmDecl 0x5e0df48 <col:32, col:41> col:41 referenced typename depth 0 index 1 _Container
  `-FunctionDecl 0x5e0e268 <line:982:5, line:984:27> line:983:5 __niter_base '_Iterator (__gnu_cxx::__normal_iterator<_Iterator, _Container>)'
    |-ParmVarDecl 0x5e0e178 <col:18, col:70> col:70 referenced __it '__gnu_cxx::__normal_iterator<_Iterator, _Container>':'__normal_iterator<_Iterator, _Container>'
    `-CompoundStmt 0x5e0e400 <line:984:5, col:27>
      `-ReturnStmt 0x5e0e3f0 <col:7, col:24>
        `-CallExpr 0x5e0e3d0 <col:14, col:24> '<dependent type>'
          `-CXXDependentScopeMemberExpr 0x5e0e388 <col:14, col:19> '<dependent type>' lvalue .base
            `-DeclRefExpr 0x5e0e368 <col:14> '__gnu_cxx::__normal_iterator<_Iterator, _Container>':'__normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x5e0e178 '__it' '__gnu_cxx::__normal_iterator<_Iterator, _Container>':'__normal_iterator<_Iterator, _Container>'
NamespaceDecl 0x5e0e4b8 prev 0x5e0de20 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator.h:991:1, line:1246:1> line:991:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5e0e528 <col:31, col:56> Default
|-ClassTemplateDecl 0x5e0e680 <line:1009:3, line:1111:5> line:1010:11 move_iterator
| |-TemplateTypeParmDecl 0x5e0e568 <line:1009:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-CXXRecordDecl 0x5e0e5f0 <line:1010:5, line:1111:5> line:1010:11 class move_iterator definition
|   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor exists non_trivial user_provided
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5e111f0 <col:5, col:11> col:11 implicit referenced class move_iterator
|   |-AccessSpecDecl 0x5e11280 <line:1012:5, col:14> col:5 protected
|   |-FieldDecl 0x5e112b8 <line:1013:7, col:17> col:17 referenced _M_current '_Iterator'
|   |-TypedefDecl 0x5e113c0 <line:1015:7, col:42> col:42 referenced __traits_type 'iterator_traits<_Iterator>'
|   | `-TemplateSpecializationType 0x5e11320 'iterator_traits<_Iterator>' dependent iterator_traits
|   |   `-TemplateArgument type '_Iterator'
|   |-TypedefDecl 0x5e114e0 <line:1016:7, col:49> col:49 referenced __base_ref 'typename __traits_type::reference'
|   | `-DependentNameType 0x5e11470 'typename __traits_type::reference' dependent
|   |-AccessSpecDecl 0x5e11538 <line:1018:5, col:11> col:5 public
|   |-TypedefDecl 0x5e11570 <line:1019:7, col:25> col:25 referenced iterator_type '_Iterator'
|   | `-TemplateTypeParmType 0x5e0e5b0 '_Iterator' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5e0e568 '_Iterator'
|   |-TypedefDecl 0x5e11650 <line:1020:7, col:57> col:57 iterator_category 'typename __traits_type::iterator_category'
|   | `-DependentNameType 0x5e115e0 'typename __traits_type::iterator_category' dependent
|   |-TypedefDecl 0x5e11730 <line:1021:7, col:50> col:50 value_type 'typename __traits_type::value_type'
|   | `-DependentNameType 0x5e116c0 'typename __traits_type::value_type' dependent
|   |-TypedefDecl 0x5e11810 <line:1022:7, col:55> col:55 referenced difference_type 'typename __traits_type::difference_type'
|   | `-DependentNameType 0x5e117a0 'typename __traits_type::difference_type' dependent
|   |-TypedefDecl 0x5e11878 <line:1024:7, col:25> col:25 referenced pointer '_Iterator'
|   | `-TemplateTypeParmType 0x5e0e5b0 '_Iterator' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5e0e568 '_Iterator'
|   |-TypedefDecl 0x5e11e90 <line:1027:7, line:1029:23> col:23 referenced reference 'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type'
|   | `-DependentNameType 0x5e11e20 'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type' dependent
|   |-CXXConstructorDecl 0x5e11f50 <line:1032:7, line:1033:24> line:1032:7 move_iterator<_Iterator> 'void ()'
|   | |-CXXCtorInitializer Field 0x5e112b8 '_M_current' '_Iterator'
|   | | `-ParenListExpr 0x5e13578 <line:1033:19, col:20> 'NULL TYPE'
|   | `-CompoundStmt 0x5e135c0 <col:22, col:24>
|   |-CXXConstructorDecl 0x5e120f8 <line:1035:7, line:1037:27> line:1036:7 move_iterator<_Iterator> 'void (std::move_iterator::iterator_type)'
|   | |-ParmVarDecl 0x5e12030 <col:21, col:35> col:35 referenced __i 'std::move_iterator::iterator_type':'_Iterator'
|   | |-CXXCtorInitializer Field 0x5e112b8 '_M_current' '_Iterator'
|   | | `-ParenListExpr 0x5e135f0 <line:1037:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x5e135d0 <col:20> 'std::move_iterator::iterator_type':'_Iterator' lvalue ParmVar 0x5e12030 '__i' 'std::move_iterator::iterator_type':'_Iterator'
|   | `-CompoundStmt 0x5e13640 <col:25, col:27>
|   |-FunctionTemplateDecl 0x5e12520 <line:1039:7, line:1042:29> line:1041:2 move_iterator<_Iterator>
|   | |-TemplateTypeParmDecl 0x5e121a8 <line:1039:16, col:25> col:25 referenced typename depth 1 index 0 _Iter
|   | `-CXXConstructorDecl 0x5e12478 <line:1041:2, line:1042:29> line:1041:2 move_iterator<_Iterator> 'void (const move_iterator<_Iter> &)'
|   |   |-ParmVarDecl 0x5e12380 <col:16, col:44> col:44 referenced __i 'const move_iterator<_Iter> &'
|   |   |-CXXCtorInitializer Field 0x5e112b8 '_M_current' '_Iterator'
|   |   | `-ParenListExpr 0x5e136d8 <line:1042:14, col:25> 'NULL TYPE'
|   |   |   `-CallExpr 0x5e136b8 <col:15, col:24> '<dependent type>'
|   |   |     `-CXXDependentScopeMemberExpr 0x5e13670 <col:15, col:19> '<dependent type>' lvalue .base
|   |   |       `-DeclRefExpr 0x5e13650 <col:15> 'const move_iterator<_Iter>' lvalue ParmVar 0x5e12380 '__i' 'const move_iterator<_Iter> &'
|   |   `-CompoundStmt 0x5e13728 <col:27, col:29>
|   |-CXXMethodDecl 0x5e125f8 <line:1044:28, line:1046:28> line:1045:7 base 'std::move_iterator::iterator_type () const'
|   | `-CompoundStmt 0x5e13788 <line:1046:7, col:28>
|   |   `-ReturnStmt 0x5e13778 <col:9, col:16>
|   |     `-MemberExpr 0x5e13748 <col:16> 'const _Iterator' lvalue ->_M_current 0x5e112b8
|   |       `-CXXThisExpr 0x5e13738 <col:16> 'const move_iterator<_Iterator> *' implicit this
|   |-CXXMethodDecl 0x5e12738 <line:1048:28, line:1050:53> line:1049:7 operator* 'std::move_iterator::reference () const'
|   | `-CompoundStmt 0x5e13848 <line:1050:7, col:53>
|   |   `-ReturnStmt 0x5e13838 <col:9, col:50>
|   |     `-CXXStaticCastExpr 0x5e13808 <col:16, col:50> 'std::move_iterator::reference':'typename conditional<is_reference<__base_ref>::value, typename remove_reference<__base_ref>::type &&, __base_ref>::type' static_cast<std::move_iterator::reference> <Dependent>
|   |       `-UnaryOperator 0x5e137e0 <col:39, col:40> '<dependent type>' prefix '*' cannot overflow
|   |         `-MemberExpr 0x5e137b0 <col:40> 'const _Iterator' lvalue ->_M_current 0x5e112b8
|   |           `-CXXThisExpr 0x5e137a0 <col:40> 'const move_iterator<_Iterator> *' implicit this
|   |-CXXMethodDecl 0x5e12848 <line:1052:28, line:1054:28> line:1053:7 operator-> 'std::move_iterator::pointer () const'
|   | `-CompoundStmt 0x5e138b0 <line:1054:7, col:28>
|   |   `-ReturnStmt 0x5e138a0 <col:9, col:16>
|   |     `-MemberExpr 0x5e13870 <col:16> 'const _Iterator' lvalue ->_M_current 0x5e112b8
|   |       `-CXXThisExpr 0x5e13860 <col:16> 'const move_iterator<_Iterator> *' implicit this
|   |-CXXMethodDecl 0x5e12968 <line:1056:28, line:1061:7> line:1057:7 operator++ 'move_iterator<_Iterator> &()'
|   | `-CompoundStmt 0x5e13958 <line:1058:7, line:1061:7>
|   |   |-UnaryOperator 0x5e13908 <line:1059:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5e138d8 <col:4> '_Iterator' lvalue ->_M_current 0x5e112b8
|   |   |   `-CXXThisExpr 0x5e138c8 <col:4> 'move_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5e13948 <line:1060:2, col:10>
|   |     `-UnaryOperator 0x5e13930 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e13920 <col:10> 'move_iterator<_Iterator> *' this
|   |-CXXMethodDecl 0x5e12ae8 <line:1063:28, line:1069:7> line:1064:7 operator++ 'move_iterator<_Iterator> (int)'
|   | |-ParmVarDecl 0x5e12a20 <col:18> col:21 'int'
|   | `-CompoundStmt 0x5e13ac0 <line:1065:7, line:1069:7>
|   |   |-DeclStmt 0x5e13a18 <line:1066:2, col:29>
|   |   | `-VarDecl 0x5e13988 <col:2, col:25> col:16 referenced __tmp 'move_iterator<_Iterator>' nrvo cinit
|   |   |   `-UnaryOperator 0x5e13a00 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   |   |     `-CXXThisExpr 0x5e139f0 <col:25> 'move_iterator<_Iterator> *' this
|   |   |-UnaryOperator 0x5e13a70 <line:1067:2, col:4> '<dependent type>' prefix '++' cannot overflow
|   |   | `-MemberExpr 0x5e13a40 <col:4> '_Iterator' lvalue ->_M_current 0x5e112b8
|   |   |   `-CXXThisExpr 0x5e13a30 <col:4> 'move_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5e13aa8 <line:1068:2, col:9>
|   |     `-DeclRefExpr 0x5e13a88 <col:9> 'move_iterator<_Iterator>' lvalue Var 0x5e13988 '__tmp' 'move_iterator<_Iterator>'
|   |-CXXMethodDecl 0x5e12bb0 <line:1071:28, line:1076:7> line:1072:7 operator-- 'move_iterator<_Iterator> &()'
|   | `-CompoundStmt 0x5e13b78 <line:1073:7, line:1076:7>
|   |   |-UnaryOperator 0x5e13b28 <line:1074:2, col:4> '<dependent type>' prefix '--' cannot overflow
|   |   | `-MemberExpr 0x5e13af8 <col:4> '_Iterator' lvalue ->_M_current 0x5e112b8
|   |   |   `-CXXThisExpr 0x5e13ae8 <col:4> 'move_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5e13b68 <line:1075:2, col:10>
|   |     `-UnaryOperator 0x5e13b50 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e13b40 <col:10> 'move_iterator<_Iterator> *' this
|   |-CXXMethodDecl 0x5e12cf8 <line:1078:28, line:1084:7> line:1079:7 operator-- 'move_iterator<_Iterator> (int)'
|   | |-ParmVarDecl 0x5e12c68 <col:18> col:21 'int'
|   | `-CompoundStmt 0x5e13ce0 <line:1080:7, line:1084:7>
|   |   |-DeclStmt 0x5e13c38 <line:1081:2, col:29>
|   |   | `-VarDecl 0x5e13ba8 <col:2, col:25> col:16 referenced __tmp 'move_iterator<_Iterator>' nrvo cinit
|   |   |   `-UnaryOperator 0x5e13c20 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
|   |   |     `-CXXThisExpr 0x5e13c10 <col:25> 'move_iterator<_Iterator> *' this
|   |   |-UnaryOperator 0x5e13c90 <line:1082:2, col:4> '<dependent type>' prefix '--' cannot overflow
|   |   | `-MemberExpr 0x5e13c60 <col:4> '_Iterator' lvalue ->_M_current 0x5e112b8
|   |   |   `-CXXThisExpr 0x5e13c50 <col:4> 'move_iterator<_Iterator> *' implicit this
|   |   `-ReturnStmt 0x5e13cc8 <line:1083:2, col:9>
|   |     `-DeclRefExpr 0x5e13ca8 <col:9> 'move_iterator<_Iterator>' lvalue Var 0x5e13ba8 '__tmp' 'move_iterator<_Iterator>'
|   |-CXXMethodDecl 0x5e12ec8 <line:1086:28, line:1088:49> line:1087:7 operator+ 'move_iterator<_Iterator> (std::move_iterator::difference_type) const'
|   | |-ParmVarDecl 0x5e12dd0 <col:17, col:33> col:33 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e13e30 <line:1088:7, col:49>
|   |   `-ReturnStmt 0x5e13e20 <col:9, col:46>
|   |     `-CXXUnresolvedConstructExpr 0x5e13df8 <col:16, col:46> 'move_iterator<_Iterator>' 'move_iterator<_Iterator>'
|   |       `-CXXOperatorCallExpr 0x5e13dc0 <col:30, col:43> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x5e13d78 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5df3ee8
|   |         |-MemberExpr 0x5e13d28 <col:30> 'const _Iterator' lvalue ->_M_current 0x5e112b8
|   |         | `-CXXThisExpr 0x5e13d18 <col:30> 'const move_iterator<_Iterator> *' implicit this
|   |         `-DeclRefExpr 0x5e13d58 <col:43> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e12dd0 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   |-CXXMethodDecl 0x5e13078 <line:1090:28, line:1095:7> line:1091:7 operator+= 'move_iterator<_Iterator> &(std::move_iterator::difference_type)'
|   | |-ParmVarDecl 0x5e12f80 <col:18, col:34> col:34 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e13f10 <line:1092:7, line:1095:7>
|   |   |-CompoundAssignOperator 0x5e13ea8 <line:1093:2, col:16> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | |-MemberExpr 0x5e13e58 <col:2> '_Iterator' lvalue ->_M_current 0x5e112b8
|   |   | | `-CXXThisExpr 0x5e13e48 <col:2> 'move_iterator<_Iterator> *' implicit this
|   |   | `-DeclRefExpr 0x5e13e88 <col:16> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e12f80 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   |   `-ReturnStmt 0x5e13f00 <line:1094:2, col:10>
|   |     `-UnaryOperator 0x5e13ee8 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e13ed8 <col:10> 'move_iterator<_Iterator> *' this
|   |-CXXMethodDecl 0x5e131c0 <line:1097:28, line:1099:49> line:1098:7 operator- 'move_iterator<_Iterator> (std::move_iterator::difference_type) const'
|   | |-ParmVarDecl 0x5e13130 <col:17, col:33> col:33 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e14058 <line:1099:7, col:49>
|   |   `-ReturnStmt 0x5e14048 <col:9, col:46>
|   |     `-CXXUnresolvedConstructExpr 0x5e14020 <col:16, col:46> 'move_iterator<_Iterator>' 'move_iterator<_Iterator>'
|   |       `-CXXOperatorCallExpr 0x5e13fe8 <col:30, col:43> '<dependent type>'
|   |         |-UnresolvedLookupExpr 0x5e13fa0 <col:41> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738
|   |         |-MemberExpr 0x5e13f50 <col:30> 'const _Iterator' lvalue ->_M_current 0x5e112b8
|   |         | `-CXXThisExpr 0x5e13f40 <col:30> 'const move_iterator<_Iterator> *' implicit this
|   |         `-DeclRefExpr 0x5e13f80 <col:43> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e13130 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   |-CXXMethodDecl 0x5e13308 <line:1101:28, line:1106:7> line:1102:7 operator-= 'move_iterator<_Iterator> &(std::move_iterator::difference_type)'
|   | |-ParmVarDecl 0x5e13278 <col:18, col:34> col:34 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   | `-CompoundStmt 0x5e14138 <line:1103:7, line:1106:7>
|   |   |-CompoundAssignOperator 0x5e140d0 <line:1104:2, col:16> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
|   |   | |-MemberExpr 0x5e14080 <col:2> '_Iterator' lvalue ->_M_current 0x5e112b8
|   |   | | `-CXXThisExpr 0x5e14070 <col:2> 'move_iterator<_Iterator> *' implicit this
|   |   | `-DeclRefExpr 0x5e140b0 <col:16> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e13278 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|   |   `-ReturnStmt 0x5e14128 <line:1105:2, col:10>
|   |     `-UnaryOperator 0x5e14110 <col:9, col:10> '<dependent type>' prefix '*' cannot overflow
|   |       `-CXXThisExpr 0x5e14100 <col:10> 'move_iterator<_Iterator> *' this
|   `-CXXMethodDecl 0x5e134b8 <line:1108:28, line:1110:44> line:1109:7 operator[] 'std::move_iterator::reference (std::move_iterator::difference_type) const'
|     |-ParmVarDecl 0x5e133c0 <col:18, col:34> col:34 referenced __n 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|     `-CompoundStmt 0x5e14290 <line:1110:7, col:44>
|       `-ReturnStmt 0x5e14280 <col:9, col:41>
|         `-CallExpr 0x5e14258 <col:16, col:41> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e14190 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|           `-ArraySubscriptExpr 0x5e14238 <col:26, col:40> '<dependent type>' lvalue
|             |-MemberExpr 0x5e141e8 <col:26> 'const _Iterator' lvalue ->_M_current 0x5e112b8
|             | `-CXXThisExpr 0x5e141d8 <col:26> 'const move_iterator<_Iterator> *' implicit this
|             `-DeclRefExpr 0x5e14218 <col:37> 'std::move_iterator::difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x5e133c0 '__n' 'std::move_iterator::difference_type':'typename __traits_type::difference_type'
|-FunctionTemplateDecl 0x5e14838 <line:1116:3, line:1120:40> line:1118:5 operator==
| |-TemplateTypeParmDecl 0x5e142a8 <line:1116:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e14318 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e14798 <line:1117:5, line:1120:40> line:1118:5 operator== 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5e144c0 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e14680 <line:1119:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e14a60 <line:1120:5, col:40>
|     `-ReturnStmt 0x5e14a50 <col:7, col:37>
|       `-CXXOperatorCallExpr 0x5e14a18 <col:14, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e149b0 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e14838 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78
|         |-CallExpr 0x5e14908 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e148c0 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e148a0 <col:14> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e144c0 '__x' 'const move_iterator<_IteratorL> &'
|         `-CallExpr 0x5e14990 <col:28, col:37> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e14948 <col:28, col:32> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e14928 <col:28> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e14680 '__y' 'const move_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5e14ee8 <line:1122:3, line:1126:40> line:1124:5 operator==
| |-TemplateTypeParmDecl 0x5e14a78 <line:1122:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e14e48 <line:1123:5, line:1126:40> line:1124:5 operator== 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e14be0 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5e14d30 <line:1125:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e15118 <line:1126:5, col:40>
|     `-ReturnStmt 0x5e15108 <col:7, col:37>
|       `-CXXOperatorCallExpr 0x5e150d0 <col:14, col:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e15060 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e14ee8 0x5e14838 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78
|         |-CallExpr 0x5e14fb8 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e14f70 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e14f50 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e14be0 '__x' 'const move_iterator<_Iterator> &'
|         `-CallExpr 0x5e15040 <col:28, col:37> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e14ff8 <col:28, col:32> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e14fd8 <col:28> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e14d30 '__y' 'const move_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5e17d68 <line:1128:3, line:1132:29> line:1130:5 operator!=
| |-TemplateTypeParmDecl 0x5e15130 <line:1128:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e151a8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e17cc8 <line:1129:5, line:1132:29> line:1130:5 operator!= 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5e17aa0 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e17bf0 <line:1131:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e17f00 <line:1132:5, col:29>
|     `-ReturnStmt 0x5e17ef0 <col:7, col:26>
|       `-UnaryOperator 0x5e17ed8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5e17eb8 <col:15, col:26> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5e17e80 <col:16, col:23> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e17e10 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e14ee8 0x5e14838 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78
|             |-DeclRefExpr 0x5e17dd0 <col:16> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e17aa0 '__x' 'const move_iterator<_IteratorL> &'
|             `-DeclRefExpr 0x5e17df0 <col:23> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e17bf0 '__y' 'const move_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5e18348 <line:1134:3, line:1138:29> line:1136:5 operator!=
| |-TemplateTypeParmDecl 0x5e17f18 <line:1134:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e182a8 <line:1135:5, line:1138:29> line:1136:5 operator!= 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e18080 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5e181d0 <line:1137:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e184e0 <line:1138:5, col:29>
|     `-ReturnStmt 0x5e184d0 <col:7, col:26>
|       `-UnaryOperator 0x5e184b8 <col:14, col:26> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5e18498 <col:15, col:26> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5e18460 <col:16, col:23> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e183f0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e14ee8 0x5e14838 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78
|             |-DeclRefExpr 0x5e183b0 <col:16> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e18080 '__x' 'const move_iterator<_Iterator> &'
|             `-DeclRefExpr 0x5e183d0 <col:23> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e181d0 '__y' 'const move_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5e189a8 <line:1140:3, line:1144:39> line:1142:5 operator<
| |-TemplateTypeParmDecl 0x5e184f8 <line:1140:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e18568 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e18908 <line:1141:5, line:1144:39> line:1142:5 operator< 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5e186e0 <col:15, col:48> col:48 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e18830 <line:1143:8, col:41> col:41 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e18bc8 <line:1144:5, col:39>
|     `-ReturnStmt 0x5e18bb8 <col:7, col:36>
|       `-CXXOperatorCallExpr 0x5e18b80 <col:14, col:36> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e18b20 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|         |-CallExpr 0x5e18a78 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e18a30 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e18a10 <col:14> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e186e0 '__x' 'const move_iterator<_IteratorL> &'
|         `-CallExpr 0x5e18b00 <col:27, col:36> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e18ab8 <col:27, col:31> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e18a98 <col:27> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e18830 '__y' 'const move_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5e19018 <line:1146:3, line:1150:39> line:1148:5 operator<
| |-TemplateTypeParmDecl 0x5e18be0 <line:1146:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e18f78 <line:1147:5, line:1150:39> line:1148:5 operator< 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e18d50 <col:15, col:47> col:47 referenced __x 'const move_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5e18ea0 <line:1149:8, col:40> col:40 referenced __y 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e19240 <line:1150:5, col:39>
|     `-ReturnStmt 0x5e19230 <col:7, col:36>
|       `-CXXOperatorCallExpr 0x5e191f8 <col:14, col:36> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e19190 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|         |-CallExpr 0x5e190e8 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e190a0 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e19080 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e18d50 '__x' 'const move_iterator<_Iterator> &'
|         `-CallExpr 0x5e19170 <col:27, col:36> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e19128 <col:27, col:31> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e19108 <col:27> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e18ea0 '__y' 'const move_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5e19708 <line:1152:3, line:1156:28> line:1154:5 operator<=
| |-TemplateTypeParmDecl 0x5e19258 <line:1152:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e192c8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e19668 <line:1153:5, line:1156:28> line:1154:5 operator<= 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5e19440 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e19590 <line:1155:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e19898 <line:1156:5, col:28>
|     `-ReturnStmt 0x5e19888 <col:7, col:25>
|       `-UnaryOperator 0x5e19870 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5e19850 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5e19818 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e197b0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|             |-DeclRefExpr 0x5e19770 <col:16> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e19590 '__y' 'const move_iterator<_IteratorR> &'
|             `-DeclRefExpr 0x5e19790 <col:22> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e19440 '__x' 'const move_iterator<_IteratorL> &'
|-FunctionTemplateDecl 0x5e19ce8 <line:1158:3, line:1162:28> line:1160:5 operator<=
| |-TemplateTypeParmDecl 0x5e198b0 <line:1158:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e19c48 <line:1159:5, line:1162:28> line:1160:5 operator<= 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e19a20 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5e19b70 <line:1161:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e19e78 <line:1162:5, col:28>
|     `-ReturnStmt 0x5e19e68 <col:7, col:25>
|       `-UnaryOperator 0x5e19e50 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5e19e30 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5e19df8 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e19d90 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|             |-DeclRefExpr 0x5e19d50 <col:16> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e19b70 '__y' 'const move_iterator<_Iterator> &'
|             `-DeclRefExpr 0x5e19d70 <col:22> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e19a20 '__x' 'const move_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5e1a348 <line:1164:3, line:1168:25> line:1166:5 operator>
| |-TemplateTypeParmDecl 0x5e19e90 <line:1164:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e19f08 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e1a2a8 <line:1165:5, line:1168:25> line:1166:5 operator> 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5e1a080 <col:15, col:48> col:48 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e1a1d0 <line:1167:8, col:41> col:41 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e1a4a0 <line:1168:5, col:25>
|     `-ReturnStmt 0x5e1a490 <col:7, col:20>
|       `-CXXOperatorCallExpr 0x5e1a458 <col:14, col:20> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e1a3f0 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|         |-DeclRefExpr 0x5e1a3b0 <col:14> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e1a1d0 '__y' 'const move_iterator<_IteratorR> &'
|         `-DeclRefExpr 0x5e1a3d0 <col:20> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e1a080 '__x' 'const move_iterator<_IteratorL> &'
|-FunctionTemplateDecl 0x5e1a8e8 <line:1170:3, line:1174:25> line:1172:5 operator>
| |-TemplateTypeParmDecl 0x5e1a4b8 <line:1170:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e1a848 <line:1171:5, line:1174:25> line:1172:5 operator> 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e1a620 <col:15, col:47> col:47 referenced __x 'const move_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5e1a770 <line:1173:8, col:40> col:40 referenced __y 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e1aa40 <line:1174:5, col:25>
|     `-ReturnStmt 0x5e1aa30 <col:7, col:20>
|       `-CXXOperatorCallExpr 0x5e1a9f8 <col:14, col:20> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e1a990 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|         |-DeclRefExpr 0x5e1a950 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e1a770 '__y' 'const move_iterator<_Iterator> &'
|         `-DeclRefExpr 0x5e1a970 <col:20> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e1a620 '__x' 'const move_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5e1af08 <line:1176:3, line:1180:28> line:1178:5 operator>=
| |-TemplateTypeParmDecl 0x5e1aa58 <line:1176:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e1aac8 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e1ae68 <line:1177:5, line:1180:28> line:1178:5 operator>= 'bool (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &)' inline
|   |-ParmVarDecl 0x5e1ac40 <col:16, col:49> col:49 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e1ad90 <line:1179:9, col:42> col:42 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e1b098 <line:1180:5, col:28>
|     `-ReturnStmt 0x5e1b088 <col:7, col:25>
|       `-UnaryOperator 0x5e1b070 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5e1b050 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5e1b018 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e1afb0 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|             |-DeclRefExpr 0x5e1af70 <col:16> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e1ac40 '__x' 'const move_iterator<_IteratorL> &'
|             `-DeclRefExpr 0x5e1af90 <col:22> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e1ad90 '__y' 'const move_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5e1b4e8 <line:1182:3, line:1186:28> line:1184:5 operator>=
| |-TemplateTypeParmDecl 0x5e1b0b0 <line:1182:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e1b448 <line:1183:5, line:1186:28> line:1184:5 operator>= 'bool (const move_iterator<_Iterator> &, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e1b220 <col:16, col:48> col:48 referenced __x 'const move_iterator<_Iterator> &'
|   |-ParmVarDecl 0x5e1b370 <line:1185:9, col:41> col:41 referenced __y 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e1b678 <line:1186:5, col:28>
|     `-ReturnStmt 0x5e1b668 <col:7, col:25>
|       `-UnaryOperator 0x5e1b650 <col:14, col:25> '<dependent type>' prefix '!' cannot overflow
|         `-ParenExpr 0x5e1b630 <col:15, col:25> '<dependent type>'
|           `-CXXOperatorCallExpr 0x5e1b5f8 <col:16, col:22> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e1b590 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e19018 0x5e189a8 0x5dcd6e8 0x5dedab8 0x5df1568
|             |-DeclRefExpr 0x5e1b550 <col:16> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e1b220 '__x' 'const move_iterator<_Iterator> &'
|             `-DeclRefExpr 0x5e1b570 <col:22> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e1b370 '__y' 'const move_iterator<_Iterator> &'
|-FunctionTemplateDecl 0x5e1bda8 <line:1189:3, line:1194:39> line:1191:5 operator-
| |-TemplateTypeParmDecl 0x5e1b690 <line:1189:12, col:21> col:21 referenced typename depth 0 index 0 _IteratorL
| |-TemplateTypeParmDecl 0x5e1b708 <col:33, col:42> col:42 referenced typename depth 0 index 1 _IteratorR
| `-FunctionDecl 0x5e1bd08 <line:1190:5, line:1194:39> line:1191:5 operator- 'auto (const move_iterator<_IteratorL> &, const move_iterator<_IteratorR> &) -> decltype(__x.base() - __y.base())' inline
|   |-ParmVarDecl 0x5e1b880 <col:15, col:48> col:48 referenced __x 'const move_iterator<_IteratorL> &'
|   |-ParmVarDecl 0x5e1b9e0 <line:1192:8, col:41> col:41 referenced __y 'const move_iterator<_IteratorR> &'
|   `-CompoundStmt 0x5e1bfb8 <line:1194:5, col:39>
|     `-ReturnStmt 0x5e1bfa8 <col:7, col:36>
|       `-CXXOperatorCallExpr 0x5e1bf70 <col:14, col:36> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e1bf20 <col:25> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5e1bda8 0x5df3738
|         |-CallExpr 0x5e1be78 <col:14, col:23> '<dependent type>'
|         | `-CXXDependentScopeMemberExpr 0x5e1be30 <col:14, col:18> '<dependent type>' lvalue .base
|         |   `-DeclRefExpr 0x5e1be10 <col:14> 'const move_iterator<_IteratorL>' lvalue ParmVar 0x5e1b880 '__x' 'const move_iterator<_IteratorL> &'
|         `-CallExpr 0x5e1bf00 <col:27, col:36> '<dependent type>'
|           `-CXXDependentScopeMemberExpr 0x5e1beb8 <col:27, col:31> '<dependent type>' lvalue .base
|             `-DeclRefExpr 0x5e1be98 <col:27> 'const move_iterator<_IteratorR>' lvalue ParmVar 0x5e1b9e0 '__y' 'const move_iterator<_IteratorR> &'
|-FunctionTemplateDecl 0x5e1c568 <line:1196:3, line:1200:25> line:1198:5 operator+
| |-TemplateTypeParmDecl 0x5e1bfd0 <line:1196:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e1c4c8 <line:1197:5, line:1200:25> line:1198:5 operator+ 'move_iterator<_Iterator> (typename move_iterator<_Iterator>::difference_type, const move_iterator<_Iterator> &)' inline
|   |-ParmVarDecl 0x5e1c240 <col:15, col:66> col:66 referenced __n 'typename move_iterator<_Iterator>::difference_type'
|   |-ParmVarDecl 0x5e1c390 <line:1199:8, col:40> col:40 referenced __x 'const move_iterator<_Iterator> &'
|   `-CompoundStmt 0x5e1c6a8 <line:1200:5, col:25>
|     `-ReturnStmt 0x5e1c698 <col:7, col:20>
|       `-CXXOperatorCallExpr 0x5e1c660 <col:14, col:20> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e1c610 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5e1c568 0x5df3ee8
|         |-DeclRefExpr 0x5e1c5d0 <col:14> 'const move_iterator<_Iterator>' lvalue ParmVar 0x5e1c390 '__x' 'const move_iterator<_Iterator> &'
|         `-DeclRefExpr 0x5e1c5f0 <col:20> 'typename move_iterator<_Iterator>::difference_type' lvalue ParmVar 0x5e1c240 '__n' 'typename move_iterator<_Iterator>::difference_type'
|-FunctionTemplateDecl 0x5e1c998 <line:1202:3, line:1205:45> line:1204:5 make_move_iterator
| |-TemplateTypeParmDecl 0x5e1c6c0 <line:1202:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e1c8f8 <line:1203:5, line:1205:45> line:1204:5 make_move_iterator 'move_iterator<_Iterator> (_Iterator)' inline
|   |-ParmVarDecl 0x5e1c7e0 <col:24, col:34> col:34 referenced __i '_Iterator'
|   `-CompoundStmt 0x5e1cb08 <line:1205:5, col:45>
|     `-ReturnStmt 0x5e1caf8 <col:7, col:42>
|       `-CXXUnresolvedConstructExpr 0x5e1cad0 <col:14, col:42> 'move_iterator<_Iterator>' 'move_iterator<_Iterator>'
|         `-DeclRefExpr 0x5e1cab0 <col:39> '_Iterator' lvalue ParmVar 0x5e1c7e0 '__i' '_Iterator'
|-FunctionTemplateDecl 0x5e1d328 <line:1207:3, line:1213:32> line:1212:5 __make_move_if_noexcept_iterator
| |-TemplateTypeParmDecl 0x5e1cb20 <line:1207:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-TemplateTypeParmDecl 0x5e1d0f0 <col:32, line:1210:55> line:1207:41 referenced typename depth 0 index 1 _ReturnType
| | `-TemplateArgument type 'typename conditional<__move_if_noexcept_cond<typename iterator_traits<_Iterator>::value_type>::value, _Iterator, move_iterator<_Iterator> >::type'
| `-FunctionDecl 0x5e1d288 <line:1211:5, line:1213:32> line:1212:5 __make_move_if_noexcept_iterator '_ReturnType (_Iterator)' inline
|   |-ParmVarDecl 0x5e1d198 <col:38, col:48> col:48 referenced __i '_Iterator'
|   `-CompoundStmt 0x5e1d3f0 <line:1213:5, col:32>
|     `-ReturnStmt 0x5e1d3e0 <col:7, col:29>
|       `-CXXUnresolvedConstructExpr 0x5e1d3b8 <col:14, col:29> '_ReturnType' '_ReturnType'
|         `-DeclRefExpr 0x5e1d398 <col:26> '_Iterator' lvalue ParmVar 0x5e1d198 '__i' '_Iterator'
|-FunctionTemplateDecl 0x5e1db48 <line:1217:3, line:1222:32> line:1221:5 __make_move_if_noexcept_iterator
| |-TemplateTypeParmDecl 0x5e1d408 <line:1217:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5e1d910 <col:26, line:1219:41> line:1217:35 referenced typename depth 0 index 1 _ReturnType
| | `-TemplateArgument type 'typename conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp *, move_iterator<_Tp *> >::type'
| `-FunctionDecl 0x5e1daa8 <line:1220:5, line:1222:32> line:1221:5 __make_move_if_noexcept_iterator '_ReturnType (_Tp *)' inline
|   |-ParmVarDecl 0x5e1d9b8 <col:38, col:43> col:43 referenced __i '_Tp *'
|   `-CompoundStmt 0x5e1dc10 <line:1222:5, col:32>
|     `-ReturnStmt 0x5e1dc00 <col:7, col:29>
|       `-CXXUnresolvedConstructExpr 0x5e1dbd8 <col:14, col:29> '_ReturnType' '_ReturnType'
|         `-DeclRefExpr 0x5e1dbb8 <col:26> '_Tp *' lvalue ParmVar 0x5e1d9b8 '__i' '_Tp *'
|-FunctionTemplateDecl 0x5e1e0e8 <line:1226:3, line:1230:61> line:1228:5 __niter_base
| |-TemplateTypeParmDecl 0x5e1dc28 <line:1226:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e1e048 <line:1227:5, line:1230:61> line:1228:5 __niter_base 'auto (move_iterator<_Iterator>) -> decltype(make_move_iterator(__niter_base(__it.base())))'
|   |-ParmVarDecl 0x5e1dd60 <col:18, col:43> col:43 referenced __it 'move_iterator<_Iterator>'
|   `-CompoundStmt 0x5e1e2d0 <line:1230:5, col:61>
|     `-ReturnStmt 0x5e1e2c0 <col:7, col:58>
|       `-CallExpr 0x5e1e298 <col:14, col:58> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e1e148 <col:14> '<overloaded function type>' lvalue (ADL) = 'make_move_iterator' 0x5e1c998
|         `-CallExpr 0x5e1e270 <col:33, col:57> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e1e190 <col:33> '<overloaded function type>' lvalue (ADL) = '__niter_base' 0x5e1e0e8 0x5df4f18 0x5e0e308
|           `-CallExpr 0x5e1e250 <col:46, col:56> '<dependent type>'
|             `-CXXDependentScopeMemberExpr 0x5e1e208 <col:46, col:51> '<dependent type>' lvalue .base
|               `-DeclRefExpr 0x5e1e1e8 <col:46> 'move_iterator<_Iterator>' lvalue ParmVar 0x5e1dd60 '__it' 'move_iterator<_Iterator>'
|-ClassTemplatePartialSpecializationDecl 0x5e1e4e0 parent 0x5d5f0b0 <line:1232:3, line:1237:5> line:1233:12 struct __is_move_iterator definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'move_iterator<type-parameter-0-0>'
| |-TemplateTypeParmDecl 0x5e1e2e8 <line:1232:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| |-CXXRecordDecl 0x5e1e748 <line:1233:5, col:12> col:12 implicit struct __is_move_iterator
| |-EnumDecl 0x5e1e7d8 <line:1235:7, col:26> col:7
| | `-EnumConstantDecl 0x5e1e8c0 <col:14, col:24> col:14 __value 'std::__is_move_iterator<move_iterator<type-parameter-0-0> >::(anonymous enum at /opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_iterator.h:1235:7)'
| |   `-IntegerLiteral 0x5e1e8a0 <col:24> 'int' 1
| `-TypedefDecl 0x5e1e920 <line:1236:7, col:27> col:27 __type 'std::__true_type'
|   `-RecordType 0x5d5f1f0 'std::__true_type'
|     `-CXXRecord 0x5d5f160 '__true_type'
`-FunctionTemplateDecl 0x5e1ede8 <line:1239:3, line:1243:41> line:1241:5 __miter_base
  |-TemplateTypeParmDecl 0x5e1e990 <line:1239:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
  `-FunctionDecl 0x5e1ed48 <line:1240:5, line:1243:41> line:1241:5 __miter_base 'auto (move_iterator<_Iterator>) -> decltype(__miter_base(__it.base()))'
    |-ParmVarDecl 0x5e1ead0 <col:18, col:43> col:43 referenced __it 'move_iterator<_Iterator>'
    `-CompoundStmt 0x5e1ef60 <line:1243:5, col:41>
      `-ReturnStmt 0x5e1ef50 <col:7, col:38>
        `-CallExpr 0x5e1ef28 <col:14, col:38> '<dependent type>'
          |-UnresolvedLookupExpr 0x5e1ee48 <col:14> '<overloaded function type>' lvalue (ADL) = '__miter_base' 0x5e1ede8 0x5d85e28 0x5df5b78
          `-CallExpr 0x5e1ef08 <col:27, col:37> '<dependent type>'
            `-CXXDependentScopeMemberExpr 0x5e1eec0 <col:27, col:32> '<dependent type>' lvalue .base
              `-DeclRefExpr 0x5e1eea0 <col:27> 'move_iterator<_Iterator>' lvalue ParmVar 0x5e1ead0 '__it' 'move_iterator<_Iterator>'
NamespaceDecl 0x5e238a0 prev 0x5e0e4b8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/debug/debug.h:48:1, line:51:1> line:48:11 std
|-original Namespace 0x5b39a58 'std'
`-NamespaceDecl 0x5e23910 <line:50:3, col:23> col:13 __debug
NamespaceDecl 0x5e23980 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/debug/debug.h:56:1, line:59:1> line:56:11 __gnu_debug
`-UsingDirectiveDecl 0x5e23a10 <line:58:3, col:24> col:24 Namespace 0x5e23910 '__debug'
NamespaceDecl 0x5e23a68 prev 0x5dfd4d0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/predefined_ops.h:33:1, line:360:1> line:33:11 __gnu_cxx
|-original Namespace 0x5b95a90 '__gnu_cxx'
`-NamespaceDecl 0x5e23ad8 <line:35:1, line:359:1> line:35:11 __ops
  |-CXXRecordDecl 0x5e23b48 <line:37:3, line:44:3> line:37:10 referenced struct _Iter_less_iter definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
  | | |-MoveConstructor exists simple trivial
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial
  | |-CXXRecordDecl 0x5e23c68 <col:3, col:10> col:10 implicit struct _Iter_less_iter
  | |-FunctionTemplateDecl 0x5e24068 <line:39:5, line:43:33> line:42:7 operator()
  | | |-TemplateTypeParmDecl 0x5e23cf8 <line:39:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator1
  | | |-TemplateTypeParmDecl 0x5e23d68 <col:35, col:44> col:44 referenced typename depth 0 index 1 _Iterator2
  | | `-CXXMethodDecl 0x5e23fc8 <line:40:7, line:43:33> line:42:7 constexpr operator() 'bool (_Iterator1, _Iterator2) const'
  | |   |-ParmVarDecl 0x5e23e08 <col:18, col:29> col:29 referenced __it1 '_Iterator1'
  | |   |-ParmVarDecl 0x5e23e80 <col:36, col:47> col:47 referenced __it2 '_Iterator2'
  | |   `-CompoundStmt 0x5e24278 <line:43:7, col:33>
  | |     `-ReturnStmt 0x5e24268 <col:9, col:26>
  | |       `-CXXOperatorCallExpr 0x5e24230 <col:16, col:26> '<dependent type>'
  | |         |-UnresolvedLookupExpr 0x5e241e0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e08100 0x5e08880
  | |         |-UnaryOperator 0x5e24168 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
  | |         | `-DeclRefExpr 0x5e24148 <col:17> '_Iterator1' lvalue ParmVar 0x5e23e08 '__it1' '_Iterator1'
  | |         `-UnaryOperator 0x5e241c8 <col:25, col:26> '<dependent type>' prefix '*' cannot overflow
  | |           `-DeclRefExpr 0x5e241a8 <col:26> '_Iterator2' lvalue ParmVar 0x5e23e80 '__it2' '_Iterator2'
  | |-CXXConstructorDecl 0x5e243a0 <line:37:10> col:10 implicit referenced constexpr _Iter_less_iter 'void () noexcept' inline default trivial
  | |-CXXConstructorDecl 0x5e244a8 <col:10> col:10 implicit constexpr _Iter_less_iter 'void (const __gnu_cxx::__ops::_Iter_less_iter &)' inline default trivial noexcept-unevaluated 0x5e244a8
  | | `-ParmVarDecl 0x5e245b8 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_less_iter &'
  | |-CXXConstructorDecl 0x5e24658 <col:10> col:10 implicit used constexpr _Iter_less_iter 'void (__gnu_cxx::__ops::_Iter_less_iter &&) noexcept' inline default trivial
  | | |-ParmVarDecl 0x5e24768 <col:10> col:10 '__gnu_cxx::__ops::_Iter_less_iter &&'
  | | `-CompoundStmt 0x5e24940 <col:10>
  | `-CXXDestructorDecl 0x5e24808 <col:10> col:10 implicit referenced ~_Iter_less_iter 'void () noexcept' inline default trivial
  |-FunctionDecl 0x5e242d8 <line:46:3, line:49:31> line:48:3 constexpr __iter_less_iter '__gnu_cxx::__ops::_Iter_less_iter ()' inline
  | `-CompoundStmt 0x5e249a8 <line:49:3, col:31>
  |   `-ReturnStmt 0x5e24998 <col:5, col:28>
  |     `-ExprWithCleanups 0x5e24980 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter'
  |       `-CXXConstructExpr 0x5e24950 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter' 'void (__gnu_cxx::__ops::_Iter_less_iter &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e248f0 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e247d8 <col:12, col:28> '__gnu_cxx::__ops::_Iter_less_iter' 'void () noexcept' zeroing
  |-CXXRecordDecl 0x5e24a80 <line:51:3, line:66:3> line:51:10 referenced struct _Iter_less_val definition
  | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
  | | |-MoveConstructor exists simple trivial
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial
  | |-CXXRecordDecl 0x5e24b98 <col:3, col:10> col:10 implicit referenced struct _Iter_less_val
  | |-CXXConstructorDecl 0x5e24c90 <line:54:5, col:40> col:15 referenced constexpr _Iter_less_val 'void () noexcept' default trivial
  | |-CXXConstructorDecl 0x5e24e08 <line:59:5, line:60:39> col:5 _Iter_less_val 'void (__gnu_cxx::__ops::_Iter_less_iter)'
  | | |-ParmVarDecl 0x5e24d48 <col:20> col:35 '__gnu_cxx::__ops::_Iter_less_iter'
  | | `-CompoundStmt 0x5e25300 <col:37, col:39>
  | |-FunctionTemplateDecl 0x5e25248 <line:62:5, line:65:31> line:64:7 operator()
  | | |-TemplateTypeParmDecl 0x5e24eb8 <line:62:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator
  | | |-TemplateTypeParmDecl 0x5e24f28 <col:34, col:43> col:43 referenced typename depth 0 index 1 _Value
  | | `-CXXMethodDecl 0x5e251a8 <line:63:7, line:65:31> line:64:7 operator() 'bool (_Iterator, _Value &) const'
  | |   |-ParmVarDecl 0x5e24fc8 <col:18, col:28> col:28 referenced __it '_Iterator'
  | |   |-ParmVarDecl 0x5e25068 <col:34, col:42> col:42 referenced __val '_Value &'
  | |   `-CompoundStmt 0x5e25400 <line:65:7, col:31>
  | |     `-ReturnStmt 0x5e253f0 <col:9, col:24>
  | |       `-CXXOperatorCallExpr 0x5e253b8 <col:16, col:24> '<dependent type>'
  | |         |-UnresolvedLookupExpr 0x5e25368 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e08100 0x5e08880
  | |         |-UnaryOperator 0x5e25350 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
  | |         | `-DeclRefExpr 0x5e25310 <col:17> '_Iterator' lvalue ParmVar 0x5e24fc8 '__it' '_Iterator'
  | |         `-DeclRefExpr 0x5e25330 <col:24> '_Value' lvalue ParmVar 0x5e25068 '__val' '_Value &'
  | |-CXXConstructorDecl 0x5e25548 <line:51:10> col:10 implicit constexpr _Iter_less_val 'void (const __gnu_cxx::__ops::_Iter_less_val &)' inline default trivial noexcept-unevaluated 0x5e25548
  | | `-ParmVarDecl 0x5e25658 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_less_val &'
  | |-CXXConstructorDecl 0x5e256f8 <col:10> col:10 implicit used constexpr _Iter_less_val 'void (__gnu_cxx::__ops::_Iter_less_val &&) noexcept' inline default trivial
  | | |-ParmVarDecl 0x5e25808 <col:10> col:10 '__gnu_cxx::__ops::_Iter_less_val &&'
  | | `-CompoundStmt 0x5e259e0 <col:10>
  | `-CXXDestructorDecl 0x5e258a8 <col:10> col:10 implicit referenced ~_Iter_less_val 'void () noexcept' inline default trivial
  |-FunctionDecl 0x5e25468 <line:68:3, line:70:30> line:69:3 __iter_less_val '__gnu_cxx::__ops::_Iter_less_val ()' inline
  | `-CompoundStmt 0x5e25a48 <line:70:3, col:30>
  |   `-ReturnStmt 0x5e25a38 <col:5, col:27>
  |     `-ExprWithCleanups 0x5e25a20 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val'
  |       `-CXXConstructExpr 0x5e259f0 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void (__gnu_cxx::__ops::_Iter_less_val &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e25990 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e25878 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void () noexcept' zeroing
  |-FunctionDecl 0x5e25b38 <line:72:3, line:74:30> line:73:3 __iter_comp_val '__gnu_cxx::__ops::_Iter_less_val (__gnu_cxx::__ops::_Iter_less_iter)' inline
  | |-ParmVarDecl 0x5e25a70 <col:19> col:34 '__gnu_cxx::__ops::_Iter_less_iter'
  | `-CompoundStmt 0x5e25c90 <line:74:3, col:30>
  |   `-ReturnStmt 0x5e25c80 <col:5, col:27>
  |     `-ExprWithCleanups 0x5e25c68 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val'
  |       `-CXXConstructExpr 0x5e25c38 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void (__gnu_cxx::__ops::_Iter_less_val &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e25c20 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e25bf0 <col:12, col:27> '__gnu_cxx::__ops::_Iter_less_val' 'void () noexcept' zeroing
  |-CXXRecordDecl 0x5e25ca8 <line:76:3, line:91:3> line:76:10 referenced struct _Val_less_iter definition
  | |-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
  | | |-MoveConstructor exists simple trivial
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial
  | |-CXXRecordDecl 0x5e25dc8 <col:3, col:10> col:10 implicit referenced struct _Val_less_iter
  | |-CXXConstructorDecl 0x5e25ec0 <line:79:5, col:40> col:15 referenced constexpr _Val_less_iter 'void () noexcept' default trivial
  | |-CXXConstructorDecl 0x5e26008 <line:84:5, line:85:39> col:5 _Val_less_iter 'void (__gnu_cxx::__ops::_Iter_less_iter)'
  | | |-ParmVarDecl 0x5e25f78 <col:20> col:35 '__gnu_cxx::__ops::_Iter_less_iter'
  | | `-CompoundStmt 0x5e26510 <col:37, col:39>
  | |-FunctionTemplateDecl 0x5e26458 <line:87:5, line:90:31> line:89:7 operator()
  | | |-TemplateTypeParmDecl 0x5e260b8 <line:87:14, col:23> col:23 referenced typename depth 0 index 0 _Value
  | | |-TemplateTypeParmDecl 0x5e26128 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Iterator
  | | `-CXXMethodDecl 0x5e263b8 <line:88:7, line:90:31> line:89:7 operator() 'bool (_Value &, _Iterator) const'
  | |   |-ParmVarDecl 0x5e261f8 <col:18, col:26> col:26 referenced __val '_Value &'
  | |   |-ParmVarDecl 0x5e26270 <col:33, col:43> col:43 referenced __it '_Iterator'
  | |   `-CompoundStmt 0x5e26638 <line:90:7, col:31>
  | |     `-ReturnStmt 0x5e26628 <col:9, col:25>
  | |       `-CXXOperatorCallExpr 0x5e265f0 <col:16, col:25> '<dependent type>'
  | |         |-UnresolvedLookupExpr 0x5e265a0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e08100 0x5e08880
  | |         |-DeclRefExpr 0x5e26520 <col:16> '_Value' lvalue ParmVar 0x5e261f8 '__val' '_Value &'
  | |         `-UnaryOperator 0x5e26588 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
  | |           `-DeclRefExpr 0x5e26568 <col:25> '_Iterator' lvalue ParmVar 0x5e26270 '__it' '_Iterator'
  | |-CXXConstructorDecl 0x5e26778 <line:76:10> col:10 implicit constexpr _Val_less_iter 'void (const __gnu_cxx::__ops::_Val_less_iter &)' inline default trivial noexcept-unevaluated 0x5e26778
  | | `-ParmVarDecl 0x5e26888 <col:10> col:10 'const __gnu_cxx::__ops::_Val_less_iter &'
  | |-CXXConstructorDecl 0x5e26928 <col:10> col:10 implicit used constexpr _Val_less_iter 'void (__gnu_cxx::__ops::_Val_less_iter &&) noexcept' inline default trivial
  | | |-ParmVarDecl 0x5e26a38 <col:10> col:10 '__gnu_cxx::__ops::_Val_less_iter &&'
  | | `-CompoundStmt 0x5e26c10 <col:10>
  | `-CXXDestructorDecl 0x5e26ad8 <col:10> col:10 implicit referenced ~_Val_less_iter 'void () noexcept' inline default trivial
  |-FunctionDecl 0x5e26698 <line:93:3, line:95:30> line:94:3 __val_less_iter '__gnu_cxx::__ops::_Val_less_iter ()' inline
  | `-CompoundStmt 0x5e26c78 <line:95:3, col:30>
  |   `-ReturnStmt 0x5e26c68 <col:5, col:27>
  |     `-ExprWithCleanups 0x5e26c50 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter'
  |       `-CXXConstructExpr 0x5e26c20 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void (__gnu_cxx::__ops::_Val_less_iter &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e26bc0 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e26aa8 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void () noexcept' zeroing
  |-FunctionDecl 0x5e26d68 <line:97:3, line:99:30> line:98:3 __val_comp_iter '__gnu_cxx::__ops::_Val_less_iter (__gnu_cxx::__ops::_Iter_less_iter)' inline
  | |-ParmVarDecl 0x5e26ca0 <col:19> col:34 '__gnu_cxx::__ops::_Iter_less_iter'
  | `-CompoundStmt 0x5e26ec0 <line:99:3, col:30>
  |   `-ReturnStmt 0x5e26eb0 <col:5, col:27>
  |     `-ExprWithCleanups 0x5e26e98 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter'
  |       `-CXXConstructExpr 0x5e26e68 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void (__gnu_cxx::__ops::_Val_less_iter &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e26e50 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e26e20 <col:12, col:27> '__gnu_cxx::__ops::_Val_less_iter' 'void () noexcept' zeroing
  |-CXXRecordDecl 0x5e26ed8 <line:101:3, line:107:3> line:101:10 referenced struct _Iter_equal_to_iter definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
  | | |-MoveConstructor exists simple trivial
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial
  | |-CXXRecordDecl 0x5e26ff8 <col:3, col:10> col:10 implicit struct _Iter_equal_to_iter
  | |-FunctionTemplateDecl 0x5e273b8 <line:103:5, line:106:34> line:105:7 operator()
  | | |-TemplateTypeParmDecl 0x5e27088 <line:103:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator1
  | | |-TemplateTypeParmDecl 0x5e270f8 <col:35, col:44> col:44 referenced typename depth 0 index 1 _Iterator2
  | | `-CXXMethodDecl 0x5e27318 <line:104:7, line:106:34> line:105:7 operator() 'bool (_Iterator1, _Iterator2) const'
  | |   |-ParmVarDecl 0x5e27198 <col:18, col:29> col:29 referenced __it1 '_Iterator1'
  | |   |-ParmVarDecl 0x5e27210 <col:36, col:47> col:47 referenced __it2 '_Iterator2'
  | |   `-CompoundStmt 0x5e27570 <line:106:7, col:34>
  | |     `-ReturnStmt 0x5e27560 <col:9, col:27>
  | |       `-CXXOperatorCallExpr 0x5e27528 <col:16, col:27> '<dependent type>'
  | |         |-UnresolvedLookupExpr 0x5e274d8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80 0x5e069a0
  | |         |-UnaryOperator 0x5e27488 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
  | |         | `-DeclRefExpr 0x5e27468 <col:17> '_Iterator1' lvalue ParmVar 0x5e27198 '__it1' '_Iterator1'
  | |         `-UnaryOperator 0x5e274c0 <col:26, col:27> '<dependent type>' prefix '*' cannot overflow
  | |           `-DeclRefExpr 0x5e274a0 <col:27> '_Iterator2' lvalue ParmVar 0x5e27210 '__it2' '_Iterator2'
  | |-CXXConstructorDecl 0x5e276a0 <line:101:10> col:10 implicit referenced constexpr _Iter_equal_to_iter 'void () noexcept' inline default trivial
  | |-CXXConstructorDecl 0x5e277a8 <col:10> col:10 implicit constexpr _Iter_equal_to_iter 'void (const __gnu_cxx::__ops::_Iter_equal_to_iter &)' inline default trivial noexcept-unevaluated 0x5e277a8
  | | `-ParmVarDecl 0x5e29138 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_equal_to_iter &'
  | |-CXXConstructorDecl 0x5e291d8 <col:10> col:10 implicit used constexpr _Iter_equal_to_iter 'void (__gnu_cxx::__ops::_Iter_equal_to_iter &&) noexcept' inline default trivial
  | | |-ParmVarDecl 0x5e292e8 <col:10> col:10 '__gnu_cxx::__ops::_Iter_equal_to_iter &&'
  | | `-CompoundStmt 0x5e294c0 <col:10>
  | `-CXXDestructorDecl 0x5e29388 <col:10> col:10 implicit referenced ~_Iter_equal_to_iter 'void () noexcept' inline default trivial
  |-FunctionDecl 0x5e275d8 <line:109:3, line:111:35> line:110:3 __iter_equal_to_iter '__gnu_cxx::__ops::_Iter_equal_to_iter ()' inline
  | `-CompoundStmt 0x5e29528 <line:111:3, col:35>
  |   `-ReturnStmt 0x5e29518 <col:5, col:32>
  |     `-ExprWithCleanups 0x5e29500 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter'
  |       `-CXXConstructExpr 0x5e294d0 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter' 'void (__gnu_cxx::__ops::_Iter_equal_to_iter &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e29470 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e29358 <col:12, col:32> '__gnu_cxx::__ops::_Iter_equal_to_iter' 'void () noexcept' zeroing
  |-CXXRecordDecl 0x5e29540 <line:113:3, line:119:3> line:113:10 referenced struct _Iter_equal_to_val definition
  | |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
  | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
  | | |-MoveConstructor exists simple trivial
  | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | | |-MoveAssignment exists simple trivial needs_implicit
  | | `-Destructor simple irrelevant trivial
  | |-CXXRecordDecl 0x5e29658 <col:3, col:10> col:10 implicit struct _Iter_equal_to_val
  | |-FunctionTemplateDecl 0x5e29a38 <line:115:5, line:118:32> line:117:7 operator()
  | | |-TemplateTypeParmDecl 0x5e296e8 <line:115:14, col:23> col:23 referenced typename depth 0 index 0 _Iterator
  | | |-TemplateTypeParmDecl 0x5e29758 <col:34, col:43> col:43 referenced typename depth 0 index 1 _Value
  | | `-CXXMethodDecl 0x5e29998 <line:116:7, line:118:32> line:117:7 operator() 'bool (_Iterator, _Value &) const'
  | |   |-ParmVarDecl 0x5e297f8 <col:18, col:28> col:28 referenced __it '_Iterator'
  | |   |-ParmVarDecl 0x5e29898 <col:34, col:42> col:42 referenced __val '_Value &'
  | |   `-CompoundStmt 0x5e29bd8 <line:118:7, col:32>
  | |     `-ReturnStmt 0x5e29bc8 <col:9, col:25>
  | |       `-CXXOperatorCallExpr 0x5e29b90 <col:16, col:25> '<dependent type>'
  | |         |-UnresolvedLookupExpr 0x5e29b40 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80 0x5e069a0
  | |         |-UnaryOperator 0x5e29b08 <col:16, col:17> '<dependent type>' prefix '*' cannot overflow
  | |         | `-DeclRefExpr 0x5e29ae8 <col:17> '_Iterator' lvalue ParmVar 0x5e297f8 '__it' '_Iterator'
  | |         `-DeclRefExpr 0x5e29b20 <col:25> '_Value' lvalue ParmVar 0x5e29898 '__val' '_Value &'
  | |-CXXConstructorDecl 0x5e29d00 <line:113:10> col:10 implicit referenced constexpr _Iter_equal_to_val 'void () noexcept' inline default trivial
  | |-CXXConstructorDecl 0x5e29e08 <col:10> col:10 implicit constexpr _Iter_equal_to_val 'void (const __gnu_cxx::__ops::_Iter_equal_to_val &)' inline default trivial noexcept-unevaluated 0x5e29e08
  | | `-ParmVarDecl 0x5e29f18 <col:10> col:10 'const __gnu_cxx::__ops::_Iter_equal_to_val &'
  | |-CXXConstructorDecl 0x5e29fb8 <col:10> col:10 implicit used constexpr _Iter_equal_to_val 'void (__gnu_cxx::__ops::_Iter_equal_to_val &&) noexcept' inline default trivial
  | | |-ParmVarDecl 0x5e2a0c8 <col:10> col:10 '__gnu_cxx::__ops::_Iter_equal_to_val &&'
  | | `-CompoundStmt 0x5e2a2a0 <col:10>
  | `-CXXDestructorDecl 0x5e2a168 <col:10> col:10 implicit referenced ~_Iter_equal_to_val 'void () noexcept' inline default trivial
  |-FunctionDecl 0x5e29c38 <line:121:3, line:123:34> line:122:3 __iter_equal_to_val '__gnu_cxx::__ops::_Iter_equal_to_val ()' inline
  | `-CompoundStmt 0x5e2a308 <line:123:3, col:34>
  |   `-ReturnStmt 0x5e2a2f8 <col:5, col:31>
  |     `-ExprWithCleanups 0x5e2a2e0 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val'
  |       `-CXXConstructExpr 0x5e2a2b0 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void (__gnu_cxx::__ops::_Iter_equal_to_val &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e2a250 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e2a138 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void () noexcept' zeroing
  |-FunctionDecl 0x5e2a3f8 <line:125:3, line:127:34> line:126:3 __iter_comp_val '__gnu_cxx::__ops::_Iter_equal_to_val (__gnu_cxx::__ops::_Iter_equal_to_iter)' inline
  | |-ParmVarDecl 0x5e2a330 <col:19> col:38 '__gnu_cxx::__ops::_Iter_equal_to_iter'
  | `-CompoundStmt 0x5e2a550 <line:127:3, col:34>
  |   `-ReturnStmt 0x5e2a540 <col:5, col:31>
  |     `-ExprWithCleanups 0x5e2a528 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val'
  |       `-CXXConstructExpr 0x5e2a4f8 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void (__gnu_cxx::__ops::_Iter_equal_to_val &&) noexcept' elidable
  |         `-MaterializeTemporaryExpr 0x5e2a4e0 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' xvalue
  |           `-CXXTemporaryObjectExpr 0x5e2a4b0 <col:12, col:31> '__gnu_cxx::__ops::_Iter_equal_to_val' 'void () noexcept' zeroing
  |-ClassTemplateDecl 0x5e2a680 <line:129:3, line:144:5> line:130:12 _Iter_comp_iter
  | |-TemplateTypeParmDecl 0x5e2a568 <line:129:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-CXXRecordDecl 0x5e2a5f0 <line:130:5, line:144:5> line:130:12 struct _Iter_comp_iter definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor has_constexpr_non_copy_move_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e2a8d0 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_iter
  |   |-FieldDecl 0x5e2a970 <line:132:7, col:16> col:16 referenced _M_comp '_Compare'
  |   |-CXXConstructorDecl 0x5e2aad8 <line:134:7, line:137:9> line:135:7 constexpr _Iter_comp_iter<_Compare> 'void (_Compare)'
  |   | |-ParmVarDecl 0x5e2a9d0 <col:23, col:32> col:32 referenced __comp '_Compare'
  |   | |-CXXCtorInitializer Field 0x5e2a970 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e2aff8 <line:136:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e2afd0 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e2af68 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e2afb0 <col:22> '_Compare' lvalue ParmVar 0x5e2a9d0 '__comp' '_Compare'
  |   | `-CompoundStmt 0x5e2b048 <line:137:7, col:9>
  |   `-FunctionTemplateDecl 0x5e2aec8 <line:139:7, line:143:49> line:142:9 operator()
  |     |-TemplateTypeParmDecl 0x5e2ab88 <line:139:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator1
  |     |-TemplateTypeParmDecl 0x5e2abf8 <col:37, col:46> col:46 referenced typename depth 1 index 1 _Iterator2
  |     `-CXXMethodDecl 0x5e2ae28 <line:140:9, line:143:49> line:142:9 constexpr operator() 'bool (_Iterator1, _Iterator2)'
  |       |-ParmVarDecl 0x5e2ac98 <col:20, col:31> col:31 referenced __it1 '_Iterator1'
  |       |-ParmVarDecl 0x5e2ad10 <col:38, col:49> col:49 referenced __it2 '_Iterator2'
  |       `-CompoundStmt 0x5e2b180 <line:143:9, col:49>
  |         `-ReturnStmt 0x5e2b170 <col:11, col:46>
  |           `-CXXUnresolvedConstructExpr 0x5e2b148 <col:18, col:46> 'bool' 'bool'
  |             `-CallExpr 0x5e2b118 <col:23, col:45> '<dependent type>'
  |               |-MemberExpr 0x5e2b078 <col:23> '_Compare' lvalue ->_M_comp 0x5e2a970
  |               | `-CXXThisExpr 0x5e2b068 <col:23> '_Iter_comp_iter<_Compare> *' implicit this
  |               |-UnaryOperator 0x5e2b0c8 <col:31, col:32> '<dependent type>' prefix '*' cannot overflow
  |               | `-DeclRefExpr 0x5e2b0a8 <col:32> '_Iterator1' lvalue ParmVar 0x5e2ac98 '__it1' '_Iterator1'
  |               `-UnaryOperator 0x5e2b100 <col:39, col:40> '<dependent type>' prefix '*' cannot overflow
  |                 `-DeclRefExpr 0x5e2b0e0 <col:40> '_Iterator2' lvalue ParmVar 0x5e2ad10 '__it2' '_Iterator2'
  |-FunctionTemplateDecl 0x5e2b468 <line:146:3, line:150:60> line:149:5 __iter_comp_iter
  | |-TemplateTypeParmDecl 0x5e2b198 <line:146:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-FunctionDecl 0x5e2b3c8 <line:147:5, line:150:60> line:149:5 constexpr __iter_comp_iter '_Iter_comp_iter<_Compare> (_Compare)' inline
  |   |-ParmVarDecl 0x5e2b2b0 <col:22, col:31> col:31 referenced __comp '_Compare'
  |   `-CompoundStmt 0x5e2b668 <line:150:5, col:60>
  |     `-ReturnStmt 0x5e2b658 <col:7, col:57>
  |       `-CXXUnresolvedConstructExpr 0x5e2b630 <col:14, col:57> '_Iter_comp_iter<_Compare>' '_Iter_comp_iter<_Compare>'
  |         `-CallExpr 0x5e2b608 <col:40, col:56> '<dependent type>'
  |           |-UnresolvedLookupExpr 0x5e2b5a0 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |           `-DeclRefExpr 0x5e2b5e8 <col:50> '_Compare' lvalue ParmVar 0x5e2b2b0 '__comp' '_Compare'
  |-ClassTemplateDecl 0x5e2b7a0 <line:152:3, line:178:5> line:153:12 _Iter_comp_val
  | |-TemplateTypeParmDecl 0x5e2b680 <line:152:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-CXXRecordDecl 0x5e2b710 <line:153:5, line:178:5> line:153:12 struct _Iter_comp_val definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e2b9f0 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_val
  |   |-FieldDecl 0x5e2ba90 <line:155:7, col:16> col:16 referenced _M_comp '_Compare'
  |   |-CXXConstructorDecl 0x5e2bbf8 <line:157:7, line:160:9> line:158:7 _Iter_comp_val<_Compare> 'void (_Compare)'
  |   | |-ParmVarDecl 0x5e2baf0 <col:22, col:31> col:31 referenced __comp '_Compare'
  |   | |-CXXCtorInitializer Field 0x5e2ba90 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e2c6e8 <line:159:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e2c6c0 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e2c658 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e2c6a0 <col:22> '_Compare' lvalue ParmVar 0x5e2baf0 '__comp' '_Compare'
  |   | `-CompoundStmt 0x5e2c738 <line:160:7, col:9>
  |   |-CXXConstructorDecl 0x5e2beb8 <line:162:7, line:165:9> line:163:7 _Iter_comp_val<_Compare> 'void (const _Iter_comp_iter<_Compare> &)'
  |   | |-ParmVarDecl 0x5e2bdc0 <col:22, col:55> col:55 referenced __comp 'const _Iter_comp_iter<_Compare> &'
  |   | |-CXXCtorInitializer Field 0x5e2ba90 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e2c7b0 <line:164:11, col:26> 'NULL TYPE'
  |   | |   `-CXXDependentScopeMemberExpr 0x5e2c768 <col:12, col:19> '<dependent type>' lvalue ._M_comp
  |   | |     `-DeclRefExpr 0x5e2c748 <col:12> 'const _Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e2bdc0 '__comp' 'const _Iter_comp_iter<_Compare> &'
  |   | `-CompoundStmt 0x5e2c800 <line:165:7, col:9>
  |   |-CXXConstructorDecl 0x5e2c178 <line:168:7, line:171:9> line:169:7 _Iter_comp_val<_Compare> 'void (_Iter_comp_iter<_Compare> &&)'
  |   | |-ParmVarDecl 0x5e2c080 <col:22, col:50> col:50 referenced __comp '_Iter_comp_iter<_Compare> &&'
  |   | |-CXXCtorInitializer Field 0x5e2ba90 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e2c908 <line:170:11, col:37> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e2c8e0 <col:12, col:36> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e2c830 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-CXXDependentScopeMemberExpr 0x5e2c898 <col:22, col:29> '<dependent type>' lvalue ._M_comp
  |   | |       `-DeclRefExpr 0x5e2c878 <col:22> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e2c080 '__comp' '_Iter_comp_iter<_Compare> &&'
  |   | `-CompoundStmt 0x5e2c958 <line:171:7, col:9>
  |   `-FunctionTemplateDecl 0x5e2c5b8 <line:174:7, line:177:40> line:176:2 operator()
  |     |-TemplateTypeParmDecl 0x5e2c228 <line:174:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
  |     |-TemplateTypeParmDecl 0x5e2c298 <col:36, col:45> col:45 referenced typename depth 1 index 1 _Value
  |     `-CXXMethodDecl 0x5e2c518 <line:175:2, line:177:40> line:176:2 operator() 'bool (_Iterator, _Value &)'
  |       |-ParmVarDecl 0x5e2c338 <col:13, col:23> col:23 referenced __it '_Iterator'
  |       |-ParmVarDecl 0x5e2c408 <col:29, col:37> col:37 referenced __val '_Value &'
  |       `-CompoundStmt 0x5e2ca78 <line:177:2, col:40>
  |         `-ReturnStmt 0x5e2ca68 <col:4, col:37>
  |           `-CXXUnresolvedConstructExpr 0x5e2ca40 <col:11, col:37> 'bool' 'bool'
  |             `-CallExpr 0x5e2ca10 <col:16, col:36> '<dependent type>'
  |               |-MemberExpr 0x5e2c988 <col:16> '_Compare' lvalue ->_M_comp 0x5e2ba90
  |               | `-CXXThisExpr 0x5e2c978 <col:16> '_Iter_comp_val<_Compare> *' implicit this
  |               |-UnaryOperator 0x5e2c9d8 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
  |               | `-DeclRefExpr 0x5e2c9b8 <col:25> '_Iterator' lvalue ParmVar 0x5e2c338 '__it' '_Iterator'
  |               `-DeclRefExpr 0x5e2c9f0 <col:31> '_Value' lvalue ParmVar 0x5e2c408 '__val' '_Value &'
  |-FunctionTemplateDecl 0x5e2cd68 <line:180:3, line:183:59> line:182:5 __iter_comp_val
  | |-TemplateTypeParmDecl 0x5e2ca90 <line:180:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-FunctionDecl 0x5e2ccc8 <line:181:4, line:183:59> line:182:5 __iter_comp_val '_Iter_comp_val<_Compare> (_Compare)' inline
  |   |-ParmVarDecl 0x5e2cbb0 <col:21, col:30> col:30 referenced __comp '_Compare'
  |   `-CompoundStmt 0x5e2cf68 <line:183:5, col:59>
  |     `-ReturnStmt 0x5e2cf58 <col:7, col:56>
  |       `-CXXUnresolvedConstructExpr 0x5e2cf30 <col:14, col:56> '_Iter_comp_val<_Compare>' '_Iter_comp_val<_Compare>'
  |         `-CallExpr 0x5e2cf08 <col:39, col:55> '<dependent type>'
  |           |-UnresolvedLookupExpr 0x5e2cea0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |           `-DeclRefExpr 0x5e2cee8 <col:49> '_Compare' lvalue ParmVar 0x5e2cbb0 '__comp' '_Compare'
  |-FunctionTemplateDecl 0x5e2ed98 <line:185:3, line:188:59> line:187:5 __iter_comp_val
  | |-TemplateTypeParmDecl 0x5e2cf80 <line:185:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-FunctionDecl 0x5e2ecf8 <line:186:5, line:188:59> line:187:5 __iter_comp_val '_Iter_comp_val<_Compare> (_Iter_comp_iter<_Compare>)' inline
  |   |-ParmVarDecl 0x5e2ebe0 <col:21, col:47> col:47 referenced __comp '_Iter_comp_iter<_Compare>'
  |   `-CompoundStmt 0x5e2ef98 <line:188:5, col:59>
  |     `-ReturnStmt 0x5e2ef88 <col:7, col:56>
  |       `-CXXUnresolvedConstructExpr 0x5e2ef60 <col:14, col:56> '_Iter_comp_val<_Compare>' '_Iter_comp_val<_Compare>'
  |         `-CallExpr 0x5e2ef38 <col:39, col:55> '<dependent type>'
  |           |-UnresolvedLookupExpr 0x5e2eed0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |           `-DeclRefExpr 0x5e2ef18 <col:49> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e2ebe0 '__comp' '_Iter_comp_iter<_Compare>'
  |-ClassTemplateDecl 0x5e2f0d0 <line:190:3, line:216:5> line:191:12 _Val_comp_iter
  | |-TemplateTypeParmDecl 0x5e2efb0 <line:190:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-CXXRecordDecl 0x5e2f040 <line:191:5, line:216:5> line:191:12 struct _Val_comp_iter definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e2f320 <col:5, col:12> col:12 implicit referenced struct _Val_comp_iter
  |   |-FieldDecl 0x5e2f3c0 <line:193:7, col:16> col:16 referenced _M_comp '_Compare'
  |   |-CXXConstructorDecl 0x5e2f528 <line:195:7, line:198:9> line:196:7 _Val_comp_iter<_Compare> 'void (_Compare)'
  |   | |-ParmVarDecl 0x5e2f420 <col:22, col:31> col:31 referenced __comp '_Compare'
  |   | |-CXXCtorInitializer Field 0x5e2f3c0 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e2ff68 <line:197:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e2ff40 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e2fed8 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e2ff20 <col:22> '_Compare' lvalue ParmVar 0x5e2f420 '__comp' '_Compare'
  |   | `-CompoundStmt 0x5e2ffb8 <line:198:7, col:9>
  |   |-CXXConstructorDecl 0x5e2f788 <line:200:7, line:203:9> line:201:7 _Val_comp_iter<_Compare> 'void (const _Iter_comp_iter<_Compare> &)'
  |   | |-ParmVarDecl 0x5e2f6c0 <col:22, col:55> col:55 referenced __comp 'const _Iter_comp_iter<_Compare> &'
  |   | |-CXXCtorInitializer Field 0x5e2f3c0 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e30030 <line:202:11, col:26> 'NULL TYPE'
  |   | |   `-CXXDependentScopeMemberExpr 0x5e2ffe8 <col:12, col:19> '<dependent type>' lvalue ._M_comp
  |   | |     `-DeclRefExpr 0x5e2ffc8 <col:12> 'const _Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e2f6c0 '__comp' 'const _Iter_comp_iter<_Compare> &'
  |   | `-CompoundStmt 0x5e30080 <line:203:7, col:9>
  |   |-CXXConstructorDecl 0x5e2f9e8 <line:206:7, line:209:9> line:207:7 _Val_comp_iter<_Compare> 'void (_Iter_comp_iter<_Compare> &&)'
  |   | |-ParmVarDecl 0x5e2f920 <col:22, col:50> col:50 referenced __comp '_Iter_comp_iter<_Compare> &&'
  |   | |-CXXCtorInitializer Field 0x5e2f3c0 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e30188 <line:208:11, col:37> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e30160 <col:12, col:36> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e300b0 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-CXXDependentScopeMemberExpr 0x5e30118 <col:22, col:29> '<dependent type>' lvalue ._M_comp
  |   | |       `-DeclRefExpr 0x5e300f8 <col:22> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e2f920 '__comp' '_Iter_comp_iter<_Compare> &&'
  |   | `-CompoundStmt 0x5e301d8 <line:209:7, col:9>
  |   `-FunctionTemplateDecl 0x5e2fe38 <line:212:7, line:215:40> line:214:2 operator()
  |     |-TemplateTypeParmDecl 0x5e2fa98 <line:212:16, col:25> col:25 referenced typename depth 1 index 0 _Value
  |     |-TemplateTypeParmDecl 0x5e2fb08 <col:33, col:42> col:42 referenced typename depth 1 index 1 _Iterator
  |     `-CXXMethodDecl 0x5e2fd98 <line:213:2, line:215:40> line:214:2 operator() 'bool (_Value &, _Iterator)'
  |       |-ParmVarDecl 0x5e2fc08 <col:13, col:21> col:21 referenced __val '_Value &'
  |       |-ParmVarDecl 0x5e2fc80 <col:28, col:38> col:38 referenced __it '_Iterator'
  |       `-CompoundStmt 0x5e302f8 <line:215:2, col:40>
  |         `-ReturnStmt 0x5e302e8 <col:4, col:37>
  |           `-CXXUnresolvedConstructExpr 0x5e302c0 <col:11, col:37> 'bool' 'bool'
  |             `-CallExpr 0x5e30290 <col:16, col:36> '<dependent type>'
  |               |-MemberExpr 0x5e30208 <col:16> '_Compare' lvalue ->_M_comp 0x5e2f3c0
  |               | `-CXXThisExpr 0x5e301f8 <col:16> '_Val_comp_iter<_Compare> *' implicit this
  |               |-DeclRefExpr 0x5e30238 <col:24> '_Value' lvalue ParmVar 0x5e2fc08 '__val' '_Value &'
  |               `-UnaryOperator 0x5e30278 <col:31, col:32> '<dependent type>' prefix '*' cannot overflow
  |                 `-DeclRefExpr 0x5e30258 <col:32> '_Iterator' lvalue ParmVar 0x5e2fc80 '__it' '_Iterator'
  |-FunctionTemplateDecl 0x5e305e8 <line:218:3, line:221:59> line:220:5 __val_comp_iter
  | |-TemplateTypeParmDecl 0x5e30310 <line:218:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-FunctionDecl 0x5e30548 <line:219:5, line:221:59> line:220:5 __val_comp_iter '_Val_comp_iter<_Compare> (_Compare)' inline
  |   |-ParmVarDecl 0x5e30430 <col:21, col:30> col:30 referenced __comp '_Compare'
  |   `-CompoundStmt 0x5e307e8 <line:221:5, col:59>
  |     `-ReturnStmt 0x5e307d8 <col:7, col:56>
  |       `-CXXUnresolvedConstructExpr 0x5e307b0 <col:14, col:56> '_Val_comp_iter<_Compare>' '_Val_comp_iter<_Compare>'
  |         `-CallExpr 0x5e30788 <col:39, col:55> '<dependent type>'
  |           |-UnresolvedLookupExpr 0x5e30720 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |           `-DeclRefExpr 0x5e30768 <col:49> '_Compare' lvalue ParmVar 0x5e30430 '__comp' '_Compare'
  |-FunctionTemplateDecl 0x5e30b78 <line:223:3, line:226:59> line:225:5 __val_comp_iter
  | |-TemplateTypeParmDecl 0x5e30800 <line:223:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | `-FunctionDecl 0x5e30ad8 <line:224:5, line:226:59> line:225:5 __val_comp_iter '_Val_comp_iter<_Compare> (_Iter_comp_iter<_Compare>)' inline
  |   |-ParmVarDecl 0x5e309c0 <col:21, col:47> col:47 referenced __comp '_Iter_comp_iter<_Compare>'
  |   `-CompoundStmt 0x5e30d78 <line:226:5, col:59>
  |     `-ReturnStmt 0x5e30d68 <col:7, col:56>
  |       `-CXXUnresolvedConstructExpr 0x5e30d40 <col:14, col:56> '_Val_comp_iter<_Compare>' '_Val_comp_iter<_Compare>'
  |         `-CallExpr 0x5e30d18 <col:39, col:55> '<dependent type>'
  |           |-UnresolvedLookupExpr 0x5e30cb0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |           `-DeclRefExpr 0x5e30cf8 <col:49> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e309c0 '__comp' '_Iter_comp_iter<_Compare>'
  |-ClassTemplateDecl 0x5e30eb0 <line:228:3, line:242:5> line:229:12 _Iter_equals_val
  | |-TemplateTypeParmDecl 0x5e30d90 <line:228:12, col:21> col:21 referenced typename depth 0 index 0 _Value
  | `-CXXRecordDecl 0x5e30e20 <line:229:5, line:242:5> line:229:12 struct _Iter_equals_val definition
  |   |-DefinitionData trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e31100 <col:5, col:12> col:12 implicit referenced struct _Iter_equals_val
  |   |-FieldDecl 0x5e311c8 <line:231:7, col:15> col:15 referenced _M_value '_Value &'
  |   |-CXXConstructorDecl 0x5e31328 <line:233:7, line:236:9> line:234:7 _Iter_equals_val<_Value> 'void (_Value &)'
  |   | |-ParmVarDecl 0x5e31228 <col:24, col:32> col:32 referenced __value '_Value &'
  |   | |-CXXCtorInitializer Field 0x5e311c8 '_M_value' '_Value &'
  |   | | `-ParenListExpr 0x5e316a0 <line:235:12, col:20> 'NULL TYPE'
  |   | |   `-DeclRefExpr 0x5e31680 <col:13> '_Value' lvalue ParmVar 0x5e31228 '__value' '_Value &'
  |   | `-CompoundStmt 0x5e316f0 <line:236:7, col:9>
  |   `-FunctionTemplateDecl 0x5e31608 <line:238:7, line:241:30> line:240:2 operator()
  |     |-TemplateTypeParmDecl 0x5e313d8 <line:238:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
  |     `-CXXMethodDecl 0x5e31568 <line:239:2, line:241:30> line:240:2 operator() 'bool (_Iterator)'
  |       |-ParmVarDecl 0x5e31470 <col:13, col:23> col:23 referenced __it '_Iterator'
  |       `-CompoundStmt 0x5e31810 <line:241:2, col:30>
  |         `-ReturnStmt 0x5e31800 <col:4, col:20>
  |           `-CXXOperatorCallExpr 0x5e317c8 <col:11, col:20> '<dependent type>'
  |             |-UnresolvedLookupExpr 0x5e31778 <col:17> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80 0x5e069a0
  |             |-UnaryOperator 0x5e31720 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
  |             | `-DeclRefExpr 0x5e31700 <col:12> '_Iterator' lvalue ParmVar 0x5e31470 '__it' '_Iterator'
  |             `-MemberExpr 0x5e31748 <col:20> '_Value' lvalue ->_M_value 0x5e311c8
  |               `-CXXThisExpr 0x5e31738 <col:20> '_Iter_equals_val<_Value> *' implicit this
  |-FunctionTemplateDecl 0x5e31b18 <line:244:3, line:247:47> line:246:5 __iter_equals_val
  | |-TemplateTypeParmDecl 0x5e31828 <line:244:12, col:21> col:21 referenced typename depth 0 index 0 _Value
  | `-FunctionDecl 0x5e31a78 <line:245:5, line:247:47> line:246:5 __iter_equals_val '_Iter_equals_val<_Value> (_Value &)' inline
  |   |-ParmVarDecl 0x5e31968 <col:23, col:31> col:31 referenced __val '_Value &'
  |   `-CompoundStmt 0x5e31c88 <line:247:5, col:47>
  |     `-ReturnStmt 0x5e31c78 <col:7, col:44>
  |       `-CXXUnresolvedConstructExpr 0x5e31c50 <col:14, col:44> '_Iter_equals_val<_Value>' '_Iter_equals_val<_Value>'
  |         `-DeclRefExpr 0x5e31c30 <col:39> '_Value' lvalue ParmVar 0x5e31968 '__val' '_Value &'
  |-ClassTemplateDecl 0x5e31dc0 <line:249:3, line:263:5> line:250:12 _Iter_equals_iter
  | |-TemplateTypeParmDecl 0x5e31ca0 <line:249:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator1
  | `-CXXRecordDecl 0x5e31d30 <line:250:5, line:263:5> line:250:12 struct _Iter_equals_iter definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e32010 <col:5, col:12> col:12 implicit referenced struct _Iter_equals_iter
  |   |-FieldDecl 0x5e320b0 <line:252:7, col:18> col:18 referenced _M_it1 '_Iterator1'
  |   |-CXXConstructorDecl 0x5e32218 <line:254:7, line:257:9> line:255:7 _Iter_equals_iter<_Iterator1> 'void (_Iterator1)'
  |   | |-ParmVarDecl 0x5e32110 <col:25, col:36> col:36 referenced __it1 '_Iterator1'
  |   | |-CXXCtorInitializer Field 0x5e320b0 '_M_it1' '_Iterator1'
  |   | | `-ParenListExpr 0x5e32560 <line:256:10, col:16> 'NULL TYPE'
  |   | |   `-DeclRefExpr 0x5e32540 <col:11> '_Iterator1' lvalue ParmVar 0x5e32110 '__it1' '_Iterator1'
  |   | `-CompoundStmt 0x5e325b0 <line:257:7, col:9>
  |   `-FunctionTemplateDecl 0x5e324c8 <line:259:7, line:262:30> line:261:2 operator()
  |     |-TemplateTypeParmDecl 0x5e322c8 <line:259:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator2
  |     `-CXXMethodDecl 0x5e32428 <line:260:2, line:262:30> line:261:2 operator() 'bool (_Iterator2)'
  |       |-ParmVarDecl 0x5e32360 <col:13, col:24> col:24 referenced __it2 '_Iterator2'
  |       `-CompoundStmt 0x5e326e8 <line:262:2, col:30>
  |         `-ReturnStmt 0x5e326d8 <col:4, col:22>
  |           `-CXXOperatorCallExpr 0x5e326a0 <col:11, col:22> '<dependent type>'
  |             |-UnresolvedLookupExpr 0x5e32650 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80 0x5e069a0
  |             |-UnaryOperator 0x5e325e0 <col:11, col:12> '<dependent type>' prefix '*' cannot overflow
  |             | `-DeclRefExpr 0x5e325c0 <col:12> '_Iterator2' lvalue ParmVar 0x5e32360 '__it2' '_Iterator2'
  |             `-UnaryOperator 0x5e32638 <col:21, col:22> '<dependent type>' prefix '*' cannot overflow
  |               `-MemberExpr 0x5e32608 <col:22> '_Iterator1' lvalue ->_M_it1 0x5e320b0
  |                 `-CXXThisExpr 0x5e325f8 <col:22> '_Iter_equals_iter<_Iterator1> *' implicit this
  |-FunctionTemplateDecl 0x5e32a68 <line:265:3, line:268:50> line:267:5 __iter_comp_iter
  | |-TemplateTypeParmDecl 0x5e32700 <line:265:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
  | `-FunctionDecl 0x5e329c8 <line:266:5, line:268:50> line:267:5 __iter_comp_iter '_Iter_equals_iter<_Iterator> (__gnu_cxx::__ops::_Iter_equal_to_iter, _Iterator)' inline
  |   |-ParmVarDecl 0x5e32820 <col:22> col:41 '__gnu_cxx::__ops::_Iter_equal_to_iter'
  |   |-ParmVarDecl 0x5e32898 <col:43, col:53> col:53 referenced __it '_Iterator'
  |   `-CompoundStmt 0x5e34478 <line:268:5, col:50>
  |     `-ReturnStmt 0x5e34468 <col:7, col:47>
  |       `-CXXUnresolvedConstructExpr 0x5e34440 <col:14, col:47> '_Iter_equals_iter<_Iterator>' '_Iter_equals_iter<_Iterator>'
  |         `-DeclRefExpr 0x5e34420 <col:43> '_Iterator' lvalue ParmVar 0x5e32898 '__it' '_Iterator'
  |-ClassTemplateDecl 0x5e345b0 <line:270:3, line:284:5> line:271:12 _Iter_pred
  | |-TemplateTypeParmDecl 0x5e34490 <line:270:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
  | `-CXXRecordDecl 0x5e34520 <line:271:5, line:284:5> line:271:12 struct _Iter_pred definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e34800 <col:5, col:12> col:12 implicit referenced struct _Iter_pred
  |   |-FieldDecl 0x5e348a0 <line:273:7, col:18> col:18 referenced _M_pred '_Predicate'
  |   |-CXXConstructorDecl 0x5e34a08 <line:275:7, line:278:9> line:276:7 _Iter_pred<_Predicate> 'void (_Predicate)'
  |   | |-ParmVarDecl 0x5e34900 <col:18, col:29> col:29 referenced __pred '_Predicate'
  |   | |-CXXCtorInitializer Field 0x5e348a0 '_M_pred' '_Predicate'
  |   | | `-ParenListExpr 0x5e34de0 <line:277:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e34db8 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e34d50 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e34d98 <col:22> '_Predicate' lvalue ParmVar 0x5e34900 '__pred' '_Predicate'
  |   | `-CompoundStmt 0x5e34e30 <line:278:7, col:9>
  |   `-FunctionTemplateDecl 0x5e34cb8 <line:280:7, line:283:33> line:282:2 operator()
  |     |-TemplateTypeParmDecl 0x5e34ab8 <line:280:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
  |     `-CXXMethodDecl 0x5e34c18 <line:281:2, line:283:33> line:282:2 operator() 'bool (_Iterator)'
  |       |-ParmVarDecl 0x5e34b50 <col:13, col:23> col:23 referenced __it '_Iterator'
  |       `-CompoundStmt 0x5e34f28 <line:283:2, col:33>
  |         `-ReturnStmt 0x5e34f18 <col:4, col:30>
  |           `-CXXUnresolvedConstructExpr 0x5e34ef0 <col:11, col:30> 'bool' 'bool'
  |             `-CallExpr 0x5e34ec8 <col:16, col:29> '<dependent type>'
  |               |-MemberExpr 0x5e34e60 <col:16> '_Predicate' lvalue ->_M_pred 0x5e348a0
  |               | `-CXXThisExpr 0x5e34e50 <col:16> '_Iter_pred<_Predicate> *' implicit this
  |               `-UnaryOperator 0x5e34eb0 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
  |                 `-DeclRefExpr 0x5e34e90 <col:25> '_Iterator' lvalue ParmVar 0x5e34b50 '__it' '_Iterator'
  |-FunctionTemplateDecl 0x5e35218 <line:286:3, line:289:57> line:288:5 __pred_iter
  | |-TemplateTypeParmDecl 0x5e34f40 <line:286:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
  | `-FunctionDecl 0x5e35178 <line:287:5, line:289:57> line:288:5 __pred_iter '_Iter_pred<_Predicate> (_Predicate)' inline
  |   |-ParmVarDecl 0x5e35060 <col:17, col:28> col:28 referenced __pred '_Predicate'
  |   `-CompoundStmt 0x5e35418 <line:289:5, col:57>
  |     `-ReturnStmt 0x5e35408 <col:7, col:54>
  |       `-CXXUnresolvedConstructExpr 0x5e353e0 <col:14, col:54> '_Iter_pred<_Predicate>' '_Iter_pred<_Predicate>'
  |         `-CallExpr 0x5e353b8 <col:37, col:53> '<dependent type>'
  |           |-UnresolvedLookupExpr 0x5e35350 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |           `-DeclRefExpr 0x5e35398 <col:47> '_Predicate' lvalue ParmVar 0x5e35060 '__pred' '_Predicate'
  |-ClassTemplateDecl 0x5e355c8 <line:291:3, line:305:5> line:292:12 _Iter_comp_to_val
  | |-TemplateTypeParmDecl 0x5e35430 <line:291:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | |-TemplateTypeParmDecl 0x5e354a8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Value
  | `-CXXRecordDecl 0x5e35538 <line:292:5, line:305:5> line:292:12 struct _Iter_comp_to_val definition
  |   |-DefinitionData trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e35860 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_to_val
  |   |-FieldDecl 0x5e35900 <line:294:7, col:16> col:16 referenced _M_comp '_Compare'
  |   |-FieldDecl 0x5e35988 <line:295:7, col:15> col:15 referenced _M_value '_Value &'
  |   |-CXXConstructorDecl 0x5e35bb8 <line:297:7, line:299:9> line:297:7 _Iter_comp_to_val<_Compare, _Value> 'void (_Compare, _Value &)'
  |   | |-ParmVarDecl 0x5e359e8 <col:25, col:34> col:34 referenced __comp '_Compare'
  |   | |-ParmVarDecl 0x5e35a60 <col:42, col:50> col:50 referenced __value '_Value &'
  |   | |-CXXCtorInitializer Field 0x5e35900 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e35fa0 <line:298:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e35f78 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e35f10 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e35f58 <col:22> '_Compare' lvalue ParmVar 0x5e359e8 '__comp' '_Compare'
  |   | |-CXXCtorInitializer Field 0x5e35988 '_M_value' '_Value &'
  |   | | `-ParenListExpr 0x5e36008 <col:40, col:48> 'NULL TYPE'
  |   | |   `-DeclRefExpr 0x5e35fe8 <col:41> '_Value' lvalue ParmVar 0x5e35a60 '__value' '_Value &'
  |   | `-CompoundStmt 0x5e36060 <line:299:7, col:9>
  |   `-FunctionTemplateDecl 0x5e35e78 <line:301:7, line:304:43> line:303:2 operator()
  |     |-TemplateTypeParmDecl 0x5e35c70 <line:301:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
  |     `-CXXMethodDecl 0x5e35dd8 <line:302:2, line:304:43> line:303:2 operator() 'bool (_Iterator)'
  |       |-ParmVarDecl 0x5e35d10 <col:13, col:23> col:23 referenced __it '_Iterator'
  |       `-CompoundStmt 0x5e361a0 <line:304:2, col:43>
  |         `-ReturnStmt 0x5e36190 <col:4, col:40>
  |           `-CXXUnresolvedConstructExpr 0x5e36168 <col:11, col:40> 'bool' 'bool'
  |             `-CallExpr 0x5e36138 <col:16, col:39> '<dependent type>'
  |               |-MemberExpr 0x5e36090 <col:16> '_Compare' lvalue ->_M_comp 0x5e35900
  |               | `-CXXThisExpr 0x5e36080 <col:16> '_Iter_comp_to_val<_Compare, _Value> *' implicit this
  |               |-UnaryOperator 0x5e360e0 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
  |               | `-DeclRefExpr 0x5e360c0 <col:25> '_Iterator' lvalue ParmVar 0x5e35d10 '__it' '_Iterator'
  |               `-MemberExpr 0x5e36108 <col:31> '_Value' lvalue ->_M_value 0x5e35988
  |                 `-CXXThisExpr 0x5e360f8 <col:31> '_Iter_comp_to_val<_Compare, _Value> *' implicit this
  |-FunctionTemplateDecl 0x5e36620 <line:307:3, line:312:5> line:309:5 __iter_comp_val
  | |-TemplateTypeParmDecl 0x5e361b8 <line:307:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | |-TemplateTypeParmDecl 0x5e36228 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Value
  | `-FunctionDecl 0x5e36580 <line:308:5, line:312:5> line:309:5 __iter_comp_val '_Iter_comp_to_val<_Compare, _Value> (_Compare, _Value &)'
  |   |-ParmVarDecl 0x5e36390 <col:21, col:30> col:30 referenced __comp '_Compare'
  |   |-ParmVarDecl 0x5e36438 <col:38, col:46> col:46 referenced __val '_Value &'
  |   `-CompoundStmt 0x5e368a8 <line:310:5, line:312:5>
  |     `-ReturnStmt 0x5e36898 <line:311:7, col:74>
  |       `-CXXUnresolvedConstructExpr 0x5e36868 <col:14, col:74> '_Iter_comp_to_val<_Compare, _Value>' '_Iter_comp_to_val<_Compare, _Value>'
  |         |-CallExpr 0x5e36820 <col:50, col:66> '<dependent type>'
  |         | |-UnresolvedLookupExpr 0x5e367b8 <col:50, col:55> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |         | `-DeclRefExpr 0x5e36800 <col:60> '_Compare' lvalue ParmVar 0x5e36390 '__comp' '_Compare'
  |         `-DeclRefExpr 0x5e36848 <col:69> '_Value' lvalue ParmVar 0x5e36438 '__val' '_Value &'
  |-ClassTemplateDecl 0x5e36a58 <line:314:3, line:328:5> line:315:12 _Iter_comp_to_iter
  | |-TemplateTypeParmDecl 0x5e368c0 <line:314:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | |-TemplateTypeParmDecl 0x5e36938 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Iterator1
  | `-CXXRecordDecl 0x5e369c8 <line:315:5, line:328:5> line:315:12 struct _Iter_comp_to_iter definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e36cf0 <col:5, col:12> col:12 implicit referenced struct _Iter_comp_to_iter
  |   |-FieldDecl 0x5e36d90 <line:317:7, col:16> col:16 referenced _M_comp '_Compare'
  |   |-FieldDecl 0x5e36df0 <line:318:7, col:18> col:18 referenced _M_it1 '_Iterator1'
  |   |-CXXConstructorDecl 0x5e37018 <line:320:7, line:322:9> line:320:7 _Iter_comp_to_iter<_Compare, _Iterator1> 'void (_Compare, _Iterator1)'
  |   | |-ParmVarDecl 0x5e36e50 <col:26, col:35> col:35 referenced __comp '_Compare'
  |   | |-ParmVarDecl 0x5e36ec8 <col:43, col:54> col:54 referenced __it1 '_Iterator1'
  |   | |-CXXCtorInitializer Field 0x5e36d90 '_M_comp' '_Compare'
  |   | | `-ParenListExpr 0x5e37400 <line:321:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e373d8 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e37370 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e373b8 <col:22> '_Compare' lvalue ParmVar 0x5e36e50 '__comp' '_Compare'
  |   | |-CXXCtorInitializer Field 0x5e36df0 '_M_it1' '_Iterator1'
  |   | | `-ParenListExpr 0x5e37468 <col:38, col:44> 'NULL TYPE'
  |   | |   `-DeclRefExpr 0x5e37448 <col:39> '_Iterator1' lvalue ParmVar 0x5e36ec8 '__it1' '_Iterator1'
  |   | `-CompoundStmt 0x5e374c0 <line:322:7, col:9>
  |   `-FunctionTemplateDecl 0x5e372d8 <line:324:7, line:327:43> line:326:2 operator()
  |     |-TemplateTypeParmDecl 0x5e370d0 <line:324:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator2
  |     `-CXXMethodDecl 0x5e37238 <line:325:2, line:327:43> line:326:2 operator() 'bool (_Iterator2)'
  |       |-ParmVarDecl 0x5e37170 <col:13, col:24> col:24 referenced __it2 '_Iterator2'
  |       `-CompoundStmt 0x5e37618 <line:327:2, col:43>
  |         `-ReturnStmt 0x5e37608 <col:4, col:40>
  |           `-CXXUnresolvedConstructExpr 0x5e375e0 <col:11, col:40> 'bool' 'bool'
  |             `-CallExpr 0x5e375b0 <col:16, col:39> '<dependent type>'
  |               |-MemberExpr 0x5e374f0 <col:16> '_Compare' lvalue ->_M_comp 0x5e36d90
  |               | `-CXXThisExpr 0x5e374e0 <col:16> '_Iter_comp_to_iter<_Compare, _Iterator1> *' implicit this
  |               |-UnaryOperator 0x5e37540 <col:24, col:25> '<dependent type>' prefix '*' cannot overflow
  |               | `-DeclRefExpr 0x5e37520 <col:25> '_Iterator2' lvalue ParmVar 0x5e37170 '__it2' '_Iterator2'
  |               `-UnaryOperator 0x5e37598 <col:32, col:33> '<dependent type>' prefix '*' cannot overflow
  |                 `-MemberExpr 0x5e37568 <col:33> '_Iterator1' lvalue ->_M_it1 0x5e36df0
  |                   `-CXXThisExpr 0x5e37558 <col:33> '_Iter_comp_to_iter<_Compare, _Iterator1> *' implicit this
  |-FunctionTemplateDecl 0x5e37b10 <line:330:3, line:336:5> line:332:5 __iter_comp_iter
  | |-TemplateTypeParmDecl 0x5e37630 <line:330:12, col:21> col:21 referenced typename depth 0 index 0 _Compare
  | |-TemplateTypeParmDecl 0x5e376a8 <col:31, col:40> col:40 referenced typename depth 0 index 1 _Iterator
  | `-FunctionDecl 0x5e37a70 <line:331:5, line:336:5> line:332:5 __iter_comp_iter '_Iter_comp_to_iter<_Compare, _Iterator> (_Iter_comp_iter<_Compare>, _Iterator)' inline
  |   |-ParmVarDecl 0x5e378b0 <col:22, col:48> col:48 referenced __comp '_Iter_comp_iter<_Compare>'
  |   |-ParmVarDecl 0x5e37928 <col:56, col:66> col:66 referenced __it '_Iterator'
  |   `-CompoundStmt 0x5e37de0 <line:333:5, line:336:5>
  |     `-ReturnStmt 0x5e37dd0 <line:334:7, line:335:35>
  |       `-CXXUnresolvedConstructExpr 0x5e37da0 <line:334:14, line:335:35> '_Iter_comp_to_iter<_Compare, _Iterator>' '_Iter_comp_to_iter<_Compare, _Iterator>'
  |         |-CallExpr 0x5e37d58 <col:4, col:28> '<dependent type>'
  |         | |-UnresolvedLookupExpr 0x5e37ca8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |         | `-CXXDependentScopeMemberExpr 0x5e37d10 <col:14, col:21> '<dependent type>' lvalue ._M_comp
  |         |   `-DeclRefExpr 0x5e37cf0 <col:14> '_Iter_comp_iter<_Compare>' lvalue ParmVar 0x5e378b0 '__comp' '_Iter_comp_iter<_Compare>'
  |         `-DeclRefExpr 0x5e37d80 <col:31> '_Iterator' lvalue ParmVar 0x5e37928 '__it' '_Iterator'
  |-ClassTemplateDecl 0x5e37f10 <line:338:3, line:352:5> line:339:12 _Iter_negate
  | |-TemplateTypeParmDecl 0x5e37df8 <line:338:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
  | `-CXXRecordDecl 0x5e37e80 <line:339:5, line:352:5> line:339:12 struct _Iter_negate definition
  |   |-DefinitionData standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
  |   | |-DefaultConstructor
  |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveConstructor exists simple trivial needs_implicit
  |   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  |   | |-MoveAssignment exists simple trivial needs_implicit
  |   | `-Destructor simple irrelevant trivial needs_implicit
  |   |-CXXRecordDecl 0x5e38160 <col:5, col:12> col:12 implicit referenced struct _Iter_negate
  |   |-FieldDecl 0x5e38200 <line:341:7, col:18> col:18 referenced _M_pred '_Predicate'
  |   |-CXXConstructorDecl 0x5e38368 <line:343:7, line:346:9> line:344:7 _Iter_negate<_Predicate> 'void (_Predicate)'
  |   | |-ParmVarDecl 0x5e38260 <col:20, col:31> col:31 referenced __pred '_Predicate'
  |   | |-CXXCtorInitializer Field 0x5e38200 '_M_pred' '_Predicate'
  |   | | `-ParenListExpr 0x5e3ca50 <line:345:11, col:29> 'NULL TYPE'
  |   | |   `-CallExpr 0x5e3ca28 <col:12, col:28> '<dependent type>'
  |   | |     |-UnresolvedLookupExpr 0x5e3c9c0 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
  |   | |     `-DeclRefExpr 0x5e3ca08 <col:22> '_Predicate' lvalue ParmVar 0x5e38260 '__pred' '_Predicate'
  |   | `-CompoundStmt 0x5e3caa0 <line:346:7, col:9>
  |   `-FunctionTemplateDecl 0x5e3c928 <line:348:7, line:351:34> line:350:2 operator()
  |     |-TemplateTypeParmDecl 0x5e3c720 <line:348:16, col:25> col:25 referenced typename depth 1 index 0 _Iterator
  |     `-CXXMethodDecl 0x5e3c888 <line:349:2, line:351:34> line:350:2 operator() 'bool (_Iterator)'
  |       |-ParmVarDecl 0x5e3c7c0 <col:13, col:23> col:23 referenced __it '_Iterator'
  |       `-CompoundStmt 0x5e3cbb0 <line:351:2, col:34>
  |         `-ReturnStmt 0x5e3cba0 <col:4, col:31>
  |           `-UnaryOperator 0x5e3cb88 <col:11, col:31> 'bool' prefix '!' cannot overflow
  |             `-CXXUnresolvedConstructExpr 0x5e3cb60 <col:12, col:31> 'bool' 'bool'
  |               `-CallExpr 0x5e3cb38 <col:17, col:30> '<dependent type>'
  |                 |-MemberExpr 0x5e3cad0 <col:17> '_Predicate' lvalue ->_M_pred 0x5e38200
  |                 | `-CXXThisExpr 0x5e3cac0 <col:17> '_Iter_negate<_Predicate> *' implicit this
  |                 `-UnaryOperator 0x5e3cb20 <col:25, col:26> '<dependent type>' prefix '*' cannot overflow
  |                   `-DeclRefExpr 0x5e3cb00 <col:26> '_Iterator' lvalue ParmVar 0x5e3c7c0 '__it' '_Iterator'
  `-FunctionTemplateDecl 0x5e3cf38 <line:354:3, line:357:67> line:356:5 __negate
    |-TemplateTypeParmDecl 0x5e3cbc8 <line:354:12, col:21> col:21 referenced typename depth 0 index 0 _Predicate
    `-FunctionDecl 0x5e3ce98 <line:355:5, line:357:67> line:356:5 __negate '_Iter_negate<_Predicate> (_Iter_pred<_Predicate>)' inline
      |-ParmVarDecl 0x5e3cd80 <col:14, col:37> col:37 referenced __pred '_Iter_pred<_Predicate>'
      `-CompoundStmt 0x5e3d180 <line:357:5, col:67>
        `-ReturnStmt 0x5e3d170 <col:7, col:64>
          `-CXXUnresolvedConstructExpr 0x5e3d148 <col:14, col:64> '_Iter_negate<_Predicate>' '_Iter_negate<_Predicate>'
            `-CallExpr 0x5e3d120 <col:39, col:63> '<dependent type>'
              |-UnresolvedLookupExpr 0x5e3d070 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
              `-CXXDependentScopeMemberExpr 0x5e3d0d8 <col:49, col:56> '<dependent type>' lvalue ._M_pred
                `-DeclRefExpr 0x5e3d0b8 <col:49> '_Iter_pred<_Predicate>' lvalue ParmVar 0x5e3cd80 '__pred' '_Iter_pred<_Predicate>'
FunctionDecl 0x5e669b8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_algobase.h:193:5, line:203:5> line:195:5 referenced constexpr min 'const unsigned long &(const unsigned long &, const unsigned long &)' inline
|-TemplateArgument type 'unsigned long'
|-ParmVarDecl 0x5e66828 <col:9, col:20> col:20 used __a 'const unsigned long &'
|-ParmVarDecl 0x5e668a0 <col:25, col:36> col:36 used __b 'const unsigned long &'
`-CompoundStmt 0x5e66c68 <line:196:5, line:203:5>
  |-IfStmt 0x5e66c20 <line:200:7, line:201:9>
  | |-BinaryOperator 0x5e66bd0 <line:200:11, col:17> 'bool' '<'
  | | |-ImplicitCastExpr 0x5e66ba0 <col:11> 'unsigned long':'unsigned long' <LValueToRValue>
  | | | `-DeclRefExpr 0x5e66b60 <col:11> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e668a0 '__b' 'const unsigned long &'
  | | `-ImplicitCastExpr 0x5e66bb8 <col:17> 'unsigned long':'unsigned long' <LValueToRValue>
  | |   `-DeclRefExpr 0x5e66b80 <col:17> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e66828 '__a' 'const unsigned long &'
  | `-ReturnStmt 0x5e66c10 <line:201:2, col:9>
  |   `-DeclRefExpr 0x5e66bf0 <col:9> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e668a0 '__b' 'const unsigned long &'
  `-ReturnStmt 0x5e66c58 <line:202:7, col:14>
    `-DeclRefExpr 0x5e66c38 <col:14> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e66828 '__a' 'const unsigned long &'
NamespaceDecl 0x5e3de38 prev 0x5e238a0 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_algobase.h:73:1, line:1414:1> line:73:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5e3dea8 <col:31, col:56> Default
|-FunctionTemplateDecl 0x5e3e1e8 <line:118:3, line:150:5> line:120:5 iter_swap
| |-TemplateTypeParmDecl 0x5e3dee8 <line:118:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator1
| |-TemplateTypeParmDecl 0x5e3df58 <col:40, col:49> col:49 referenced typename depth 0 index 1 _ForwardIterator2
| `-FunctionDecl 0x5e3e148 <line:119:5, line:150:5> line:120:5 iter_swap 'void (_ForwardIterator1, _ForwardIterator2)' inline
|   |-ParmVarDecl 0x5e3dff8 <col:15, col:33> col:33 referenced __a '_ForwardIterator1'
|   |-ParmVarDecl 0x5e3e070 <col:38, col:56> col:56 referenced __b '_ForwardIterator2'
|   `-CompoundStmt 0x5e3e350 <line:121:5, line:150:5>
|     `-CallExpr 0x5e3e320 <line:148:7, col:22> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5e3e250 <col:7> '<overloaded function type>' lvalue (ADL) = 'swap' 0x5d53f18 0x5d55948 0x5dd0318 0x5dd0e68
|       |-UnaryOperator 0x5e3e2d0 <col:12, col:13> '<dependent type>' prefix '*' cannot overflow
|       | `-DeclRefExpr 0x5e3e2b0 <col:13> '_ForwardIterator1' lvalue ParmVar 0x5e3dff8 '__a' '_ForwardIterator1'
|       `-UnaryOperator 0x5e3e308 <col:18, col:19> '<dependent type>' prefix '*' cannot overflow
|         `-DeclRefExpr 0x5e3e2e8 <col:19> '_ForwardIterator2' lvalue ParmVar 0x5e3e070 '__b' '_ForwardIterator2'
|-FunctionTemplateDecl 0x5e3e728 <line:164:3, line:179:5> line:166:5 swap_ranges
| |-TemplateTypeParmDecl 0x5e3e368 <line:164:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator1
| |-TemplateTypeParmDecl 0x5e3e3d8 <col:40, col:49> col:49 referenced typename depth 0 index 1 _ForwardIterator2
| `-FunctionDecl 0x5e3e688 <line:165:5, line:179:5> line:166:5 swap_ranges '_ForwardIterator2 (_ForwardIterator1, _ForwardIterator1, _ForwardIterator2)'
|   |-ParmVarDecl 0x5e3e478 <col:17, col:35> col:35 referenced __first1 '_ForwardIterator1'
|   |-ParmVarDecl 0x5e3e4f0 <col:45, col:63> col:63 referenced __last1 '_ForwardIterator1'
|   |-ParmVarDecl 0x5e3e568 <line:167:3, col:21> col:21 referenced __first2 '_ForwardIterator2'
|   `-CompoundStmt 0x5e3eaa8 <line:168:5, line:179:5>
|     |-NullStmt 0x5e3e798 <line:174:56>
|     |-ForStmt 0x5e3ea40 <line:176:7, line:177:35>
|     | |-<<<NULL>>>
|     | |-<<<NULL>>>
|     | |-CXXOperatorCallExpr 0x5e3e850 <line:176:14, col:26> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e3e7e0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | |-DeclRefExpr 0x5e3e7a0 <col:14> '_ForwardIterator1' lvalue ParmVar 0x5e3e478 '__first1' '_ForwardIterator1'
|     | | `-DeclRefExpr 0x5e3e7c0 <col:26> '_ForwardIterator1' lvalue ParmVar 0x5e3e4f0 '__last1' '_ForwardIterator1'
|     | |-BinaryOperator 0x5e3e930 <col:35, col:55> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e3e8a8 <col:35, col:37> '<dependent type>' prefix '++' cannot overflow
|     | | | `-DeclRefExpr 0x5e3e888 <col:37> '_ForwardIterator1' lvalue ParmVar 0x5e3e478 '__first1' '_ForwardIterator1'
|     | | `-CStyleCastExpr 0x5e3e908 <col:47, col:55> 'void' <ToVoid>
|     | |   `-UnaryOperator 0x5e3e8e0 <col:53, col:55> '<dependent type>' prefix '++' cannot overflow
|     | |     `-DeclRefExpr 0x5e3e8c0 <col:55> '_ForwardIterator2' lvalue ParmVar 0x5e3e568 '__first2' '_ForwardIterator2'
|     | `-CallExpr 0x5e3ea10 <line:177:2, col:35> '<dependent type>'
|     |   |-UnresolvedLookupExpr 0x5e3e988 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = 'iter_swap' 0x5e3e1e8
|     |   |-DeclRefExpr 0x5e3e9d0 <col:17> '_ForwardIterator1' lvalue ParmVar 0x5e3e478 '__first1' '_ForwardIterator1'
|     |   `-DeclRefExpr 0x5e3e9f0 <col:27> '_ForwardIterator2' lvalue ParmVar 0x5e3e568 '__first2' '_ForwardIterator2'
|     `-ReturnStmt 0x5e3ea98 <line:178:7, col:14>
|       `-DeclRefExpr 0x5e3ea78 <col:14> '_ForwardIterator2' lvalue ParmVar 0x5e3e568 '__first2' '_ForwardIterator2'
|-FunctionTemplateDecl 0x5e3edc8 <line:192:3, line:203:5> line:195:5 min
| |-TemplateTypeParmDecl 0x5e3ead0 <line:192:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-FunctionDecl 0x5e3ed28 <line:193:5, line:203:5> line:195:5 constexpr min 'const _Tp &(const _Tp &, const _Tp &)' inline
| | |-ParmVarDecl 0x5e3eb98 <col:9, col:20> col:20 referenced __a 'const _Tp &'
| | |-ParmVarDecl 0x5e3ec10 <col:25, col:36> col:36 referenced __b 'const _Tp &'
| | `-CompoundStmt 0x5e3ef88 <line:196:5, line:203:5>
| |   |-IfStmt 0x5e3ef40 <line:200:7, line:201:9>
| |   | |-CXXOperatorCallExpr 0x5e3eed8 <line:200:11, col:17> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x5e3ee70 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8 0x5dedab8 0x5df1568 0x5e189a8 0x5e19018
| |   | | |-DeclRefExpr 0x5e3ee30 <col:11> 'const _Tp' lvalue ParmVar 0x5e3ec10 '__b' 'const _Tp &'
| |   | | `-DeclRefExpr 0x5e3ee50 <col:17> 'const _Tp' lvalue ParmVar 0x5e3eb98 '__a' 'const _Tp &'
| |   | `-ReturnStmt 0x5e3ef30 <line:201:2, col:9>
| |   |   `-DeclRefExpr 0x5e3ef10 <col:9> 'const _Tp' lvalue ParmVar 0x5e3ec10 '__b' 'const _Tp &'
| |   `-ReturnStmt 0x5e3ef78 <line:202:7, col:14>
| |     `-DeclRefExpr 0x5e3ef58 <col:14> 'const _Tp' lvalue ParmVar 0x5e3eb98 '__a' 'const _Tp &'
| `-FunctionDecl 0x5e669b8 <line:193:5, line:203:5> line:195:5 referenced constexpr min 'const unsigned long &(const unsigned long &, const unsigned long &)' inline
|   |-TemplateArgument type 'unsigned long'
|   |-ParmVarDecl 0x5e66828 <col:9, col:20> col:20 used __a 'const unsigned long &'
|   |-ParmVarDecl 0x5e668a0 <col:25, col:36> col:36 used __b 'const unsigned long &'
|   `-CompoundStmt 0x5e66c68 <line:196:5, line:203:5>
|     |-IfStmt 0x5e66c20 <line:200:7, line:201:9>
|     | |-BinaryOperator 0x5e66bd0 <line:200:11, col:17> 'bool' '<'
|     | | |-ImplicitCastExpr 0x5e66ba0 <col:11> 'unsigned long':'unsigned long' <LValueToRValue>
|     | | | `-DeclRefExpr 0x5e66b60 <col:11> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e668a0 '__b' 'const unsigned long &'
|     | | `-ImplicitCastExpr 0x5e66bb8 <col:17> 'unsigned long':'unsigned long' <LValueToRValue>
|     | |   `-DeclRefExpr 0x5e66b80 <col:17> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e66828 '__a' 'const unsigned long &'
|     | `-ReturnStmt 0x5e66c10 <line:201:2, col:9>
|     |   `-DeclRefExpr 0x5e66bf0 <col:9> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e668a0 '__b' 'const unsigned long &'
|     `-ReturnStmt 0x5e66c58 <line:202:7, col:14>
|       `-DeclRefExpr 0x5e66c38 <col:14> 'const unsigned long':'const unsigned long' lvalue ParmVar 0x5e66828 '__a' 'const unsigned long &'
|-FunctionTemplateDecl 0x5e3f258 <line:216:3, line:227:5> line:219:5 max
| |-TemplateTypeParmDecl 0x5e3efa8 <line:216:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5e3f1b8 <line:217:5, line:227:5> line:219:5 constexpr max 'const _Tp &(const _Tp &, const _Tp &)' inline
|   |-ParmVarDecl 0x5e3f068 <col:9, col:20> col:20 referenced __a 'const _Tp &'
|   |-ParmVarDecl 0x5e3f0e0 <col:25, col:36> col:36 referenced __b 'const _Tp &'
|   `-CompoundStmt 0x5e3f418 <line:220:5, line:227:5>
|     |-IfStmt 0x5e3f3d0 <line:224:7, line:225:9>
|     | |-CXXOperatorCallExpr 0x5e3f368 <line:224:11, col:17> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e3f300 <col:15> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8 0x5dedab8 0x5df1568 0x5e189a8 0x5e19018
|     | | |-DeclRefExpr 0x5e3f2c0 <col:11> 'const _Tp' lvalue ParmVar 0x5e3f068 '__a' 'const _Tp &'
|     | | `-DeclRefExpr 0x5e3f2e0 <col:17> 'const _Tp' lvalue ParmVar 0x5e3f0e0 '__b' 'const _Tp &'
|     | `-ReturnStmt 0x5e3f3c0 <line:225:2, col:9>
|     |   `-DeclRefExpr 0x5e3f3a0 <col:9> 'const _Tp' lvalue ParmVar 0x5e3f0e0 '__b' 'const _Tp &'
|     `-ReturnStmt 0x5e3f408 <line:226:7, col:14>
|       `-DeclRefExpr 0x5e3f3e8 <col:14> 'const _Tp' lvalue ParmVar 0x5e3f068 '__a' 'const _Tp &'
|-FunctionTemplateDecl 0x5e3f828 <line:240:3, line:249:5> line:243:5 min
| |-TemplateTypeParmDecl 0x5e3f438 <line:240:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5e3f4a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Compare
| `-FunctionDecl 0x5e3f788 <line:241:5, line:249:5> line:243:5 constexpr min 'const _Tp &(const _Tp &, const _Tp &, _Compare)' inline
|   |-ParmVarDecl 0x5e3f578 <col:9, col:20> col:20 referenced __a 'const _Tp &'
|   |-ParmVarDecl 0x5e3f5f0 <col:25, col:36> col:36 referenced __b 'const _Tp &'
|   |-ParmVarDecl 0x5e3f668 <col:41, col:50> col:50 referenced __comp '_Compare'
|   `-CompoundStmt 0x5e3f9a0 <line:244:5, line:249:5>
|     |-IfStmt 0x5e3f958 <line:246:7, line:247:9>
|     | |-CallExpr 0x5e3f8f8 <line:246:11, col:26> '<dependent type>'
|     | | |-DeclRefExpr 0x5e3f898 <col:11> '_Compare' lvalue ParmVar 0x5e3f668 '__comp' '_Compare'
|     | | |-DeclRefExpr 0x5e3f8b8 <col:18> 'const _Tp' lvalue ParmVar 0x5e3f5f0 '__b' 'const _Tp &'
|     | | `-DeclRefExpr 0x5e3f8d8 <col:23> 'const _Tp' lvalue ParmVar 0x5e3f578 '__a' 'const _Tp &'
|     | `-ReturnStmt 0x5e3f948 <line:247:2, col:9>
|     |   `-DeclRefExpr 0x5e3f928 <col:9> 'const _Tp' lvalue ParmVar 0x5e3f5f0 '__b' 'const _Tp &'
|     `-ReturnStmt 0x5e3f990 <line:248:7, col:14>
|       `-DeclRefExpr 0x5e3f970 <col:14> 'const _Tp' lvalue ParmVar 0x5e3f578 '__a' 'const _Tp &'
|-FunctionTemplateDecl 0x5e3fd78 <line:262:3, line:271:5> line:265:5 max
| |-TemplateTypeParmDecl 0x5e3f9c0 <line:262:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| |-TemplateTypeParmDecl 0x5e3fa38 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Compare
| `-FunctionDecl 0x5e3fcd8 <line:263:5, line:271:5> line:265:5 constexpr max 'const _Tp &(const _Tp &, const _Tp &, _Compare)' inline
|   |-ParmVarDecl 0x5e3fb08 <col:9, col:20> col:20 referenced __a 'const _Tp &'
|   |-ParmVarDecl 0x5e3fb80 <col:25, col:36> col:36 referenced __b 'const _Tp &'
|   |-ParmVarDecl 0x5e3fbf8 <col:41, col:50> col:50 referenced __comp '_Compare'
|   `-CompoundStmt 0x5e3fef0 <line:266:5, line:271:5>
|     |-IfStmt 0x5e3fea8 <line:268:7, line:269:9>
|     | |-CallExpr 0x5e3fe48 <line:268:11, col:26> '<dependent type>'
|     | | |-DeclRefExpr 0x5e3fde8 <col:11> '_Compare' lvalue ParmVar 0x5e3fbf8 '__comp' '_Compare'
|     | | |-DeclRefExpr 0x5e3fe08 <col:18> 'const _Tp' lvalue ParmVar 0x5e3fb08 '__a' 'const _Tp &'
|     | | `-DeclRefExpr 0x5e3fe28 <col:23> 'const _Tp' lvalue ParmVar 0x5e3fb80 '__b' 'const _Tp &'
|     | `-ReturnStmt 0x5e3fe98 <line:269:2, col:9>
|     |   `-DeclRefExpr 0x5e3fe78 <col:9> 'const _Tp' lvalue ParmVar 0x5e3fb80 '__b' 'const _Tp &'
|     `-ReturnStmt 0x5e3fee0 <line:270:7, col:14>
|       `-DeclRefExpr 0x5e3fec0 <col:14> 'const _Tp' lvalue ParmVar 0x5e3fb08 '__a' 'const _Tp &'
|-FunctionTemplateDecl 0x5e40118 <line:275:3, line:278:20> line:277:5 __niter_base
| |-TemplateTypeParmDecl 0x5e3ff10 <line:275:12, col:21> col:21 referenced typename depth 0 index 0 _Iterator
| `-FunctionDecl 0x5e40078 <line:276:5, line:278:20> line:277:5 __niter_base '_Iterator (_Iterator)' inline
|   |-ParmVarDecl 0x5e3ffb0 <col:18, col:28> col:28 referenced __it '_Iterator'
|   `-CompoundStmt 0x5e401a8 <line:278:5, col:20>
|     `-ReturnStmt 0x5e40198 <col:7, col:14>
|       `-DeclRefExpr 0x5e40178 <col:14> '_Iterator' lvalue ParmVar 0x5e3ffb0 '__it' '_Iterator'
|-ClassTemplateDecl 0x5e403d0 <line:286:3, line:297:5> line:287:12 __copy_move
| |-NonTypeTemplateParmDecl 0x5e401d0 <line:286:12> col:16 'bool' depth 0 index 0
| |-NonTypeTemplateParmDecl 0x5e40240 <col:18> col:22 'bool' depth 0 index 1
| |-TemplateTypeParmDecl 0x5e402a0 <col:24> col:24 typename depth 0 index 2
| |-CXXRecordDecl 0x5e40340 <line:287:5, line:297:5> line:287:12 struct __copy_move definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5e440e0 <col:5, col:12> col:12 implicit struct __copy_move
| | `-FunctionTemplateDecl 0x5e44568 <line:289:7, line:296:2> line:291:9 __copy_m
| |   |-TemplateTypeParmDecl 0x5e44170 <line:289:16, col:25> col:25 referenced typename depth 1 index 0 _II
| |   |-TemplateTypeParmDecl 0x5e441e8 <col:30, col:39> col:39 referenced typename depth 1 index 1 _OI
| |   `-CXXMethodDecl 0x5e444c8 <line:290:9, line:296:2> line:291:9 __copy_m '_OI (_II, _II, _OI)' static
| |     |-ParmVarDecl 0x5e44288 <col:18, col:22> col:22 referenced __first '_II'
| |     |-ParmVarDecl 0x5e44300 <col:31, col:35> col:35 referenced __last '_II'
| |     |-ParmVarDecl 0x5e44378 <col:43, col:47> col:47 referenced __result '_OI'
| |     `-CompoundStmt 0x5e44898 <line:292:9, line:296:2>
| |       |-ForStmt 0x5e44830 <line:293:4, line:294:19>
| |       | |-<<<NULL>>>
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x5e446a0 <line:293:11, col:22> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x5e44630 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
| |       | | |-DeclRefExpr 0x5e445f0 <col:11> '_II' lvalue ParmVar 0x5e44288 '__first' '_II'
| |       | | `-DeclRefExpr 0x5e44610 <col:22> '_II' lvalue ParmVar 0x5e44300 '__last' '_II'
| |       | |-BinaryOperator 0x5e44780 <col:30, col:50> '<dependent type>' ','
| |       | | |-UnaryOperator 0x5e446f8 <col:30, col:32> '<dependent type>' prefix '++' cannot overflow
| |       | | | `-DeclRefExpr 0x5e446d8 <col:32> '_OI' lvalue ParmVar 0x5e44378 '__result' '_OI'
| |       | | `-CStyleCastExpr 0x5e44758 <col:42, col:50> 'void' <ToVoid>
| |       | |   `-UnaryOperator 0x5e44730 <col:48, col:50> '<dependent type>' prefix '++' cannot overflow
| |       | |     `-DeclRefExpr 0x5e44710 <col:50> '_II' lvalue ParmVar 0x5e44288 '__first' '_II'
| |       | `-BinaryOperator 0x5e44810 <line:294:6, col:19> '<dependent type>' '='
| |       |   |-UnaryOperator 0x5e447c0 <col:6, col:7> '<dependent type>' prefix '*' cannot overflow
| |       |   | `-DeclRefExpr 0x5e447a0 <col:7> '_OI' lvalue ParmVar 0x5e44378 '__result' '_OI'
| |       |   `-UnaryOperator 0x5e447f8 <col:18, col:19> '<dependent type>' prefix '*' cannot overflow
| |       |     `-DeclRefExpr 0x5e447d8 <col:19> '_II' lvalue ParmVar 0x5e44288 '__first' '_II'
| |       `-ReturnStmt 0x5e44888 <line:295:4, col:11>
| |         `-DeclRefExpr 0x5e44868 <col:11> '_OI' lvalue ParmVar 0x5e44378 '__result' '_OI'
| |-ClassTemplateSpecialization 0x5e456b8 '__copy_move'
| `-ClassTemplateSpecialization 0x5e46468 '__copy_move'
|-ClassTemplatePartialSpecializationDecl 0x5e44b20 <line:300:3, line:311:5> line:301:12 struct __copy_move definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5e448b8 <line:300:12, col:21> col:21 referenced typename depth 0 index 0 _Category
| |-CXXRecordDecl 0x5e44e28 <line:301:5, col:12> col:12 implicit struct __copy_move
| `-FunctionTemplateDecl 0x5e45268 <line:303:7, line:310:2> line:305:9 __copy_m
|   |-TemplateTypeParmDecl 0x5e44eb8 <line:303:16, col:25> col:25 referenced typename depth 1 index 0 _II
|   |-TemplateTypeParmDecl 0x5e44f28 <col:30, col:39> col:39 referenced typename depth 1 index 1 _OI
|   `-CXXMethodDecl 0x5e451c8 <line:304:9, line:310:2> line:305:9 __copy_m '_OI (_II, _II, _OI)' static
|     |-ParmVarDecl 0x5e44fc8 <col:18, col:22> col:22 referenced __first '_II'
|     |-ParmVarDecl 0x5e45040 <col:31, col:35> col:35 referenced __last '_II'
|     |-ParmVarDecl 0x5e450b8 <col:43, col:47> col:47 referenced __result '_OI'
|     `-CompoundStmt 0x5e45628 <line:306:9, line:310:2>
|       |-ForStmt 0x5e455c0 <line:307:4, line:308:36>
|       | |-<<<NULL>>>
|       | |-<<<NULL>>>
|       | |-CXXOperatorCallExpr 0x5e453a0 <line:307:11, col:22> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x5e45330 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|       | | |-DeclRefExpr 0x5e452f0 <col:11> '_II' lvalue ParmVar 0x5e44fc8 '__first' '_II'
|       | | `-DeclRefExpr 0x5e45310 <col:22> '_II' lvalue ParmVar 0x5e45040 '__last' '_II'
|       | |-BinaryOperator 0x5e45480 <col:30, col:50> '<dependent type>' ','
|       | | |-UnaryOperator 0x5e453f8 <col:30, col:32> '<dependent type>' prefix '++' cannot overflow
|       | | | `-DeclRefExpr 0x5e453d8 <col:32> '_OI' lvalue ParmVar 0x5e450b8 '__result' '_OI'
|       | | `-CStyleCastExpr 0x5e45458 <col:42, col:50> 'void' <ToVoid>
|       | |   `-UnaryOperator 0x5e45430 <col:48, col:50> '<dependent type>' prefix '++' cannot overflow
|       | |     `-DeclRefExpr 0x5e45410 <col:50> '_II' lvalue ParmVar 0x5e44fc8 '__first' '_II'
|       | `-BinaryOperator 0x5e455a0 <line:308:6, col:36> '<dependent type>' '='
|       |   |-UnaryOperator 0x5e454c0 <col:6, col:7> '<dependent type>' prefix '*' cannot overflow
|       |   | `-DeclRefExpr 0x5e454a0 <col:7> '_OI' lvalue ParmVar 0x5e450b8 '__result' '_OI'
|       |   `-CallExpr 0x5e45578 <col:18, col:36> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e454f8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|       |     `-UnaryOperator 0x5e45560 <col:28, col:29> '<dependent type>' prefix '*' cannot overflow
|       |       `-DeclRefExpr 0x5e45540 <col:29> '_II' lvalue ParmVar 0x5e44fc8 '__first' '_II'
|       `-ReturnStmt 0x5e45618 <line:309:4, col:11>
|         `-DeclRefExpr 0x5e455f8 <col:11> '_OI' lvalue ParmVar 0x5e450b8 '__result' '_OI'
|-ClassTemplateSpecializationDecl 0x5e456b8 <line:314:3, line:330:5> line:315:12 struct __copy_move definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-CXXRecordDecl 0x5e45968 <col:5, col:12> col:12 implicit struct __copy_move
| `-FunctionTemplateDecl 0x5e45da8 <line:317:7, line:329:2> line:319:9 __copy_m
|   |-TemplateTypeParmDecl 0x5e459f8 <line:317:16, col:25> col:25 referenced typename depth 0 index 0 _II
|   |-TemplateTypeParmDecl 0x5e45a68 <col:30, col:39> col:39 referenced typename depth 0 index 1 _OI
|   `-CXXMethodDecl 0x5e45d08 <line:318:9, line:329:2> line:319:9 __copy_m '_OI (_II, _II, _OI)' static
|     |-ParmVarDecl 0x5e45b08 <col:18, col:22> col:22 referenced __first '_II'
|     |-ParmVarDecl 0x5e45b80 <col:31, col:35> col:35 referenced __last '_II'
|     |-ParmVarDecl 0x5e45bf8 <col:43, col:47> col:47 referenced __result '_OI'
|     `-CompoundStmt 0x5e463d0 <line:320:9, line:329:2>
|       |-DeclStmt 0x5e45f98 <line:321:4, col:68>
|       | `-TypedefDecl 0x5e45f40 <col:4, col:59> col:59 referenced _Distance 'typename iterator_traits<_II>::difference_type'
|       |   `-DependentNameType 0x5e45ed0 'typename iterator_traits<_II>::difference_type' dependent
|       |-ForStmt 0x5e46368 <line:322:4, line:327:6>
|       | |-DeclStmt 0x5e46110 <line:322:8, col:40>
|       | | `-VarDecl 0x5e45fe0 <col:8, col:33> col:18 referenced __n '_Distance':'typename iterator_traits<_II>::difference_type' cinit
|       | |   `-CXXOperatorCallExpr 0x5e460d8 <col:24, col:33> '<dependent type>'
|       | |     |-UnresolvedLookupExpr 0x5e46088 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       | |     |-DeclRefExpr 0x5e46048 <col:24> '_II' lvalue ParmVar 0x5e45b80 '__last' '_II'
|       | |     `-DeclRefExpr 0x5e46068 <col:33> '_II' lvalue ParmVar 0x5e45b08 '__first' '_II'
|       | |-<<<NULL>>>
|       | |-CXXOperatorCallExpr 0x5e461d0 <col:42, col:48> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x5e46168 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|       | | |-DeclRefExpr 0x5e46128 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x5e45fe0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
|       | | `-IntegerLiteral 0x5e46148 <col:48> 'int' 0
|       | |-UnaryOperator 0x5e46228 <col:51, col:53> '<dependent type>' prefix '--' cannot overflow
|       | | `-DeclRefExpr 0x5e46208 <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x5e45fe0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
|       | `-CompoundStmt 0x5e46340 <line:323:6, line:327:6>
|       |   |-BinaryOperator 0x5e462b0 <line:324:8, col:21> '<dependent type>' '='
|       |   | |-UnaryOperator 0x5e46260 <col:8, col:9> '<dependent type>' prefix '*' cannot overflow
|       |   | | `-DeclRefExpr 0x5e46240 <col:9> '_OI' lvalue ParmVar 0x5e45bf8 '__result' '_OI'
|       |   | `-UnaryOperator 0x5e46298 <col:20, col:21> '<dependent type>' prefix '*' cannot overflow
|       |   |   `-DeclRefExpr 0x5e46278 <col:21> '_II' lvalue ParmVar 0x5e45b08 '__first' '_II'
|       |   |-UnaryOperator 0x5e462f0 <line:325:8, col:10> '<dependent type>' prefix '++' cannot overflow
|       |   | `-DeclRefExpr 0x5e462d0 <col:10> '_II' lvalue ParmVar 0x5e45b08 '__first' '_II'
|       |   `-UnaryOperator 0x5e46328 <line:326:8, col:10> '<dependent type>' prefix '++' cannot overflow
|       |     `-DeclRefExpr 0x5e46308 <col:10> '_OI' lvalue ParmVar 0x5e45bf8 '__result' '_OI'
|       `-ReturnStmt 0x5e463c0 <line:328:4, col:11>
|         `-DeclRefExpr 0x5e463a0 <col:11> '_OI' lvalue ParmVar 0x5e45bf8 '__result' '_OI'
|-ClassTemplateSpecializationDecl 0x5e46468 <line:333:3, line:349:5> line:334:12 struct __copy_move definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-CXXRecordDecl 0x5e46718 <col:5, col:12> col:12 implicit struct __copy_move
| `-FunctionTemplateDecl 0x5e46b58 <line:336:7, line:348:2> line:338:9 __copy_m
|   |-TemplateTypeParmDecl 0x5e467a8 <line:336:16, col:25> col:25 referenced typename depth 0 index 0 _II
|   |-TemplateTypeParmDecl 0x5e46818 <col:30, col:39> col:39 referenced typename depth 0 index 1 _OI
|   `-CXXMethodDecl 0x5e46ab8 <line:337:9, line:348:2> line:338:9 __copy_m '_OI (_II, _II, _OI)' static
|     |-ParmVarDecl 0x5e468b8 <col:18, col:22> col:22 referenced __first '_II'
|     |-ParmVarDecl 0x5e46930 <col:31, col:35> col:35 referenced __last '_II'
|     |-ParmVarDecl 0x5e469a8 <col:43, col:47> col:47 referenced __result '_OI'
|     `-CompoundStmt 0x5e47210 <line:339:9, line:348:2>
|       |-DeclStmt 0x5e46d48 <line:340:4, col:68>
|       | `-TypedefDecl 0x5e46cf0 <col:4, col:59> col:59 referenced _Distance 'typename iterator_traits<_II>::difference_type'
|       |   `-DependentNameType 0x5e46c80 'typename iterator_traits<_II>::difference_type' dependent
|       |-ForStmt 0x5e471a8 <line:341:4, line:346:6>
|       | |-DeclStmt 0x5e46ec0 <line:341:8, col:40>
|       | | `-VarDecl 0x5e46d90 <col:8, col:33> col:18 referenced __n '_Distance':'typename iterator_traits<_II>::difference_type' cinit
|       | |   `-CXXOperatorCallExpr 0x5e46e88 <col:24, col:33> '<dependent type>'
|       | |     |-UnresolvedLookupExpr 0x5e46e38 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       | |     |-DeclRefExpr 0x5e46df8 <col:24> '_II' lvalue ParmVar 0x5e46930 '__last' '_II'
|       | |     `-DeclRefExpr 0x5e46e18 <col:33> '_II' lvalue ParmVar 0x5e468b8 '__first' '_II'
|       | |-<<<NULL>>>
|       | |-CXXOperatorCallExpr 0x5e46f80 <col:42, col:48> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x5e46f18 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|       | | |-DeclRefExpr 0x5e46ed8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x5e46d90 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
|       | | `-IntegerLiteral 0x5e46ef8 <col:48> 'int' 0
|       | |-UnaryOperator 0x5e46fd8 <col:51, col:53> '<dependent type>' prefix '--' cannot overflow
|       | | `-DeclRefExpr 0x5e46fb8 <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x5e46d90 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'
|       | `-CompoundStmt 0x5e47180 <line:342:6, line:346:6>
|       |   |-BinaryOperator 0x5e470f0 <line:343:8, col:38> '<dependent type>' '='
|       |   | |-UnaryOperator 0x5e47010 <col:8, col:9> '<dependent type>' prefix '*' cannot overflow
|       |   | | `-DeclRefExpr 0x5e46ff0 <col:9> '_OI' lvalue ParmVar 0x5e469a8 '__result' '_OI'
|       |   | `-CallExpr 0x5e470c8 <col:20, col:38> '<dependent type>'
|       |   |   |-UnresolvedLookupExpr 0x5e47048 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08
|       |   |   `-UnaryOperator 0x5e470b0 <col:30, col:31> '<dependent type>' prefix '*' cannot overflow
|       |   |     `-DeclRefExpr 0x5e47090 <col:31> '_II' lvalue ParmVar 0x5e468b8 '__first' '_II'
|       |   |-UnaryOperator 0x5e47130 <line:344:8, col:10> '<dependent type>' prefix '++' cannot overflow
|       |   | `-DeclRefExpr 0x5e47110 <col:10> '_II' lvalue ParmVar 0x5e468b8 '__first' '_II'
|       |   `-UnaryOperator 0x5e47168 <line:345:8, col:10> '<dependent type>' prefix '++' cannot overflow
|       |     `-DeclRefExpr 0x5e47148 <col:10> '_OI' lvalue ParmVar 0x5e469a8 '__result' '_OI'
|       `-ReturnStmt 0x5e47200 <line:347:4, col:11>
|         `-DeclRefExpr 0x5e471e0 <col:11> '_OI' lvalue ParmVar 0x5e469a8 '__result' '_OI'
|-ClassTemplatePartialSpecializationDecl 0x5e474a0 <line:352:3, line:371:5> line:353:12 struct __copy_move definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument expr
| | `-DeclRefExpr 0x5e472c0 <col:24> 'bool' NonTypeTemplateParm 0x5e47248 '_IsMove' 'bool'
| |-TemplateArgument integral 1
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-NonTypeTemplateParmDecl 0x5e47248 <line:352:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| |-CXXRecordDecl 0x5e47778 <line:353:5, col:12> col:12 implicit struct __copy_move
| `-FunctionTemplateDecl 0x5e47c08 <line:355:7, line:370:2> line:357:9 __copy_m
|   |-TemplateTypeParmDecl 0x5e47808 <line:355:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
|   `-CXXMethodDecl 0x5e47b68 <line:356:9, line:370:2> line:357:9 __copy_m '_Tp *(const _Tp *, const _Tp *, _Tp *)' static
|     |-ParmVarDecl 0x5e478f8 <col:18, col:29> col:29 referenced __first 'const _Tp *'
|     |-ParmVarDecl 0x5e47970 <col:38, col:49> col:49 referenced __last 'const _Tp *'
|     |-ParmVarDecl 0x5e47a18 <col:57, col:62> col:62 referenced __result '_Tp *'
|     `-CompoundStmt 0x5e49418 <line:358:9, line:370:2>
|       |-DeclStmt 0x5e48090 <line:360:4, line:362:33>
|       | `-TypeAliasDecl 0x5e48030 <line:360:4, line:362:32> line:360:10 referenced __assignable 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'
|       |   `-TemplateSpecializationType 0x5e47f00 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >' dependent conditional
|       |     |-TemplateArgument expr
|       |     | `-DeclRefExpr 0x5e47c90 <col:37> 'bool' NonTypeTemplateParm 0x5e47248 '_IsMove' 'bool'
|       |     |-TemplateArgument type 'is_move_assignable<_Tp>'
|       |     `-TemplateArgument type 'is_copy_assignable<_Tp>'
|       |-DeclStmt 0x5e48d28 <line:364:4, col:72>
|       | `-StaticAssertDecl 0x5e48ce8 <col:4, col:71> col:4
|       |   |-DependentScopeDeclRefExpr 0x5e48c00 <col:19, col:39> '<dependent type>' lvalue
|       |   `-StringLiteral 0x5e48cb8 <col:46> 'const char [23]' lvalue "type is not assignable"
|       |-DeclStmt 0x5e48e80 <line:366:4, col:43>
|       | `-VarDecl 0x5e48d50 <col:4, col:36> col:20 referenced _Num 'const std::ptrdiff_t':'const long' cinit
|       |   `-CXXOperatorCallExpr 0x5e48e48 <col:27, col:36> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e48df8 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       |     |-DeclRefExpr 0x5e48db8 <col:27> 'const _Tp *' lvalue ParmVar 0x5e47970 '__last' 'const _Tp *'
|       |     `-DeclRefExpr 0x5e48dd8 <col:36> 'const _Tp *' lvalue ParmVar 0x5e478f8 '__first' 'const _Tp *'
|       |-IfStmt 0x5e49328 <line:367:4, line:368:61>
|       | |-ImplicitCastExpr 0x5e48ed0 <line:367:8> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x5e48eb8 <col:8> 'std::ptrdiff_t':'long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x5e48e98 <col:8> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e48d50 '_Num' 'const std::ptrdiff_t':'const long'
|       | `-CallExpr 0x5e492f0 <line:368:6, col:61> '<dependent type>'
|       |   |-DeclRefExpr 0x5e491f0 <col:6> '<builtin fn type>' Function 0x5e48fc0 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
|       |   |-DeclRefExpr 0x5e49210 <col:24> '_Tp *' lvalue ParmVar 0x5e47a18 '__result' '_Tp *'
|       |   |-DeclRefExpr 0x5e49230 <col:34> 'const _Tp *' lvalue ParmVar 0x5e478f8 '__first' 'const _Tp *'
|       |   `-BinaryOperator 0x5e492d0 <col:43, col:57> 'unsigned long' '*'
|       |     |-UnaryExprOrTypeTraitExpr 0x5e49260 <col:43, col:53> 'unsigned long' sizeof '_Tp'
|       |     `-ImplicitCastExpr 0x5e492b8 <col:57> 'unsigned long' <IntegralCast>
|       |       `-ImplicitCastExpr 0x5e492a0 <col:57> 'std::ptrdiff_t':'long' <LValueToRValue>
|       |         `-DeclRefExpr 0x5e49280 <col:57> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e48d50 '_Num' 'const std::ptrdiff_t':'const long'
|       `-ReturnStmt 0x5e49408 <line:369:4, col:22>
|         `-CXXOperatorCallExpr 0x5e493d0 <col:11, col:22> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e49380 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5df3ee8 0x5e1c568
|           |-DeclRefExpr 0x5e49340 <col:11> '_Tp *' lvalue ParmVar 0x5e47a18 '__result' '_Tp *'
|           `-DeclRefExpr 0x5e49360 <col:22> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e48d50 '_Num' 'const std::ptrdiff_t':'const long'
|-FunctionTemplateDecl 0x5e49898 <line:373:3, line:387:5> line:375:5 __copy_move_a
| |-NonTypeTemplateParmDecl 0x5e49460 <line:373:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e494c0 <col:26, col:35> col:35 referenced typename depth 0 index 1 _II
| |-TemplateTypeParmDecl 0x5e49538 <col:40, col:49> col:49 referenced typename depth 0 index 2 _OI
| `-FunctionDecl 0x5e497f8 <line:374:5, line:387:5> line:375:5 __copy_move_a '_OI (_II, _II, _OI)' inline
|   |-ParmVarDecl 0x5e495e0 <col:19, col:23> col:23 referenced __first '_II'
|   |-ParmVarDecl 0x5e49658 <col:32, col:36> col:36 referenced __last '_II'
|   |-ParmVarDecl 0x5e496d0 <col:44, col:48> col:48 referenced __result '_OI'
|   `-CompoundStmt 0x5e4a7a0 <line:376:5, line:387:5>
|     |-DeclStmt 0x5e49b08 <line:377:7, col:68>
|     | `-TypedefDecl 0x5e49ab0 <col:7, col:57> col:57 referenced _ValueTypeI 'typename iterator_traits<_II>::value_type'
|     |   `-DependentNameType 0x5e49a40 'typename iterator_traits<_II>::value_type' dependent
|     |-DeclStmt 0x5e49d18 <line:378:7, col:68>
|     | `-TypedefDecl 0x5e49cc0 <col:7, col:57> col:57 referenced _ValueTypeO 'typename iterator_traits<_OI>::value_type'
|     |   `-DependentNameType 0x5e49c50 'typename iterator_traits<_OI>::value_type' dependent
|     |-DeclStmt 0x5e49ec8 <line:379:7, col:73>
|     | `-TypedefDecl 0x5e49e70 <col:7, col:64> col:64 referenced _Category 'typename iterator_traits<_II>::iterator_category'
|     |   `-DependentNameType 0x5e49e00 'typename iterator_traits<_II>::iterator_category' dependent
|     |-DeclStmt 0x5e4a468 <line:380:7, line:383:58>
|     | `-VarDecl 0x5e49ef0 <line:380:7, line:383:57> line:380:18 referenced __simple 'const bool' cinit
|     |   `-ParenExpr 0x5e4a448 <col:29, line:383:57> '<dependent type>'
|     |     `-BinaryOperator 0x5e4a428 <line:380:30, line:383:50> '<dependent type>' '&&'
|     |       |-BinaryOperator 0x5e4a248 <line:380:30, line:382:45> '<dependent type>' '&&'
|     |       | |-BinaryOperator 0x5e4a0e8 <line:380:30, line:381:45> '<dependent type>' '&&'
|     |       | | |-TypeTraitExpr 0x5e49f90 <line:380:30, col:54> 'bool'
|     |       | | `-DependentScopeDeclRefExpr 0x5e4a0b0 <line:381:26, col:45> '<dependent type>' lvalue
|     |       | `-DependentScopeDeclRefExpr 0x5e4a210 <line:382:26, col:45> '<dependent type>' lvalue
|     |       `-DependentScopeDeclRefExpr 0x5e4a3f0 <line:383:12, col:50> '<dependent type>' lvalue
|     `-ReturnStmt 0x5e4a790 <line:385:7, line:386:70>
|       `-CallExpr 0x5e4a758 <line:385:14, line:386:70> '<dependent type>'
|         |-DependentScopeDeclRefExpr 0x5e4a6c0 <line:385:14, line:386:36> '<dependent type>' lvalue
|         |-DeclRefExpr 0x5e4a6f8 <col:45> '_II' lvalue ParmVar 0x5e495e0 '__first' '_II'
|         |-DeclRefExpr 0x5e4a718 <col:54> '_II' lvalue ParmVar 0x5e49658 '__last' '_II'
|         `-DeclRefExpr 0x5e4a738 <col:62> '_OI' lvalue ParmVar 0x5e496d0 '__result' '_OI'
|-ClassTemplateDecl 0x5e4a8f0 prev 0x5bd5a90 <line:391:3, line:392:12> col:12 char_traits
| |-TemplateTypeParmDecl 0x5e4a7d8 <line:391:12, col:21> col:21 typename depth 0 index 0 _CharT
| |-CXXRecordDecl 0x5e4a860 prev 0x5bd5a00 <line:392:5, col:12> col:12 struct char_traits
| |-ClassTemplateSpecialization 0x5bd5c98 'char_traits'
| |-ClassTemplateSpecialization 0x5bd5e70 'char_traits'
| |-ClassTemplateSpecialization 0x5bd6040 'char_traits'
| `-ClassTemplateSpecialization 0x5bd6210 'char_traits'
|-ClassTemplateDecl 0x5e4aad8 prev 0x5c05728 <line:394:3, line:395:11> col:11 istreambuf_iterator
| |-TemplateTypeParmDecl 0x5e4a948 <line:394:12, col:21> col:21 typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5e4a9b8 <col:29, col:38> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |   `-inherited from TemplateTypeParm 0x5c05600 '_Traits'
| `-CXXRecordDecl 0x5e4aa48 prev 0x5c05698 <line:395:5, col:11> col:11 class istreambuf_iterator
|-ClassTemplateDecl 0x5e4acc8 prev 0x5c06c58 <line:397:3, line:398:11> col:11 ostreambuf_iterator
| |-TemplateTypeParmDecl 0x5e4ab30 <line:397:12, col:21> col:21 typename depth 0 index 0 _CharT
| |-TemplateTypeParmDecl 0x5e4aba8 <col:29, col:38> col:38 typename depth 0 index 1 _Traits
| | `-TemplateArgument type 'char_traits<_CharT>'
| |   `-inherited from TemplateTypeParm 0x5c06b30 '_Traits'
| `-CXXRecordDecl 0x5e4ac38 prev 0x5c06bc8 <line:398:5, col:11> col:11 class ostreambuf_iterator
|-FunctionTemplateDecl 0x5e4b868 <line:400:3, line:404:55> line:403:5 __copy_move_a2
| |-NonTypeTemplateParmDecl 0x5e4ad30 <line:400:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e4ad90 <col:26, col:35> col:35 referenced typename depth 0 index 1 _CharT
| `-FunctionDecl 0x5e4b7c8 <line:401:5, line:404:55> line:403:5 __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'
|   |-ParmVarDecl 0x5e4b408 <col:20, col:26> col:27 '_CharT *'
|   |-ParmVarDecl 0x5e4b480 <col:29, col:35> col:36 '_CharT *'
|   `-ParmVarDecl 0x5e4b698 <line:404:6, col:54> col:55 'ostreambuf_iterator<_CharT, char_traits<_CharT> >'
|-FunctionTemplateDecl 0x5e4c288 <line:406:3, line:410:55> line:409:5 __copy_move_a2
| |-NonTypeTemplateParmDecl 0x5e4b8e8 <line:406:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e4b948 <col:26, col:35> col:35 referenced typename depth 0 index 1 _CharT
| `-FunctionDecl 0x5e4c1e8 <line:407:5, line:410:55> line:409:5 __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type (const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >)'
|   |-ParmVarDecl 0x5e4be28 <col:20, col:32> col:33 'const _CharT *'
|   |-ParmVarDecl 0x5e4bea0 <col:35, col:47> col:48 'const _CharT *'
|   `-ParmVarDecl 0x5e4c0b8 <line:410:6, col:54> col:55 'ostreambuf_iterator<_CharT, char_traits<_CharT> >'
|-FunctionTemplateDecl 0x5e4cd88 <line:412:3, line:416:64> line:415:5 __copy_move_a2
| |-NonTypeTemplateParmDecl 0x5e4c308 <line:412:12, col:17> col:17 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e4c368 <col:26, col:35> col:35 referenced typename depth 0 index 1 _CharT
| `-FunctionDecl 0x5e4cce8 <line:413:5, line:416:64> line:415:5 __copy_move_a2 'typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type (istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *)'
|   |-ParmVarDecl 0x5e4c918 <col:20, col:68> col:69 'istreambuf_iterator<_CharT, char_traits<_CharT> >'
|   |-ParmVarDecl 0x5e4cb28 <line:416:6, col:54> col:55 'istreambuf_iterator<_CharT, char_traits<_CharT> >'
|   `-ParmVarDecl 0x5e4cbb0 <col:57, col:63> col:64 '_CharT *'
|-FunctionTemplateDecl 0x5e4d1f8 <line:418:3, line:425:5> line:420:5 __copy_move_a2
| |-NonTypeTemplateParmDecl 0x5e4ce08 <line:418:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e4ce68 <col:26, col:35> col:35 referenced typename depth 0 index 1 _II
| |-TemplateTypeParmDecl 0x5e4ced8 <col:40, col:49> col:49 referenced typename depth 0 index 2 _OI
| `-FunctionDecl 0x5e4d158 <line:419:5, line:425:5> line:420:5 __copy_move_a2 '_OI (_II, _II, _OI)' inline
|   |-ParmVarDecl 0x5e4cf80 <col:20, col:24> col:24 referenced __first '_II'
|   |-ParmVarDecl 0x5e4cff8 <col:33, col:37> col:37 referenced __last '_II'
|   |-ParmVarDecl 0x5e4d070 <col:45, col:49> col:49 referenced __result '_OI'
|   `-CompoundStmt 0x5e4d620 <line:421:5, line:425:5>
|     `-ReturnStmt 0x5e4d610 <line:422:7, line:424:39>
|       `-CXXUnresolvedConstructExpr 0x5e4d5e8 <line:422:14, line:424:39> '_OI' '_OI'
|         `-CallExpr 0x5e4d5b0 <line:422:18, line:424:38> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e4d2d0 <line:422:18, col:44> '<dependent type>' lvalue (no ADL) = '__copy_move_a' 0x5e49898
|           |-CallExpr 0x5e4d3f8 <col:46, col:71> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e4d378 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           | `-DeclRefExpr 0x5e4d3d8 <col:64> '_II' lvalue ParmVar 0x5e4cf80 '__first' '_II'
|           |-CallExpr 0x5e4d4c0 <line:423:11, col:35> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e4d440 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           | `-DeclRefExpr 0x5e4d4a0 <col:29> '_II' lvalue ParmVar 0x5e4cff8 '__last' '_II'
|           `-CallExpr 0x5e4d588 <line:424:11, col:37> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e4d508 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|             `-DeclRefExpr 0x5e4d568 <col:29> '_OI' lvalue ParmVar 0x5e4d070 '__result' '_OI'
|-FunctionTemplateDecl 0x5e4d9b8 <line:444:3, line:457:5> line:446:5 copy
| |-TemplateTypeParmDecl 0x5e4d638 <line:444:12, col:21> col:21 referenced typename depth 0 index 0 _II
| |-TemplateTypeParmDecl 0x5e4d6a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _OI
| `-FunctionDecl 0x5e4d918 <line:445:5, line:457:5> line:446:5 copy '_OI (_II, _II, _OI)' inline
|   |-ParmVarDecl 0x5e4d748 <col:10, col:14> col:14 referenced __first '_II'
|   |-ParmVarDecl 0x5e4d7c0 <col:23, col:27> col:27 referenced __last '_II'
|   |-ParmVarDecl 0x5e4d838 <col:35, col:39> col:39 referenced __result '_OI'
|   `-CompoundStmt 0x5e4de48 <line:447:5, line:457:5>
|     |-NullStmt 0x5e4da28 <line:452:54>
|     `-ReturnStmt 0x5e4de38 <line:454:7, line:456:18>
|       `-ParenExpr 0x5e4de18 <line:454:14, line:456:18> '<dependent type>'
|         `-CallExpr 0x5e4dde0 <line:454:15, line:456:17> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e4dba0 <line:454:15, col:67> '<dependent type>' lvalue (no ADL) = '__copy_move_a2' 0x5e4b868 0x5e4c288 0x5e4cd88 0x5e4d1f8
|           |-CallExpr 0x5e4dcd8 <line:455:9, col:34> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e4dc60 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|           | `-DeclRefExpr 0x5e4dcb8 <col:27> '_II' lvalue ParmVar 0x5e4d748 '__first' '_II'
|           |-CallExpr 0x5e4dd98 <col:37, col:61> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e4dd20 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|           | `-DeclRefExpr 0x5e4dd78 <col:55> '_II' lvalue ParmVar 0x5e4d7c0 '__last' '_II'
|           `-DeclRefExpr 0x5e4ddc0 <line:456:9> '_OI' lvalue ParmVar 0x5e4d838 '__result' '_OI'
|-FunctionTemplateDecl 0x5e4e1e8 <line:477:3, line:489:5> line:479:5 move
| |-TemplateTypeParmDecl 0x5e4de68 <line:477:12, col:21> col:21 referenced typename depth 0 index 0 _II
| |-TemplateTypeParmDecl 0x5e4ded8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _OI
| `-FunctionDecl 0x5e4e148 <line:478:5, line:489:5> line:479:5 move '_OI (_II, _II, _OI)' inline
|   |-ParmVarDecl 0x5e4df78 <col:10, col:14> col:14 referenced __first '_II'
|   |-ParmVarDecl 0x5e4dff0 <col:23, col:27> col:27 referenced __last '_II'
|   |-ParmVarDecl 0x5e4e068 <col:35, col:39> col:39 referenced __result '_OI'
|   `-CompoundStmt 0x5e4e540 <line:480:5, line:489:5>
|     |-NullStmt 0x5e4e258 <line:485:54>
|     `-ReturnStmt 0x5e4e530 <line:487:7, line:488:47>
|       `-CallExpr 0x5e4e4f8 <line:487:14, line:488:47> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e4e2b8 <line:487:14, col:38> '<overloaded function type>' lvalue (no ADL) = '__copy_move_a2' 0x5e4b868 0x5e4c288 0x5e4cd88 0x5e4d1f8
|         |-CallExpr 0x5e4e3f0 <col:40, col:65> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e4e378 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|         | `-DeclRefExpr 0x5e4e3d0 <col:58> '_II' lvalue ParmVar 0x5e4df78 '__first' '_II'
|         |-CallExpr 0x5e4e4b0 <line:488:12, col:36> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e4e438 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|         | `-DeclRefExpr 0x5e4e490 <col:30> '_II' lvalue ParmVar 0x5e4dff0 '__last' '_II'
|         `-DeclRefExpr 0x5e4e4d8 <col:39> '_OI' lvalue ParmVar 0x5e4e068 '__result' '_OI'
|-ClassTemplateDecl 0x5e4e770 <line:496:3, line:507:5> line:497:12 __copy_move_backward
| |-NonTypeTemplateParmDecl 0x5e4e570 <line:496:12> col:16 'bool' depth 0 index 0
| |-NonTypeTemplateParmDecl 0x5e4e5e0 <col:18> col:22 'bool' depth 0 index 1
| |-TemplateTypeParmDecl 0x5e4e640 <col:24> col:24 typename depth 0 index 2
| |-CXXRecordDecl 0x5e4e6e0 <line:497:5, line:507:5> line:497:12 struct __copy_move_backward definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5e4ea60 <col:5, col:12> col:12 implicit struct __copy_move_backward
| | `-FunctionTemplateDecl 0x5e4eea8 <line:499:7, line:506:2> line:501:9 __copy_move_b
| |   |-TemplateTypeParmDecl 0x5e4eaf0 <line:499:16, col:25> col:25 referenced typename depth 1 index 0 _BI1
| |   |-TemplateTypeParmDecl 0x5e4eb68 <col:31, col:40> col:40 referenced typename depth 1 index 1 _BI2
| |   `-CXXMethodDecl 0x5e4ee08 <line:500:9, line:506:2> line:501:9 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
| |     |-ParmVarDecl 0x5e4ec08 <col:23, col:28> col:28 referenced __first '_BI1'
| |     |-ParmVarDecl 0x5e4ec80 <col:37, col:42> col:42 referenced __last '_BI1'
| |     |-ParmVarDecl 0x5e4ecf8 <col:50, col:55> col:55 referenced __result '_BI2'
| |     `-CompoundStmt 0x5e4f120 <line:502:9, line:506:2>
| |       |-WhileStmt 0x5e4f0d8 <line:503:4, line:504:23>
| |       | |-CXXOperatorCallExpr 0x5e4efe0 <line:503:11, col:22> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x5e4ef70 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
| |       | | |-DeclRefExpr 0x5e4ef30 <col:11> '_BI1' lvalue ParmVar 0x5e4ec08 '__first' '_BI1'
| |       | | `-DeclRefExpr 0x5e4ef50 <col:22> '_BI1' lvalue ParmVar 0x5e4ec80 '__last' '_BI1'
| |       | `-BinaryOperator 0x5e4f0b8 <line:504:6, col:23> '<dependent type>' '='
| |       |   |-UnaryOperator 0x5e4f050 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
| |       |   | `-UnaryOperator 0x5e4f038 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
| |       |   |   `-DeclRefExpr 0x5e4f018 <col:9> '_BI2' lvalue ParmVar 0x5e4ecf8 '__result' '_BI2'
| |       |   `-UnaryOperator 0x5e4f0a0 <col:20, col:23> '<dependent type>' prefix '*' cannot overflow
| |       |     `-UnaryOperator 0x5e4f088 <col:21, col:23> '<dependent type>' prefix '--' cannot overflow
| |       |       `-DeclRefExpr 0x5e4f068 <col:23> '_BI1' lvalue ParmVar 0x5e4ec80 '__last' '_BI1'
| |       `-ReturnStmt 0x5e4f110 <line:505:4, col:11>
| |         `-DeclRefExpr 0x5e4f0f0 <col:11> '_BI2' lvalue ParmVar 0x5e4ecf8 '__result' '_BI2'
| |-ClassTemplateSpecialization 0x5e4fe98 '__copy_move_backward'
| `-ClassTemplateSpecialization 0x5e50bb0 '__copy_move_backward'
|-ClassTemplatePartialSpecializationDecl 0x5e4f3b0 <line:510:3, line:521:5> line:511:12 struct __copy_move_backward definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateArgument type 'type-parameter-0-0'
| |-TemplateTypeParmDecl 0x5e4f140 <line:510:12, col:21> col:21 referenced typename depth 0 index 0 _Category
| |-CXXRecordDecl 0x5e4f6b8 <line:511:5, col:12> col:12 implicit struct __copy_move_backward
| `-FunctionTemplateDecl 0x5e4faf8 <line:513:7, line:520:2> line:515:9 __copy_move_b
|   |-TemplateTypeParmDecl 0x5e4f748 <line:513:16, col:25> col:25 referenced typename depth 1 index 0 _BI1
|   |-TemplateTypeParmDecl 0x5e4f7b8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _BI2
|   `-CXXMethodDecl 0x5e4fa58 <line:514:9, line:520:2> line:515:9 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
|     |-ParmVarDecl 0x5e4f858 <col:23, col:28> col:28 referenced __first '_BI1'
|     |-ParmVarDecl 0x5e4f8d0 <col:37, col:42> col:42 referenced __last '_BI1'
|     |-ParmVarDecl 0x5e4f948 <col:50, col:55> col:55 referenced __result '_BI2'
|     `-CompoundStmt 0x5e4fe08 <line:516:9, line:520:2>
|       |-WhileStmt 0x5e4fdc0 <line:517:4, line:518:39>
|       | |-CXXOperatorCallExpr 0x5e4fc30 <line:517:11, col:22> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x5e4fbc0 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|       | | |-DeclRefExpr 0x5e4fb80 <col:11> '_BI1' lvalue ParmVar 0x5e4f858 '__first' '_BI1'
|       | | `-DeclRefExpr 0x5e4fba0 <col:22> '_BI1' lvalue ParmVar 0x5e4f8d0 '__last' '_BI1'
|       | `-BinaryOperator 0x5e4fda0 <line:518:6, col:39> '<dependent type>' '='
|       |   |-UnaryOperator 0x5e4fca0 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
|       |   | `-UnaryOperator 0x5e4fc88 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
|       |   |   `-DeclRefExpr 0x5e4fc68 <col:9> '_BI2' lvalue ParmVar 0x5e4f948 '__result' '_BI2'
|       |   `-CallExpr 0x5e4fd78 <col:20, col:39> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e4fcd8 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08 0x5e4e1e8
|       |     `-UnaryOperator 0x5e4fd60 <col:30, col:33> '<dependent type>' prefix '*' cannot overflow
|       |       `-UnaryOperator 0x5e4fd48 <col:31, col:33> '<dependent type>' prefix '--' cannot overflow
|       |         `-DeclRefExpr 0x5e4fd28 <col:33> '_BI1' lvalue ParmVar 0x5e4f8d0 '__last' '_BI1'
|       `-ReturnStmt 0x5e4fdf8 <line:519:4, col:11>
|         `-DeclRefExpr 0x5e4fdd8 <col:11> '_BI2' lvalue ParmVar 0x5e4f948 '__result' '_BI2'
|-ClassTemplateSpecializationDecl 0x5e4fe98 <line:524:3, line:536:5> line:525:12 struct __copy_move_backward definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 0
| |-TemplateArgument integral 0
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-CXXRecordDecl 0x5e50148 <col:5, col:12> col:12 implicit struct __copy_move_backward
| `-FunctionTemplateDecl 0x5e50588 <line:527:7, line:535:2> line:529:9 __copy_move_b
|   |-TemplateTypeParmDecl 0x5e501d8 <line:527:16, col:25> col:25 referenced typename depth 0 index 0 _BI1
|   |-TemplateTypeParmDecl 0x5e50248 <col:31, col:40> col:40 referenced typename depth 0 index 1 _BI2
|   `-CXXMethodDecl 0x5e504e8 <line:528:9, line:535:2> line:529:9 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
|     |-ParmVarDecl 0x5e502e8 <col:23, col:28> col:28 referenced __first '_BI1'
|     |-ParmVarDecl 0x5e50360 <col:37, col:42> col:42 referenced __last '_BI1'
|     |-ParmVarDecl 0x5e503d8 <col:50, col:55> col:55 referenced __result '_BI2'
|     `-CompoundStmt 0x5e50ae8 <line:530:9, line:535:2>
|       |-DeclStmt 0x5e50788 <line:531:4, col:55>
|       | `-VarDecl 0x5e50720 <col:4, col:52> col:52 referenced __n 'typename iterator_traits<_BI1>::difference_type'
|       |-ForStmt 0x5e50a80 <line:532:4, line:533:23>
|       | |-BinaryOperator 0x5e50888 <line:532:9, col:24> '<dependent type>' '='
|       | | |-DeclRefExpr 0x5e507a0 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x5e50720 '__n' 'typename iterator_traits<_BI1>::difference_type'
|       | | `-CXXOperatorCallExpr 0x5e50850 <col:15, col:24> '<dependent type>'
|       | |   |-UnresolvedLookupExpr 0x5e50800 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       | |   |-DeclRefExpr 0x5e507c0 <col:15> '_BI1' lvalue ParmVar 0x5e50360 '__last' '_BI1'
|       | |   `-DeclRefExpr 0x5e507e0 <col:24> '_BI1' lvalue ParmVar 0x5e502e8 '__first' '_BI1'
|       | |-<<<NULL>>>
|       | |-CXXOperatorCallExpr 0x5e50950 <col:33, col:39> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x5e508e8 <col:37> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|       | | |-DeclRefExpr 0x5e508a8 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x5e50720 '__n' 'typename iterator_traits<_BI1>::difference_type'
|       | | `-IntegerLiteral 0x5e508c8 <col:39> 'int' 0
|       | |-UnaryOperator 0x5e509a8 <col:42, col:44> '<dependent type>' prefix '--' cannot overflow
|       | | `-DeclRefExpr 0x5e50988 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x5e50720 '__n' 'typename iterator_traits<_BI1>::difference_type'
|       | `-BinaryOperator 0x5e50a60 <line:533:6, col:23> '<dependent type>' '='
|       |   |-UnaryOperator 0x5e509f8 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
|       |   | `-UnaryOperator 0x5e509e0 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
|       |   |   `-DeclRefExpr 0x5e509c0 <col:9> '_BI2' lvalue ParmVar 0x5e503d8 '__result' '_BI2'
|       |   `-UnaryOperator 0x5e50a48 <col:20, col:23> '<dependent type>' prefix '*' cannot overflow
|       |     `-UnaryOperator 0x5e50a30 <col:21, col:23> '<dependent type>' prefix '--' cannot overflow
|       |       `-DeclRefExpr 0x5e50a10 <col:23> '_BI1' lvalue ParmVar 0x5e50360 '__last' '_BI1'
|       `-ReturnStmt 0x5e50ad8 <line:534:4, col:11>
|         `-DeclRefExpr 0x5e50ab8 <col:11> '_BI2' lvalue ParmVar 0x5e503d8 '__result' '_BI2'
|-ClassTemplateSpecializationDecl 0x5e50bb0 <line:539:3, line:551:5> line:540:12 struct __copy_move_backward definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-TemplateArgument integral 0
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-CXXRecordDecl 0x5e50e58 <col:5, col:12> col:12 implicit struct __copy_move_backward
| `-FunctionTemplateDecl 0x5e51298 <line:542:7, line:550:2> line:544:9 __copy_move_b
|   |-TemplateTypeParmDecl 0x5e50ee8 <line:542:16, col:25> col:25 referenced typename depth 0 index 0 _BI1
|   |-TemplateTypeParmDecl 0x5e50f58 <col:31, col:40> col:40 referenced typename depth 0 index 1 _BI2
|   `-CXXMethodDecl 0x5e511f8 <line:543:9, line:550:2> line:544:9 __copy_move_b '_BI2 (_BI1, _BI1, _BI2)' static
|     |-ParmVarDecl 0x5e50ff8 <col:23, col:28> col:28 referenced __first '_BI1'
|     |-ParmVarDecl 0x5e51070 <col:37, col:42> col:42 referenced __last '_BI1'
|     |-ParmVarDecl 0x5e510e8 <col:50, col:55> col:55 referenced __result '_BI2'
|     `-CompoundStmt 0x5e51890 <line:545:9, line:550:2>
|       |-DeclStmt 0x5e51498 <line:546:4, col:55>
|       | `-VarDecl 0x5e51430 <col:4, col:52> col:52 referenced __n 'typename iterator_traits<_BI1>::difference_type'
|       |-ForStmt 0x5e51828 <line:547:4, line:548:39>
|       | |-BinaryOperator 0x5e51598 <line:547:9, col:24> '<dependent type>' '='
|       | | |-DeclRefExpr 0x5e514b0 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x5e51430 '__n' 'typename iterator_traits<_BI1>::difference_type'
|       | | `-CXXOperatorCallExpr 0x5e51560 <col:15, col:24> '<dependent type>'
|       | |   |-UnresolvedLookupExpr 0x5e51510 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       | |   |-DeclRefExpr 0x5e514d0 <col:15> '_BI1' lvalue ParmVar 0x5e51070 '__last' '_BI1'
|       | |   `-DeclRefExpr 0x5e514f0 <col:24> '_BI1' lvalue ParmVar 0x5e50ff8 '__first' '_BI1'
|       | |-<<<NULL>>>
|       | |-CXXOperatorCallExpr 0x5e51660 <col:33, col:39> '<dependent type>'
|       | | |-UnresolvedLookupExpr 0x5e515f8 <col:37> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|       | | |-DeclRefExpr 0x5e515b8 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x5e51430 '__n' 'typename iterator_traits<_BI1>::difference_type'
|       | | `-IntegerLiteral 0x5e515d8 <col:39> 'int' 0
|       | |-UnaryOperator 0x5e516b8 <col:42, col:44> '<dependent type>' prefix '--' cannot overflow
|       | | `-DeclRefExpr 0x5e51698 <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x5e51430 '__n' 'typename iterator_traits<_BI1>::difference_type'
|       | `-BinaryOperator 0x5e51808 <line:548:6, col:39> '<dependent type>' '='
|       |   |-UnaryOperator 0x5e51708 <col:6, col:9> '<dependent type>' prefix '*' cannot overflow
|       |   | `-UnaryOperator 0x5e516f0 <col:7, col:9> '<dependent type>' prefix '--' cannot overflow
|       |   |   `-DeclRefExpr 0x5e516d0 <col:9> '_BI2' lvalue ParmVar 0x5e510e8 '__result' '_BI2'
|       |   `-CallExpr 0x5e517e0 <col:20, col:39> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e51740 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = 'move' 0x5d50b08 0x5e4e1e8
|       |     `-UnaryOperator 0x5e517c8 <col:30, col:33> '<dependent type>' prefix '*' cannot overflow
|       |       `-UnaryOperator 0x5e517b0 <col:31, col:33> '<dependent type>' prefix '--' cannot overflow
|       |         `-DeclRefExpr 0x5e51790 <col:33> '_BI1' lvalue ParmVar 0x5e51070 '__last' '_BI1'
|       `-ReturnStmt 0x5e51880 <line:549:4, col:11>
|         `-DeclRefExpr 0x5e51860 <col:11> '_BI2' lvalue ParmVar 0x5e510e8 '__result' '_BI2'
|-ClassTemplatePartialSpecializationDecl 0x5e51b20 <line:554:3, line:573:5> line:555:12 struct __copy_move_backward definition
| |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument expr
| | `-DeclRefExpr 0x5e51940 <col:33> 'bool' NonTypeTemplateParm 0x5e518c8 '_IsMove' 'bool'
| |-TemplateArgument integral 1
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-NonTypeTemplateParmDecl 0x5e518c8 <line:554:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| |-CXXRecordDecl 0x5e51df8 <line:555:5, col:12> col:12 implicit struct __copy_move_backward
| `-FunctionTemplateDecl 0x5e52218 <line:557:7, line:572:2> line:559:9 __copy_move_b
|   |-TemplateTypeParmDecl 0x5e51e88 <line:557:16, col:25> col:25 referenced typename depth 1 index 0 _Tp
|   `-CXXMethodDecl 0x5e52178 <line:558:9, line:572:2> line:559:9 __copy_move_b '_Tp *(const _Tp *, const _Tp *, _Tp *)' static
|     |-ParmVarDecl 0x5e51f48 <col:23, col:34> col:34 referenced __first 'const _Tp *'
|     |-ParmVarDecl 0x5e51fc0 <col:43, col:54> col:54 referenced __last 'const _Tp *'
|     |-ParmVarDecl 0x5e52068 <col:62, col:67> col:67 referenced __result '_Tp *'
|     `-CompoundStmt 0x5e52ba0 <line:560:9, line:572:2>
|       |-DeclStmt 0x5e525b0 <line:562:4, line:564:33>
|       | `-TypeAliasDecl 0x5e52550 <line:562:4, line:564:32> line:562:10 referenced __assignable 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >'
|       |   `-TemplateSpecializationType 0x5e52420 'conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp> >' dependent conditional
|       |     |-TemplateArgument expr
|       |     | `-DeclRefExpr 0x5e522a0 <col:37> 'bool' NonTypeTemplateParm 0x5e518c8 '_IsMove' 'bool'
|       |     |-TemplateArgument type 'is_move_assignable<_Tp>'
|       |     `-TemplateArgument type 'is_copy_assignable<_Tp>'
|       |-DeclStmt 0x5e52710 <line:566:4, col:72>
|       | `-StaticAssertDecl 0x5e526d0 <col:4, col:71> col:4
|       |   |-DependentScopeDeclRefExpr 0x5e52668 <col:19, col:39> '<dependent type>' lvalue
|       |   `-StringLiteral 0x5e526a0 <col:46> 'const char [23]' lvalue "type is not assignable"
|       |-DeclStmt 0x5e52868 <line:568:4, col:43>
|       | `-VarDecl 0x5e52738 <col:4, col:36> col:20 referenced _Num 'const std::ptrdiff_t':'const long' cinit
|       |   `-CXXOperatorCallExpr 0x5e52830 <col:27, col:36> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e527e0 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       |     |-DeclRefExpr 0x5e527a0 <col:27> 'const _Tp *' lvalue ParmVar 0x5e51fc0 '__last' 'const _Tp *'
|       |     `-DeclRefExpr 0x5e527c0 <col:36> 'const _Tp *' lvalue ParmVar 0x5e51f48 '__first' 'const _Tp *'
|       |-IfStmt 0x5e52ab0 <line:569:4, line:570:68>
|       | |-ImplicitCastExpr 0x5e528b8 <line:569:8> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x5e528a0 <col:8> 'std::ptrdiff_t':'long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x5e52880 <col:8> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e52738 '_Num' 'const std::ptrdiff_t':'const long'
|       | `-CallExpr 0x5e52a78 <line:570:6, col:68> '<dependent type>'
|       |   |-DeclRefExpr 0x5e528d0 <col:6> '<builtin fn type>' Function 0x5e48fc0 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
|       |   |-CXXOperatorCallExpr 0x5e52980 <col:24, col:35> '<dependent type>'
|       |   | |-UnresolvedLookupExpr 0x5e52930 <col:33> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       |   | |-DeclRefExpr 0x5e528f0 <col:24> '_Tp *' lvalue ParmVar 0x5e52068 '__result' '_Tp *'
|       |   | `-DeclRefExpr 0x5e52910 <col:35> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e52738 '_Num' 'const std::ptrdiff_t':'const long'
|       |   |-DeclRefExpr 0x5e529b8 <col:41> 'const _Tp *' lvalue ParmVar 0x5e51f48 '__first' 'const _Tp *'
|       |   `-BinaryOperator 0x5e52a58 <col:50, col:64> 'unsigned long' '*'
|       |     |-UnaryExprOrTypeTraitExpr 0x5e529e8 <col:50, col:60> 'unsigned long' sizeof '_Tp'
|       |     `-ImplicitCastExpr 0x5e52a40 <col:64> 'unsigned long' <IntegralCast>
|       |       `-ImplicitCastExpr 0x5e52a28 <col:64> 'std::ptrdiff_t':'long' <LValueToRValue>
|       |         `-DeclRefExpr 0x5e52a08 <col:64> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e52738 '_Num' 'const std::ptrdiff_t':'const long'
|       `-ReturnStmt 0x5e52b90 <line:571:4, col:22>
|         `-CXXOperatorCallExpr 0x5e52b58 <col:11, col:22> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e52b08 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|           |-DeclRefExpr 0x5e52ac8 <col:11> '_Tp *' lvalue ParmVar 0x5e52068 '__result' '_Tp *'
|           `-DeclRefExpr 0x5e52ae8 <col:22> 'const std::ptrdiff_t':'const long' lvalue Var 0x5e52738 '_Num' 'const std::ptrdiff_t':'const long'
|-FunctionTemplateDecl 0x5e52fd8 <line:575:3, line:591:5> line:577:5 __copy_move_backward_a
| |-NonTypeTemplateParmDecl 0x5e52be8 <line:575:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e52c48 <col:26, col:35> col:35 referenced typename depth 0 index 1 _BI1
| |-TemplateTypeParmDecl 0x5e52cb8 <col:41, col:50> col:50 referenced typename depth 0 index 2 _BI2
| `-FunctionDecl 0x5e52f38 <line:576:5, line:591:5> line:577:5 __copy_move_backward_a '_BI2 (_BI1, _BI1, _BI2)' inline
|   |-ParmVarDecl 0x5e52d60 <col:28, col:33> col:33 referenced __first '_BI1'
|   |-ParmVarDecl 0x5e52dd8 <col:42, col:47> col:47 referenced __last '_BI1'
|   |-ParmVarDecl 0x5e52e50 <col:55, col:60> col:60 referenced __result '_BI2'
|   `-CompoundStmt 0x5e53cb0 <line:578:5, line:591:5>
|     |-DeclStmt 0x5e531b8 <line:579:7, col:69>
|     | `-TypedefDecl 0x5e53160 <col:7, col:58> col:58 referenced _ValueType1 'typename iterator_traits<_BI1>::value_type'
|     |   `-DependentNameType 0x5e530f0 'typename iterator_traits<_BI1>::value_type' dependent
|     |-DeclStmt 0x5e53338 <line:580:7, col:69>
|     | `-TypedefDecl 0x5e532e0 <col:7, col:58> col:58 referenced _ValueType2 'typename iterator_traits<_BI2>::value_type'
|     |   `-DependentNameType 0x5e53270 'typename iterator_traits<_BI2>::value_type' dependent
|     |-DeclStmt 0x5e534b8 <line:581:7, col:74>
|     | `-TypedefDecl 0x5e53460 <col:7, col:65> col:65 referenced _Category 'typename iterator_traits<_BI1>::iterator_category'
|     |   `-DependentNameType 0x5e533f0 'typename iterator_traits<_BI1>::iterator_category' dependent
|     |-DeclStmt 0x5e53978 <line:582:7, line:585:58>
|     | `-VarDecl 0x5e534e0 <line:582:7, line:585:57> line:582:18 referenced __simple 'const bool' cinit
|     |   `-ParenExpr 0x5e53958 <col:29, line:585:57> '<dependent type>'
|     |     `-BinaryOperator 0x5e53938 <line:582:30, line:585:50> '<dependent type>' '&&'
|     |       |-BinaryOperator 0x5e537b8 <line:582:30, line:584:46> '<dependent type>' '&&'
|     |       | |-BinaryOperator 0x5e53698 <line:582:30, line:583:46> '<dependent type>' '&&'
|     |       | | |-TypeTraitExpr 0x5e53580 <line:582:30, col:54> 'bool'
|     |       | | `-DependentScopeDeclRefExpr 0x5e53660 <line:583:26, col:46> '<dependent type>' lvalue
|     |       | `-DependentScopeDeclRefExpr 0x5e53780 <line:584:26, col:46> '<dependent type>' lvalue
|     |       `-DependentScopeDeclRefExpr 0x5e53900 <line:585:12, col:50> '<dependent type>' lvalue
|     `-ReturnStmt 0x5e53ca0 <line:587:7, line:590:18>
|       `-CallExpr 0x5e53c68 <line:587:14, line:590:18> '<dependent type>'
|         |-DependentScopeDeclRefExpr 0x5e53bd0 <line:587:14, line:588:45> '<dependent type>' lvalue
|         |-DeclRefExpr 0x5e53c08 <col:59> '_BI1' lvalue ParmVar 0x5e52d60 '__first' '_BI1'
|         |-DeclRefExpr 0x5e53c28 <line:589:10> '_BI1' lvalue ParmVar 0x5e52dd8 '__last' '_BI1'
|         `-DeclRefExpr 0x5e53c48 <line:590:10> '_BI2' lvalue ParmVar 0x5e52e50 '__result' '_BI2'
|-FunctionTemplateDecl 0x5e540e8 <line:593:3, line:600:5> line:595:5 __copy_move_backward_a2
| |-NonTypeTemplateParmDecl 0x5e53cf8 <line:593:12, col:17> col:17 referenced 'bool' depth 0 index 0 _IsMove
| |-TemplateTypeParmDecl 0x5e53d58 <col:26, col:35> col:35 referenced typename depth 0 index 1 _BI1
| |-TemplateTypeParmDecl 0x5e53dc8 <col:41, col:50> col:50 referenced typename depth 0 index 2 _BI2
| `-FunctionDecl 0x5e54048 <line:594:5, line:600:5> line:595:5 __copy_move_backward_a2 '_BI2 (_BI1, _BI1, _BI2)' inline
|   |-ParmVarDecl 0x5e53e70 <col:29, col:34> col:34 referenced __first '_BI1'
|   |-ParmVarDecl 0x5e53ee8 <col:43, col:48> col:48 referenced __last '_BI1'
|   |-ParmVarDecl 0x5e53f60 <col:56, col:61> col:61 referenced __result '_BI2'
|   `-CompoundStmt 0x5e54510 <line:596:5, line:600:5>
|     `-ReturnStmt 0x5e54500 <line:597:7, line:599:34>
|       `-CXXUnresolvedConstructExpr 0x5e544d8 <line:597:14, line:599:34> '_BI2' '_BI2'
|         `-CallExpr 0x5e544a0 <line:597:19, line:599:33> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e541c0 <line:597:19, col:54> '<dependent type>' lvalue (no ADL) = '__copy_move_backward_a' 0x5e52fd8
|           |-CallExpr 0x5e542e8 <line:598:6, col:31> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e54268 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           | `-DeclRefExpr 0x5e542c8 <col:24> '_BI1' lvalue ParmVar 0x5e53e70 '__first' '_BI1'
|           |-CallExpr 0x5e543b0 <col:34, col:58> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e54330 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           | `-DeclRefExpr 0x5e54390 <col:52> '_BI1' lvalue ParmVar 0x5e53ee8 '__last' '_BI1'
|           `-CallExpr 0x5e54478 <line:599:6, col:32> '<dependent type>'
|             |-UnresolvedLookupExpr 0x5e543f8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|             `-DeclRefExpr 0x5e54458 <col:24> '_BI2' lvalue ParmVar 0x5e53f60 '__result' '_BI2'
|-FunctionTemplateDecl 0x5e548a8 <line:620:3, line:635:5> line:622:5 copy_backward
| |-TemplateTypeParmDecl 0x5e54528 <line:620:12, col:21> col:21 referenced typename depth 0 index 0 _BI1
| |-TemplateTypeParmDecl 0x5e54598 <col:27, col:36> col:36 referenced typename depth 0 index 1 _BI2
| `-FunctionDecl 0x5e54808 <line:621:5, line:635:5> line:622:5 copy_backward '_BI2 (_BI1, _BI1, _BI2)' inline
|   |-ParmVarDecl 0x5e54638 <col:19, col:24> col:24 referenced __first '_BI1'
|   |-ParmVarDecl 0x5e546b0 <col:33, col:38> col:38 referenced __last '_BI1'
|   |-ParmVarDecl 0x5e54728 <col:46, col:51> col:51 referenced __result '_BI2'
|   `-CompoundStmt 0x5e55d40 <line:623:5, line:635:5>
|     |-NullStmt 0x5e54918 <line:630:54>
|     `-ReturnStmt 0x5e55d30 <line:632:7, line:634:18>
|       `-ParenExpr 0x5e55d10 <line:632:14, line:634:18> '<dependent type>'
|         `-CallExpr 0x5e55cd8 <line:632:15, line:634:17> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e54a80 <line:632:15, col:77> '<dependent type>' lvalue (no ADL) = '__copy_move_backward_a2' 0x5e540e8
|           |-CallExpr 0x5e55bd0 <line:633:9, col:34> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e54b28 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|           | `-DeclRefExpr 0x5e54b80 <col:27> '_BI1' lvalue ParmVar 0x5e54638 '__first' '_BI1'
|           |-CallExpr 0x5e55c90 <col:37, col:61> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e55c18 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|           | `-DeclRefExpr 0x5e55c70 <col:55> '_BI1' lvalue ParmVar 0x5e546b0 '__last' '_BI1'
|           `-DeclRefExpr 0x5e55cb8 <line:634:9> '_BI2' lvalue ParmVar 0x5e54728 '__result' '_BI2'
|-FunctionTemplateDecl 0x5e560e8 <line:656:3, line:671:5> line:658:5 move_backward
| |-TemplateTypeParmDecl 0x5e55d60 <line:656:12, col:21> col:21 referenced typename depth 0 index 0 _BI1
| |-TemplateTypeParmDecl 0x5e55dd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _BI2
| `-FunctionDecl 0x5e56048 <line:657:5, line:671:5> line:658:5 move_backward '_BI2 (_BI1, _BI1, _BI2)' inline
|   |-ParmVarDecl 0x5e55e78 <col:19, col:24> col:24 referenced __first '_BI1'
|   |-ParmVarDecl 0x5e55ef0 <col:33, col:38> col:38 referenced __last '_BI1'
|   |-ParmVarDecl 0x5e55f68 <col:46, col:51> col:51 referenced __result '_BI2'
|   `-CompoundStmt 0x5e56400 <line:659:5, line:671:5>
|     |-NullStmt 0x5e56158 <line:666:54>
|     `-ReturnStmt 0x5e563f0 <line:668:7, line:670:15>
|       `-CallExpr 0x5e563b8 <line:668:14, line:670:15> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e56190 <line:668:14, col:47> '<overloaded function type>' lvalue (no ADL) = '__copy_move_backward_a2' 0x5e540e8
|         |-CallExpr 0x5e562b0 <col:49, col:74> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e56238 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|         | `-DeclRefExpr 0x5e56290 <col:67> '_BI1' lvalue ParmVar 0x5e55e78 '__first' '_BI1'
|         |-CallExpr 0x5e56370 <line:669:7, col:31> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e562f8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__miter_base' 0x5d85e28 0x5df5b78 0x5e1ede8
|         | `-DeclRefExpr 0x5e56350 <col:25> '_BI1' lvalue ParmVar 0x5e55ef0 '__last' '_BI1'
|         `-DeclRefExpr 0x5e56398 <line:670:7> '_BI2' lvalue ParmVar 0x5e55f68 '__result' '_BI2'
|-FunctionTemplateDecl 0x5e56b68 <line:678:3, line:686:5> line:681:5 __fill_a
| |-TemplateTypeParmDecl 0x5e56420 <line:678:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| |-TemplateTypeParmDecl 0x5e56498 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5e56ac8 <line:679:5, line:686:5> line:681:5 __fill_a 'typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
|   |-ParmVarDecl 0x5e56880 <col:14, col:31> col:31 referenced __first '_ForwardIterator'
|   |-ParmVarDecl 0x5e568f8 <col:40, col:57> col:57 referenced __last '_ForwardIterator'
|   |-ParmVarDecl 0x5e56998 <line:682:8, col:19> col:19 referenced __value 'const _Tp &'
|   `-CompoundStmt 0x5e56da8 <line:683:5, line:686:5>
|     `-ForStmt 0x5e56d70 <line:684:7, line:685:13>
|       |-<<<NULL>>>
|       |-<<<NULL>>>
|       |-CXXOperatorCallExpr 0x5e56c88 <line:684:14, col:25> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x5e56c18 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|       | |-DeclRefExpr 0x5e56bd8 <col:14> '_ForwardIterator' lvalue ParmVar 0x5e56880 '__first' '_ForwardIterator'
|       | `-DeclRefExpr 0x5e56bf8 <col:25> '_ForwardIterator' lvalue ParmVar 0x5e568f8 '__last' '_ForwardIterator'
|       |-UnaryOperator 0x5e56ce0 <col:33, col:35> '<dependent type>' prefix '++' cannot overflow
|       | `-DeclRefExpr 0x5e56cc0 <col:35> '_ForwardIterator' lvalue ParmVar 0x5e56880 '__first' '_ForwardIterator'
|       `-BinaryOperator 0x5e56d50 <line:685:2, col:13> '<dependent type>' '='
|         |-UnaryOperator 0x5e56d18 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
|         | `-DeclRefExpr 0x5e56cf8 <col:3> '_ForwardIterator' lvalue ParmVar 0x5e56880 '__first' '_ForwardIterator'
|         `-DeclRefExpr 0x5e56d30 <col:13> 'const _Tp' lvalue ParmVar 0x5e56998 '__value' 'const _Tp &'
|-FunctionTemplateDecl 0x5e574a8 <line:688:3, line:697:5> line:691:5 __fill_a
| |-TemplateTypeParmDecl 0x5e56dc0 <line:688:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| |-TemplateTypeParmDecl 0x5e56e38 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5e57408 <line:689:5, line:697:5> line:691:5 __fill_a 'typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
|   |-ParmVarDecl 0x5e571c0 <col:14, col:31> col:31 referenced __first '_ForwardIterator'
|   |-ParmVarDecl 0x5e57238 <col:40, col:57> col:57 referenced __last '_ForwardIterator'
|   |-ParmVarDecl 0x5e572d8 <line:692:7, col:18> col:18 referenced __value 'const _Tp &'
|   `-CompoundStmt 0x5e57798 <line:693:5, line:697:5>
|     |-DeclStmt 0x5e575b0 <line:694:7, col:32>
|     | `-VarDecl 0x5e57528 <col:7, col:25> col:17 referenced __tmp 'const _Tp' cinit
|     |   `-DeclRefExpr 0x5e57590 <col:25> 'const _Tp' lvalue ParmVar 0x5e572d8 '__value' 'const _Tp &'
|     `-ForStmt 0x5e57760 <line:695:7, line:696:13>
|       |-<<<NULL>>>
|       |-<<<NULL>>>
|       |-CXXOperatorCallExpr 0x5e57678 <line:695:14, col:25> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x5e57608 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|       | |-DeclRefExpr 0x5e575c8 <col:14> '_ForwardIterator' lvalue ParmVar 0x5e571c0 '__first' '_ForwardIterator'
|       | `-DeclRefExpr 0x5e575e8 <col:25> '_ForwardIterator' lvalue ParmVar 0x5e57238 '__last' '_ForwardIterator'
|       |-UnaryOperator 0x5e576d0 <col:33, col:35> '<dependent type>' prefix '++' cannot overflow
|       | `-DeclRefExpr 0x5e576b0 <col:35> '_ForwardIterator' lvalue ParmVar 0x5e571c0 '__first' '_ForwardIterator'
|       `-BinaryOperator 0x5e57740 <line:696:2, col:13> '<dependent type>' '='
|         |-UnaryOperator 0x5e57708 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
|         | `-DeclRefExpr 0x5e576e8 <col:3> '_ForwardIterator' lvalue ParmVar 0x5e571c0 '__first' '_ForwardIterator'
|         `-DeclRefExpr 0x5e57720 <col:13> 'const _Tp' lvalue Var 0x5e57528 '__tmp' 'const _Tp'
|-FunctionTemplateDecl 0x5e57e68 <line:700:3, line:708:5> line:703:5 __fill_a
| |-TemplateTypeParmDecl 0x5e577b8 <line:700:12, col:21> col:21 referenced typename depth 0 index 0 _Tp
| `-FunctionDecl 0x5e57dc8 <line:701:5, line:708:5> line:703:5 __fill_a 'typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type (_Tp *, _Tp *, const _Tp &)' inline
|   |-ParmVarDecl 0x5e57b78 <col:14, col:19> col:19 referenced __first '_Tp *'
|   |-ParmVarDecl 0x5e57bf0 <col:28, col:33> col:33 referenced __last '_Tp *'
|   |-ParmVarDecl 0x5e57c98 <col:41, col:52> col:52 referenced __c 'const _Tp &'
|   `-CompoundStmt 0x5e58558 <line:704:5, line:708:5>
|     |-DeclStmt 0x5e57f70 <line:705:7, col:28>
|     | `-VarDecl 0x5e57ee8 <col:7, col:25> col:17 referenced __tmp 'const _Tp' cinit
|     |   `-DeclRefExpr 0x5e57f50 <col:25> 'const _Tp' lvalue ParmVar 0x5e57c98 '__c' 'const _Tp &'
|     `-IfStmt 0x5e58520 <line:706:7, line:707:68> has_var
|       |-DeclStmt 0x5e58540 <line:706:11, col:41>
|       | `-VarDecl 0x5e57f98 <col:11, col:41> col:24 referenced __len 'const std::size_t':'const unsigned long' cinit
|       |   `-CXXOperatorCallExpr 0x5e58090 <col:32, col:41> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e58040 <col:39> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       |     |-DeclRefExpr 0x5e58000 <col:32> '_Tp *' lvalue ParmVar 0x5e57bf0 '__last' '_Tp *'
|       |     `-DeclRefExpr 0x5e58020 <col:41> '_Tp *' lvalue ParmVar 0x5e57b78 '__first' '_Tp *'
|       |-ImplicitCastExpr 0x5e58100 <col:24> 'bool' <IntegralToBoolean>
|       | `-ImplicitCastExpr 0x5e580e8 <col:24> 'std::size_t':'unsigned long' <LValueToRValue>
|       |   `-DeclRefExpr 0x5e580c8 <col:24> 'const std::size_t':'const unsigned long' lvalue Var 0x5e57f98 '__len' 'const std::size_t':'const unsigned long'
|       `-CallExpr 0x5e584e8 <line:707:2, col:68> '<dependent type>'
|         |-DeclRefExpr 0x5e58420 <col:2> '<builtin fn type>' Function 0x5e581f0 '__builtin_memset' 'void *(void *, int, unsigned long) noexcept'
|         |-DeclRefExpr 0x5e58440 <col:19> '_Tp *' lvalue ParmVar 0x5e57b78 '__first' '_Tp *'
|         |-CXXStaticCastExpr 0x5e58498 <col:28, col:60> 'unsigned char' static_cast<unsigned char> <Dependent>
|         | `-DeclRefExpr 0x5e58460 <col:55> 'const _Tp' lvalue Var 0x5e57ee8 '__tmp' 'const _Tp'
|         `-DeclRefExpr 0x5e584c8 <col:63> 'const std::size_t':'const unsigned long' lvalue Var 0x5e57f98 '__len' 'const std::size_t':'const unsigned long'
|-FunctionTemplateDecl 0x5e58968 <line:722:3, line:733:5> line:724:5 fill
| |-TemplateTypeParmDecl 0x5e58578 <line:722:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| |-TemplateTypeParmDecl 0x5e585e8 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5e588c8 <line:723:5, line:733:5> line:724:5 fill 'void (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
|   |-ParmVarDecl 0x5e58688 <col:10, col:27> col:27 referenced __first '_ForwardIterator'
|   |-ParmVarDecl 0x5e58700 <col:36, col:53> col:53 referenced __last '_ForwardIterator'
|   |-ParmVarDecl 0x5e587a8 <col:61, col:72> col:72 referenced __value 'const _Tp &'
|   `-CompoundStmt 0x5e58c40 <line:725:5, line:733:5>
|     |-NullStmt 0x5e589d8 <line:729:54>
|     `-CallExpr 0x5e58c08 <line:731:7, line:732:14> '<dependent type>'
|       |-UnresolvedLookupExpr 0x5e58a00 <line:731:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__fill_a' 0x5e56b68 0x5e574a8 0x5e57e68
|       |-CallExpr 0x5e58af8 <col:21, col:46> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x5e58a78 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|       | `-DeclRefExpr 0x5e58ad8 <col:39> '_ForwardIterator' lvalue ParmVar 0x5e58688 '__first' '_ForwardIterator'
|       |-CallExpr 0x5e58bc0 <col:49, col:73> '<dependent type>'
|       | |-UnresolvedLookupExpr 0x5e58b40 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|       | `-DeclRefExpr 0x5e58ba0 <col:67> '_ForwardIterator' lvalue ParmVar 0x5e58700 '__last' '_ForwardIterator'
|       `-DeclRefExpr 0x5e58be8 <line:732:7> 'const _Tp' lvalue ParmVar 0x5e587a8 '__value' 'const _Tp &'
|-FunctionTemplateDecl 0x5e59448 <line:735:3, line:744:5> line:738:5 __fill_n_a
| |-TemplateTypeParmDecl 0x5e58c60 <line:735:12, col:21> col:21 referenced typename depth 0 index 0 _OutputIterator
| |-TemplateTypeParmDecl 0x5e58cd8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _Size
| |-TemplateTypeParmDecl 0x5e58d48 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Tp
| `-FunctionDecl 0x5e593a8 <line:736:5, line:744:5> line:738:5 __fill_n_a 'typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type (_OutputIterator, _Size, const _Tp &)' inline
|   |-ParmVarDecl 0x5e59130 <col:16, col:32> col:32 referenced __first '_OutputIterator'
|   |-ParmVarDecl 0x5e591a8 <col:41, col:47> col:47 referenced __n '_Size'
|   |-ParmVarDecl 0x5e59278 <col:52, col:63> col:63 referenced __value 'const _Tp &'
|   `-CompoundStmt 0x5e598e8 <line:739:5, line:744:5>
|     |-ForStmt 0x5e59880 <line:740:7, line:742:13>
|     | |-DeclStmt 0x5e59680 <line:740:12, col:45>
|     | | `-VarDecl 0x5e595f8 <col:12, col:42> col:32 referenced __niter 'decltype(__n + 0)' cinit
|     | |   `-DeclRefExpr 0x5e59660 <col:42> '_Size' lvalue ParmVar 0x5e591a8 '__n' '_Size'
|     | |-<<<NULL>>>
|     | |-CXXOperatorCallExpr 0x5e59740 <line:741:5, col:15> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e596d8 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|     | | |-DeclRefExpr 0x5e59698 <col:5> 'decltype(__n + 0)' lvalue Var 0x5e595f8 '__niter' 'decltype(__n + 0)'
|     | | `-IntegerLiteral 0x5e596b8 <col:15> 'int' 0
|     | |-BinaryOperator 0x5e597e8 <col:18, col:31> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e59798 <col:18, col:20> '<dependent type>' prefix '--' cannot overflow
|     | | | `-DeclRefExpr 0x5e59778 <col:20> 'decltype(__n + 0)' lvalue Var 0x5e595f8 '__niter' 'decltype(__n + 0)'
|     | | `-UnaryOperator 0x5e597d0 <col:29, col:31> '<dependent type>' prefix '++' cannot overflow
|     | |   `-DeclRefExpr 0x5e597b0 <col:31> '_OutputIterator' lvalue ParmVar 0x5e59130 '__first' '_OutputIterator'
|     | `-BinaryOperator 0x5e59860 <line:742:2, col:13> '<dependent type>' '='
|     |   |-UnaryOperator 0x5e59828 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
|     |   | `-DeclRefExpr 0x5e59808 <col:3> '_OutputIterator' lvalue ParmVar 0x5e59130 '__first' '_OutputIterator'
|     |   `-DeclRefExpr 0x5e59840 <col:13> 'const _Tp' lvalue ParmVar 0x5e59278 '__value' 'const _Tp &'
|     `-ReturnStmt 0x5e598d8 <line:743:7, col:14>
|       `-DeclRefExpr 0x5e598b8 <col:14> '_OutputIterator' lvalue ParmVar 0x5e59130 '__first' '_OutputIterator'
|-FunctionTemplateDecl 0x5e5b5a8 <line:746:3, line:756:5> line:749:5 __fill_n_a
| |-TemplateTypeParmDecl 0x5e59908 <line:746:12, col:21> col:21 referenced typename depth 0 index 0 _OutputIterator
| |-TemplateTypeParmDecl 0x5e59978 <col:38, col:47> col:47 referenced typename depth 0 index 1 _Size
| |-TemplateTypeParmDecl 0x5e599e8 <col:54, col:63> col:63 referenced typename depth 0 index 2 _Tp
| `-FunctionDecl 0x5e5b508 <line:747:5, line:756:5> line:749:5 __fill_n_a 'typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type (_OutputIterator, _Size, const _Tp &)' inline
|   |-ParmVarDecl 0x5e5b2c0 <col:16, col:32> col:32 referenced __first '_OutputIterator'
|   |-ParmVarDecl 0x5e5b338 <col:41, col:47> col:47 referenced __n '_Size'
|   |-ParmVarDecl 0x5e5b3d8 <col:52, col:63> col:63 referenced __value 'const _Tp &'
|   `-CompoundStmt 0x5e5bab8 <line:750:5, line:756:5>
|     |-DeclStmt 0x5e5b6b0 <line:751:7, col:32>
|     | `-VarDecl 0x5e5b628 <col:7, col:25> col:17 referenced __tmp 'const _Tp' cinit
|     |   `-DeclRefExpr 0x5e5b690 <col:25> 'const _Tp' lvalue ParmVar 0x5e5b3d8 '__value' 'const _Tp &'
|     |-ForStmt 0x5e5ba50 <line:752:7, line:754:13>
|     | |-DeclStmt 0x5e5b850 <line:752:12, col:45>
|     | | `-VarDecl 0x5e5b7c8 <col:12, col:42> col:32 referenced __niter 'decltype(__n + 0)' cinit
|     | |   `-DeclRefExpr 0x5e5b830 <col:42> '_Size' lvalue ParmVar 0x5e5b338 '__n' '_Size'
|     | |-<<<NULL>>>
|     | |-CXXOperatorCallExpr 0x5e5b910 <line:753:5, col:15> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e5b8a8 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|     | | |-DeclRefExpr 0x5e5b868 <col:5> 'decltype(__n + 0)' lvalue Var 0x5e5b7c8 '__niter' 'decltype(__n + 0)'
|     | | `-IntegerLiteral 0x5e5b888 <col:15> 'int' 0
|     | |-BinaryOperator 0x5e5b9b8 <col:18, col:31> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e5b968 <col:18, col:20> '<dependent type>' prefix '--' cannot overflow
|     | | | `-DeclRefExpr 0x5e5b948 <col:20> 'decltype(__n + 0)' lvalue Var 0x5e5b7c8 '__niter' 'decltype(__n + 0)'
|     | | `-UnaryOperator 0x5e5b9a0 <col:29, col:31> '<dependent type>' prefix '++' cannot overflow
|     | |   `-DeclRefExpr 0x5e5b980 <col:31> '_OutputIterator' lvalue ParmVar 0x5e5b2c0 '__first' '_OutputIterator'
|     | `-BinaryOperator 0x5e5ba30 <line:754:2, col:13> '<dependent type>' '='
|     |   |-UnaryOperator 0x5e5b9f8 <col:2, col:3> '<dependent type>' prefix '*' cannot overflow
|     |   | `-DeclRefExpr 0x5e5b9d8 <col:3> '_OutputIterator' lvalue ParmVar 0x5e5b2c0 '__first' '_OutputIterator'
|     |   `-DeclRefExpr 0x5e5ba10 <col:13> 'const _Tp' lvalue Var 0x5e5b628 '__tmp' 'const _Tp'
|     `-ReturnStmt 0x5e5baa8 <line:755:7, col:14>
|       `-DeclRefExpr 0x5e5ba88 <col:14> '_OutputIterator' lvalue ParmVar 0x5e5b2c0 '__first' '_OutputIterator'
|-FunctionTemplateDecl 0x5e5c248 <line:758:3, line:765:5> line:761:5 __fill_n_a
| |-TemplateTypeParmDecl 0x5e5bae0 <line:758:12, col:21> col:21 referenced typename depth 0 index 0 _Size
| |-TemplateTypeParmDecl 0x5e5bb58 <col:28, col:37> col:37 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5e5c1a8 <line:759:5, line:765:5> line:761:5 __fill_n_a 'typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type (_Tp *, _Size, const _Tp &)' inline
|   |-ParmVarDecl 0x5e5bf60 <col:16, col:21> col:21 referenced __first '_Tp *'
|   |-ParmVarDecl 0x5e5bfd8 <col:30, col:36> col:36 referenced __n '_Size'
|   |-ParmVarDecl 0x5e5c078 <col:41, col:52> col:52 referenced __c 'const _Tp &'
|   `-CompoundStmt 0x5e5c548 <line:762:5, line:765:5>
|     |-CallExpr 0x5e5c438 <line:763:7, col:48> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x5e5c2d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__fill_a' 0x5e56b68 0x5e574a8 0x5e57e68
|     | |-DeclRefExpr 0x5e5c330 <col:21> '_Tp *' lvalue ParmVar 0x5e5bf60 '__first' '_Tp *'
|     | |-CXXOperatorCallExpr 0x5e5c3e0 <col:30, col:40> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e5c390 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5df3ee8 0x5e1c568
|     | | |-DeclRefExpr 0x5e5c350 <col:30> '_Tp *' lvalue ParmVar 0x5e5bf60 '__first' '_Tp *'
|     | | `-DeclRefExpr 0x5e5c370 <col:40> '_Size' lvalue ParmVar 0x5e5bfd8 '__n' '_Size'
|     | `-DeclRefExpr 0x5e5c418 <col:45> 'const _Tp' lvalue ParmVar 0x5e5c078 '__c' 'const _Tp &'
|     `-ReturnStmt 0x5e5c538 <line:764:7, col:24>
|       `-CXXOperatorCallExpr 0x5e5c500 <col:14, col:24> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e5c4b0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5df3ee8 0x5e1c568
|         |-DeclRefExpr 0x5e5c470 <col:14> '_Tp *' lvalue ParmVar 0x5e5bf60 '__first' '_Tp *'
|         `-DeclRefExpr 0x5e5c490 <col:24> '_Size' lvalue ParmVar 0x5e5bfd8 '__n' '_Size'
|-FunctionTemplateDecl 0x5e5c9c8 <line:782:3, line:790:5> line:784:5 fill_n
| |-TemplateTypeParmDecl 0x5e5c568 <line:782:12, col:21> col:21 referenced typename depth 0 index 0 _OI
| |-TemplateTypeParmDecl 0x5e5c5d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 _Size
| |-TemplateTypeParmDecl 0x5e5c648 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Tp
| `-FunctionDecl 0x5e5c928 <line:783:5, line:790:5> line:784:5 fill_n '_OI (_OI, _Size, const _Tp &)' inline
|   |-ParmVarDecl 0x5e5c6f0 <col:12, col:16> col:16 referenced __first '_OI'
|   |-ParmVarDecl 0x5e5c768 <col:25, col:31> col:31 referenced __n '_Size'
|   |-ParmVarDecl 0x5e5c808 <col:36, col:47> col:47 referenced __value 'const _Tp &'
|   `-CompoundStmt 0x5e5cc38 <line:785:5, line:790:5>
|     `-ReturnStmt 0x5e5cc28 <line:789:7, col:75>
|       `-CXXUnresolvedConstructExpr 0x5e5cc00 <col:14, col:75> '_OI' '_OI'
|         `-CallExpr 0x5e5cbc8 <col:18, col:74> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e5ca68 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '__fill_n_a' 0x5e59448 0x5e5b5a8 0x5e5c248
|           |-CallExpr 0x5e5cb60 <col:34, col:59> '<dependent type>'
|           | |-UnresolvedLookupExpr 0x5e5cae0 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           | `-DeclRefExpr 0x5e5cb40 <col:52> '_OI' lvalue ParmVar 0x5e5c6f0 '__first' '_OI'
|           |-DeclRefExpr 0x5e5cb88 <col:62> '_Size' lvalue ParmVar 0x5e5c768 '__n' '_Size'
|           `-DeclRefExpr 0x5e5cba8 <col:67> 'const _Tp' lvalue ParmVar 0x5e5c808 '__value' 'const _Tp &'
|-ClassTemplateDecl 0x5e5cd68 <line:792:3, line:804:5> line:793:12 __equal
| |-NonTypeTemplateParmDecl 0x5e5cc60 <line:792:12, col:17> col:17 'bool' depth 0 index 0 _BoolType
| |-CXXRecordDecl 0x5e5ccd8 <line:793:5, line:804:5> line:793:12 struct __equal definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5e5cfe0 <col:5, col:12> col:12 implicit struct __equal
| | `-FunctionTemplateDecl 0x5e5d468 <line:795:7, line:803:2> line:797:9 equal
| |   |-TemplateTypeParmDecl 0x5e5d070 <line:795:16, col:25> col:25 referenced typename depth 1 index 0 _II1
| |   |-TemplateTypeParmDecl 0x5e5d0e8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _II2
| |   `-CXXMethodDecl 0x5e5d3c8 <line:796:9, line:803:2> line:797:9 equal 'bool (_II1, _II1, _II2)' static
| |     |-ParmVarDecl 0x5e5d188 <col:15, col:20> col:20 referenced __first1 '_II1'
| |     |-ParmVarDecl 0x5e5d200 <col:30, col:35> col:35 referenced __last1 '_II1'
| |     |-ParmVarDecl 0x5e5d278 <col:44, col:49> col:49 referenced __first2 '_II2'
| |     `-CompoundStmt 0x5e5d880 <line:798:9, line:803:2>
| |       |-ForStmt 0x5e5d828 <line:799:4, line:801:15>
| |       | |-<<<NULL>>>
| |       | |-<<<NULL>>>
| |       | |-CXXOperatorCallExpr 0x5e5d5a0 <line:799:11, col:23> '<dependent type>'
| |       | | |-UnresolvedLookupExpr 0x5e5d530 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
| |       | | |-DeclRefExpr 0x5e5d4f0 <col:11> '_II1' lvalue ParmVar 0x5e5d188 '__first1' '_II1'
| |       | | `-DeclRefExpr 0x5e5d510 <col:23> '_II1' lvalue ParmVar 0x5e5d200 '__last1' '_II1'
| |       | |-BinaryOperator 0x5e5d680 <col:32, col:52> '<dependent type>' ','
| |       | | |-UnaryOperator 0x5e5d5f8 <col:32, col:34> '<dependent type>' prefix '++' cannot overflow
| |       | | | `-DeclRefExpr 0x5e5d5d8 <col:34> '_II1' lvalue ParmVar 0x5e5d188 '__first1' '_II1'
| |       | | `-CStyleCastExpr 0x5e5d658 <col:44, col:52> 'void' <ToVoid>
| |       | |   `-UnaryOperator 0x5e5d630 <col:50, col:52> '<dependent type>' prefix '++' cannot overflow
| |       | |     `-DeclRefExpr 0x5e5d610 <col:52> '_II2' lvalue ParmVar 0x5e5d278 '__first2' '_II2'
| |       | `-IfStmt 0x5e5d810 <line:800:6, line:801:15>
| |       |   |-UnaryOperator 0x5e5d7d8 <line:800:10, col:34> '<dependent type>' prefix '!' cannot overflow
| |       |   | `-ParenExpr 0x5e5d7b8 <col:11, col:34> '<dependent type>'
| |       |   |   `-CXXOperatorCallExpr 0x5e5d780 <col:12, col:26> '<dependent type>'
| |       |   |     |-UnresolvedLookupExpr 0x5e5d710 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
| |       |   |     |-UnaryOperator 0x5e5d6c0 <col:12, col:13> '<dependent type>' prefix '*' cannot overflow
| |       |   |     | `-DeclRefExpr 0x5e5d6a0 <col:13> '_II1' lvalue ParmVar 0x5e5d188 '__first1' '_II1'
| |       |   |     `-UnaryOperator 0x5e5d6f8 <col:25, col:26> '<dependent type>' prefix '*' cannot overflow
| |       |   |       `-DeclRefExpr 0x5e5d6d8 <col:26> '_II2' lvalue ParmVar 0x5e5d278 '__first2' '_II2'
| |       |   `-ReturnStmt 0x5e5d800 <line:801:8, col:15>
| |       |     `-CXXBoolLiteralExpr 0x5e5d7f0 <col:15> 'bool' false
| |       `-ReturnStmt 0x5e5d870 <line:802:4, col:11>
| |         `-CXXBoolLiteralExpr 0x5e5d860 <col:11> 'bool' true
| `-ClassTemplateSpecialization 0x5e5d8d8 '__equal'
|-ClassTemplateSpecializationDecl 0x5e5d8d8 <line:806:3, line:817:5> line:807:12 struct __equal definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-CXXRecordDecl 0x5e5daf8 <col:5, col:12> col:12 implicit struct __equal
| `-FunctionTemplateDecl 0x5e5df28 <line:809:7, line:816:2> line:811:9 equal
|   |-TemplateTypeParmDecl 0x5e5db88 <line:809:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
|   `-CXXMethodDecl 0x5e5de88 <line:810:9, line:816:2> line:811:9 equal 'bool (const _Tp *, const _Tp *, const _Tp *)' static
|     |-ParmVarDecl 0x5e5dc48 <col:15, col:26> col:26 referenced __first1 'const _Tp *'
|     |-ParmVarDecl 0x5e5dcc0 <col:36, col:47> col:47 referenced __last1 'const _Tp *'
|     |-ParmVarDecl 0x5e5dd38 <col:56, col:67> col:67 referenced __first2 'const _Tp *'
|     `-CompoundStmt 0x5e5e600 <line:812:9, line:816:2>
|       |-IfStmt 0x5e5e5a8 <line:813:4, line:814:70> has_var
|       | |-DeclStmt 0x5e5e5c8 <line:813:8, col:48>
|       | | `-VarDecl 0x5e5dfc0 <col:8, col:48> col:21 referenced __len 'const std::size_t':'const unsigned long' cinit
|       | |   `-ParenExpr 0x5e5e0f0 <col:29, col:48> '<dependent type>'
|       | |     `-CXXOperatorCallExpr 0x5e5e0b8 <col:30, col:40> '<dependent type>'
|       | |       |-UnresolvedLookupExpr 0x5e5e068 <col:38> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       | |       |-DeclRefExpr 0x5e5e028 <col:30> 'const _Tp *' lvalue ParmVar 0x5e5dcc0 '__last1' 'const _Tp *'
|       | |       `-DeclRefExpr 0x5e5e048 <col:40> 'const _Tp *' lvalue ParmVar 0x5e5dc48 '__first1' 'const _Tp *'
|       | |-ImplicitCastExpr 0x5e5e148 <col:21> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x5e5e130 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x5e5e110 <col:21> 'const std::size_t':'const unsigned long' lvalue Var 0x5e5dfc0 '__len' 'const std::size_t':'const unsigned long'
|       | `-ReturnStmt 0x5e5e598 <line:814:6, col:70>
|       |   `-UnaryOperator 0x5e5e580 <col:13, col:70> '<dependent type>' prefix '!' cannot overflow
|       |     `-CallExpr 0x5e5e548 <col:14, col:70> '<dependent type>'
|       |       |-DeclRefExpr 0x5e5e460 <col:14> '<builtin fn type>' Function 0x5e5e230 '__builtin_memcmp' 'int (const void *, const void *, unsigned long) noexcept'
|       |       |-DeclRefExpr 0x5e5e480 <col:31> 'const _Tp *' lvalue ParmVar 0x5e5dc48 '__first1' 'const _Tp *'
|       |       |-DeclRefExpr 0x5e5e4a0 <col:41> 'const _Tp *' lvalue ParmVar 0x5e5dd38 '__first2' 'const _Tp *'
|       |       `-BinaryOperator 0x5e5e528 <col:51, col:65> 'unsigned long' '*'
|       |         |-UnaryExprOrTypeTraitExpr 0x5e5e4d0 <col:51, col:61> 'unsigned long' sizeof '_Tp'
|       |         `-ImplicitCastExpr 0x5e5e510 <col:65> 'std::size_t':'unsigned long' <LValueToRValue>
|       |           `-DeclRefExpr 0x5e5e4f0 <col:65> 'const std::size_t':'const unsigned long' lvalue Var 0x5e5dfc0 '__len' 'const std::size_t':'const unsigned long'
|       `-ReturnStmt 0x5e5e5f0 <line:815:4, col:11>
|         `-CXXBoolLiteralExpr 0x5e5e5e0 <col:11> 'bool' true
|-FunctionTemplateDecl 0x5e5e9e8 <line:819:3, line:832:5> line:821:5 __equal_aux
| |-TemplateTypeParmDecl 0x5e5e620 <line:819:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e5e698 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| `-FunctionDecl 0x5e5e948 <line:820:5, line:832:5> line:821:5 __equal_aux 'bool (_II1, _II1, _II2)' inline
|   |-ParmVarDecl 0x5e5e738 <col:17, col:22> col:22 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e5e7b0 <col:32, col:37> col:37 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e5e828 <col:46, col:51> col:51 referenced __first2 '_II2'
|   `-CompoundStmt 0x5e600b0 <line:822:5, line:832:5>
|     |-DeclStmt 0x5e5ebc8 <line:823:7, col:69>
|     | `-TypedefDecl 0x5e5eb70 <col:7, col:58> col:58 referenced _ValueType1 'typename iterator_traits<_II1>::value_type'
|     |   `-DependentNameType 0x5e5eb00 'typename iterator_traits<_II1>::value_type' dependent
|     |-DeclStmt 0x5e5ed48 <line:824:7, col:69>
|     | `-TypedefDecl 0x5e5ecf0 <col:7, col:58> col:58 referenced _ValueType2 'typename iterator_traits<_II2>::value_type'
|     |   `-DependentNameType 0x5e5ec80 'typename iterator_traits<_II2>::value_type' dependent
|     |-DeclStmt 0x5e5fe68 <line:825:7, line:829:58>
|     | `-VarDecl 0x5e5ed70 <line:825:7, line:829:57> line:825:18 referenced __simple 'const bool' cinit
|     |   `-ParenExpr 0x5e5fe48 <col:29, line:829:57> '<dependent type>'
|     |     `-BinaryOperator 0x5e5fe28 <line:825:30, line:829:50> '<dependent type>' '&&'
|     |       |-BinaryOperator 0x5e5fc48 <line:825:30, line:828:46> '<dependent type>' '&&'
|     |       | |-BinaryOperator 0x5e5fb28 <line:825:30, line:827:46> '<dependent type>' '&&'
|     |       | | |-ParenExpr 0x5e5f0a8 <line:825:30, line:826:47> '<dependent type>'
|     |       | | | `-BinaryOperator 0x5e5f088 <line:825:31, line:826:40> '<dependent type>' '||'
|     |       | | |   |-DependentScopeDeclRefExpr 0x5e5ef18 <line:825:31, col:58> '<dependent type>' lvalue
|     |       | | |   `-DependentScopeDeclRefExpr 0x5e5f050 <line:826:13, col:40> '<dependent type>' lvalue
|     |       | | `-DependentScopeDeclRefExpr 0x5e5faf0 <line:827:26, col:46> '<dependent type>' lvalue
|     |       | `-DependentScopeDeclRefExpr 0x5e5fc10 <line:828:26, col:46> '<dependent type>' lvalue
|     |       `-DependentScopeDeclRefExpr 0x5e5fdf0 <line:829:12, col:50> '<dependent type>' lvalue
|     `-ReturnStmt 0x5e600a0 <line:831:7, col:71>
|       `-CallExpr 0x5e60068 <col:14, col:71> '<dependent type>'
|         |-DependentScopeDeclRefExpr 0x5e5ffd0 <col:14, col:38> '<dependent type>' lvalue
|         |-DeclRefExpr 0x5e60008 <col:44> '_II1' lvalue ParmVar 0x5e5e738 '__first1' '_II1'
|         |-DeclRefExpr 0x5e60028 <col:54> '_II1' lvalue ParmVar 0x5e5e7b0 '__last1' '_II1'
|         `-DeclRefExpr 0x5e60048 <col:63> '_II2' lvalue ParmVar 0x5e5e828 '__first2' '_II2'
|-ClassTemplateDecl 0x5e60278 <line:834:3, line:846:5> line:835:12 __lc_rai
| |-TemplateTypeParmDecl 0x5e600e0 <line:834:12> col:12 typename depth 0 index 0
| |-TemplateTypeParmDecl 0x5e60158 <col:22> col:22 typename depth 0 index 1
| |-CXXRecordDecl 0x5e601e8 <line:835:5, line:846:5> line:835:12 struct __lc_rai definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5e60510 <col:5, col:12> col:12 implicit struct __lc_rai
| | |-FunctionTemplateDecl 0x5e60a38 <line:837:7, line:840:27> line:839:9 __newlast1
| | | |-TemplateTypeParmDecl 0x5e605a0 <line:837:16, col:25> col:25 referenced typename depth 1 index 0 _II1
| | | |-TemplateTypeParmDecl 0x5e60618 <col:31, col:40> col:40 referenced typename depth 1 index 1 _II2
| | | `-CXXMethodDecl 0x5e60998 <line:838:9, line:840:27> line:839:9 __newlast1 '_II1 (_II1, _II1, _II2, _II2)' static
| | |   |-ParmVarDecl 0x5e606b8 <col:20> col:24 '_II1'
| | |   |-ParmVarDecl 0x5e60730 <col:26, col:31> col:31 referenced __last1 '_II1'
| | |   |-ParmVarDecl 0x5e607a8 <col:40> col:44 '_II2'
| | |   |-ParmVarDecl 0x5e60820 <col:46> col:50 '_II2'
| | |   `-CompoundStmt 0x5e60e28 <line:840:9, col:27>
| | |     `-ReturnStmt 0x5e60e18 <col:11, col:18>
| | |       `-DeclRefExpr 0x5e60df8 <col:18> '_II1' lvalue ParmVar 0x5e60730 '__last1' '_II1'
| | `-FunctionTemplateDecl 0x5e60d78 <line:842:7, line:845:37> line:844:9 __cnd2
| |   |-TemplateTypeParmDecl 0x5e60ab0 <line:842:16, col:25> col:25 referenced typename depth 1 index 0 _II
| |   `-CXXMethodDecl 0x5e60cd8 <line:843:9, line:845:37> line:844:9 __cnd2 'bool (_II, _II)' static
| |     |-ParmVarDecl 0x5e60b50 <col:16, col:20> col:20 referenced __first '_II'
| |     |-ParmVarDecl 0x5e60bc8 <col:29, col:33> col:33 referenced __last '_II'
| |     `-CompoundStmt 0x5e60f38 <line:845:9, col:37>
| |       `-ReturnStmt 0x5e60f28 <col:11, col:29>
| |         `-CXXOperatorCallExpr 0x5e60ef0 <col:18, col:29> '<dependent type>'
| |           |-UnresolvedLookupExpr 0x5e60e80 <col:26> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
| |           |-DeclRefExpr 0x5e60e40 <col:18> '_II' lvalue ParmVar 0x5e60b50 '__first' '_II'
| |           `-DeclRefExpr 0x5e60e60 <col:29> '_II' lvalue ParmVar 0x5e60bc8 '__last' '_II'
| `-ClassTemplateSpecialization 0x5e60f80 '__lc_rai'
|-ClassTemplateSpecializationDecl 0x5e60f80 <line:848:3, line:867:5> line:849:12 struct __lc_rai definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-TemplateArgument type 'std::random_access_iterator_tag'
| |-CXXRecordDecl 0x5e611e8 <col:5, col:12> col:12 implicit struct __lc_rai
| |-FunctionTemplateDecl 0x5e61708 <line:851:7, line:861:2> line:853:9 __newlast1
| | |-TemplateTypeParmDecl 0x5e61278 <line:851:16, col:25> col:25 referenced typename depth 0 index 0 _RAI1
| | |-TemplateTypeParmDecl 0x5e612e8 <col:32, col:41> col:41 referenced typename depth 0 index 1 _RAI2
| | `-CXXMethodDecl 0x5e61668 <line:852:9, line:861:2> line:853:9 __newlast1 '_RAI1 (_RAI1, _RAI1, _RAI2, _RAI2)' static
| |   |-ParmVarDecl 0x5e61388 <col:20, col:26> col:26 referenced __first1 '_RAI1'
| |   |-ParmVarDecl 0x5e61400 <col:36, col:42> col:42 referenced __last1 '_RAI1'
| |   |-ParmVarDecl 0x5e61478 <line:854:6, col:12> col:12 referenced __first2 '_RAI2'
| |   |-ParmVarDecl 0x5e614f0 <col:22, col:28> col:28 referenced __last2 '_RAI2'
| |   `-CompoundStmt 0x5e621c0 <line:855:9, line:861:2>
| |     |-DeclStmt 0x5e61d10 <line:856:4, line:857:34>
| |     | `-VarDecl 0x5e61be0 <line:856:4, line:857:26> col:6 referenced __diff1 'const typename iterator_traits<_RAI1>::difference_type' cinit
| |     |   `-CXXOperatorCallExpr 0x5e61cd8 <col:16, col:26> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x5e61c88 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
| |     |     |-DeclRefExpr 0x5e61c48 <col:16> '_RAI1' lvalue ParmVar 0x5e61400 '__last1' '_RAI1'
| |     |     `-DeclRefExpr 0x5e61c68 <col:26> '_RAI1' lvalue ParmVar 0x5e61388 '__first1' '_RAI1'
| |     |-DeclStmt 0x5e61fa0 <line:858:4, line:859:34>
| |     | `-VarDecl 0x5e61e70 <line:858:4, line:859:26> col:6 referenced __diff2 'const typename iterator_traits<_RAI2>::difference_type' cinit
| |     |   `-CXXOperatorCallExpr 0x5e61f68 <col:16, col:26> '<dependent type>'
| |     |     |-UnresolvedLookupExpr 0x5e61f18 <col:24> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
| |     |     |-DeclRefExpr 0x5e61ed8 <col:16> '_RAI2' lvalue ParmVar 0x5e614f0 '__last2' '_RAI2'
| |     |     `-DeclRefExpr 0x5e61ef8 <col:26> '_RAI2' lvalue ParmVar 0x5e61478 '__first2' '_RAI2'
| |     `-ReturnStmt 0x5e621b0 <line:860:4, col:52>
| |       `-ConditionalOperator 0x5e62180 <col:11, col:52> '<dependent type>'
| |         |-CXXOperatorCallExpr 0x5e62060 <col:11, col:21> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x5e61ff8 <col:19> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5dcd6e8 0x5dedab8 0x5df1568 0x5e189a8 0x5e19018
| |         | |-DeclRefExpr 0x5e61fb8 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x5e61e70 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'
| |         | `-DeclRefExpr 0x5e61fd8 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x5e61be0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'
| |         |-CXXOperatorCallExpr 0x5e62128 <col:31, col:42> '<dependent type>'
| |         | |-UnresolvedLookupExpr 0x5e620d8 <col:40> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5df3ee8 0x5e1c568
| |         | |-DeclRefExpr 0x5e62098 <col:31> '_RAI1' lvalue ParmVar 0x5e61388 '__first1' '_RAI1'
| |         | `-DeclRefExpr 0x5e620b8 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x5e61e70 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'
| |         `-DeclRefExpr 0x5e62160 <col:52> '_RAI1' lvalue ParmVar 0x5e61400 '__last1' '_RAI1'
| `-FunctionTemplateDecl 0x5e61a48 <line:863:7, line:866:24> line:865:9 __cnd2
|   |-TemplateTypeParmDecl 0x5e61780 <line:863:16, col:25> col:25 referenced typename depth 0 index 0 _RAI
|   `-CXXMethodDecl 0x5e619a8 <line:864:9, line:866:24> line:865:9 __cnd2 'bool (_RAI, _RAI)' static
|     |-ParmVarDecl 0x5e61820 <col:16> col:20 '_RAI'
|     |-ParmVarDecl 0x5e61898 <col:22> col:26 '_RAI'
|     `-CompoundStmt 0x5e62208 <line:866:9, col:24>
|       `-ReturnStmt 0x5e621f8 <col:11, col:18>
|         `-CXXBoolLiteralExpr 0x5e621e8 <col:18> 'bool' true
|-FunctionTemplateDecl 0x5e62788 <line:869:3, line:889:5> line:871:5 __lexicographical_compare_impl
| |-TemplateTypeParmDecl 0x5e62220 <line:869:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e62298 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| |-TemplateTypeParmDecl 0x5e62308 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Compare
| `-FunctionDecl 0x5e626e8 <line:870:5, line:889:5> line:871:5 __lexicographical_compare_impl 'bool (_II1, _II1, _II2, _II2, _Compare)'
|   |-ParmVarDecl 0x5e623b0 <col:36, col:41> col:41 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e62428 <col:51, col:56> col:56 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e624a0 <line:872:8, col:13> col:13 referenced __first2 '_II2'
|   |-ParmVarDecl 0x5e62518 <col:23, col:28> col:28 referenced __last2 '_II2'
|   |-ParmVarDecl 0x5e62590 <line:873:8, col:17> col:17 referenced __comp '_Compare'
|   `-CompoundStmt 0x5e63600 <line:874:5, line:889:5>
|     |-DeclStmt 0x5e62978 <line:875:7, col:75>
|     | `-TypedefDecl 0x5e62920 <col:7, col:65> col:65 referenced _Category1 'typename iterator_traits<_II1>::iterator_category'
|     |   `-DependentNameType 0x5e628b0 'typename iterator_traits<_II1>::iterator_category' dependent
|     |-DeclStmt 0x5e62af8 <line:876:7, col:75>
|     | `-TypedefDecl 0x5e62aa0 <col:7, col:65> col:65 referenced _Category2 'typename iterator_traits<_II2>::iterator_category'
|     |   `-DependentNameType 0x5e62a30 'typename iterator_traits<_II2>::iterator_category' dependent
|     |-DeclStmt 0x5e62da0 <line:877:7, col:63>
|     | `-TypedefDecl 0x5e62d48 <col:7, col:53> col:53 referenced __rai_type 'std::__lc_rai<_Category1, _Category2>':'__lc_rai<_Category1, _Category2>'
|     |   `-ElaboratedType 0x5e62c60 'std::__lc_rai<_Category1, _Category2>' sugar dependent
|     |     `-TemplateSpecializationType 0x5e62c00 '__lc_rai<_Category1, _Category2>' dependent __lc_rai
|     |       |-TemplateArgument type '_Category1':'typename iterator_traits<_II1>::iterator_category'
|     |       `-TemplateArgument type '_Category2':'typename iterator_traits<_II2>::iterator_category'
|     |-BinaryOperator 0x5e62f48 <line:879:7, col:76> '<dependent type>' '='
|     | |-DeclRefExpr 0x5e62db8 <col:7> '_II1' lvalue ParmVar 0x5e62428 '__last1' '_II1'
|     | `-CallExpr 0x5e62f08 <col:17, col:76> '<dependent type>'
|     |   |-DependentScopeDeclRefExpr 0x5e62e50 <col:17, col:29> '<dependent type>' lvalue
|     |   |-DeclRefExpr 0x5e62e88 <col:40> '_II1' lvalue ParmVar 0x5e623b0 '__first1' '_II1'
|     |   |-DeclRefExpr 0x5e62ea8 <col:50> '_II1' lvalue ParmVar 0x5e62428 '__last1' '_II1'
|     |   |-DeclRefExpr 0x5e62ec8 <col:59> '_II2' lvalue ParmVar 0x5e624a0 '__first2' '_II2'
|     |   `-DeclRefExpr 0x5e62ee8 <col:69> '_II2' lvalue ParmVar 0x5e62518 '__last2' '_II2'
|     |-ForStmt 0x5e633c8 <line:880:7, line:887:2>
|     | |-<<<NULL>>>
|     | |-<<<NULL>>>
|     | |-BinaryOperator 0x5e63130 <line:880:14, col:73> '<dependent type>' '&&'
|     | | |-CXXOperatorCallExpr 0x5e63018 <col:14, col:26> '<dependent type>'
|     | | | |-UnresolvedLookupExpr 0x5e62fa8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | | |-DeclRefExpr 0x5e62f68 <col:14> '_II1' lvalue ParmVar 0x5e623b0 '__first1' '_II1'
|     | | | `-DeclRefExpr 0x5e62f88 <col:26> '_II1' lvalue ParmVar 0x5e62428 '__last1' '_II1'
|     | | `-CallExpr 0x5e63100 <col:37, col:73> '<dependent type>'
|     | |   |-DependentScopeDeclRefExpr 0x5e63088 <col:37, col:49> '<dependent type>' lvalue
|     | |   |-DeclRefExpr 0x5e630c0 <col:56> '_II2' lvalue ParmVar 0x5e624a0 '__first2' '_II2'
|     | |   `-DeclRefExpr 0x5e630e0 <col:66> '_II2' lvalue ParmVar 0x5e62518 '__last2' '_II2'
|     | |-BinaryOperator 0x5e631f8 <line:881:5, col:25> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e63170 <col:5, col:7> '<dependent type>' prefix '++' cannot overflow
|     | | | `-DeclRefExpr 0x5e63150 <col:7> '_II1' lvalue ParmVar 0x5e623b0 '__first1' '_II1'
|     | | `-CStyleCastExpr 0x5e631d0 <col:17, col:25> 'void' <ToVoid>
|     | |   `-UnaryOperator 0x5e631a8 <col:23, col:25> '<dependent type>' prefix '++' cannot overflow
|     | |     `-DeclRefExpr 0x5e63188 <col:25> '_II2' lvalue ParmVar 0x5e624a0 '__first2' '_II2'
|     | `-CompoundStmt 0x5e633a8 <line:882:2, line:887:2>
|     |   |-IfStmt 0x5e632c8 <line:883:4, line:884:13>
|     |   | |-CallExpr 0x5e63278 <line:883:8, col:33> '<dependent type>'
|     |   | | |-DeclRefExpr 0x5e63218 <col:8> '_Compare' lvalue ParmVar 0x5e62590 '__comp' '_Compare'
|     |   | | |-DeclRefExpr 0x5e63238 <col:15> '_II1' lvalue ParmVar 0x5e623b0 '__first1' '_II1'
|     |   | | `-DeclRefExpr 0x5e63258 <col:25> '_II2' lvalue ParmVar 0x5e624a0 '__first2' '_II2'
|     |   | `-ReturnStmt 0x5e632b8 <line:884:6, col:13>
|     |   |   `-CXXBoolLiteralExpr 0x5e632a8 <col:13> 'bool' true
|     |   `-IfStmt 0x5e63390 <line:885:4, line:886:13>
|     |     |-CallExpr 0x5e63340 <line:885:8, col:33> '<dependent type>'
|     |     | |-DeclRefExpr 0x5e632e0 <col:8> '_Compare' lvalue ParmVar 0x5e62590 '__comp' '_Compare'
|     |     | |-DeclRefExpr 0x5e63300 <col:15> '_II2' lvalue ParmVar 0x5e624a0 '__first2' '_II2'
|     |     | `-DeclRefExpr 0x5e63320 <col:25> '_II1' lvalue ParmVar 0x5e623b0 '__first1' '_II1'
|     |     `-ReturnStmt 0x5e63380 <line:886:6, col:13>
|     |       `-CXXBoolLiteralExpr 0x5e63370 <col:13> 'bool' false
|     `-ReturnStmt 0x5e635f0 <line:888:7, col:49>
|       `-BinaryOperator 0x5e635d0 <col:14, col:49> '<dependent type>' '&&'
|         |-CXXOperatorCallExpr 0x5e634b0 <col:14, col:26> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e63440 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
|         | |-DeclRefExpr 0x5e63400 <col:14> '_II1' lvalue ParmVar 0x5e623b0 '__first1' '_II1'
|         | `-DeclRefExpr 0x5e63420 <col:26> '_II1' lvalue ParmVar 0x5e62428 '__last1' '_II1'
|         `-CXXOperatorCallExpr 0x5e63598 <col:37, col:49> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e63528 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|           |-DeclRefExpr 0x5e634e8 <col:37> '_II2' lvalue ParmVar 0x5e624a0 '__first2' '_II2'
|           `-DeclRefExpr 0x5e63508 <col:49> '_II2' lvalue ParmVar 0x5e62518 '__last2' '_II2'
|-ClassTemplateDecl 0x5e63758 <line:891:3, line:896:5> line:892:12 __lexicographical_compare
| |-NonTypeTemplateParmDecl 0x5e63650 <line:891:12, col:17> col:17 'bool' depth 0 index 0 _BoolType
| |-CXXRecordDecl 0x5e636c8 <line:892:5, line:896:5> line:892:12 struct __lexicographical_compare definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x5e64bf0 <col:5, col:12> col:12 implicit struct __lexicographical_compare
| | `-FunctionTemplateDecl 0x5e65118 <line:894:7, line:895:48> col:21 __lc
| |   |-TemplateTypeParmDecl 0x5e64c80 <line:894:16, col:25> col:25 referenced typename depth 1 index 0 _II1
| |   |-TemplateTypeParmDecl 0x5e64cf8 <col:31, col:40> col:40 referenced typename depth 1 index 1 _II2
| |   `-CXXMethodDecl 0x5e65078 <line:895:9, col:48> col:21 __lc 'bool (_II1, _II1, _II2, _II2)' static
| |     |-ParmVarDecl 0x5e64d98 <col:26> col:30 '_II1'
| |     |-ParmVarDecl 0x5e64e10 <col:32> col:36 '_II1'
| |     |-ParmVarDecl 0x5e64e88 <col:38> col:42 '_II2'
| |     `-ParmVarDecl 0x5e64f00 <col:44> col:48 '_II2'
| `-ClassTemplateSpecialization 0x5e65ac8 '__lexicographical_compare'
|-FunctionTemplateDecl 0x5e657d0 parent 0x5e636c8 prev 0x5e65118 <line:899:5, line:907:7> line:902:7 __lc
| |-TemplateTypeParmDecl 0x5e65230 <line:899:14, col:23> col:23 referenced typename depth 1 index 0 _II1
| |-TemplateTypeParmDecl 0x5e652a8 <col:29, col:38> col:38 referenced typename depth 1 index 1 _II2
| `-CXXMethodDecl 0x5e656f8 parent 0x5e636c8 prev 0x5e65078 <line:898:3, line:907:7> line:902:7 __lc 'bool (_II1, _II1, _II2, _II2)'
|   |-ParmVarDecl 0x5e65498 <col:12, col:17> col:17 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e65510 <col:27, col:32> col:32 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e65588 <col:41, col:46> col:46 referenced __first2 '_II2'
|   |-ParmVarDecl 0x5e65600 <col:56, col:61> col:61 referenced __last2 '_II2'
|   `-CompoundStmt 0x5e65a78 <line:903:7, line:907:7>
|     `-ReturnStmt 0x5e65a68 <line:904:2, line:906:42>
|       `-CallExpr 0x5e65a20 <line:904:9, line:906:42> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e65880 <line:904:9, col:14> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_impl' 0x5e62788
|         |-DeclRefExpr 0x5e658c8 <col:45> '_II1' lvalue ParmVar 0x5e65498 '__first1' '_II1'
|         |-DeclRefExpr 0x5e658e8 <col:55> '_II1' lvalue ParmVar 0x5e65510 '__last1' '_II1'
|         |-DeclRefExpr 0x5e65908 <line:905:10> '_II2' lvalue ParmVar 0x5e65588 '__first2' '_II2'
|         |-DeclRefExpr 0x5e65928 <col:20> '_II2' lvalue ParmVar 0x5e65600 '__last2' '_II2'
|         `-CallExpr 0x5e65a00 <line:906:6, col:41> '__gnu_cxx::__ops::_Iter_less_iter'
|           `-ImplicitCastExpr 0x5e659e8 <col:6, col:24> '__gnu_cxx::__ops::_Iter_less_iter (*)()' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x5e65990 <col:6, col:24> '__gnu_cxx::__ops::_Iter_less_iter ()' lvalue Function 0x5e242d8 '__iter_less_iter' '__gnu_cxx::__ops::_Iter_less_iter ()'
|-ClassTemplateSpecializationDecl 0x5e65ac8 <line:909:3, line:924:5> line:910:12 struct __lexicographical_compare definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument integral 1
| |-CXXRecordDecl 0x5e65ce8 <col:5, col:12> col:12 implicit struct __lexicographical_compare
| `-FunctionTemplateDecl 0x5e66268 <line:912:7, line:923:2> line:914:9 __lc
|   |-TemplateTypeParmDecl 0x5e65d78 <line:912:16, col:25> col:25 referenced typename depth 0 index 0 _Tp
|   |-TemplateTypeParmDecl 0x5e65de8 <col:30, col:39> col:39 referenced typename depth 0 index 1 _Up
|   `-CXXMethodDecl 0x5e661c8 <line:913:9, line:923:2> line:914:9 __lc 'bool (const _Tp *, const _Tp *, const _Up *, const _Up *)' static
|     |-ParmVarDecl 0x5e65eb8 <col:14, col:25> col:25 referenced __first1 'const _Tp *'
|     |-ParmVarDecl 0x5e65f30 <col:35, col:46> col:46 referenced __last1 'const _Tp *'
|     |-ParmVarDecl 0x5e65fd8 <line:915:7, col:18> col:18 referenced __first2 'const _Up *'
|     |-ParmVarDecl 0x5e66050 <col:28, col:39> col:39 referenced __last2 'const _Up *'
|     `-CompoundStmt 0x5e670b8 <line:916:2, line:923:2>
|       |-DeclStmt 0x5e66438 <line:917:4, col:44>
|       | `-VarDecl 0x5e66308 <col:4, col:36> col:17 referenced __len1 'const std::size_t':'const unsigned long' cinit
|       |   `-CXXOperatorCallExpr 0x5e66400 <col:26, col:36> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e663b0 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       |     |-DeclRefExpr 0x5e66370 <col:26> 'const _Tp *' lvalue ParmVar 0x5e65f30 '__last1' 'const _Tp *'
|       |     `-DeclRefExpr 0x5e66390 <col:36> 'const _Tp *' lvalue ParmVar 0x5e65eb8 '__first1' 'const _Tp *'
|       |-DeclStmt 0x5e66590 <line:918:4, col:44>
|       | `-VarDecl 0x5e66460 <col:4, col:36> col:17 referenced __len2 'const std::size_t':'const unsigned long' cinit
|       |   `-CXXOperatorCallExpr 0x5e66558 <col:26, col:36> '<dependent type>'
|       |     |-UnresolvedLookupExpr 0x5e66508 <col:34> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|       |     |-DeclRefExpr 0x5e664c8 <col:26> 'const _Up *' lvalue ParmVar 0x5e66050 '__last2' 'const _Up *'
|       |     `-DeclRefExpr 0x5e664e8 <col:36> 'const _Up *' lvalue ParmVar 0x5e65fd8 '__first2' 'const _Up *'
|       |-IfStmt 0x5e66fe0 <line:919:4, line:921:26> has_var
|       | |-DeclStmt 0x5e67000 <line:919:8, col:52>
|       | | `-VarDecl 0x5e665b8 <col:8, col:52> col:21 referenced __len 'const std::size_t':'const unsigned long' cinit
|       | |   `-ImplicitCastExpr 0x5e66d30 <col:29, col:52> 'unsigned long':'unsigned long' <LValueToRValue>
|       | |     `-CallExpr 0x5e66d00 <col:29, col:52> 'const unsigned long':'const unsigned long' lvalue
|       | |       |-ImplicitCastExpr 0x5e66ce8 <col:29, col:34> 'const unsigned long &(*)(const unsigned long &, const unsigned long &)' <FunctionToPointerDecay>
|       | |       | `-DeclRefExpr 0x5e66ac0 <col:29, col:34> 'const unsigned long &(const unsigned long &, const unsigned long &)' lvalue Function 0x5e669b8 'min' 'const unsigned long &(const unsigned long &, const unsigned long &)' (FunctionTemplate 0x5e3edc8 'min')
|       | |       |-DeclRefExpr 0x5e66690 <col:38> 'const std::size_t':'const unsigned long' lvalue Var 0x5e66308 '__len1' 'const std::size_t':'const unsigned long'
|       | |       `-DeclRefExpr 0x5e666b0 <col:46> 'const std::size_t':'const unsigned long' lvalue Var 0x5e66460 '__len2' 'const std::size_t':'const unsigned long'
|       | |-ImplicitCastExpr 0x5e66d80 <col:21> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x5e66d68 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
|       | |   `-DeclRefExpr 0x5e66d48 <col:21> 'const std::size_t':'const unsigned long' lvalue Var 0x5e665b8 '__len' 'const std::size_t':'const unsigned long'
|       | `-IfStmt 0x5e66fa8 <line:920:6, line:921:26> has_var
|       |   |-DeclStmt 0x5e66fc8 <line:920:10, col:67>
|       |   | `-VarDecl 0x5e66db0 <col:10, col:67> col:14 referenced __result 'int' cinit
|       |   |   `-CallExpr 0x5e66e98 <col:25, col:67> '<dependent type>'
|       |   |     |-DeclRefExpr 0x5e66e18 <col:25> '<builtin fn type>' Function 0x5e5e230 '__builtin_memcmp' 'int (const void *, const void *, unsigned long) noexcept'
|       |   |     |-DeclRefExpr 0x5e66e38 <col:42> 'const _Tp *' lvalue ParmVar 0x5e65eb8 '__first1' 'const _Tp *'
|       |   |     |-DeclRefExpr 0x5e66e58 <col:52> 'const _Up *' lvalue ParmVar 0x5e65fd8 '__first2' 'const _Up *'
|       |   |     `-DeclRefExpr 0x5e66e78 <col:62> 'const std::size_t':'const unsigned long' lvalue Var 0x5e665b8 '__len' 'const std::size_t':'const unsigned long'
|       |   |-ImplicitCastExpr 0x5e66f08 <col:14> 'bool' <IntegralToBoolean>
|       |   | `-ImplicitCastExpr 0x5e66ef0 <col:14> 'int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x5e66ed0 <col:14> 'int' lvalue Var 0x5e66db0 '__result' 'int'
|       |   `-ReturnStmt 0x5e66f98 <line:921:8, col:26>
|       |     `-BinaryOperator 0x5e66f78 <col:15, col:26> 'bool' '<'
|       |       |-ImplicitCastExpr 0x5e66f60 <col:15> 'int' <LValueToRValue>
|       |       | `-DeclRefExpr 0x5e66f20 <col:15> 'int' lvalue Var 0x5e66db0 '__result' 'int'
|       |       `-IntegerLiteral 0x5e66f40 <col:26> 'int' 0
|       `-ReturnStmt 0x5e670a8 <line:922:4, col:20>
|         `-BinaryOperator 0x5e67088 <col:11, col:20> 'bool' '<'
|           |-ImplicitCastExpr 0x5e67058 <col:11> 'std::size_t':'unsigned long' <LValueToRValue>
|           | `-DeclRefExpr 0x5e67018 <col:11> 'const std::size_t':'const unsigned long' lvalue Var 0x5e66308 '__len1' 'const std::size_t':'const unsigned long'
|           `-ImplicitCastExpr 0x5e67070 <col:20> 'std::size_t':'unsigned long' <LValueToRValue>
|             `-DeclRefExpr 0x5e67038 <col:20> 'const std::size_t':'const unsigned long' lvalue Var 0x5e66460 '__len2' 'const std::size_t':'const unsigned long'
|-FunctionTemplateDecl 0x5e67548 <line:926:3, line:942:5> line:928:5 __lexicographical_compare_aux
| |-TemplateTypeParmDecl 0x5e670e8 <line:926:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e67158 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| `-FunctionDecl 0x5e674a8 <line:927:5, line:942:5> line:928:5 __lexicographical_compare_aux 'bool (_II1, _II1, _II2, _II2)' inline
|   |-ParmVarDecl 0x5e671f8 <col:35, col:40> col:40 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e67270 <col:50, col:55> col:55 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e672e8 <line:929:7, col:12> col:12 referenced __first2 '_II2'
|   |-ParmVarDecl 0x5e67360 <col:22, col:27> col:27 referenced __last2 '_II2'
|   `-CompoundStmt 0x5e68408 <line:930:5, line:942:5>
|     |-DeclStmt 0x5e67728 <line:931:7, col:69>
|     | `-TypedefDecl 0x5e676d0 <col:7, col:58> col:58 referenced _ValueType1 'typename iterator_traits<_II1>::value_type'
|     |   `-DependentNameType 0x5e67660 'typename iterator_traits<_II1>::value_type' dependent
|     |-DeclStmt 0x5e678a8 <line:932:7, col:69>
|     | `-TypedefDecl 0x5e67850 <col:7, col:58> col:58 referenced _ValueType2 'typename iterator_traits<_II2>::value_type'
|     |   `-DependentNameType 0x5e677e0 'typename iterator_traits<_II2>::value_type' dependent
|     |-DeclStmt 0x5e68198 <line:933:7, line:938:34>
|     | `-VarDecl 0x5e678d0 <line:933:7, line:938:33> line:933:18 referenced __simple 'const bool' cinit
|     |   `-ParenExpr 0x5e68178 <line:934:2, line:938:33> '<dependent type>'
|     |     `-BinaryOperator 0x5e68158 <line:934:3, line:938:26> '<dependent type>' '&&'
|     |       |-BinaryOperator 0x5e68038 <line:934:3, line:937:26> '<dependent type>' '&&'
|     |       | |-BinaryOperator 0x5e67f20 <line:934:3, line:936:49> '<dependent type>' '&&'
|     |       | | |-BinaryOperator 0x5e67da0 <line:934:3, line:935:49> '<dependent type>' '&&'
|     |       | | | |-BinaryOperator 0x5e67c08 <line:934:3, col:62> '<dependent type>' '&&'
|     |       | | | | |-DependentScopeDeclRefExpr 0x5e67a78 <col:3, col:27> '<dependent type>' lvalue
|     |       | | | | `-DependentScopeDeclRefExpr 0x5e67bd0 <col:38, col:62> '<dependent type>' lvalue
|     |       | | | `-UnaryOperator 0x5e67d88 <line:935:6, col:49> '<dependent type>' prefix '!' cannot overflow
|     |       | | |   `-DependentScopeDeclRefExpr 0x5e67d50 <col:7, col:49> '<dependent type>' lvalue
|     |       | | `-UnaryOperator 0x5e67f08 <line:936:6, col:49> '<dependent type>' prefix '!' cannot overflow
|     |       | |   `-DependentScopeDeclRefExpr 0x5e67ed0 <col:7, col:49> '<dependent type>' lvalue
|     |       | `-DependentScopeDeclRefExpr 0x5e68000 <line:937:6, col:26> '<dependent type>' lvalue
|     |       `-DependentScopeDeclRefExpr 0x5e68120 <line:938:6, col:26> '<dependent type>' lvalue
|     `-ReturnStmt 0x5e683f8 <line:940:7, line:941:29>
|       `-CallExpr 0x5e683b8 <line:940:14, line:941:29> '<dependent type>'
|         |-DependentScopeDeclRefExpr 0x5e68300 <line:940:14, col:56> '<dependent type>' lvalue
|         |-DeclRefExpr 0x5e68338 <col:61> '_II1' lvalue ParmVar 0x5e671f8 '__first1' '_II1'
|         |-DeclRefExpr 0x5e68358 <col:71> '_II1' lvalue ParmVar 0x5e67270 '__last1' '_II1'
|         |-DeclRefExpr 0x5e68378 <line:941:12> '_II2' lvalue ParmVar 0x5e672e8 '__first2' '_II2'
|         `-DeclRefExpr 0x5e68398 <col:22> '_II2' lvalue ParmVar 0x5e67360 '__last2' '_II2'
|-FunctionTemplateDecl 0x5e68938 <line:944:3, line:969:5> line:946:5 __lower_bound
| |-TemplateTypeParmDecl 0x5e68438 <line:944:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| |-TemplateTypeParmDecl 0x5e684a8 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| |-TemplateTypeParmDecl 0x5e68518 <col:53, col:62> col:62 referenced typename depth 0 index 2 _Compare
| `-FunctionDecl 0x5e68898 <line:945:5, line:969:5> line:946:5 __lower_bound '_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &, _Compare)'
|   |-ParmVarDecl 0x5e685c0 <col:19, col:36> col:36 referenced __first '_ForwardIterator'
|   |-ParmVarDecl 0x5e68638 <col:45, col:62> col:62 referenced __last '_ForwardIterator'
|   |-ParmVarDecl 0x5e686d8 <line:947:5, col:16> col:16 referenced __val 'const _Tp &'
|   |-ParmVarDecl 0x5e68750 <col:23, col:32> col:32 referenced __comp '_Compare'
|   `-CompoundStmt 0x5e69428 <line:948:5, line:969:5>
|     |-DeclStmt 0x5e68b18 <line:949:7, line:950:15>
|     | `-TypedefDecl 0x5e68ac0 <line:949:7, line:950:2> col:2 referenced _DistanceType 'typename iterator_traits<_ForwardIterator>::difference_type'
|     |   `-DependentNameType 0x5e68a50 'typename iterator_traits<_ForwardIterator>::difference_type' dependent
|     |-DeclStmt 0x5e68cb8 <line:952:7, col:59>
|     | `-VarDecl 0x5e68b60 <col:7, col:58> col:21 referenced __len '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' cinit
|     |   `-CallExpr 0x5e68c88 <col:29, col:58> '<dependent type>'
|     |     |-UnresolvedLookupExpr 0x5e68c00 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x5dda370
|     |     |-DeclRefExpr 0x5e68c48 <col:43> '_ForwardIterator' lvalue ParmVar 0x5e685c0 '__first' '_ForwardIterator'
|     |     `-DeclRefExpr 0x5e68c68 <col:52> '_ForwardIterator' lvalue ParmVar 0x5e68638 '__last' '_ForwardIterator'
|     |-WhileStmt 0x5e693e0 <line:954:7, line:967:2>
|     | |-CXXOperatorCallExpr 0x5e68d78 <line:954:14, col:22> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e68d10 <col:20> '<overloaded function type>' lvalue (ADL) = 'operator>' 0x5dce838 0x5dee6e8 0x5df2298 0x5e1a348 0x5e1a8e8
|     | | |-DeclRefExpr 0x5e68cd0 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68b60 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     | | `-IntegerLiteral 0x5e68cf0 <col:22> 'int' 0
|     | `-CompoundStmt 0x5e693b0 <line:955:2, line:967:2>
|     |   |-DeclStmt 0x5e68e88 <line:956:4, col:37>
|     |   | `-VarDecl 0x5e68dc0 <col:4, col:36> col:18 referenced __half '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' cinit
|     |   |   `-BinaryOperator 0x5e68e68 <col:27, col:36> '<dependent type>' '>>'
|     |   |     |-DeclRefExpr 0x5e68e28 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68b60 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     |   |     `-IntegerLiteral 0x5e68e48 <col:36> 'int' 1
|     |   |-DeclStmt 0x5e68f38 <line:957:4, col:39>
|     |   | `-VarDecl 0x5e68eb0 <col:4, col:32> col:21 referenced __middle '_ForwardIterator' cinit
|     |   |   `-DeclRefExpr 0x5e68f18 <col:32> '_ForwardIterator' lvalue ParmVar 0x5e685c0 '__first' '_ForwardIterator'
|     |   |-CallExpr 0x5e68ff8 <line:958:4, col:33> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x5e68f70 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = 'advance' 0x5ddb9f8
|     |   | |-DeclRefExpr 0x5e68fb8 <col:17> '_ForwardIterator' lvalue Var 0x5e68eb0 '__middle' '_ForwardIterator'
|     |   | `-DeclRefExpr 0x5e68fd8 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68dc0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     |   `-IfStmt 0x5e69388 <line:959:4, line:966:14> has_else
|     |     |-CallExpr 0x5e69088 <line:959:8, col:30> '<dependent type>'
|     |     | |-DeclRefExpr 0x5e69028 <col:8> '_Compare' lvalue ParmVar 0x5e68750 '__comp' '_Compare'
|     |     | |-DeclRefExpr 0x5e69048 <col:15> '_ForwardIterator' lvalue Var 0x5e68eb0 '__middle' '_ForwardIterator'
|     |     | `-DeclRefExpr 0x5e69068 <col:25> 'const _Tp' lvalue ParmVar 0x5e686d8 '__val' 'const _Tp &'
|     |     |-CompoundStmt 0x5e69300 <line:960:6, line:964:6>
|     |     | |-BinaryOperator 0x5e690f8 <line:961:8, col:18> '<dependent type>' '='
|     |     | | |-DeclRefExpr 0x5e690b8 <col:8> '_ForwardIterator' lvalue ParmVar 0x5e685c0 '__first' '_ForwardIterator'
|     |     | | `-DeclRefExpr 0x5e690d8 <col:18> '_ForwardIterator' lvalue Var 0x5e68eb0 '__middle' '_ForwardIterator'
|     |     | |-UnaryOperator 0x5e69138 <line:962:8, col:10> '<dependent type>' prefix '++' cannot overflow
|     |     | | `-DeclRefExpr 0x5e69118 <col:10> '_ForwardIterator' lvalue ParmVar 0x5e685c0 '__first' '_ForwardIterator'
|     |     | `-BinaryOperator 0x5e692e0 <line:963:8, col:33> '<dependent type>' '='
|     |     |   |-DeclRefExpr 0x5e69150 <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68b60 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     |     |   `-CXXOperatorCallExpr 0x5e692a8 <col:16, col:33> '<dependent type>'
|     |     |     |-UnresolvedLookupExpr 0x5e69258 <col:31> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|     |     |     |-CXXOperatorCallExpr 0x5e69200 <col:16, col:24> '<dependent type>'
|     |     |     | |-UnresolvedLookupExpr 0x5e691b0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator-' 0x5df3738 0x5e1bda8
|     |     |     | |-DeclRefExpr 0x5e69170 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68b60 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     |     |     | `-DeclRefExpr 0x5e69190 <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68dc0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     |     |     `-IntegerLiteral 0x5e69238 <col:33> 'int' 1
|     |     `-BinaryOperator 0x5e69368 <line:966:6, col:14> '<dependent type>' '='
|     |       |-DeclRefExpr 0x5e69328 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68b60 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     |       `-DeclRefExpr 0x5e69348 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x5e68dc0 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'
|     `-ReturnStmt 0x5e69418 <line:968:7, col:14>
|       `-DeclRefExpr 0x5e693f8 <col:14> '_ForwardIterator' lvalue ParmVar 0x5e685c0 '__first' '_ForwardIterator'
|-FunctionTemplateDecl 0x5e69848 <line:982:3, line:995:5> line:984:5 lower_bound
| |-TemplateTypeParmDecl 0x5e69458 <line:982:12, col:21> col:21 referenced typename depth 0 index 0 _ForwardIterator
| |-TemplateTypeParmDecl 0x5e694c8 <col:39, col:48> col:48 referenced typename depth 0 index 1 _Tp
| `-FunctionDecl 0x5e697a8 <line:983:5, line:995:5> line:984:5 lower_bound '_ForwardIterator (_ForwardIterator, _ForwardIterator, const _Tp &)' inline
|   |-ParmVarDecl 0x5e69568 <col:17, col:34> col:34 referenced __first '_ForwardIterator'
|   |-ParmVarDecl 0x5e695e0 <col:43, col:60> col:60 referenced __last '_ForwardIterator'
|   |-ParmVarDecl 0x5e69688 <line:985:3, col:14> col:14 referenced __val 'const _Tp &'
|   `-CompoundStmt 0x5e69aa0 <line:986:5, line:995:5>
|     |-NullStmt 0x5e698b8 <line:991:67>
|     `-ReturnStmt 0x5e69a90 <line:993:7, line:994:40>
|       `-CallExpr 0x5e69a50 <line:993:14, line:994:40> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e698e0 <line:993:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lower_bound' 0x5e68938
|         |-DeclRefExpr 0x5e69928 <col:33> '_ForwardIterator' lvalue ParmVar 0x5e69568 '__first' '_ForwardIterator'
|         |-DeclRefExpr 0x5e69948 <col:42> '_ForwardIterator' lvalue ParmVar 0x5e695e0 '__last' '_ForwardIterator'
|         |-DeclRefExpr 0x5e69968 <col:50> 'const _Tp' lvalue ParmVar 0x5e69688 '__val' 'const _Tp &'
|         `-CallExpr 0x5e69a30 <line:994:5, col:39> '__gnu_cxx::__ops::_Iter_less_val'
|           `-ImplicitCastExpr 0x5e69a18 <col:5, col:23> '__gnu_cxx::__ops::_Iter_less_val (*)()' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x5e699b8 <col:5, col:23> '__gnu_cxx::__ops::_Iter_less_val ()' lvalue Function 0x5e25468 '__iter_less_val' '__gnu_cxx::__ops::_Iter_less_val ()'
|-FunctionDecl 0x5e69b70 <line:999:3, line:1001:54> line:1000:3 constexpr __lg 'int (int)' inline
| |-ParmVarDecl 0x5e69ad8 <col:8, col:12> col:12 used __n 'int'
| `-CompoundStmt 0x5e6a048 <line:1001:3, col:54>
|   `-ReturnStmt 0x5e6a038 <col:5, col:51>
|     `-ImplicitCastExpr 0x5e6a020 <col:12, col:51> 'int' <IntegralCast>
|       `-BinaryOperator 0x5e6a000 <col:12, col:51> 'unsigned long' '-'
|         |-BinaryOperator 0x5e69ce0 <col:12, col:30> 'unsigned long' '-'
|         | |-BinaryOperator 0x5e69c88 <col:12, col:26> 'unsigned long' '*'
|         | | |-UnaryExprOrTypeTraitExpr 0x5e69c30 <col:12, col:22> 'unsigned long' sizeof 'int'
|         | | `-ImplicitCastExpr 0x5e69c70 <col:26> 'unsigned long' <IntegralCast>
|         | |   `-IntegerLiteral 0x5e69c50 <col:26> 'int' 8
|         | `-ImplicitCastExpr 0x5e69cc8 <col:30> 'unsigned long' <IntegralCast>
|         |   `-IntegerLiteral 0x5e69ca8 <col:30> 'int' 1
|         `-ImplicitCastExpr 0x5e69fe8 <col:34, col:51> 'unsigned long' <IntegralCast>
|           `-CallExpr 0x5e69f90 <col:34, col:51> 'int'
|             |-ImplicitCastExpr 0x5e69f78 <col:34> 'int (*)(unsigned int) noexcept' <BuiltinFnToFnPtr>
|             | `-DeclRefExpr 0x5e69ee0 <col:34> '<builtin fn type>' Function 0x5e69d80 '__builtin_clz' 'int (unsigned int) noexcept'
|             `-ImplicitCastExpr 0x5e69fd0 <col:48> 'unsigned int' <IntegralCast>
|               `-ImplicitCastExpr 0x5e69fb8 <col:48> 'int' <LValueToRValue>
|                 `-DeclRefExpr 0x5e69f00 <col:48> 'int' lvalue ParmVar 0x5e69ad8 '__n' 'int'
|-FunctionDecl 0x5e6a140 <line:1003:3, line:1005:54> line:1004:3 constexpr __lg 'unsigned int (unsigned int)' inline
| |-ParmVarDecl 0x5e6a078 <col:8, col:17> col:17 used __n 'unsigned int'
| `-CompoundStmt 0x5e6a3c8 <line:1005:3, col:54>
|   `-ReturnStmt 0x5e6a3b8 <col:5, col:51>
|     `-ImplicitCastExpr 0x5e6a3a0 <col:12, col:51> 'unsigned int' <IntegralCast>
|       `-BinaryOperator 0x5e6a380 <col:12, col:51> 'unsigned long' '-'
|         |-BinaryOperator 0x5e6a2b0 <col:12, col:30> 'unsigned long' '-'
|         | |-BinaryOperator 0x5e6a258 <col:12, col:26> 'unsigned long' '*'
|         | | |-UnaryExprOrTypeTraitExpr 0x5e6a200 <col:12, col:22> 'unsigned long' sizeof 'int'
|         | | `-ImplicitCastExpr 0x5e6a240 <col:26> 'unsigned long' <IntegralCast>
|         | |   `-IntegerLiteral 0x5e6a220 <col:26> 'int' 8
|         | `-ImplicitCastExpr 0x5e6a298 <col:30> 'unsigned long' <IntegralCast>
|         |   `-IntegerLiteral 0x5e6a278 <col:30> 'int' 1
|         `-ImplicitCastExpr 0x5e6a368 <col:34, col:51> 'unsigned long' <IntegralCast>
|           `-CallExpr 0x5e6a328 <col:34, col:51> 'int'
|             |-ImplicitCastExpr 0x5e6a310 <col:34> 'int (*)(unsigned int) noexcept' <BuiltinFnToFnPtr>
|             | `-DeclRefExpr 0x5e6a2d0 <col:34> '<builtin fn type>' Function 0x5e69d80 '__builtin_clz' 'int (unsigned int) noexcept'
|             `-ImplicitCastExpr 0x5e6a350 <col:48> 'unsigned int' <LValueToRValue>
|               `-DeclRefExpr 0x5e6a2f0 <col:48> 'unsigned int' lvalue ParmVar 0x5e6a078 '__n' 'unsigned int'
|-FunctionDecl 0x5e6a490 <line:1007:3, line:1009:56> line:1008:3 constexpr __lg 'long (long)' inline
| |-ParmVarDecl 0x5e6a3f8 <col:8, col:13> col:13 used __n 'long'
| `-CompoundStmt 0x5e6a998 <line:1009:3, col:56>
|   `-ReturnStmt 0x5e6a988 <col:5, col:53>
|     `-ImplicitCastExpr 0x5e6a970 <col:12, col:53> 'long' <IntegralCast>
|       `-BinaryOperator 0x5e6a950 <col:12, col:53> 'unsigned long' '-'
|         |-BinaryOperator 0x5e6a600 <col:12, col:31> 'unsigned long' '-'
|         | |-BinaryOperator 0x5e6a5a8 <col:12, col:27> 'unsigned long' '*'
|         | | |-UnaryExprOrTypeTraitExpr 0x5e6a550 <col:12, col:23> 'unsigned long' sizeof 'long'
|         | | `-ImplicitCastExpr 0x5e6a590 <col:27> 'unsigned long' <IntegralCast>
|         | |   `-IntegerLiteral 0x5e6a570 <col:27> 'int' 8
|         | `-ImplicitCastExpr 0x5e6a5e8 <col:31> 'unsigned long' <IntegralCast>
|         |   `-IntegerLiteral 0x5e6a5c8 <col:31> 'int' 1
|         `-ImplicitCastExpr 0x5e6a938 <col:35, col:53> 'unsigned long' <IntegralCast>
|           `-CallExpr 0x5e6a8e0 <col:35, col:53> 'int'
|             |-ImplicitCastExpr 0x5e6a8c8 <col:35> 'int (*)(unsigned long) noexcept' <BuiltinFnToFnPtr>
|             | `-DeclRefExpr 0x5e6a830 <col:35> '<builtin fn type>' Function 0x5e6a6d0 '__builtin_clzl' 'int (unsigned long) noexcept'
|             `-ImplicitCastExpr 0x5e6a920 <col:50> 'unsigned long' <IntegralCast>
|               `-ImplicitCastExpr 0x5e6a908 <col:50> 'long' <LValueToRValue>
|                 `-DeclRefExpr 0x5e6a850 <col:50> 'long' lvalue ParmVar 0x5e6a3f8 '__n' 'long'
|-FunctionDecl 0x5e6aa90 <line:1011:3, line:1013:56> line:1012:3 constexpr __lg 'unsigned long (unsigned long)' inline
| |-ParmVarDecl 0x5e6a9c8 <col:8, col:22> col:22 used __n 'unsigned long'
| `-CompoundStmt 0x5e6ad00 <line:1013:3, col:56>
|   `-ReturnStmt 0x5e6acf0 <col:5, col:53>
|     `-BinaryOperator 0x5e6acd0 <col:12, col:53> 'unsigned long' '-'
|       |-BinaryOperator 0x5e6ac00 <col:12, col:31> 'unsigned long' '-'
|       | |-BinaryOperator 0x5e6aba8 <col:12, col:27> 'unsigned long' '*'
|       | | |-UnaryExprOrTypeTraitExpr 0x5e6ab50 <col:12, col:23> 'unsigned long' sizeof 'long'
|       | | `-ImplicitCastExpr 0x5e6ab90 <col:27> 'unsigned long' <IntegralCast>
|       | |   `-IntegerLiteral 0x5e6ab70 <col:27> 'int' 8
|       | `-ImplicitCastExpr 0x5e6abe8 <col:31> 'unsigned long' <IntegralCast>
|       |   `-IntegerLiteral 0x5e6abc8 <col:31> 'int' 1
|       `-ImplicitCastExpr 0x5e6acb8 <col:35, col:53> 'unsigned long' <IntegralCast>
|         `-CallExpr 0x5e6ac78 <col:35, col:53> 'int'
|           |-ImplicitCastExpr 0x5e6ac60 <col:35> 'int (*)(unsigned long) noexcept' <BuiltinFnToFnPtr>
|           | `-DeclRefExpr 0x5e6ac20 <col:35> '<builtin fn type>' Function 0x5e6a6d0 '__builtin_clzl' 'int (unsigned long) noexcept'
|           `-ImplicitCastExpr 0x5e6aca0 <col:50> 'unsigned long' <LValueToRValue>
|             `-DeclRefExpr 0x5e6ac40 <col:50> 'unsigned long' lvalue ParmVar 0x5e6a9c8 '__n' 'unsigned long'
|-FunctionDecl 0x5e6adc8 <line:1015:3, line:1017:62> line:1016:3 constexpr __lg 'long long (long long)' inline
| |-ParmVarDecl 0x5e6ad30 <col:8, col:18> col:18 used __n 'long long'
| `-CompoundStmt 0x5e6b2d8 <line:1017:3, col:62>
|   `-ReturnStmt 0x5e6b2c8 <col:5, col:59>
|     `-ImplicitCastExpr 0x5e6b2b0 <col:12, col:59> 'long long' <IntegralCast>
|       `-BinaryOperator 0x5e6b290 <col:12, col:59> 'unsigned long' '-'
|         |-BinaryOperator 0x5e6af38 <col:12, col:36> 'unsigned long' '-'
|         | |-BinaryOperator 0x5e6aee0 <col:12, col:32> 'unsigned long' '*'
|         | | |-UnaryExprOrTypeTraitExpr 0x5e6ae88 <col:12, col:28> 'unsigned long' sizeof 'long long'
|         | | `-ImplicitCastExpr 0x5e6aec8 <col:32> 'unsigned long' <IntegralCast>
|         | |   `-IntegerLiteral 0x5e6aea8 <col:32> 'int' 8
|         | `-ImplicitCastExpr 0x5e6af20 <col:36> 'unsigned long' <IntegralCast>
|         |   `-IntegerLiteral 0x5e6af00 <col:36> 'int' 1
|         `-ImplicitCastExpr 0x5e6b278 <col:40, col:59> 'unsigned long' <IntegralCast>
|           `-CallExpr 0x5e6b220 <col:40, col:59> 'int'
|             |-ImplicitCastExpr 0x5e6b208 <col:40> 'int (*)(unsigned long long) noexcept' <BuiltinFnToFnPtr>
|             | `-DeclRefExpr 0x5e6b170 <col:40> '<builtin fn type>' Function 0x5e6b010 '__builtin_clzll' 'int (unsigned long long) noexcept'
|             `-ImplicitCastExpr 0x5e6b260 <col:56> 'unsigned long long' <IntegralCast>
|               `-ImplicitCastExpr 0x5e6b248 <col:56> 'long long' <LValueToRValue>
|                 `-DeclRefExpr 0x5e6b190 <col:56> 'long long' lvalue ParmVar 0x5e6ad30 '__n' 'long long'
|-FunctionDecl 0x5e6b3d0 <line:1019:3, line:1021:62> line:1020:3 constexpr __lg 'unsigned long long (unsigned long long)' inline
| |-ParmVarDecl 0x5e6b308 <col:8, col:27> col:27 used __n 'unsigned long long'
| `-CompoundStmt 0x5e6b658 <line:1021:3, col:62>
|   `-ReturnStmt 0x5e6b648 <col:5, col:59>
|     `-ImplicitCastExpr 0x5e6b630 <col:12, col:59> 'unsigned long long' <IntegralCast>
|       `-BinaryOperator 0x5e6b610 <col:12, col:59> 'unsigned long' '-'
|         |-BinaryOperator 0x5e6b540 <col:12, col:36> 'unsigned long' '-'
|         | |-BinaryOperator 0x5e6b4e8 <col:12, col:32> 'unsigned long' '*'
|         | | |-UnaryExprOrTypeTraitExpr 0x5e6b490 <col:12, col:28> 'unsigned long' sizeof 'long long'
|         | | `-ImplicitCastExpr 0x5e6b4d0 <col:32> 'unsigned long' <IntegralCast>
|         | |   `-IntegerLiteral 0x5e6b4b0 <col:32> 'int' 8
|         | `-ImplicitCastExpr 0x5e6b528 <col:36> 'unsigned long' <IntegralCast>
|         |   `-IntegerLiteral 0x5e6b508 <col:36> 'int' 1
|         `-ImplicitCastExpr 0x5e6b5f8 <col:40, col:59> 'unsigned long' <IntegralCast>
|           `-CallExpr 0x5e6b5b8 <col:40, col:59> 'int'
|             |-ImplicitCastExpr 0x5e6b5a0 <col:40> 'int (*)(unsigned long long) noexcept' <BuiltinFnToFnPtr>
|             | `-DeclRefExpr 0x5e6b560 <col:40> '<builtin fn type>' Function 0x5e6b010 '__builtin_clzll' 'int (unsigned long long) noexcept'
|             `-ImplicitCastExpr 0x5e6b5e0 <col:56> 'unsigned long long' <LValueToRValue>
|               `-DeclRefExpr 0x5e6b580 <col:56> 'unsigned long long' lvalue ParmVar 0x5e6b308 '__n' 'unsigned long long'
|-FunctionTemplateDecl 0x5e6b9f8 <line:1039:3, line:1054:5> line:1041:5 equal
| |-TemplateTypeParmDecl 0x5e6b670 <line:1039:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e6b6e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| `-FunctionDecl 0x5e6b958 <line:1040:5, line:1054:5> line:1041:5 equal 'bool (_II1, _II1, _II2)' inline
|   |-ParmVarDecl 0x5e6b788 <col:11, col:16> col:16 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e6b800 <col:26, col:31> col:31 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e6b878 <col:40, col:45> col:45 referenced __first2 '_II2'
|   `-CompoundStmt 0x5e6bd78 <line:1042:5, line:1054:5>
|     |-NullStmt 0x5e6ba68 <line:1049:56>
|     `-ReturnStmt 0x5e6bd68 <line:1051:7, line:1053:37>
|       `-CallExpr 0x5e6bd30 <line:1051:14, line:1053:37> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e6ba90 <line:1051:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__equal_aux' 0x5e5e9e8
|         |-CallExpr 0x5e6bb78 <col:31, col:57> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e6baf8 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|         | `-DeclRefExpr 0x5e6bb58 <col:49> '_II1' lvalue ParmVar 0x5e6b788 '__first1' '_II1'
|         |-CallExpr 0x5e6bc40 <line:1052:10, col:35> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e6bbc0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|         | `-DeclRefExpr 0x5e6bc20 <col:28> '_II1' lvalue ParmVar 0x5e6b800 '__last1' '_II1'
|         `-CallExpr 0x5e6bd08 <line:1053:10, col:36> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e6bc88 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           `-DeclRefExpr 0x5e6bce8 <col:28> '_II2' lvalue ParmVar 0x5e6b878 '__first2' '_II2'
|-FunctionTemplateDecl 0x5e6c268 <line:1071:3, line:1085:5> line:1073:5 equal
| |-TemplateTypeParmDecl 0x5e6bd98 <line:1071:12, col:21> col:21 referenced typename depth 0 index 0 _IIter1
| |-TemplateTypeParmDecl 0x5e6be08 <col:30, col:39> col:39 referenced typename depth 0 index 1 _IIter2
| |-TemplateTypeParmDecl 0x5e6be78 <col:48, col:57> col:57 referenced typename depth 0 index 2 _BinaryPredicate
| `-FunctionDecl 0x5e6c1c8 <line:1072:5, line:1085:5> line:1073:5 equal 'bool (_IIter1, _IIter1, _IIter2, _BinaryPredicate)' inline
|   |-ParmVarDecl 0x5e6bf20 <col:11, col:19> col:19 referenced __first1 '_IIter1'
|   |-ParmVarDecl 0x5e6bf98 <col:29, col:37> col:37 referenced __last1 '_IIter1'
|   |-ParmVarDecl 0x5e6c010 <line:1074:4, col:12> col:12 referenced __first2 '_IIter2'
|   |-ParmVarDecl 0x5e6c088 <col:22, col:39> col:39 referenced __binary_pred '_BinaryPredicate'
|   `-CompoundStmt 0x5e6c638 <line:1075:5, line:1085:5>
|     |-NullStmt 0x5e6c2e0 <line:1079:56>
|     |-ForStmt 0x5e6c5e0 <line:1081:7, line:1083:11>
|     | |-<<<NULL>>>
|     | |-<<<NULL>>>
|     | |-CXXOperatorCallExpr 0x5e6c398 <line:1081:14, col:26> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5e6c328 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | |-DeclRefExpr 0x5e6c2e8 <col:14> '_IIter1' lvalue ParmVar 0x5e6bf20 '__first1' '_IIter1'
|     | | `-DeclRefExpr 0x5e6c308 <col:26> '_IIter1' lvalue ParmVar 0x5e6bf98 '__last1' '_IIter1'
|     | |-BinaryOperator 0x5e6c478 <col:35, col:55> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e6c3f0 <col:35, col:37> '<dependent type>' prefix '++' cannot overflow
|     | | | `-DeclRefExpr 0x5e6c3d0 <col:37> '_IIter1' lvalue ParmVar 0x5e6bf20 '__first1' '_IIter1'
|     | | `-CStyleCastExpr 0x5e6c450 <col:47, col:55> 'void' <ToVoid>
|     | |   `-UnaryOperator 0x5e6c428 <col:53, col:55> '<dependent type>' prefix '++' cannot overflow
|     | |     `-DeclRefExpr 0x5e6c408 <col:55> '_IIter2' lvalue ParmVar 0x5e6c010 '__first2' '_IIter2'
|     | `-IfStmt 0x5e6c5c8 <line:1082:2, line:1083:11>
|     |   |-UnaryOperator 0x5e6c590 <line:1082:6, col:47> 'bool' prefix '!' cannot overflow
|     |   | `-CXXUnresolvedConstructExpr 0x5e6c568 <col:7, col:47> 'bool' 'bool'
|     |   |   `-CallExpr 0x5e6c538 <col:12, col:46> '<dependent type>'
|     |   |     |-DeclRefExpr 0x5e6c4a8 <col:12> '_BinaryPredicate' lvalue ParmVar 0x5e6c088 '__binary_pred' '_BinaryPredicate'
|     |   |     |-UnaryOperator 0x5e6c4e8 <col:26, col:27> '<dependent type>' prefix '*' cannot overflow
|     |   |     | `-DeclRefExpr 0x5e6c4c8 <col:27> '_IIter1' lvalue ParmVar 0x5e6bf20 '__first1' '_IIter1'
|     |   |     `-UnaryOperator 0x5e6c520 <col:37, col:38> '<dependent type>' prefix '*' cannot overflow
|     |   |       `-DeclRefExpr 0x5e6c500 <col:38> '_IIter2' lvalue ParmVar 0x5e6c010 '__first2' '_IIter2'
|     |   `-ReturnStmt 0x5e6c5b8 <line:1083:4, col:11>
|     |     `-CXXBoolLiteralExpr 0x5e6c5a8 <col:11> 'bool' false
|     `-ReturnStmt 0x5e6c628 <line:1084:7, col:14>
|       `-CXXBoolLiteralExpr 0x5e6c618 <col:14> 'bool' true
|-FunctionTemplateDecl 0x5e6ca78 <line:1104:3, line:1135:5> line:1106:5 equal
| |-TemplateTypeParmDecl 0x5e6c660 <line:1104:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e6c6d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| `-FunctionDecl 0x5e6c9d8 <line:1105:5, line:1135:5> line:1106:5 equal 'bool (_II1, _II1, _II2, _II2)' inline
|   |-ParmVarDecl 0x5e6c778 <col:11, col:16> col:16 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e6c7f0 <col:26, col:31> col:31 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e6c868 <col:40, col:45> col:45 referenced __first2 '_II2'
|   |-ParmVarDecl 0x5e6c8e0 <col:55, col:60> col:60 referenced __last2 '_II2'
|   `-CompoundStmt 0x5e6e060 <line:1107:5, line:1135:5>
|     |-NullStmt 0x5e6caf0 <line:1114:56>
|     |-NullStmt 0x5e6caf8 <line:1115:56>
|     |-DeclStmt 0x5e6cb70 <line:1117:7, col:48>
|     | `-TypeAliasDecl 0x5e6cb10 <col:7, col:22> col:13 referenced _RATag 'std::random_access_iterator_tag'
|     |   `-RecordType 0x5dd3a20 'std::random_access_iterator_tag'
|     |     `-CXXRecord 0x5dd3990 'random_access_iterator_tag'
|     |-DeclStmt 0x5e6cd30 <line:1118:7, col:70>
|     | `-TypeAliasDecl 0x5e6ccd0 <col:7, col:53> col:13 referenced _Cat1 'typename iterator_traits<_II1>::iterator_category'
|     |   `-DependentNameType 0x5e6cc60 'typename iterator_traits<_II1>::iterator_category' dependent
|     |-DeclStmt 0x5e6cec0 <line:1119:7, col:70>
|     | `-TypeAliasDecl 0x5e6ce60 <col:7, col:53> col:13 referenced _Cat2 'typename iterator_traits<_II2>::iterator_category'
|     |   `-DependentNameType 0x5e6cdf0 'typename iterator_traits<_II2>::iterator_category' dependent
|     |-DeclStmt 0x5e6d408 <line:1120:7, col:78>
|     | `-TypeAliasDecl 0x5e6d3a8 <col:7, col:77> col:13 referenced _RAIters '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
|     |   `-TemplateSpecializationType 0x5e6d2c0 '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' dependent __and_
|     |     |-TemplateArgument type 'is_same<_Cat1, _RATag>'
|     |     `-TemplateArgument type 'is_same<_Cat2, _RATag>'
|     |-IfStmt 0x5e6d9d0 <line:1121:7, line:1128:2>
|     | |-CXXUnresolvedConstructExpr 0x5e6d450 <line:1121:11, col:20> '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
|     | `-CompoundStmt 0x5e6d9a0 <line:1122:2, line:1128:2>
|     |   |-DeclStmt 0x5e6d5e0 <line:1123:4, col:48>
|     |   | `-VarDecl 0x5e6d480 <col:4, col:47> col:9 referenced __d1 'auto' cinit
|     |   |   `-CallExpr 0x5e6d590 <col:16, col:47> '<dependent type>'
|     |   |     |-UnresolvedLookupExpr 0x5e6d508 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x5dda370
|     |   |     |-DeclRefExpr 0x5e6d550 <col:30> '_II1' lvalue ParmVar 0x5e6c778 '__first1' '_II1'
|     |   |     `-DeclRefExpr 0x5e6d570 <col:40> '_II1' lvalue ParmVar 0x5e6c7f0 '__last1' '_II1'
|     |   |-DeclStmt 0x5e6d748 <line:1124:4, col:48>
|     |   | `-VarDecl 0x5e6d608 <col:4, col:47> col:9 referenced __d2 'auto' cinit
|     |   |   `-CallExpr 0x5e6d718 <col:16, col:47> '<dependent type>'
|     |   |     |-UnresolvedLookupExpr 0x5e6d690 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x5dda370
|     |   |     |-DeclRefExpr 0x5e6d6d8 <col:30> '_II2' lvalue ParmVar 0x5e6c868 '__first2' '_II2'
|     |   |     `-DeclRefExpr 0x5e6d6f8 <col:40> '_II2' lvalue ParmVar 0x5e6c8e0 '__last2' '_II2'
|     |   |-IfStmt 0x5e6d868 <line:1125:4, line:1126:13>
|     |   | |-CXXOperatorCallExpr 0x5e6d810 <line:1125:8, col:16> '<dependent type>'
|     |   | | |-UnresolvedLookupExpr 0x5e6d7a0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     |   | | |-DeclRefExpr 0x5e6d760 <col:8> 'auto' lvalue Var 0x5e6d480 '__d1' 'auto'
|     |   | | `-DeclRefExpr 0x5e6d780 <col:16> 'auto' lvalue Var 0x5e6d608 '__d2' 'auto'
|     |   | `-ReturnStmt 0x5e6d858 <line:1126:6, col:13>
|     |   |   `-CXXBoolLiteralExpr 0x5e6d848 <col:13> 'bool' false
|     |   `-ReturnStmt 0x5e6d990 <line:1127:4, col:49>
|     |     `-CallExpr 0x5e6d958 <col:11, col:49> '<dependent type>'
|     |       |-UnresolvedLookupExpr 0x5e6d8a0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = 'equal' 0x5e6b9f8 0x5e6c268 0x5e6ca78
|     |       |-DeclRefExpr 0x5e6d8f8 <col:22> '_II1' lvalue ParmVar 0x5e6c778 '__first1' '_II1'
|     |       |-DeclRefExpr 0x5e6d918 <col:32> '_II1' lvalue ParmVar 0x5e6c7f0 '__last1' '_II1'
|     |       `-DeclRefExpr 0x5e6d938 <col:41> '_II2' lvalue ParmVar 0x5e6c868 '__first2' '_II2'
|     |-ForStmt 0x5e6de28 <line:1130:7, line:1133:11>
|     | |-<<<NULL>>>
|     | |-<<<NULL>>>
|     | |-BinaryOperator 0x5e6dbb8 <line:1130:14, col:49> '<dependent type>' '&&'
|     | | |-CXXOperatorCallExpr 0x5e6da98 <col:14, col:26> '<dependent type>'
|     | | | |-UnresolvedLookupExpr 0x5e6da28 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | | |-DeclRefExpr 0x5e6d9e8 <col:14> '_II1' lvalue ParmVar 0x5e6c778 '__first1' '_II1'
|     | | | `-DeclRefExpr 0x5e6da08 <col:26> '_II1' lvalue ParmVar 0x5e6c7f0 '__last1' '_II1'
|     | | `-CXXOperatorCallExpr 0x5e6db80 <col:37, col:49> '<dependent type>'
|     | |   |-UnresolvedLookupExpr 0x5e6db10 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | |   |-DeclRefExpr 0x5e6dad0 <col:37> '_II2' lvalue ParmVar 0x5e6c868 '__first2' '_II2'
|     | |   `-DeclRefExpr 0x5e6daf0 <col:49> '_II2' lvalue ParmVar 0x5e6c8e0 '__last2' '_II2'
|     | |-BinaryOperator 0x5e6dc80 <line:1131:4, col:24> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e6dbf8 <col:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     | | | `-DeclRefExpr 0x5e6dbd8 <col:6> '_II1' lvalue ParmVar 0x5e6c778 '__first1' '_II1'
|     | | `-CStyleCastExpr 0x5e6dc58 <col:16, col:24> 'void' <ToVoid>
|     | |   `-UnaryOperator 0x5e6dc30 <col:22, col:24> '<dependent type>' prefix '++' cannot overflow
|     | |     `-DeclRefExpr 0x5e6dc10 <col:24> '_II2' lvalue ParmVar 0x5e6c868 '__first2' '_II2'
|     | `-IfStmt 0x5e6de10 <line:1132:2, line:1133:11>
|     |   |-UnaryOperator 0x5e6ddd8 <line:1132:6, col:30> '<dependent type>' prefix '!' cannot overflow
|     |   | `-ParenExpr 0x5e6ddb8 <col:7, col:30> '<dependent type>'
|     |   |   `-CXXOperatorCallExpr 0x5e6dd80 <col:8, col:22> '<dependent type>'
|     |   |     |-UnresolvedLookupExpr 0x5e6dd10 <col:18> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
|     |   |     |-UnaryOperator 0x5e6dcc0 <col:8, col:9> '<dependent type>' prefix '*' cannot overflow
|     |   |     | `-DeclRefExpr 0x5e6dca0 <col:9> '_II1' lvalue ParmVar 0x5e6c778 '__first1' '_II1'
|     |   |     `-UnaryOperator 0x5e6dcf8 <col:21, col:22> '<dependent type>' prefix '*' cannot overflow
|     |   |       `-DeclRefExpr 0x5e6dcd8 <col:22> '_II2' lvalue ParmVar 0x5e6c868 '__first2' '_II2'
|     |   `-ReturnStmt 0x5e6de00 <line:1133:4, col:11>
|     |     `-CXXBoolLiteralExpr 0x5e6ddf0 <col:11> 'bool' false
|     `-ReturnStmt 0x5e6e050 <line:1134:7, col:49>
|       `-BinaryOperator 0x5e6e030 <col:14, col:49> '<dependent type>' '&&'
|         |-CXXOperatorCallExpr 0x5e6df10 <col:14, col:26> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e6dea0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
|         | |-DeclRefExpr 0x5e6de60 <col:14> '_II1' lvalue ParmVar 0x5e6c778 '__first1' '_II1'
|         | `-DeclRefExpr 0x5e6de80 <col:26> '_II1' lvalue ParmVar 0x5e6c7f0 '__last1' '_II1'
|         `-CXXOperatorCallExpr 0x5e6dff8 <col:37, col:49> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e6df88 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
|           |-DeclRefExpr 0x5e6df48 <col:37> '_II2' lvalue ParmVar 0x5e6c868 '__first2' '_II2'
|           `-DeclRefExpr 0x5e6df68 <col:49> '_II2' lvalue ParmVar 0x5e6c8e0 '__last2' '_II2'
|-FunctionTemplateDecl 0x5e6e5c8 <line:1153:3, line:1183:5> line:1155:5 equal
| |-TemplateTypeParmDecl 0x5e6e0b8 <line:1153:12, col:21> col:21 referenced typename depth 0 index 0 _IIter1
| |-TemplateTypeParmDecl 0x5e6e128 <col:30, col:39> col:39 referenced typename depth 0 index 1 _IIter2
| |-TemplateTypeParmDecl 0x5e6e198 <col:48, col:57> col:57 referenced typename depth 0 index 2 _BinaryPredicate
| `-FunctionDecl 0x5e6e528 <line:1154:5, line:1183:5> line:1155:5 equal 'bool (_IIter1, _IIter1, _IIter2, _IIter2, _BinaryPredicate)' inline
|   |-ParmVarDecl 0x5e6e240 <col:11, col:19> col:19 referenced __first1 '_IIter1'
|   |-ParmVarDecl 0x5e6e2b8 <col:29, col:37> col:37 referenced __last1 '_IIter1'
|   |-ParmVarDecl 0x5e6e330 <line:1156:4, col:12> col:12 referenced __first2 '_IIter2'
|   |-ParmVarDecl 0x5e6e3a8 <col:22, col:30> col:30 referenced __last2 '_IIter2'
|   |-ParmVarDecl 0x5e6e420 <col:39, col:56> col:56 referenced __binary_pred '_BinaryPredicate'
|   `-CompoundStmt 0x5e6fa50 <line:1157:5, line:1183:5>
|     |-NullStmt 0x5e6e648 <line:1161:56>
|     |-NullStmt 0x5e6e650 <line:1162:56>
|     |-DeclStmt 0x5e6e6c8 <line:1164:7, col:48>
|     | `-TypeAliasDecl 0x5e6e668 <col:7, col:22> col:13 referenced _RATag 'std::random_access_iterator_tag'
|     |   `-RecordType 0x5dd3a20 'std::random_access_iterator_tag'
|     |     `-CXXRecord 0x5dd3990 'random_access_iterator_tag'
|     |-DeclStmt 0x5e6e850 <line:1165:7, col:73>
|     | `-TypeAliasDecl 0x5e6e7f0 <col:7, col:56> col:13 referenced _Cat1 'typename iterator_traits<_IIter1>::iterator_category'
|     |   `-DependentNameType 0x5e6e780 'typename iterator_traits<_IIter1>::iterator_category' dependent
|     |-DeclStmt 0x5e6e9e0 <line:1166:7, col:73>
|     | `-TypeAliasDecl 0x5e6e980 <col:7, col:56> col:13 referenced _Cat2 'typename iterator_traits<_IIter2>::iterator_category'
|     |   `-DependentNameType 0x5e6e910 'typename iterator_traits<_IIter2>::iterator_category' dependent
|     |-DeclStmt 0x5e6ee28 <line:1167:7, col:78>
|     | `-TypeAliasDecl 0x5e6edc8 <col:7, col:77> col:13 referenced _RAIters '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
|     |   `-TemplateSpecializationType 0x5e6ece0 '__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' dependent __and_
|     |     |-TemplateArgument type 'is_same<_Cat1, _RATag>'
|     |     `-TemplateArgument type 'is_same<_Cat2, _RATag>'
|     |-IfStmt 0x5e6f400 <line:1168:7, line:1176:2>
|     | |-CXXUnresolvedConstructExpr 0x5e6ee70 <line:1168:11, col:20> '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >' '_RAIters':'__and_<is_same<_Cat1, _RATag>, is_same<_Cat2, _RATag> >'
|     | `-CompoundStmt 0x5e6f3d0 <line:1169:2, line:1176:2>
|     |   |-DeclStmt 0x5e6efe0 <line:1170:4, col:48>
|     |   | `-VarDecl 0x5e6eea0 <col:4, col:47> col:9 referenced __d1 'auto' cinit
|     |   |   `-CallExpr 0x5e6efb0 <col:16, col:47> '<dependent type>'
|     |   |     |-UnresolvedLookupExpr 0x5e6ef28 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x5dda370
|     |   |     |-DeclRefExpr 0x5e6ef70 <col:30> '_IIter1' lvalue ParmVar 0x5e6e240 '__first1' '_IIter1'
|     |   |     `-DeclRefExpr 0x5e6ef90 <col:40> '_IIter1' lvalue ParmVar 0x5e6e2b8 '__last1' '_IIter1'
|     |   |-DeclStmt 0x5e6f148 <line:1171:4, col:48>
|     |   | `-VarDecl 0x5e6f008 <col:4, col:47> col:9 referenced __d2 'auto' cinit
|     |   |   `-CallExpr 0x5e6f118 <col:16, col:47> '<dependent type>'
|     |   |     |-UnresolvedLookupExpr 0x5e6f090 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = 'distance' 0x5dda370
|     |   |     |-DeclRefExpr 0x5e6f0d8 <col:30> '_IIter2' lvalue ParmVar 0x5e6e330 '__first2' '_IIter2'
|     |   |     `-DeclRefExpr 0x5e6f0f8 <col:40> '_IIter2' lvalue ParmVar 0x5e6e3a8 '__last2' '_IIter2'
|     |   |-IfStmt 0x5e6f268 <line:1172:4, line:1173:13>
|     |   | |-CXXOperatorCallExpr 0x5e6f210 <line:1172:8, col:16> '<dependent type>'
|     |   | | |-UnresolvedLookupExpr 0x5e6f1a0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     |   | | |-DeclRefExpr 0x5e6f160 <col:8> 'auto' lvalue Var 0x5e6eea0 '__d1' 'auto'
|     |   | | `-DeclRefExpr 0x5e6f180 <col:16> 'auto' lvalue Var 0x5e6f008 '__d2' 'auto'
|     |   | `-ReturnStmt 0x5e6f258 <line:1173:6, col:13>
|     |   |   `-CXXBoolLiteralExpr 0x5e6f248 <col:13> 'bool' false
|     |   `-ReturnStmt 0x5e6f3c0 <line:1174:4, line:1175:25>
|     |     `-CallExpr 0x5e6f380 <line:1174:11, line:1175:25> '<dependent type>'
|     |       |-UnresolvedLookupExpr 0x5e6f2a0 <line:1174:11, col:16> '<overloaded function type>' lvalue (no ADL) = 'equal' 0x5e6b9f8 0x5e6c268 0x5e6ca78 0x5e6e5c8
|     |       |-DeclRefExpr 0x5e6f300 <col:22> '_IIter1' lvalue ParmVar 0x5e6e240 '__first1' '_IIter1'
|     |       |-DeclRefExpr 0x5e6f320 <col:32> '_IIter1' lvalue ParmVar 0x5e6e2b8 '__last1' '_IIter1'
|     |       |-DeclRefExpr 0x5e6f340 <col:41> '_IIter2' lvalue ParmVar 0x5e6e330 '__first2' '_IIter2'
|     |       `-DeclRefExpr 0x5e6f360 <line:1175:12> '_BinaryPredicate' lvalue ParmVar 0x5e6e420 '__binary_pred' '_BinaryPredicate'
|     |-ForStmt 0x5e6f818 <line:1178:7, line:1181:11>
|     | |-<<<NULL>>>
|     | |-<<<NULL>>>
|     | |-BinaryOperator 0x5e6f5e8 <line:1178:14, col:49> '<dependent type>' '&&'
|     | | |-CXXOperatorCallExpr 0x5e6f4c8 <col:14, col:26> '<dependent type>'
|     | | | |-UnresolvedLookupExpr 0x5e6f458 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | | |-DeclRefExpr 0x5e6f418 <col:14> '_IIter1' lvalue ParmVar 0x5e6e240 '__first1' '_IIter1'
|     | | | `-DeclRefExpr 0x5e6f438 <col:26> '_IIter1' lvalue ParmVar 0x5e6e2b8 '__last1' '_IIter1'
|     | | `-CXXOperatorCallExpr 0x5e6f5b0 <col:37, col:49> '<dependent type>'
|     | |   |-UnresolvedLookupExpr 0x5e6f540 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | |   |-DeclRefExpr 0x5e6f500 <col:37> '_IIter2' lvalue ParmVar 0x5e6e330 '__first2' '_IIter2'
|     | |   `-DeclRefExpr 0x5e6f520 <col:49> '_IIter2' lvalue ParmVar 0x5e6e3a8 '__last2' '_IIter2'
|     | |-BinaryOperator 0x5e6f6b0 <line:1179:4, col:24> '<dependent type>' ','
|     | | |-UnaryOperator 0x5e6f628 <col:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     | | | `-DeclRefExpr 0x5e6f608 <col:6> '_IIter1' lvalue ParmVar 0x5e6e240 '__first1' '_IIter1'
|     | | `-CStyleCastExpr 0x5e6f688 <col:16, col:24> 'void' <ToVoid>
|     | |   `-UnaryOperator 0x5e6f660 <col:22, col:24> '<dependent type>' prefix '++' cannot overflow
|     | |     `-DeclRefExpr 0x5e6f640 <col:24> '_IIter2' lvalue ParmVar 0x5e6e330 '__first2' '_IIter2'
|     | `-IfStmt 0x5e6f800 <line:1180:2, line:1181:11>
|     |   |-UnaryOperator 0x5e6f7c8 <line:1180:6, col:47> 'bool' prefix '!' cannot overflow
|     |   | `-CXXUnresolvedConstructExpr 0x5e6f7a0 <col:7, col:47> 'bool' 'bool'
|     |   |   `-CallExpr 0x5e6f770 <col:12, col:46> '<dependent type>'
|     |   |     |-DeclRefExpr 0x5e6f6e0 <col:12> '_BinaryPredicate' lvalue ParmVar 0x5e6e420 '__binary_pred' '_BinaryPredicate'
|     |   |     |-UnaryOperator 0x5e6f720 <col:26, col:27> '<dependent type>' prefix '*' cannot overflow
|     |   |     | `-DeclRefExpr 0x5e6f700 <col:27> '_IIter1' lvalue ParmVar 0x5e6e240 '__first1' '_IIter1'
|     |   |     `-UnaryOperator 0x5e6f758 <col:37, col:38> '<dependent type>' prefix '*' cannot overflow
|     |   |       `-DeclRefExpr 0x5e6f738 <col:38> '_IIter2' lvalue ParmVar 0x5e6e330 '__first2' '_IIter2'
|     |   `-ReturnStmt 0x5e6f7f0 <line:1181:4, col:11>
|     |     `-CXXBoolLiteralExpr 0x5e6f7e0 <col:11> 'bool' false
|     `-ReturnStmt 0x5e6fa40 <line:1182:7, col:49>
|       `-BinaryOperator 0x5e6fa20 <col:14, col:49> '<dependent type>' '&&'
|         |-CXXOperatorCallExpr 0x5e6f900 <col:14, col:26> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e6f890 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
|         | |-DeclRefExpr 0x5e6f850 <col:14> '_IIter1' lvalue ParmVar 0x5e6e240 '__first1' '_IIter1'
|         | `-DeclRefExpr 0x5e6f870 <col:26> '_IIter1' lvalue ParmVar 0x5e6e2b8 '__last1' '_IIter1'
|         `-CXXOperatorCallExpr 0x5e6f9e8 <col:37, col:49> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e6f978 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5bfd038 0x5dcc038 0x5ded458 0x5df0e78 0x5e14838 0x5e14ee8
|           |-DeclRefExpr 0x5e6f938 <col:37> '_IIter2' lvalue ParmVar 0x5e6e330 '__first2' '_IIter2'
|           `-DeclRefExpr 0x5e6f958 <col:49> '_IIter2' lvalue ParmVar 0x5e6e3a8 '__last2' '_IIter2'
|-FunctionTemplateDecl 0x5e6feb8 <line:1201:3, line:1222:5> line:1203:5 lexicographical_compare
| |-TemplateTypeParmDecl 0x5e6faa8 <line:1201:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e6fb18 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| `-FunctionDecl 0x5e6fe18 <line:1202:5, line:1222:5> line:1203:5 lexicographical_compare 'bool (_II1, _II1, _II2, _II2)' inline
|   |-ParmVarDecl 0x5e6fbb8 <col:29, col:34> col:34 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e6fc30 <col:44, col:49> col:49 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e6fca8 <line:1204:8, col:13> col:13 referenced __first2 '_II2'
|   |-ParmVarDecl 0x5e6fd20 <col:23, col:28> col:28 referenced __last2 '_II2'
|   `-CompoundStmt 0x5e70318 <line:1205:5, line:1222:5>
|     |-NullStmt 0x5e6ff30 <line:1215:56>
|     |-NullStmt 0x5e6ff38 <line:1216:56>
|     `-ReturnStmt 0x5e70308 <line:1218:7, line:1221:33>
|       `-CallExpr 0x5e702c8 <line:1218:14, line:1221:33> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e6ff60 <line:1218:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_aux' 0x5e67548
|         |-CallExpr 0x5e70048 <col:49, col:75> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e6ffc8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|         | `-DeclRefExpr 0x5e70028 <col:67> '_II1' lvalue ParmVar 0x5e6fbb8 '__first1' '_II1'
|         |-CallExpr 0x5e70110 <line:1219:7, col:32> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e70090 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|         | `-DeclRefExpr 0x5e700f0 <col:25> '_II1' lvalue ParmVar 0x5e6fc30 '__last1' '_II1'
|         |-CallExpr 0x5e701d8 <line:1220:7, col:33> '<dependent type>'
|         | |-UnresolvedLookupExpr 0x5e70158 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|         | `-DeclRefExpr 0x5e701b8 <col:25> '_II2' lvalue ParmVar 0x5e6fca8 '__first2' '_II2'
|         `-CallExpr 0x5e702a0 <line:1221:7, col:32> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e70220 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '__niter_base' 0x5df4f18 0x5e0e308 0x5e1e0e8 0x5e40118
|           `-DeclRefExpr 0x5e70280 <col:25> '_II2' lvalue ParmVar 0x5e6fd20 '__last2' '_II2'
|-FunctionTemplateDecl 0x5e70858 <line:1237:3, line:1251:5> line:1239:5 lexicographical_compare
| |-TemplateTypeParmDecl 0x5e70340 <line:1237:12, col:21> col:21 referenced typename depth 0 index 0 _II1
| |-TemplateTypeParmDecl 0x5e703b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 _II2
| |-TemplateTypeParmDecl 0x5e70428 <col:42, col:51> col:51 referenced typename depth 0 index 2 _Compare
| `-FunctionDecl 0x5e707b8 <line:1238:5, line:1251:5> line:1239:5 lexicographical_compare 'bool (_II1, _II1, _II2, _II2, _Compare)' inline
|   |-ParmVarDecl 0x5e704d0 <col:29, col:34> col:34 referenced __first1 '_II1'
|   |-ParmVarDecl 0x5e70548 <col:44, col:49> col:49 referenced __last1 '_II1'
|   |-ParmVarDecl 0x5e705c0 <line:1240:8, col:13> col:13 referenced __first2 '_II2'
|   |-ParmVarDecl 0x5e70638 <col:23, col:28> col:28 referenced __last2 '_II2'
|   |-ParmVarDecl 0x5e706b0 <col:37, col:46> col:46 referenced __comp '_Compare'
|   `-CompoundStmt 0x5e70af8 <line:1241:5, line:1251:5>
|     |-NullStmt 0x5e708d8 <line:1245:56>
|     |-NullStmt 0x5e708e0 <line:1246:56>
|     `-ReturnStmt 0x5e70ae8 <line:1248:7, line:1250:45>
|       `-CallExpr 0x5e70aa0 <line:1248:14, line:1250:45> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e70908 <line:1248:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__lexicographical_compare_impl' 0x5e62788
|         |-DeclRefExpr 0x5e70950 <line:1249:3> '_II1' lvalue ParmVar 0x5e704d0 '__first1' '_II1'
|         |-DeclRefExpr 0x5e70970 <col:13> '_II1' lvalue ParmVar 0x5e70548 '__last1' '_II1'
|         |-DeclRefExpr 0x5e70990 <col:22> '_II2' lvalue ParmVar 0x5e705c0 '__first2' '_II2'
|         |-DeclRefExpr 0x5e709b0 <col:32> '_II2' lvalue ParmVar 0x5e70638 '__last2' '_II2'
|         `-CallExpr 0x5e70a78 <line:1250:3, col:44> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e70a00 <col:3, col:21> '<overloaded function type>' lvalue (no ADL) = '__iter_comp_iter' 0x5e2b468 0x5e32a68 0x5e37b10
|           `-DeclRefExpr 0x5e70a58 <col:38> '_Compare' lvalue ParmVar 0x5e706b0 '__comp' '_Compare'
|-FunctionTemplateDecl 0x5e71110 <line:1253:3, line:1265:5> line:1256:5 __mismatch
| |-TemplateTypeParmDecl 0x5e70b20 <line:1253:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| |-TemplateTypeParmDecl 0x5e70b98 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| |-TemplateTypeParmDecl 0x5e70c20 <line:1254:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
| `-FunctionDecl 0x5e71070 <line:1255:5, line:1265:5> line:1256:5 __mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)'
|   |-ParmVarDecl 0x5e70d90 <col:16, col:32> col:32 referenced __first1 '_InputIterator1'
|   |-ParmVarDecl 0x5e70e08 <col:42, col:58> col:58 referenced __last1 '_InputIterator1'
|   |-ParmVarDecl 0x5e70e80 <line:1257:9, col:25> col:25 referenced __first2 '_InputIterator2'
|   |-ParmVarDecl 0x5e70ef8 <col:35, col:52> col:52 referenced __binary_pred '_BinaryPredicate'
|   `-CompoundStmt 0x5e71558 <line:1258:5, line:1265:5>
|     |-WhileStmt 0x5e713b0 <line:1259:7, line:1263:9>
|     | |-BinaryOperator 0x5e71300 <line:1259:14, col:69> '<dependent type>' '&&'
|     | | |-CXXOperatorCallExpr 0x5e71238 <col:14, col:26> '<dependent type>'
|     | | | |-UnresolvedLookupExpr 0x5e711c8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | | |-DeclRefExpr 0x5e71188 <col:14> '_InputIterator1' lvalue ParmVar 0x5e70d90 '__first1' '_InputIterator1'
|     | | | `-DeclRefExpr 0x5e711a8 <col:26> '_InputIterator1' lvalue ParmVar 0x5e70e08 '__last1' '_InputIterator1'
|     | | `-CallExpr 0x5e712d0 <col:37, col:69> '<dependent type>'
|     | |   |-DeclRefExpr 0x5e71270 <col:37> '_BinaryPredicate' lvalue ParmVar 0x5e70ef8 '__binary_pred' '_BinaryPredicate'
|     | |   |-DeclRefExpr 0x5e71290 <col:51> '_InputIterator1' lvalue ParmVar 0x5e70d90 '__first1' '_InputIterator1'
|     | |   `-DeclRefExpr 0x5e712b0 <col:61> '_InputIterator2' lvalue ParmVar 0x5e70e80 '__first2' '_InputIterator2'
|     | `-CompoundStmt 0x5e71390 <line:1260:9, line:1263:9>
|     |   |-UnaryOperator 0x5e71340 <line:1261:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     |   | `-DeclRefExpr 0x5e71320 <col:6> '_InputIterator1' lvalue ParmVar 0x5e70d90 '__first1' '_InputIterator1'
|     |   `-UnaryOperator 0x5e71378 <line:1262:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x5e71358 <col:6> '_InputIterator2' lvalue ParmVar 0x5e70e80 '__first2' '_InputIterator2'
|     `-ReturnStmt 0x5e71548 <line:1264:7, col:71>
|       `-CXXUnresolvedConstructExpr 0x5e71518 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>' 'pair<_InputIterator1, _InputIterator2>'
|         |-DeclRefExpr 0x5e714d8 <col:53> '_InputIterator1' lvalue ParmVar 0x5e70d90 '__first1' '_InputIterator1'
|         `-DeclRefExpr 0x5e714f8 <col:63> '_InputIterator2' lvalue ParmVar 0x5e70e80 '__first2' '_InputIterator2'
|-FunctionTemplateDecl 0x5e71a40 <line:1280:3, line:1295:5> line:1282:5 mismatch
| |-TemplateTypeParmDecl 0x5e71578 <line:1280:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| |-TemplateTypeParmDecl 0x5e715e8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| `-FunctionDecl 0x5e719a0 <line:1281:5, line:1295:5> line:1282:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2)' inline
|   |-ParmVarDecl 0x5e71750 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
|   |-ParmVarDecl 0x5e717c8 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
|   |-ParmVarDecl 0x5e71840 <line:1283:7, col:23> col:23 referenced __first2 '_InputIterator2'
|   `-CompoundStmt 0x5e71c90 <line:1284:5, line:1295:5>
|     |-NullStmt 0x5e71ab0 <line:1291:56>
|     `-ReturnStmt 0x5e71c80 <line:1293:7, line:1294:49>
|       `-CallExpr 0x5e71c40 <line:1293:14, line:1294:49> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e71ad8 <line:1293:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x5e71110
|         |-DeclRefExpr 0x5e71b20 <col:30> '_InputIterator1' lvalue ParmVar 0x5e71750 '__first1' '_InputIterator1'
|         |-DeclRefExpr 0x5e71b40 <col:40> '_InputIterator1' lvalue ParmVar 0x5e717c8 '__last1' '_InputIterator1'
|         |-DeclRefExpr 0x5e71b60 <col:49> '_InputIterator2' lvalue ParmVar 0x5e71840 '__first2' '_InputIterator2'
|         `-CallExpr 0x5e71c20 <line:1294:9, col:48> '__gnu_cxx::__ops::_Iter_equal_to_iter'
|           `-ImplicitCastExpr 0x5e71c08 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter (*)()' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x5e71bb0 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter ()' lvalue Function 0x5e275d8 '__iter_equal_to_iter' '__gnu_cxx::__ops::_Iter_equal_to_iter ()'
|-FunctionTemplateDecl 0x5e72230 <line:1313:3, line:1326:5> line:1316:5 mismatch
| |-TemplateTypeParmDecl 0x5e71cb0 <line:1313:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| |-TemplateTypeParmDecl 0x5e71d28 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| |-TemplateTypeParmDecl 0x5e71d98 <line:1314:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
| `-FunctionDecl 0x5e72190 <line:1315:5, line:1326:5> line:1316:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _BinaryPredicate)' inline
|   |-ParmVarDecl 0x5e71f00 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
|   |-ParmVarDecl 0x5e71f78 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
|   |-ParmVarDecl 0x5e71ff0 <line:1317:7, col:23> col:23 referenced __first2 '_InputIterator2'
|   |-ParmVarDecl 0x5e72068 <col:33, col:50> col:50 referenced __binary_pred '_BinaryPredicate'
|   `-CompoundStmt 0x5e72498 <line:1318:5, line:1326:5>
|     |-NullStmt 0x5e722a8 <line:1322:56>
|     `-ReturnStmt 0x5e72488 <line:1324:7, line:1325:51>
|       `-CallExpr 0x5e72448 <line:1324:14, line:1325:51> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e722d0 <line:1324:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x5e71110
|         |-DeclRefExpr 0x5e72318 <col:30> '_InputIterator1' lvalue ParmVar 0x5e71f00 '__first1' '_InputIterator1'
|         |-DeclRefExpr 0x5e72338 <col:40> '_InputIterator1' lvalue ParmVar 0x5e71f78 '__last1' '_InputIterator1'
|         |-DeclRefExpr 0x5e72358 <col:49> '_InputIterator2' lvalue ParmVar 0x5e71ff0 '__first2' '_InputIterator2'
|         `-CallExpr 0x5e72420 <line:1325:2, col:50> '<dependent type>'
|           |-UnresolvedLookupExpr 0x5e723a8 <col:2, col:20> '<overloaded function type>' lvalue (no ADL) = '__iter_comp_iter' 0x5e2b468 0x5e32a68 0x5e37b10
|           `-DeclRefExpr 0x5e72400 <col:37> '_BinaryPredicate' lvalue ParmVar 0x5e72068 '__binary_pred' '_BinaryPredicate'
|-FunctionTemplateDecl 0x5e72b10 <line:1330:3, line:1344:5> line:1333:5 __mismatch
| |-TemplateTypeParmDecl 0x5e724b8 <line:1330:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| |-TemplateTypeParmDecl 0x5e72528 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| |-TemplateTypeParmDecl 0x5e72598 <line:1331:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
| `-FunctionDecl 0x5e72a70 <line:1332:5, line:1344:5> line:1333:5 __mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)'
|   |-ParmVarDecl 0x5e72700 <col:16, col:32> col:32 referenced __first1 '_InputIterator1'
|   |-ParmVarDecl 0x5e72778 <col:42, col:58> col:58 referenced __last1 '_InputIterator1'
|   |-ParmVarDecl 0x5e727f0 <line:1334:9, col:25> col:25 referenced __first2 '_InputIterator2'
|   |-ParmVarDecl 0x5e72868 <col:35, col:51> col:51 referenced __last2 '_InputIterator2'
|   |-ParmVarDecl 0x5e728e0 <line:1335:9, col:26> col:26 referenced __binary_pred '_BinaryPredicate'
|   `-CompoundStmt 0x5e73068 <line:1336:5, line:1344:5>
|     |-WhileStmt 0x5e72ec0 <line:1337:7, line:1342:9>
|     | |-BinaryOperator 0x5e72e10 <line:1337:14, line:1338:42> '<dependent type>' '&&'
|     | | |-BinaryOperator 0x5e72d60 <line:1337:14, col:49> '<dependent type>' '&&'
|     | | | |-CXXOperatorCallExpr 0x5e72c40 <col:14, col:26> '<dependent type>'
|     | | | | |-UnresolvedLookupExpr 0x5e72bd0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | | | |-DeclRefExpr 0x5e72b90 <col:14> '_InputIterator1' lvalue ParmVar 0x5e72700 '__first1' '_InputIterator1'
|     | | | | `-DeclRefExpr 0x5e72bb0 <col:26> '_InputIterator1' lvalue ParmVar 0x5e72778 '__last1' '_InputIterator1'
|     | | | `-CXXOperatorCallExpr 0x5e72d28 <col:37, col:49> '<dependent type>'
|     | | |   |-UnresolvedLookupExpr 0x5e72cb8 <col:46> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5bfd9b8 0x5dce158 0x5dee118 0x5df1c48 0x5e17d68 0x5e18348
|     | | |   |-DeclRefExpr 0x5e72c78 <col:37> '_InputIterator2' lvalue ParmVar 0x5e727f0 '__first2' '_InputIterator2'
|     | | |   `-DeclRefExpr 0x5e72c98 <col:49> '_InputIterator2' lvalue ParmVar 0x5e72868 '__last2' '_InputIterator2'
|     | | `-CallExpr 0x5e72de0 <line:1338:10, col:42> '<dependent type>'
|     | |   |-DeclRefExpr 0x5e72d80 <col:10> '_BinaryPredicate' lvalue ParmVar 0x5e728e0 '__binary_pred' '_BinaryPredicate'
|     | |   |-DeclRefExpr 0x5e72da0 <col:24> '_InputIterator1' lvalue ParmVar 0x5e72700 '__first1' '_InputIterator1'
|     | |   `-DeclRefExpr 0x5e72dc0 <col:34> '_InputIterator2' lvalue ParmVar 0x5e727f0 '__first2' '_InputIterator2'
|     | `-CompoundStmt 0x5e72ea0 <line:1339:9, line:1342:9>
|     |   |-UnaryOperator 0x5e72e50 <line:1340:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     |   | `-DeclRefExpr 0x5e72e30 <col:6> '_InputIterator1' lvalue ParmVar 0x5e72700 '__first1' '_InputIterator1'
|     |   `-UnaryOperator 0x5e72e88 <line:1341:4, col:6> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x5e72e68 <col:6> '_InputIterator2' lvalue ParmVar 0x5e727f0 '__first2' '_InputIterator2'
|     `-ReturnStmt 0x5e73058 <line:1343:7, col:71>
|       `-CXXUnresolvedConstructExpr 0x5e73028 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>' 'pair<_InputIterator1, _InputIterator2>'
|         |-DeclRefExpr 0x5e72fe8 <col:53> '_InputIterator1' lvalue ParmVar 0x5e72700 '__first1' '_InputIterator1'
|         `-DeclRefExpr 0x5e73008 <col:63> '_InputIterator2' lvalue ParmVar 0x5e727f0 '__first2' '_InputIterator2'
|-FunctionTemplateDecl 0x5e735e0 <line:1360:3, line:1376:5> line:1362:5 mismatch
| |-TemplateTypeParmDecl 0x5e73088 <line:1360:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
| |-TemplateTypeParmDecl 0x5e730f8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
| `-FunctionDecl 0x5e73540 <line:1361:5, line:1376:5> line:1362:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2)' inline
|   |-ParmVarDecl 0x5e73260 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
|   |-ParmVarDecl 0x5e732d8 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
|   |-ParmVarDecl 0x5e73350 <line:1363:7, col:23> col:23 referenced __first2 '_InputIterator2'
|   |-ParmVarDecl 0x5e733c8 <col:33, col:49> col:49 referenced __last2 '_InputIterator2'
|   `-CompoundStmt 0x5e73848 <line:1364:5, line:1376:5>
|     |-NullStmt 0x5e73658 <line:1371:56>
|     |-NullStmt 0x5e73660 <line:1372:56>
|     `-ReturnStmt 0x5e73838 <line:1374:7, line:1375:49>
|       `-CallExpr 0x5e737f0 <line:1374:14, line:1375:49> '<dependent type>'
|         |-UnresolvedLookupExpr 0x5e73688 <line:1374:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x5e71110 0x5e72b10
|         |-DeclRefExpr 0x5e736d8 <col:30> '_InputIterator1' lvalue ParmVar 0x5e73260 '__first1' '_InputIterator1'
|         |-DeclRefExpr 0x5e736f8 <col:40> '_InputIterator1' lvalue ParmVar 0x5e732d8 '__last1' '_InputIterator1'
|         |-DeclRefExpr 0x5e73718 <col:49> '_InputIterator2' lvalue ParmVar 0x5e73350 '__first2' '_InputIterator2'
|         |-DeclRefExpr 0x5e73738 <col:59> '_InputIterator2' lvalue ParmVar 0x5e733c8 '__last2' '_InputIterator2'
|         `-CallExpr 0x5e737d0 <line:1375:9, col:48> '__gnu_cxx::__ops::_Iter_equal_to_iter'
|           `-ImplicitCastExpr 0x5e737b8 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter (*)()' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x5e73788 <col:9, col:27> '__gnu_cxx::__ops::_Iter_equal_to_iter ()' lvalue Function 0x5e275d8 '__iter_equal_to_iter' '__gnu_cxx::__ops::_Iter_equal_to_iter ()'
`-FunctionTemplateDecl 0x5e73e80 <line:1395:3, line:1410:5> line:1398:5 mismatch
  |-TemplateTypeParmDecl 0x5e73870 <line:1395:12, col:21> col:21 referenced typename depth 0 index 0 _InputIterator1
  |-TemplateTypeParmDecl 0x5e738e8 <col:38, col:47> col:47 referenced typename depth 0 index 1 _InputIterator2
  |-TemplateTypeParmDecl 0x5e73958 <line:1396:5, col:14> col:14 referenced typename depth 0 index 2 _BinaryPredicate
  `-FunctionDecl 0x5e73de0 <line:1397:5, line:1410:5> line:1398:5 mismatch 'pair<_InputIterator1, _InputIterator2> (_InputIterator1, _InputIterator1, _InputIterator2, _InputIterator2, _BinaryPredicate)' inline
    |-ParmVarDecl 0x5e73ac0 <col:14, col:30> col:30 referenced __first1 '_InputIterator1'
    |-ParmVarDecl 0x5e73b38 <col:40, col:56> col:56 referenced __last1 '_InputIterator1'
    |-ParmVarDecl 0x5e73bb0 <line:1399:7, col:23> col:23 referenced __first2 '_InputIterator2'
    |-ParmVarDecl 0x5e73c28 <col:33, col:49> col:49 referenced __last2 '_InputIterator2'
    |-ParmVarDecl 0x5e73ca0 <line:1400:7, col:24> col:24 referenced __binary_pred '_BinaryPredicate'
    `-CompoundStmt 0x5e74128 <line:1401:5, line:1410:5>
      |-NullStmt 0x5e73f00 <line:1405:56>
      |-NullStmt 0x5e73f08 <line:1406:56>
      `-ReturnStmt 0x5e74118 <line:1408:7, line:1409:58>
        `-CallExpr 0x5e740d0 <line:1408:14, line:1409:58> '<dependent type>'
          |-UnresolvedLookupExpr 0x5e73f30 <line:1408:14, col:19> '<overloaded function type>' lvalue (no ADL) = '__mismatch' 0x5e71110 0x5e72b10
          |-DeclRefExpr 0x5e73f80 <col:30> '_InputIterator1' lvalue ParmVar 0x5e73ac0 '__first1' '_InputIterator1'
          |-DeclRefExpr 0x5e73fa0 <col:40> '_InputIterator1' lvalue ParmVar 0x5e73b38 '__last1' '_InputIterator1'
          |-DeclRefExpr 0x5e73fc0 <col:49> '_InputIterator2' lvalue ParmVar 0x5e73bb0 '__first2' '_InputIterator2'
          |-DeclRefExpr 0x5e73fe0 <col:59> '_InputIterator2' lvalue ParmVar 0x5e73c28 '__last2' '_InputIterator2'
          `-CallExpr 0x5e740a8 <line:1409:9, col:57> '<dependent type>'
            |-UnresolvedLookupExpr 0x5e74030 <col:9, col:27> '<overloaded function type>' lvalue (no ADL) = '__iter_comp_iter' 0x5e2b468 0x5e32a68 0x5e37b10
            `-DeclRefExpr 0x5e74088 <col:44> '_BinaryPredicate' lvalue ParmVar 0x5e73ca0 '__binary_pred' '_BinaryPredicate'
NamespaceDecl 0x5e79d20 prev 0x5e23a68 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/char_traits.h:47:1, line:213:1> line:47:11 __gnu_cxx
|-original Namespace 0x5b95a90 '__gnu_cxx'
|-VisibilityAttr 0x5e79d90 <col:37, col:62> Default
|-ClassTemplateDecl 0x5e79ef0 <line:61:3, line:68:5> line:62:12 _Char_types
| |-TemplateTypeParmDecl 0x5e79dd0 <line:61:12, col:21> col:21 typename depth 0 index 0 _CharT
| `-CXXRecordDecl 0x5e79e60 <line:62:5, line:68:5> line:62:12 struct _Char_types definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5e7a140 <col:5, col:12> col:12 implicit struct _Char_types
|   |-TypedefDecl 0x5e7a1e8 <line:64:7, col:29> col:29 int_type 'unsigned long'
|   | `-BuiltinType 0x5aca3c0 'unsigned long'
|   |-TypedefDecl 0x5e7a2e0 <line:65:7, col:30> col:30 pos_type 'std::streampos':'std::fpos<__mbstate_t>'
|   | `-ElaboratedType 0x5e7a270 'std::streampos' sugar
|   |   `-TypedefType 0x5e7a250 'std::streampos' sugar
|   |     |-Typedef 0x5bfdcd0 'streampos'
|   |     `-TemplateSpecializationType 0x5bfdc30 'fpos<mbstate_t>' sugar fpos
|   |       |-TemplateArgument type 'mbstate_t':'__mbstate_t'
|   |       `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
|   |         `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
|   |-TypedefDecl 0x5e7a3c0 <line:66:7, col:30> col:30 off_type 'std::streamoff':'long'
|   | `-ElaboratedType 0x5e7a350 'std::streamoff' sugar
|   |   `-TypedefType 0x5bfaeb0 'std::streamoff' sugar
|   |     |-Typedef 0x5bfa9a8 'streamoff'
|   |     `-BuiltinType 0x5aca320 'long'
|   `-TypedefDecl 0x5e7a4a0 <line:67:7, col:30> col:30 state_type 'std::mbstate_t':'__mbstate_t'
|     `-ElaboratedType 0x5e7a430 'std::mbstate_t' sugar
|       `-TypedefType 0x5be1dd0 'mbstate_t' sugar
|         |-Typedef 0x5bd84a8 'mbstate_t'
|         `-TypedefType 0x5bb7240 '__mbstate_t' sugar
|           |-Typedef 0x5bb7048 '__mbstate_t'
|           `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
|             `-RecordType 0x5bb6be0 '__mbstate_t'
|               `-CXXRecord 0x5bb6b50 ''
|-ClassTemplateDecl 0x5e7a630 <line:86:3, line:144:5> line:87:12 char_traits
| |-TemplateTypeParmDecl 0x5e7a510 <line:86:12, col:21> col:21 referenced typename depth 0 index 0 _CharT
| `-CXXRecordDecl 0x5e7a5a0 <line:87:5, line:144:5> line:87:12 struct char_traits definition
|   |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-CXXRecordDecl 0x5e7a880 <col:5, col:12> col:12 implicit struct char_traits
|   |-TypedefDecl 0x5e7a920 <line:89:7, col:22> col:22 referenced char_type '_CharT'
|   | `-TemplateTypeParmType 0x5e7a560 '_CharT' dependent depth 0 index 0
|   |   `-TemplateTypeParm 0x5e7a510 '_CharT'
|   |-TypedefDecl 0x5e7aae0 <line:90:7, col:54> col:54 referenced int_type 'typename _Char_types<_CharT>::int_type'
|   | `-DependentNameType 0x5e7aa70 'typename _Char_types<_CharT>::int_type' dependent
|   |-TypedefDecl 0x5e7ac80 <line:91:7, col:54> col:54 pos_type 'typename _Char_types<_CharT>::pos_type'
|   | `-DependentNameType 0x5e7ac10 'typename _Char_types<_CharT>::pos_type' dependent
|   |-TypedefDecl 0x5e7ae20 <line:92:7, col:54> col:54 off_type 'typename _Char_types<_CharT>::off_type'
|   | `-DependentNameType 0x5e7adb0 'typename _Char_types<_CharT>::off_type' dependent
|   |-TypedefDecl 0x5e7afc0 <line:93:7, col:56> col:56 state_type 'typename _Char_types<_CharT>::state_type'
|   | `-DependentNameType 0x5e7af50 'typename _Char_types<_CharT>::state_type' dependent
|   |-CXXMethodDecl 0x5e7b258 <line:95:7, line:97:22> line:96:7 constexpr assign 'void (__gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' static
|   | |-ParmVarDecl 0x5e7b078 <col:14, col:25> col:25 referenced __c1 '__gnu_cxx::char_traits::char_type &'
|   | |-ParmVarDecl 0x5e7b118 <col:31, col:48> col:48 referenced __c2 'const __gnu_cxx::char_traits::char_type &'
|   | `-CompoundStmt 0x5e89c38 <line:97:7, col:22>
|   |   `-BinaryOperator 0x5e89c18 <col:9, col:16> '<dependent type>' '='
|   |     |-DeclRefExpr 0x5e89bd8 <col:9> '__gnu_cxx::char_traits::char_type':'_CharT' lvalue ParmVar 0x5e7b078 '__c1' '__gnu_cxx::char_traits::char_type &'
|   |     `-DeclRefExpr 0x5e89bf8 <col:16> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e7b118 '__c2' 'const __gnu_cxx::char_traits::char_type &'
|   |-CXXMethodDecl 0x5e7b4a8 <line:99:7, line:101:30> line:100:7 referenced constexpr eq 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' static
|   | |-ParmVarDecl 0x5e7b318 <col:10, col:27> col:27 referenced __c1 'const __gnu_cxx::char_traits::char_type &'
|   | |-ParmVarDecl 0x5e7b390 <col:33, col:50> col:50 referenced __c2 'const __gnu_cxx::char_traits::char_type &'
|   | `-CompoundStmt 0x5e89d28 <line:101:7, col:30>
|   |   `-ReturnStmt 0x5e89d18 <col:9, col:24>
|   |     `-CXXOperatorCallExpr 0x5e89ce0 <col:16, col:24> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x5e89c90 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80 0x5e069a0
|   |       |-DeclRefExpr 0x5e89c50 <col:16> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e7b318 '__c1' 'const __gnu_cxx::char_traits::char_type &'
|   |       `-DeclRefExpr 0x5e89c70 <col:24> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e7b390 '__c2' 'const __gnu_cxx::char_traits::char_type &'
|   |-CXXMethodDecl 0x5e7b678 <line:103:7, line:105:29> line:104:7 referenced constexpr lt 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' static
|   | |-ParmVarDecl 0x5e7b568 <col:10, col:27> col:27 referenced __c1 'const __gnu_cxx::char_traits::char_type &'
|   | |-ParmVarDecl 0x5e7b5e0 <col:33, col:50> col:50 referenced __c2 'const __gnu_cxx::char_traits::char_type &'
|   | `-CompoundStmt 0x5e89e18 <line:105:7, col:29>
|   |   `-ReturnStmt 0x5e89e08 <col:9, col:23>
|   |     `-CXXOperatorCallExpr 0x5e89dd0 <col:16, col:23> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x5e89d80 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator<' 0x5e08100 0x5e08880
|   |       |-DeclRefExpr 0x5e89d40 <col:16> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e7b568 '__c1' 'const __gnu_cxx::char_traits::char_type &'
|   |       `-DeclRefExpr 0x5e89d60 <col:23> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e7b5e0 '__c2' 'const __gnu_cxx::char_traits::char_type &'
|   |-CXXMethodDecl 0x5e7ba00 <line:107:7, line:108:76> col:7 constexpr compare 'int (const __gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x5e7b768 <col:15, col:32> col:32 __s1 'const __gnu_cxx::char_traits::char_type *'
|   | |-ParmVarDecl 0x5e7b7e0 <col:38, col:55> col:55 __s2 'const __gnu_cxx::char_traits::char_type *'
|   | `-ParmVarDecl 0x5e7b8d0 <col:61, col:73> col:73 __n 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x5e7bbf8 <line:110:7, line:111:34> col:7 constexpr length 'std::size_t (const __gnu_cxx::char_traits::char_type *)' static
|   | `-ParmVarDecl 0x5e7baf8 <col:14, col:31> col:31 __s 'const __gnu_cxx::char_traits::char_type *'
|   |-CXXMethodDecl 0x5e7bf08 <line:113:7, line:114:71> col:7 constexpr find 'const __gnu_cxx::char_traits::char_type *(const __gnu_cxx::char_traits::char_type *, std::size_t, const __gnu_cxx::char_traits::char_type &)' static
|   | |-ParmVarDecl 0x5e7bcb0 <col:12, col:29> col:29 __s 'const __gnu_cxx::char_traits::char_type *'
|   | |-ParmVarDecl 0x5e7bd68 <col:34, col:46> col:46 __n 'std::size_t':'unsigned long'
|   | `-ParmVarDecl 0x5e7bde0 <col:51, col:68> col:68 __a 'const __gnu_cxx::char_traits::char_type &'
|   |-CXXMethodDecl 0x5e7c248 <line:116:7, line:117:67> col:7 move '__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x5e7bff8 <col:12, col:23> col:23 __s1 '__gnu_cxx::char_traits::char_type *'
|   | |-ParmVarDecl 0x5e7c070 <col:29, col:46> col:46 __s2 'const __gnu_cxx::char_traits::char_type *'
|   | `-ParmVarDecl 0x5e7c128 <col:52, col:64> col:64 __n 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x5e7c4e0 <line:119:7, line:120:67> col:7 copy '__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)' static
|   | |-ParmVarDecl 0x5e7c310 <col:12, col:23> col:23 __s1 '__gnu_cxx::char_traits::char_type *'
|   | |-ParmVarDecl 0x5e7c388 <col:29, col:46> col:46 __s2 'const __gnu_cxx::char_traits::char_type *'
|   | `-ParmVarDecl 0x5e7c440 <col:52, col:64> col:64 __n 'std::size_t':'unsigned long'
|   |-CXXMethodDecl 0x5e7c7f8 <line:122:7, line:123:60> col:7 assign '__gnu_cxx::char_traits::char_type *(__gnu_cxx::char_traits::char_type *, std::size_t, __gnu_cxx::char_traits::char_type)' static
|   | |-ParmVarDecl 0x5e7c5a8 <col:14, col:25> col:25 __s '__gnu_cxx::char_traits::char_type *'
|   | |-ParmVarDecl 0x5e7c660 <col:30, col:42> col:42 __n 'std::size_t':'unsigned long'
|   | `-ParmVarDecl 0x5e7c6d8 <col:47, col:57> col:57 __a '__gnu_cxx::char_traits::char_type':'_CharT'
|   |-CXXMethodDecl 0x5e89458 <line:125:7, line:127:45> line:126:7 constexpr to_char_type '__gnu_cxx::char_traits::char_type (const __gnu_cxx::char_traits::int_type &)' static
|   | |-ParmVarDecl 0x5e89360 <col:20, col:36> col:36 referenced __c 'const __gnu_cxx::char_traits::int_type &'
|   | `-CompoundStmt 0x5e89ea0 <line:127:7, col:45>
|   |   `-ReturnStmt 0x5e89e90 <col:9, col:42>
|   |     `-CXXStaticCastExpr 0x5e89e60 <col:16, col:42> '__gnu_cxx::char_traits::char_type':'_CharT' static_cast<__gnu_cxx::char_traits::char_type> <Dependent>
|   |       `-DeclRefExpr 0x5e89e30 <col:39> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x5e89360 '__c' 'const __gnu_cxx::char_traits::int_type &'
|   |-CXXMethodDecl 0x5e89608 <line:129:7, line:131:44> line:130:7 referenced constexpr to_int_type '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::char_type &)' static
|   | |-ParmVarDecl 0x5e89510 <col:19, col:36> col:36 referenced __c 'const __gnu_cxx::char_traits::char_type &'
|   | `-CompoundStmt 0x5e89f28 <line:131:7, col:44>
|   |   `-ReturnStmt 0x5e89f18 <col:9, col:41>
|   |     `-CXXStaticCastExpr 0x5e89ee8 <col:16, col:41> '__gnu_cxx::char_traits::int_type':'typename _Char_types<_CharT>::int_type' static_cast<__gnu_cxx::char_traits::int_type> <Dependent>
|   |       `-DeclRefExpr 0x5e89eb8 <col:38> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e89510 '__c' 'const __gnu_cxx::char_traits::char_type &'
|   |-CXXMethodDecl 0x5e89848 <line:133:7, line:135:30> line:134:7 referenced constexpr eq_int_type 'bool (const __gnu_cxx::char_traits::int_type &, const __gnu_cxx::char_traits::int_type &)' static
|   | |-ParmVarDecl 0x5e896c0 <col:19, col:35> col:35 referenced __c1 'const __gnu_cxx::char_traits::int_type &'
|   | |-ParmVarDecl 0x5e89738 <col:41, col:57> col:57 referenced __c2 'const __gnu_cxx::char_traits::int_type &'
|   | `-CompoundStmt 0x5e8a018 <line:135:7, col:30>
|   |   `-ReturnStmt 0x5e8a008 <col:9, col:24>
|   |     `-CXXOperatorCallExpr 0x5e89fd0 <col:16, col:24> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x5e89f80 <col:21> '<overloaded function type>' lvalue (ADL) = 'operator==' 0x5e04a80 0x5e069a0
|   |       |-DeclRefExpr 0x5e89f40 <col:16> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x5e896c0 '__c1' 'const __gnu_cxx::char_traits::int_type &'
|   |       `-DeclRefExpr 0x5e89f60 <col:24> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x5e89738 '__c2' 'const __gnu_cxx::char_traits::int_type &'
|   |-CXXMethodDecl 0x5e89978 <line:137:7, line:139:43> line:138:7 referenced constexpr eof '__gnu_cxx::char_traits::int_type ()' static
|   | `-CompoundStmt 0x5e8a0b8 <line:139:7, col:43>
|   |   `-ReturnStmt 0x5e8a0a8 <col:9, col:40>
|   |     `-CXXStaticCastExpr 0x5e8a078 <col:16, col:40> '__gnu_cxx::char_traits::int_type':'typename _Char_types<_CharT>::int_type' static_cast<__gnu_cxx::char_traits::int_type> <Dependent>
|   |       `-UnaryOperator 0x5e8a050 <col:38, col:39> 'int' prefix '-'
|   |         `-IntegerLiteral 0x5e8a030 <col:39> 'int' 1
|   `-CXXMethodDecl 0x5e89b18 <line:141:7, line:143:75> line:142:7 constexpr not_eof '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::int_type &)' static
|     |-ParmVarDecl 0x5e89a28 <col:15, col:31> col:31 referenced __c 'const __gnu_cxx::char_traits::int_type &'
|     `-CompoundStmt 0x5e8a270 <line:143:7, col:75>
|       `-ReturnStmt 0x5e8a260 <col:9, col:72>
|         `-ConditionalOperator 0x5e8a230 <col:16, col:72> '<dependent type>'
|           |-UnaryOperator 0x5e8a180 <col:16, col:39> '<dependent type>' prefix '!' cannot overflow
|           | `-CallExpr 0x5e8a150 <col:17, col:39> '<dependent type>'
|           |   |-DeclRefExpr 0x5e8a0d0 <col:17> 'bool (const __gnu_cxx::char_traits::int_type &, const __gnu_cxx::char_traits::int_type &)' lvalue CXXMethod 0x5e89848 'eq_int_type' 'bool (const __gnu_cxx::char_traits::int_type &, const __gnu_cxx::char_traits::int_type &)'
|           |   |-DeclRefExpr 0x5e8a0f0 <col:29> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x5e89a28 '__c' 'const __gnu_cxx::char_traits::int_type &'
|           |   `-CallExpr 0x5e8a130 <col:34, col:38> '<dependent type>'
|           |     `-DeclRefExpr 0x5e8a110 <col:34> '__gnu_cxx::char_traits::int_type ()' lvalue CXXMethod 0x5e89978 'eof' '__gnu_cxx::char_traits::int_type ()'
|           |-DeclRefExpr 0x5e8a198 <col:43> 'const __gnu_cxx::char_traits::int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x5e89a28 '__c' 'const __gnu_cxx::char_traits::int_type &'
|           `-CallExpr 0x5e8a208 <col:49, col:72> '<dependent type>'
|             |-DeclRefExpr 0x5e8a1b8 <col:49> '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x5e89608 'to_int_type' '__gnu_cxx::char_traits::int_type (const __gnu_cxx::char_traits::char_type &)'
|             `-CXXUnresolvedConstructExpr 0x5e8a1e8 <col:61, col:71> '__gnu_cxx::char_traits::char_type':'_CharT' '__gnu_cxx::char_traits::char_type':'_CharT'
|-CXXMethodDecl 0x5e8a640 parent 0x5e7a5a0 prev 0x5e7ba00 <line:148:3, line:159:5> line:151:5 constexpr compare 'int (const __gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'
| |-ParmVarDecl 0x5e8a468 <col:13, col:30> col:30 referenced __s1 'const __gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8a4e0 <col:36, col:53> col:53 referenced __s2 'const __gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8a598 <col:59, col:71> col:71 referenced __n 'std::size_t':'unsigned long'
| `-CompoundStmt 0x5e8ac40 <line:152:5, line:159:5>
|   |-ForStmt 0x5e8abd8 <line:153:7, line:157:11>
|   | |-DeclStmt 0x5e8a820 <line:153:12, col:31>
|   | | `-VarDecl 0x5e8a780 <col:12, col:30> col:24 referenced __i 'std::size_t':'unsigned long' cinit
|   | |   `-ImplicitCastExpr 0x5e8a808 <col:30> 'std::size_t':'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x5e8a7e8 <col:30> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x5e8a8a8 <col:33, col:39> 'bool' '<'
|   | | |-ImplicitCastExpr 0x5e8a878 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x5e8a838 <col:33> 'std::size_t':'unsigned long' lvalue Var 0x5e8a780 '__i' 'std::size_t':'unsigned long'
|   | | `-ImplicitCastExpr 0x5e8a890 <col:39> 'std::size_t':'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5e8a858 <col:39> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8a598 '__n' 'std::size_t':'unsigned long'
|   | |-UnaryOperator 0x5e8a8e8 <col:44, col:46> 'std::size_t':'unsigned long' lvalue prefix '++'
|   | | `-DeclRefExpr 0x5e8a8c8 <col:46> 'std::size_t':'unsigned long' lvalue Var 0x5e8a780 '__i' 'std::size_t':'unsigned long'
|   | `-IfStmt 0x5e8abb0 <line:154:2, line:157:11> has_else
|   |   |-CallExpr 0x5e8a9e0 <line:154:6, col:29> '<dependent type>'
|   |   | |-DeclRefExpr 0x5e8a900 <col:6> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x5e7b678 'lt' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
|   |   | |-ArraySubscriptExpr 0x5e8a960 <col:9, col:17> '<dependent type>' lvalue
|   |   | | |-DeclRefExpr 0x5e8a920 <col:9> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8a468 '__s1' 'const __gnu_cxx::char_traits::char_type *'
|   |   | | `-DeclRefExpr 0x5e8a940 <col:14> 'std::size_t':'unsigned long' lvalue Var 0x5e8a780 '__i' 'std::size_t':'unsigned long'
|   |   | `-ArraySubscriptExpr 0x5e8a9c0 <col:20, col:28> '<dependent type>' lvalue
|   |   |   |-DeclRefExpr 0x5e8a980 <col:20> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8a4e0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
|   |   |   `-DeclRefExpr 0x5e8a9a0 <col:25> 'std::size_t':'unsigned long' lvalue Var 0x5e8a780 '__i' 'std::size_t':'unsigned long'
|   |   |-ReturnStmt 0x5e8aa48 <line:155:4, col:12>
|   |   | `-UnaryOperator 0x5e8aa30 <col:11, col:12> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x5e8aa10 <col:12> 'int' 1
|   |   `-IfStmt 0x5e8ab98 <line:156:7, line:157:11>
|   |     |-CallExpr 0x5e8ab38 <line:156:11, col:34> '<dependent type>'
|   |     | |-DeclRefExpr 0x5e8aa58 <col:11> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x5e7b678 'lt' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
|   |     | |-ArraySubscriptExpr 0x5e8aab8 <col:14, col:22> '<dependent type>' lvalue
|   |     | | |-DeclRefExpr 0x5e8aa78 <col:14> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8a4e0 '__s2' 'const __gnu_cxx::char_traits::char_type *'
|   |     | | `-DeclRefExpr 0x5e8aa98 <col:19> 'std::size_t':'unsigned long' lvalue Var 0x5e8a780 '__i' 'std::size_t':'unsigned long'
|   |     | `-ArraySubscriptExpr 0x5e8ab18 <col:25, col:33> '<dependent type>' lvalue
|   |     |   |-DeclRefExpr 0x5e8aad8 <col:25> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8a468 '__s1' 'const __gnu_cxx::char_traits::char_type *'
|   |     |   `-DeclRefExpr 0x5e8aaf8 <col:30> 'std::size_t':'unsigned long' lvalue Var 0x5e8a780 '__i' 'std::size_t':'unsigned long'
|   |     `-ReturnStmt 0x5e8ab88 <line:157:4, col:11>
|   |       `-IntegerLiteral 0x5e8ab68 <col:11> 'int' 1
|   `-ReturnStmt 0x5e8ac30 <line:158:7, col:14>
|     `-IntegerLiteral 0x5e8ac10 <col:14> 'int' 0
|-CXXMethodDecl 0x5e8af18 parent 0x5e7a5a0 prev 0x5e7bbf8 <line:161:3, line:170:5> line:164:5 constexpr length 'std::size_t (const __gnu_cxx::char_traits::char_type *)'
| |-ParmVarDecl 0x5e8ae78 <col:12, col:29> col:29 referenced __p 'const __gnu_cxx::char_traits::char_type *'
| `-CompoundStmt 0x5e8b290 <line:165:5, line:170:5>
|   |-DeclStmt 0x5e8b0e8 <line:166:7, col:26>
|   | `-VarDecl 0x5e8b048 <col:7, col:25> col:19 referenced __i 'std::size_t':'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x5e8b0d0 <col:25> 'std::size_t':'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x5e8b0b0 <col:25> 'int' 0
|   |-WhileStmt 0x5e8b230 <line:167:7, line:168:11>
|   | |-UnaryOperator 0x5e8b1e0 <line:167:14, col:39> '<dependent type>' prefix '!' cannot overflow
|   | | `-CallExpr 0x5e8b1b0 <col:15, col:39> '<dependent type>'
|   | |   |-DeclRefExpr 0x5e8b100 <col:15> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x5e7b4a8 'eq' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
|   | |   |-ArraySubscriptExpr 0x5e8b160 <col:18, col:25> '<dependent type>' lvalue
|   | |   | |-DeclRefExpr 0x5e8b120 <col:18> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8ae78 '__p' 'const __gnu_cxx::char_traits::char_type *'
|   | |   | `-DeclRefExpr 0x5e8b140 <col:22> 'std::size_t':'unsigned long' lvalue Var 0x5e8b048 '__i' 'std::size_t':'unsigned long'
|   | |   `-CXXUnresolvedConstructExpr 0x5e8b190 <col:28, col:38> '__gnu_cxx::char_traits::char_type':'_CharT' '__gnu_cxx::char_traits::char_type':'_CharT'
|   | `-UnaryOperator 0x5e8b218 <line:168:9, col:11> 'std::size_t':'unsigned long' lvalue prefix '++'
|   |   `-DeclRefExpr 0x5e8b1f8 <col:11> 'std::size_t':'unsigned long' lvalue Var 0x5e8b048 '__i' 'std::size_t':'unsigned long'
|   `-ReturnStmt 0x5e8b280 <line:169:7, col:14>
|     `-ImplicitCastExpr 0x5e8b268 <col:14> 'std::size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5e8b248 <col:14> 'std::size_t':'unsigned long' lvalue Var 0x5e8b048 '__i' 'std::size_t':'unsigned long'
|-CXXMethodDecl 0x5e8b930 parent 0x5e7a5a0 prev 0x5e7bf08 <line:172:3, line:181:5> line:175:5 constexpr find 'const typename char_traits<_CharT>::char_type *(const __gnu_cxx::char_traits::char_type *, std::size_t, const __gnu_cxx::char_traits::char_type &)'
| |-ParmVarDecl 0x5e8b5d8 <col:10, col:27> col:27 referenced __s 'const __gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8b690 <col:32, col:44> col:44 referenced __n 'std::size_t':'unsigned long'
| |-ParmVarDecl 0x5e8b708 <col:49, col:66> col:66 referenced __a 'const __gnu_cxx::char_traits::char_type &'
| `-CompoundStmt 0x5e8be10 <line:176:5, line:181:5>
|   |-ForStmt 0x5e8bda8 <line:177:7, line:179:24>
|   | |-DeclStmt 0x5e8bb10 <line:177:12, col:31>
|   | | `-VarDecl 0x5e8ba70 <col:12, col:30> col:24 referenced __i 'std::size_t':'unsigned long' cinit
|   | |   `-ImplicitCastExpr 0x5e8baf8 <col:30> 'std::size_t':'unsigned long' <IntegralCast>
|   | |     `-IntegerLiteral 0x5e8bad8 <col:30> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x5e8bb98 <col:33, col:39> 'bool' '<'
|   | | |-ImplicitCastExpr 0x5e8bb68 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x5e8bb28 <col:33> 'std::size_t':'unsigned long' lvalue Var 0x5e8ba70 '__i' 'std::size_t':'unsigned long'
|   | | `-ImplicitCastExpr 0x5e8bb80 <col:39> 'std::size_t':'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5e8bb48 <col:39> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8b690 '__n' 'std::size_t':'unsigned long'
|   | |-UnaryOperator 0x5e8bbd8 <col:44, col:46> 'std::size_t':'unsigned long' lvalue prefix '++'
|   | | `-DeclRefExpr 0x5e8bbb8 <col:46> 'std::size_t':'unsigned long' lvalue Var 0x5e8ba70 '__i' 'std::size_t':'unsigned long'
|   | `-IfStmt 0x5e8bd90 <line:178:9, line:179:24>
|   |   |-CallExpr 0x5e8bc90 <line:178:13, col:29> '<dependent type>'
|   |   | |-DeclRefExpr 0x5e8bbf0 <col:13> 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)' lvalue CXXMethod 0x5e7b4a8 'eq' 'bool (const __gnu_cxx::char_traits::char_type &, const __gnu_cxx::char_traits::char_type &)'
|   |   | |-ArraySubscriptExpr 0x5e8bc50 <col:16, col:23> '<dependent type>' lvalue
|   |   | | |-DeclRefExpr 0x5e8bc10 <col:16> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8b5d8 '__s' 'const __gnu_cxx::char_traits::char_type *'
|   |   | | `-DeclRefExpr 0x5e8bc30 <col:20> 'std::size_t':'unsigned long' lvalue Var 0x5e8ba70 '__i' 'std::size_t':'unsigned long'
|   |   | `-DeclRefExpr 0x5e8bc70 <col:26> 'const __gnu_cxx::char_traits::char_type':'const _CharT' lvalue ParmVar 0x5e8b708 '__a' 'const __gnu_cxx::char_traits::char_type &'
|   |   `-ReturnStmt 0x5e8bd80 <line:179:11, col:24>
|   |     `-CXXOperatorCallExpr 0x5e8bd48 <col:18, col:24> '<dependent type>'
|   |       |-UnresolvedLookupExpr 0x5e8bd00 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5e0d318
|   |       |-DeclRefExpr 0x5e8bcc0 <col:18> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8b5d8 '__s' 'const __gnu_cxx::char_traits::char_type *'
|   |       `-DeclRefExpr 0x5e8bce0 <col:24> 'std::size_t':'unsigned long' lvalue Var 0x5e8ba70 '__i' 'std::size_t':'unsigned long'
|   `-ReturnStmt 0x5e8be00 <line:180:7, col:14>
|     `-IntegerLiteral 0x5e8bde0 <col:14> 'int' 0
|-CXXMethodDecl 0x5e8c460 parent 0x5e7a5a0 prev 0x5e7c248 <line:183:3, line:190:5> line:186:5 move 'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'
| |-ParmVarDecl 0x5e8c108 <col:10, col:21> col:21 referenced __s1 '__gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8c180 <col:27, col:44> col:44 referenced __s2 'const __gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8c238 <col:50, col:62> col:62 referenced __n 'std::size_t':'unsigned long'
| `-CompoundStmt 0x5e8c6f8 <line:187:5, line:190:5>
|   `-ReturnStmt 0x5e8c6e8 <line:188:7, line:189:35>
|     `-CXXStaticCastExpr 0x5e8c6b8 <line:188:14, line:189:35> '_CharT *' static_cast<_CharT *> <Dependent>
|       `-CallExpr 0x5e8c640 <line:188:35, line:189:34> '<dependent type>'
|         |-DeclRefExpr 0x5e8c558 <line:188:35> '<builtin fn type>' Function 0x5e48fc0 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
|         |-DeclRefExpr 0x5e8c578 <col:53> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8c108 '__s1' '__gnu_cxx::char_traits::char_type *'
|         |-DeclRefExpr 0x5e8c598 <col:59> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8c180 '__s2' 'const __gnu_cxx::char_traits::char_type *'
|         `-BinaryOperator 0x5e8c620 <line:189:11, col:33> 'unsigned long' '*'
|           |-ImplicitCastExpr 0x5e8c608 <col:11> 'std::size_t':'unsigned long' <LValueToRValue>
|           | `-DeclRefExpr 0x5e8c5b8 <col:11> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8c238 '__n' 'std::size_t':'unsigned long'
|           `-UnaryExprOrTypeTraitExpr 0x5e8c5e8 <col:17, col:33> 'unsigned long' sizeof '__gnu_cxx::char_traits::char_type':'_CharT'
|-CXXMethodDecl 0x5e8cd40 parent 0x5e7a5a0 prev 0x5e7c4e0 <line:192:3, line:200:5> line:195:5 copy 'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, const __gnu_cxx::char_traits::char_type *, std::size_t)'
| |-ParmVarDecl 0x5e8c9e8 <col:10, col:21> col:21 referenced __s1 '__gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8ca60 <col:27, col:44> col:44 referenced __s2 'const __gnu_cxx::char_traits::char_type *'
| |-ParmVarDecl 0x5e8cb18 <col:50, col:62> col:62 referenced __n 'std::size_t':'unsigned long'
| `-CompoundStmt 0x5e8d008 <line:196:5, line:200:5>
|   |-CallExpr 0x5e8cfa0 <line:198:7, col:39> '<dependent type>'
|   | |-UnresolvedLookupExpr 0x5e8ce58 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'copy' 0x5e4d9b8
|   | |-DeclRefExpr 0x5e8cea0 <col:17> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8ca60 '__s2' 'const __gnu_cxx::char_traits::char_type *'
|   | |-CXXOperatorCallExpr 0x5e8cf48 <col:23, col:30> '<dependent type>'
|   | | |-UnresolvedLookupExpr 0x5e8cf00 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator+' 0x5e0d318
|   | | |-DeclRefExpr 0x5e8cec0 <col:23> 'const __gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8ca60 '__s2' 'const __gnu_cxx::char_traits::char_type *'
|   | | `-DeclRefExpr 0x5e8cee0 <col:30> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8cb18 '__n' 'std::size_t':'unsigned long'
|   | `-DeclRefExpr 0x5e8cf80 <col:35> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8c9e8 '__s1' '__gnu_cxx::char_traits::char_type *'
|   `-ReturnStmt 0x5e8cff8 <line:199:7, col:14>
|     `-DeclRefExpr 0x5e8cfd8 <col:14> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8c9e8 '__s1' '__gnu_cxx::char_traits::char_type *'
`-CXXMethodDecl 0x5e8d660 parent 0x5e7a5a0 prev 0x5e7c7f8 <line:202:3, line:210:5> line:205:5 assign 'typename char_traits<_CharT>::char_type *(__gnu_cxx::char_traits::char_type *, std::size_t, __gnu_cxx::char_traits::char_type)'
  |-ParmVarDecl 0x5e8d2f8 <col:12, col:23> col:23 referenced __s '__gnu_cxx::char_traits::char_type *'
  |-ParmVarDecl 0x5e8d3c0 <col:28, col:40> col:40 referenced __n 'std::size_t':'unsigned long'
  |-ParmVarDecl 0x5e8d438 <col:45, col:55> col:55 referenced __a '__gnu_cxx::char_traits::char_type':'_CharT'
  `-CompoundStmt 0x5e8d888 <line:206:5, line:210:5>
    |-CallExpr 0x5e8d820 <line:208:7, col:32> '<dependent type>'
    | |-UnresolvedLookupExpr 0x5e8d778 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = 'fill_n' 0x5e5c9c8
    | |-DeclRefExpr 0x5e8d7c0 <col:19> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8d2f8 '__s' '__gnu_cxx::char_traits::char_type *'
    | |-DeclRefExpr 0x5e8d7e0 <col:24> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8d3c0 '__n' 'std::size_t':'unsigned long'
    | `-DeclRefExpr 0x5e8d800 <col:29> '__gnu_cxx::char_traits::char_type':'_CharT' lvalue ParmVar 0x5e8d438 '__a' '__gnu_cxx::char_traits::char_type':'_CharT'
    `-ReturnStmt 0x5e8d878 <line:209:7, col:14>
      `-DeclRefExpr 0x5e8d858 <col:14> '__gnu_cxx::char_traits::char_type *' lvalue ParmVar 0x5e8d2f8 '__s' '__gnu_cxx::char_traits::char_type *'
NamespaceDecl 0x5e8d8c8 prev 0x5e3de38 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/char_traits.h:215:1, line:496:1> line:215:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5e8d938 <col:31, col:56> Default
|-ClassTemplateDecl 0x5e8da90 prev 0x5e4a8f0 <line:268:3, line:270:7> line:269:12 char_traits
| |-TemplateTypeParmDecl 0x5e8d978 <line:268:12, col:18> col:18 referenced class depth 0 index 0 _CharT
| |-CXXRecordDecl 0x5e8da00 prev 0x5e4a860 <line:269:5, line:270:7> line:269:12 struct char_traits definition
| | |-DefinitionData empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-public '__gnu_cxx::char_traits<_CharT>':'char_traits<_CharT>'
| | `-CXXRecordDecl 0x5e8dc78 <col:5, col:12> col:12 implicit struct char_traits
| |-ClassTemplateSpecialization 0x5e8dd40 'char_traits'
| |-ClassTemplateSpecialization 0x5e93828 'char_traits'
| |-ClassTemplateSpecialization 0x5bd6040 'char_traits'
| `-ClassTemplateSpecialization 0x5bd6210 'char_traits'
|-ClassTemplateSpecializationDecl 0x5e8dd40 prev 0x5bd5c98 <line:274:3, line:382:3> line:275:12 struct char_traits definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'char'
| |-CXXRecordDecl 0x5e8df38 <col:5, col:12> col:12 implicit struct char_traits
| |-TypedefDecl 0x5e8dfd8 <line:277:7, col:20> col:20 referenced char_type 'char'
| | `-BuiltinType 0x5aca2a0 'char'
| |-TypedefDecl 0x5e8e048 <line:278:7, col:19> col:19 referenced int_type 'int'
| | `-BuiltinType 0x5aca300 'int'
| |-TypedefDecl 0x5e8e0b0 <line:279:7, col:25> col:25 pos_type 'std::streampos':'std::fpos<__mbstate_t>'
| | `-TypedefType 0x5e7a250 'std::streampos' sugar
| |   |-Typedef 0x5bfdcd0 'streampos'
| |   `-TemplateSpecializationType 0x5bfdc30 'fpos<mbstate_t>' sugar fpos
| |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| |     `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
| |       `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
| |-TypedefDecl 0x5e8e118 <line:280:7, col:25> col:25 off_type 'std::streamoff':'long'
| | `-TypedefType 0x5bfaeb0 'std::streamoff' sugar
| |   |-Typedef 0x5bfa9a8 'streamoff'
| |   `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5e8e180 <line:281:7, col:25> col:25 state_type 'mbstate_t':'__mbstate_t'
| | `-TypedefType 0x5be1dd0 'mbstate_t' sugar
| |   |-Typedef 0x5bd84a8 'mbstate_t'
| |   `-TypedefType 0x5bb7240 '__mbstate_t' sugar
| |     |-Typedef 0x5bb7048 '__mbstate_t'
| |     `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
| |       `-RecordType 0x5bb6be0 '__mbstate_t'
| |         `-CXXRecord 0x5bb6b50 ''
| |-CXXMethodDecl 0x5e8e480 <line:283:7, line:285:22> line:284:7 assign 'void (std::char_traits<char>::char_type &, const std::char_traits<char>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e8e268 <col:14, col:25> col:25 used __c1 'std::char_traits<char>::char_type &'
| | |-ParmVarDecl 0x5e8e338 <col:31, col:48> col:48 used __c2 'const std::char_traits<char>::char_type &'
| | `-CompoundStmt 0x5e90258 <line:285:7, col:22>
| |   `-BinaryOperator 0x5e90238 <col:9, col:16> 'std::char_traits<char>::char_type':'char' lvalue '='
| |     |-DeclRefExpr 0x5e901e0 <col:9> 'std::char_traits<char>::char_type':'char' lvalue ParmVar 0x5e8e268 '__c1' 'std::char_traits<char>::char_type &'
| |     `-ImplicitCastExpr 0x5e90220 <col:16> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| |       `-DeclRefExpr 0x5e90200 <col:16> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8e338 '__c2' 'const std::char_traits<char>::char_type &'
| |-CXXMethodDecl 0x5e8e6d0 <line:287:7, line:289:30> line:288:7 constexpr eq 'bool (const std::char_traits<char>::char_type &, const std::char_traits<char>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e8e540 <col:10, col:27> col:27 used __c1 'const std::char_traits<char>::char_type &'
| | |-ParmVarDecl 0x5e8e5b8 <col:33, col:50> col:50 used __c2 'const std::char_traits<char>::char_type &'
| | `-CompoundStmt 0x5e90340 <line:289:7, col:30>
| |   `-ReturnStmt 0x5e90330 <col:9, col:24>
| |     `-BinaryOperator 0x5e90310 <col:16, col:24> 'bool' '=='
| |       |-ImplicitCastExpr 0x5e902e0 <col:16> 'int' <IntegralCast>
| |       | `-ImplicitCastExpr 0x5e902b0 <col:16> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| |       |   `-DeclRefExpr 0x5e90270 <col:16> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8e540 '__c1' 'const std::char_traits<char>::char_type &'
| |       `-ImplicitCastExpr 0x5e902f8 <col:24> 'int' <IntegralCast>
| |         `-ImplicitCastExpr 0x5e902c8 <col:24> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| |           `-DeclRefExpr 0x5e90290 <col:24> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8e5b8 '__c2' 'const std::char_traits<char>::char_type &'
| |-CXXMethodDecl 0x5e8e8a8 <line:291:7, line:297:7> line:292:7 constexpr lt 'bool (const std::char_traits<char>::char_type &, const std::char_traits<char>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e8e790 <col:10, col:27> col:27 used __c1 'const std::char_traits<char>::char_type &'
| | |-ParmVarDecl 0x5e8e808 <col:33, col:50> col:50 used __c2 'const std::char_traits<char>::char_type &'
| | `-CompoundStmt 0x5e90508 <line:293:7, line:297:7>
| |   `-ReturnStmt 0x5e904f8 <line:295:2, line:296:37>
| |     `-ParenExpr 0x5e904d8 <line:295:9, line:296:37> 'bool'
| |       `-BinaryOperator 0x5e904b8 <line:295:10, line:296:36> 'bool' '<'
| |         |-ImplicitCastExpr 0x5e90488 <line:295:10, col:41> 'int' <IntegralCast>
| |         | `-CXXStaticCastExpr 0x5e903c0 <col:10, col:41> 'unsigned char' static_cast<unsigned char> <NoOp>
| |         |   `-ImplicitCastExpr 0x5e903a8 <col:37> 'unsigned char' <IntegralCast> part_of_explicit_cast
| |         |     `-ImplicitCastExpr 0x5e90390 <col:37> 'std::char_traits<char>::char_type':'char' <LValueToRValue> part_of_explicit_cast
| |         |       `-DeclRefExpr 0x5e90358 <col:37> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8e790 '__c1' 'const std::char_traits<char>::char_type &'
| |         `-ImplicitCastExpr 0x5e904a0 <line:296:5, col:36> 'int' <IntegralCast>
| |           `-CXXStaticCastExpr 0x5e90458 <col:5, col:36> 'unsigned char' static_cast<unsigned char> <NoOp>
| |             `-ImplicitCastExpr 0x5e90440 <col:32> 'unsigned char' <IntegralCast> part_of_explicit_cast
| |               `-ImplicitCastExpr 0x5e90428 <col:32> 'std::char_traits<char>::char_type':'char' <LValueToRValue> part_of_explicit_cast
| |                 `-DeclRefExpr 0x5e903f0 <col:32> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8e808 '__c2' 'const std::char_traits<char>::char_type &'
| |-CXXMethodDecl 0x5e8ebb0 <line:299:7, line:311:7> line:300:7 compare 'int (const std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)' static
| | |-ParmVarDecl 0x5e8e998 <col:15, col:32> col:32 used __s1 'const std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8ea10 <col:38, col:55> col:55 used __s2 'const std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8ea88 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x5e907f0 <line:301:7, line:311:7>
| |   |-IfStmt 0x5e905e0 <line:308:2, line:309:11>
| |   | |-BinaryOperator 0x5e90590 <line:308:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5e90560 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5e90520 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8ea88 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5e90578 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5e90540 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5e905d0 <line:309:4, col:11>
| |   |   `-IntegerLiteral 0x5e905b0 <col:11> 'int' 0
| |   `-ReturnStmt 0x5e907e0 <line:310:2, col:41>
| |     `-CallExpr 0x5e90730 <col:9, col:41> 'int'
| |       |-ImplicitCastExpr 0x5e90718 <col:9> 'int (*)(const void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |       | `-DeclRefExpr 0x5e905f8 <col:9> '<builtin fn type>' Function 0x5e5e230 '__builtin_memcmp' 'int (const void *, const void *, unsigned long) noexcept'
| |       |-ImplicitCastExpr 0x5e90780 <col:26> 'const void *' <BitCast>
| |       | `-ImplicitCastExpr 0x5e90768 <col:26> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| |       |   `-DeclRefExpr 0x5e90618 <col:26> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8e998 '__s1' 'const std::char_traits<char>::char_type *'
| |       |-ImplicitCastExpr 0x5e907b0 <col:32> 'const void *' <BitCast>
| |       | `-ImplicitCastExpr 0x5e90798 <col:32> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| |       |   `-DeclRefExpr 0x5e90638 <col:32> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8ea10 '__s2' 'const std::char_traits<char>::char_type *'
| |       `-ImplicitCastExpr 0x5e907c8 <col:38> 'std::size_t':'unsigned long' <LValueToRValue>
| |         `-DeclRefExpr 0x5e90658 <col:38> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8ea88 '__n' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x5e8ed38 <line:313:7, line:321:7> line:314:7 length 'std::size_t (const std::char_traits<char>::char_type *)' static
| | |-ParmVarDecl 0x5e8ec78 <col:14, col:31> col:31 used __s 'const std::char_traits<char>::char_type *'
| | `-CompoundStmt 0x5e908d0 <line:315:7, line:321:7>
| |   `-ReturnStmt 0x5e908c0 <line:320:2, col:29>
| |     `-CallExpr 0x5e90880 <col:9, col:29> 'unsigned long'
| |       |-ImplicitCastExpr 0x5e90868 <col:9> 'unsigned long (*)(const char *) noexcept' <BuiltinFnToFnPtr>
| |       | `-DeclRefExpr 0x5e90810 <col:9> '<builtin fn type>' Function 0x5c17160 '__builtin_strlen' 'unsigned long (const char *) noexcept'
| |       `-ImplicitCastExpr 0x5e908a8 <col:26> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| |         `-DeclRefExpr 0x5e90830 <col:26> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8ec78 '__s' 'const std::char_traits<char>::char_type *'
| |-CXXMethodDecl 0x5e8f008 <line:323:7, line:335:7> line:324:7 find 'const std::char_traits<char>::char_type *(const std::char_traits<char>::char_type *, std::size_t, const std::char_traits<char>::char_type &)' static
| | |-ParmVarDecl 0x5e8edf0 <col:12, col:29> col:29 used __s 'const std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8ee68 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5e8eee0 <col:46, col:63> col:63 used __a 'const std::char_traits<char>::char_type &'
| | `-CompoundStmt 0x5e90f20 <line:325:7, line:335:7>
| |   |-IfStmt 0x5e909c0 <line:332:2, line:333:11>
| |   | |-BinaryOperator 0x5e90958 <line:332:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5e90928 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5e908e8 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8ee68 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5e90940 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5e90908 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5e909b0 <line:333:4, col:11>
| |   |   `-ImplicitCastExpr 0x5e90998 <col:11> 'const std::char_traits<char>::char_type *' <NullToPointer>
| |   |     `-IntegerLiteral 0x5e90978 <col:11> 'int' 0
| |   `-ReturnStmt 0x5e90f10 <line:334:2, col:70>
| |     `-CXXStaticCastExpr 0x5e90ee0 <col:9, col:70> 'const std::char_traits<char>::char_type *' static_cast<const std::char_traits<char>::char_type *> <BitCast>
| |       `-CallExpr 0x5e90e20 <col:39, col:69> 'void *'
| |         |-ImplicitCastExpr 0x5e90e08 <col:39> 'void *(*)(const void *, int, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |         | `-DeclRefExpr 0x5e90ce0 <col:39> '<builtin fn type>' Function 0x5e90ab0 '__builtin_memchr' 'void *(const void *, int, unsigned long) noexcept'
| |         |-ImplicitCastExpr 0x5e90e70 <col:56> 'const void *' <BitCast>
| |         | `-ImplicitCastExpr 0x5e90e58 <col:56> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e90d00 <col:56> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8edf0 '__s' 'const std::char_traits<char>::char_type *'
| |         |-ImplicitCastExpr 0x5e90ea0 <col:61> 'int' <IntegralCast>
| |         | `-ImplicitCastExpr 0x5e90e88 <col:61> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e90d20 <col:61> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8eee0 '__a' 'const std::char_traits<char>::char_type &'
| |         `-ImplicitCastExpr 0x5e90eb8 <col:66> 'std::size_t':'unsigned long' <LValueToRValue>
| |           `-DeclRefExpr 0x5e90d40 <col:66> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8ee68 '__n' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x5e8f308 <line:337:7, line:343:7> line:338:7 move 'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)' static
| | |-ParmVarDecl 0x5e8f0f8 <col:12, col:23> col:23 used __s1 'std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8f170 <col:29, col:46> col:46 used __s2 'const std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8f1e8 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x5e91270 <line:339:7, line:343:7>
| |   |-IfStmt 0x5e91018 <line:340:2, line:341:11>
| |   | |-BinaryOperator 0x5e90fb0 <line:340:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5e90f80 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5e90f40 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8f1e8 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5e90f98 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5e90f60 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5e91008 <line:341:4, col:11>
| |   |   `-ImplicitCastExpr 0x5e90ff0 <col:11> 'std::char_traits<char>::char_type *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x5e90fd0 <col:11> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f0f8 '__s1' 'std::char_traits<char>::char_type *'
| |   `-ReturnStmt 0x5e91260 <line:342:2, col:67>
| |     `-CXXStaticCastExpr 0x5e91230 <col:9, col:67> 'std::char_traits<char>::char_type *' static_cast<std::char_traits<char>::char_type *> <BitCast>
| |       `-CallExpr 0x5e91170 <col:33, col:66> 'void *'
| |         |-ImplicitCastExpr 0x5e91158 <col:33> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |         | `-DeclRefExpr 0x5e91030 <col:33> '<builtin fn type>' Function 0x5e48fc0 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| |         |-ImplicitCastExpr 0x5e911c0 <col:51> 'void *' <BitCast>
| |         | `-ImplicitCastExpr 0x5e911a8 <col:51> 'std::char_traits<char>::char_type *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e91050 <col:51> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f0f8 '__s1' 'std::char_traits<char>::char_type *'
| |         |-ImplicitCastExpr 0x5e911f0 <col:57> 'const void *' <BitCast>
| |         | `-ImplicitCastExpr 0x5e911d8 <col:57> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e91070 <col:57> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f170 '__s2' 'const std::char_traits<char>::char_type *'
| |         `-ImplicitCastExpr 0x5e91208 <col:63> 'std::size_t':'unsigned long' <LValueToRValue>
| |           `-DeclRefExpr 0x5e91090 <col:63> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8f1e8 '__n' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x5e8f560 <line:345:7, line:351:7> line:346:7 copy 'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, const std::char_traits<char>::char_type *, std::size_t)' static
| | |-ParmVarDecl 0x5e8f3d0 <col:12, col:23> col:23 used __s1 'std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8f448 <col:29, col:46> col:46 used __s2 'const std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8f4c0 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x5e92f98 <line:347:7, line:351:7>
| |   |-IfStmt 0x5e92b20 <line:348:2, line:349:11>
| |   | |-BinaryOperator 0x5e91300 <line:348:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5e912d0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5e91290 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8f4c0 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5e912e8 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5e912b0 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5e91358 <line:349:4, col:11>
| |   |   `-ImplicitCastExpr 0x5e91340 <col:11> 'std::char_traits<char>::char_type *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x5e91320 <col:11> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f3d0 '__s1' 'std::char_traits<char>::char_type *'
| |   `-ReturnStmt 0x5e92f88 <line:350:2, col:66>
| |     `-CXXStaticCastExpr 0x5e92f58 <col:9, col:66> 'std::char_traits<char>::char_type *' static_cast<std::char_traits<char>::char_type *> <BitCast>
| |       `-CallExpr 0x5e92e98 <col:33, col:65> 'void *'
| |         |-ImplicitCastExpr 0x5e92e80 <col:33> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |         | `-DeclRefExpr 0x5e92db8 <col:33> '<builtin fn type>' Function 0x5e92b88 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
| |         |-ImplicitCastExpr 0x5e92ee8 <col:50> 'void *' <BitCast>
| |         | `-ImplicitCastExpr 0x5e92ed0 <col:50> 'std::char_traits<char>::char_type *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e92dd8 <col:50> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f3d0 '__s1' 'std::char_traits<char>::char_type *'
| |         |-ImplicitCastExpr 0x5e92f18 <col:56> 'const void *' <BitCast>
| |         | `-ImplicitCastExpr 0x5e92f00 <col:56> 'const std::char_traits<char>::char_type *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e92df8 <col:56> 'const std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f448 '__s2' 'const std::char_traits<char>::char_type *'
| |         `-ImplicitCastExpr 0x5e92f30 <col:62> 'std::size_t':'unsigned long' <LValueToRValue>
| |           `-DeclRefExpr 0x5e92e18 <col:62> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8f4c0 '__n' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x5e8f838 <line:353:7, line:359:7> line:354:7 assign 'std::char_traits<char>::char_type *(std::char_traits<char>::char_type *, std::size_t, std::char_traits<char>::char_type)' static
| | |-ParmVarDecl 0x5e8f628 <col:14, col:25> col:25 used __s 'std::char_traits<char>::char_type *'
| | |-ParmVarDecl 0x5e8f6a0 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5e8f718 <col:42, col:52> col:52 used __a 'std::char_traits<char>::char_type':'char'
| | `-CompoundStmt 0x5e932e0 <line:355:7, line:359:7>
| |   |-IfStmt 0x5e93090 <line:356:2, line:357:11>
| |   | |-BinaryOperator 0x5e93028 <line:356:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5e92ff8 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5e92fb8 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8f6a0 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5e93010 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5e92fd8 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5e93080 <line:357:4, col:11>
| |   |   `-ImplicitCastExpr 0x5e93068 <col:11> 'std::char_traits<char>::char_type *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x5e93048 <col:11> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f628 '__s' 'std::char_traits<char>::char_type *'
| |   `-ReturnStmt 0x5e932d0 <line:358:2, col:64>
| |     `-CXXStaticCastExpr 0x5e932a0 <col:9, col:64> 'std::char_traits<char>::char_type *' static_cast<std::char_traits<char>::char_type *> <BitCast>
| |       `-CallExpr 0x5e931e0 <col:33, col:63> 'void *'
| |         |-ImplicitCastExpr 0x5e931c8 <col:33> 'void *(*)(void *, int, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |         | `-DeclRefExpr 0x5e930a8 <col:33> '<builtin fn type>' Function 0x5e581f0 '__builtin_memset' 'void *(void *, int, unsigned long) noexcept'
| |         |-ImplicitCastExpr 0x5e93230 <col:50> 'void *' <BitCast>
| |         | `-ImplicitCastExpr 0x5e93218 <col:50> 'std::char_traits<char>::char_type *' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e930c8 <col:50> 'std::char_traits<char>::char_type *' lvalue ParmVar 0x5e8f628 '__s' 'std::char_traits<char>::char_type *'
| |         |-ImplicitCastExpr 0x5e93260 <col:55> 'int' <IntegralCast>
| |         | `-ImplicitCastExpr 0x5e93248 <col:55> 'std::char_traits<char>::char_type':'char' <LValueToRValue>
| |         |   `-DeclRefExpr 0x5e930e8 <col:55> 'std::char_traits<char>::char_type':'char' lvalue ParmVar 0x5e8f718 '__a' 'std::char_traits<char>::char_type':'char'
| |         `-ImplicitCastExpr 0x5e93278 <col:60> 'std::size_t':'unsigned long' <LValueToRValue>
| |           `-DeclRefExpr 0x5e93108 <col:60> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e8f6a0 '__n' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x5e8fa70 <line:361:7, line:363:45> line:362:7 constexpr to_char_type 'std::char_traits<char>::char_type (const std::char_traits<char>::int_type &) noexcept' static
| | |-ParmVarDecl 0x5e8f978 <col:20, col:36> col:36 used __c 'const std::char_traits<char>::int_type &'
| | `-CompoundStmt 0x5e933a0 <line:363:7, col:45>
| |   `-ReturnStmt 0x5e93390 <col:9, col:42>
| |     `-CXXStaticCastExpr 0x5e93360 <col:16, col:42> 'std::char_traits<char>::char_type':'char' static_cast<std::char_traits<char>::char_type> <NoOp>
| |       `-ImplicitCastExpr 0x5e93348 <col:39> 'std::char_traits<char>::char_type':'char' <IntegralCast> part_of_explicit_cast
| |         `-ImplicitCastExpr 0x5e93330 <col:39> 'std::char_traits<char>::int_type':'int' <LValueToRValue> part_of_explicit_cast
| |           `-DeclRefExpr 0x5e93300 <col:39> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x5e8f978 '__c' 'const std::char_traits<char>::int_type &'
| |-CXXMethodDecl 0x5e8fc20 <line:367:7, line:369:72> line:368:7 constexpr to_int_type 'std::char_traits<char>::int_type (const std::char_traits<char>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e8fb28 <col:19, col:36> col:36 used __c 'const std::char_traits<char>::char_type &'
| | `-CompoundStmt 0x5e934b8 <line:369:7, col:72>
| |   `-ReturnStmt 0x5e934a8 <col:9, col:69>
| |     `-CXXStaticCastExpr 0x5e93478 <col:16, col:69> 'std::char_traits<char>::int_type':'int' static_cast<std::char_traits<char>::int_type> <NoOp>
| |       `-ImplicitCastExpr 0x5e93460 <col:38, col:68> 'std::char_traits<char>::int_type':'int' <IntegralCast> part_of_explicit_cast
| |         `-CXXStaticCastExpr 0x5e93420 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
| |           `-ImplicitCastExpr 0x5e93408 <col:65> 'unsigned char' <IntegralCast> part_of_explicit_cast
| |             `-ImplicitCastExpr 0x5e933f0 <col:65> 'std::char_traits<char>::char_type':'char' <LValueToRValue> part_of_explicit_cast
| |               `-DeclRefExpr 0x5e933b8 <col:65> 'const std::char_traits<char>::char_type':'const char' lvalue ParmVar 0x5e8fb28 '__c' 'const std::char_traits<char>::char_type &'
| |-CXXMethodDecl 0x5e8fe70 <line:371:7, line:373:30> line:372:7 constexpr eq_int_type 'bool (const std::char_traits<char>::int_type &, const std::char_traits<char>::int_type &) noexcept' static
| | |-ParmVarDecl 0x5e8fcd8 <col:19, col:35> col:35 used __c1 'const std::char_traits<char>::int_type &'
| | |-ParmVarDecl 0x5e8fd50 <col:41, col:57> col:57 used __c2 'const std::char_traits<char>::int_type &'
| | `-CompoundStmt 0x5e93570 <line:373:7, col:30>
| |   `-ReturnStmt 0x5e93560 <col:9, col:24>
| |     `-BinaryOperator 0x5e93540 <col:16, col:24> 'bool' '=='
| |       |-ImplicitCastExpr 0x5e93510 <col:16> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
| |       | `-DeclRefExpr 0x5e934d0 <col:16> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x5e8fcd8 '__c1' 'const std::char_traits<char>::int_type &'
| |       `-ImplicitCastExpr 0x5e93528 <col:24> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
| |         `-DeclRefExpr 0x5e934f0 <col:24> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x5e8fd50 '__c2' 'const std::char_traits<char>::int_type &'
| |-CXXMethodDecl 0x5e8ff70 <line:375:7, line:377:43> line:376:7 used constexpr eof 'std::char_traits<char>::int_type () noexcept' static
| | `-CompoundStmt 0x5e93610 <line:377:7, col:43>
| |   `-ReturnStmt 0x5e93600 <col:9, col:40>
| |     `-CXXStaticCastExpr 0x5e935d0 <col:16, col:40> 'std::char_traits<char>::int_type':'int' static_cast<std::char_traits<char>::int_type> <NoOp>
| |       `-UnaryOperator 0x5e935a8 <col:38, col:39> 'int' prefix '-'
| |         `-IntegerLiteral 0x5e93588 <col:39> 'int' 1
| `-CXXMethodDecl 0x5e90120 <line:379:7, line:381:42> line:380:7 constexpr not_eof 'std::char_traits<char>::int_type (const std::char_traits<char>::int_type &) noexcept' static
|   |-ParmVarDecl 0x5e90020 <col:15, col:31> col:31 used __c 'const std::char_traits<char>::int_type &'
|   `-CompoundStmt 0x5e937f0 <line:381:7, col:42>
|     `-ReturnStmt 0x5e937e0 <col:9, col:37>
|       `-ConditionalOperator 0x5e937b0 <col:16, col:37> 'int'
|         |-ParenExpr 0x5e93738 <col:16, col:29> 'bool'
|         | `-BinaryOperator 0x5e93718 <col:17, col:28> 'bool' '=='
|         |   |-ImplicitCastExpr 0x5e93700 <col:17> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x5e93628 <col:17> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x5e90020 '__c' 'const std::char_traits<char>::int_type &'
|         |   `-CallExpr 0x5e936e0 <col:24, col:28> 'std::char_traits<char>::int_type':'int'
|         |     `-ImplicitCastExpr 0x5e936c8 <col:24> 'std::char_traits<char>::int_type (*)() noexcept' <FunctionToPointerDecay>
|         |       `-DeclRefExpr 0x5e93648 <col:24> 'std::char_traits<char>::int_type () noexcept' lvalue CXXMethod 0x5e8ff70 'eof' 'std::char_traits<char>::int_type () noexcept'
|         |-IntegerLiteral 0x5e93758 <col:33> 'int' 0
|         `-ImplicitCastExpr 0x5e93798 <col:37> 'std::char_traits<char>::int_type':'int' <LValueToRValue>
|           `-DeclRefExpr 0x5e93778 <col:37> 'const std::char_traits<char>::int_type':'const int' lvalue ParmVar 0x5e90020 '__c' 'const std::char_traits<char>::int_type &'
`-ClassTemplateSpecializationDecl 0x5e93828 prev 0x5bd5e70 <line:387:3, line:492:3> line:388:12 struct char_traits definition
  |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor exists simple trivial needs_implicit
  | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveAssignment exists simple trivial needs_implicit
  | `-Destructor simple irrelevant trivial needs_implicit
  |-TemplateArgument type 'wchar_t'
  |-CXXRecordDecl 0x5e93a18 <col:5, col:12> col:12 implicit struct char_traits
  |-TypedefDecl 0x5e93ab8 <line:390:7, col:23> col:23 referenced char_type 'wchar_t'
  | `-BuiltinType 0x5aca7e0 'wchar_t'
  |-TypedefDecl 0x5e93b20 <line:391:7, col:22> col:22 referenced int_type 'wint_t':'unsigned int'
  | `-TypedefType 0x5be1a40 'wint_t' sugar
  |   |-Typedef 0x5bd8440 'wint_t'
  |   `-BuiltinType 0x5aca3a0 'unsigned int'
  |-TypedefDecl 0x5e93b88 <line:392:7, col:25> col:25 off_type 'std::streamoff':'long'
  | `-TypedefType 0x5bfaeb0 'std::streamoff' sugar
  |   |-Typedef 0x5bfa9a8 'streamoff'
  |   `-BuiltinType 0x5aca320 'long'
  |-TypedefDecl 0x5e93c10 <line:393:7, col:26> col:26 pos_type 'std::wstreampos':'std::fpos<__mbstate_t>'
  | `-TypedefType 0x5e93be0 'std::wstreampos' sugar
  |   |-Typedef 0x5bfdde0 'wstreampos'
  |   `-TemplateSpecializationType 0x5bfdd40 'fpos<mbstate_t>' sugar fpos
  |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
  |     `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
  |       `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
  |-TypedefDecl 0x5e93c78 <line:394:7, col:25> col:25 state_type 'mbstate_t':'__mbstate_t'
  | `-TypedefType 0x5be1dd0 'mbstate_t' sugar
  |   |-Typedef 0x5bd84a8 'mbstate_t'
  |   `-TypedefType 0x5bb7240 '__mbstate_t' sugar
  |     |-Typedef 0x5bb7048 '__mbstate_t'
  |     `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
  |       `-RecordType 0x5bb6be0 '__mbstate_t'
  |         `-CXXRecord 0x5bb6b50 ''
  |-CXXMethodDecl 0x5e93f70 <line:396:7, line:398:22> line:397:7 assign 'void (std::char_traits<wchar_t>::char_type &, const std::char_traits<wchar_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5e93d58 <col:14, col:25> col:25 used __c1 'std::char_traits<wchar_t>::char_type &'
  | |-ParmVarDecl 0x5e93e28 <col:31, col:48> col:48 used __c2 'const std::char_traits<wchar_t>::char_type &'
  | `-CompoundStmt 0x5e95cc8 <line:398:7, col:22>
  |   `-BinaryOperator 0x5e95ca8 <col:9, col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' lvalue '='
  |     |-DeclRefExpr 0x5e95c50 <col:9> 'std::char_traits<wchar_t>::char_type':'wchar_t' lvalue ParmVar 0x5e93d58 '__c1' 'std::char_traits<wchar_t>::char_type &'
  |     `-ImplicitCastExpr 0x5e95c90 <col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |       `-DeclRefExpr 0x5e95c70 <col:16> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e93e28 '__c2' 'const std::char_traits<wchar_t>::char_type &'
  |-CXXMethodDecl 0x5e941c0 <line:400:7, line:402:30> line:401:7 constexpr eq 'bool (const std::char_traits<wchar_t>::char_type &, const std::char_traits<wchar_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5e94030 <col:10, col:27> col:27 used __c1 'const std::char_traits<wchar_t>::char_type &'
  | |-ParmVarDecl 0x5e940a8 <col:33, col:50> col:50 used __c2 'const std::char_traits<wchar_t>::char_type &'
  | `-CompoundStmt 0x5e95db0 <line:402:7, col:30>
  |   `-ReturnStmt 0x5e95da0 <col:9, col:24>
  |     `-BinaryOperator 0x5e95d80 <col:16, col:24> 'bool' '=='
  |       |-ImplicitCastExpr 0x5e95d50 <col:16> 'int' <IntegralCast>
  |       | `-ImplicitCastExpr 0x5e95d20 <col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |       |   `-DeclRefExpr 0x5e95ce0 <col:16> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e94030 '__c1' 'const std::char_traits<wchar_t>::char_type &'
  |       `-ImplicitCastExpr 0x5e95d68 <col:24> 'int' <IntegralCast>
  |         `-ImplicitCastExpr 0x5e95d38 <col:24> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |           `-DeclRefExpr 0x5e95d00 <col:24> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e940a8 '__c2' 'const std::char_traits<wchar_t>::char_type &'
  |-CXXMethodDecl 0x5e94398 <line:404:7, line:406:29> line:405:7 constexpr lt 'bool (const std::char_traits<wchar_t>::char_type &, const std::char_traits<wchar_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5e94280 <col:10, col:27> col:27 used __c1 'const std::char_traits<wchar_t>::char_type &'
  | |-ParmVarDecl 0x5e942f8 <col:33, col:50> col:50 used __c2 'const std::char_traits<wchar_t>::char_type &'
  | `-CompoundStmt 0x5e95e98 <line:406:7, col:29>
  |   `-ReturnStmt 0x5e95e88 <col:9, col:23>
  |     `-BinaryOperator 0x5e95e68 <col:16, col:23> 'bool' '<'
  |       |-ImplicitCastExpr 0x5e95e38 <col:16> 'int' <IntegralCast>
  |       | `-ImplicitCastExpr 0x5e95e08 <col:16> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |       |   `-DeclRefExpr 0x5e95dc8 <col:16> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e94280 '__c1' 'const std::char_traits<wchar_t>::char_type &'
  |       `-ImplicitCastExpr 0x5e95e50 <col:23> 'int' <IntegralCast>
  |         `-ImplicitCastExpr 0x5e95e20 <col:23> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |           `-DeclRefExpr 0x5e95de8 <col:23> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e942f8 '__c2' 'const std::char_traits<wchar_t>::char_type &'
  |-CXXMethodDecl 0x5e94660 <line:408:7, line:421:7> line:409:7 compare 'int (const std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)' static
  | |-ParmVarDecl 0x5e94488 <col:15, col:32> col:32 used __s1 'const std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94500 <col:38, col:55> col:55 used __s2 'const std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94578 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
  | `-CompoundStmt 0x5e96168 <line:410:7, line:421:7>
  |   `-IfStmt 0x5e96140 <line:417:2, line:420:34> has_else
  |     |-BinaryOperator 0x5e95f20 <line:417:6, col:13> 'bool' '=='
  |     | |-ImplicitCastExpr 0x5e95ef0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |     | | `-DeclRefExpr 0x5e95eb0 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94578 '__n' 'std::size_t':'unsigned long'
  |     | `-ImplicitCastExpr 0x5e95f08 <col:13> 'unsigned long' <IntegralCast>
  |     |   `-IntegerLiteral 0x5e95ed0 <col:13> 'int' 0
  |     |-ReturnStmt 0x5e95f60 <line:418:4, col:11>
  |     | `-IntegerLiteral 0x5e95f40 <col:11> 'int' 0
  |     `-ReturnStmt 0x5e96130 <line:420:4, col:34>
  |       `-CallExpr 0x5e960b0 <col:11, col:34> 'int'
  |         |-ImplicitCastExpr 0x5e96098 <col:11> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
  |         | `-DeclRefExpr 0x5e96018 <col:11> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x5be0e80 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x5bf8278 'wmemcmp')
  |         |-ImplicitCastExpr 0x5e960e8 <col:19> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |         | `-DeclRefExpr 0x5e95fb8 <col:19> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94488 '__s1' 'const std::char_traits<wchar_t>::char_type *'
  |         |-ImplicitCastExpr 0x5e96100 <col:25> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |         | `-DeclRefExpr 0x5e95fd8 <col:25> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94500 '__s2' 'const std::char_traits<wchar_t>::char_type *'
  |         `-ImplicitCastExpr 0x5e96118 <col:31> 'std::size_t':'unsigned long' <LValueToRValue>
  |           `-DeclRefExpr 0x5e95ff8 <col:31> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94578 '__n' 'std::size_t':'unsigned long'
  |-CXXMethodDecl 0x5e947e8 <line:423:7, line:432:7> line:424:7 length 'std::size_t (const std::char_traits<wchar_t>::char_type *)' static
  | |-ParmVarDecl 0x5e94728 <col:14, col:31> col:31 used __s 'const std::char_traits<wchar_t>::char_type *'
  | `-CompoundStmt 0x5e962d0 <line:425:7, line:432:7>
  |   `-ReturnStmt 0x5e962c0 <line:431:4, col:21>
  |     `-CallExpr 0x5e96280 <col:11, col:21> 'size_t':'unsigned long'
  |       |-ImplicitCastExpr 0x5e96268 <col:11> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
  |       | `-DeclRefExpr 0x5e961e8 <col:11> 'size_t (const wchar_t *) throw()' lvalue Function 0x5be03e0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x5bf6938 'wcslen')
  |       `-ImplicitCastExpr 0x5e962a8 <col:18> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |         `-DeclRefExpr 0x5e961c8 <col:18> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94728 '__s' 'const std::char_traits<wchar_t>::char_type *'
  |-CXXMethodDecl 0x5e94ab8 <line:434:7, line:447:7> line:435:7 find 'const std::char_traits<wchar_t>::char_type *(const std::char_traits<wchar_t>::char_type *, std::size_t, const std::char_traits<wchar_t>::char_type &)' static
  | |-ParmVarDecl 0x5e948a0 <col:12, col:29> col:29 used __s 'const std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94918 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
  | |-ParmVarDecl 0x5e94990 <col:46, col:63> col:63 used __a 'const std::char_traits<wchar_t>::char_type &'
  | `-CompoundStmt 0x5e96580 <line:436:7, line:447:7>
  |   `-IfStmt 0x5e96558 <line:443:2, line:446:32> has_else
  |     |-BinaryOperator 0x5e96358 <line:443:6, col:13> 'bool' '=='
  |     | |-ImplicitCastExpr 0x5e96328 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |     | | `-DeclRefExpr 0x5e962e8 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94918 '__n' 'std::size_t':'unsigned long'
  |     | `-ImplicitCastExpr 0x5e96340 <col:13> 'unsigned long' <IntegralCast>
  |     |   `-IntegerLiteral 0x5e96308 <col:13> 'int' 0
  |     |-ReturnStmt 0x5e963b0 <line:444:4, col:11>
  |     | `-ImplicitCastExpr 0x5e96398 <col:11> 'const std::char_traits<wchar_t>::char_type *' <NullToPointer>
  |     |   `-IntegerLiteral 0x5e96378 <col:11> 'int' 0
  |     `-ReturnStmt 0x5e96548 <line:446:4, col:32>
  |       `-ImplicitCastExpr 0x5e96530 <col:11, col:32> 'const std::char_traits<wchar_t>::char_type *' <NoOp>
  |         `-CallExpr 0x5e964b0 <col:11, col:32> 'wchar_t *'
  |           |-ImplicitCastExpr 0x5e96498 <col:11> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
  |           | `-DeclRefExpr 0x5e96470 <col:11> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x5be0bc8 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x5bf8958 'wmemchr')
  |           |-ImplicitCastExpr 0x5e964e8 <col:19> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |           | `-DeclRefExpr 0x5e96410 <col:19> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e948a0 '__s' 'const std::char_traits<wchar_t>::char_type *'
  |           |-ImplicitCastExpr 0x5e96500 <col:24> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |           | `-DeclRefExpr 0x5e96430 <col:24> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e94990 '__a' 'const std::char_traits<wchar_t>::char_type &'
  |           `-ImplicitCastExpr 0x5e96518 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
  |             `-DeclRefExpr 0x5e96450 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94918 '__n' 'std::size_t':'unsigned long'
  |-CXXMethodDecl 0x5e94d78 <line:449:7, line:455:7> line:450:7 move 'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)' static
  | |-ParmVarDecl 0x5e94ba8 <col:12, col:23> col:23 used __s1 'std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94c20 <col:29, col:46> col:46 used __s2 'const std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94c98 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
  | `-CompoundStmt 0x5e96860 <line:451:7, line:455:7>
  |   |-IfStmt 0x5e96670 <line:452:2, line:453:11>
  |   | |-BinaryOperator 0x5e96608 <line:452:6, col:13> 'bool' '=='
  |   | | |-ImplicitCastExpr 0x5e965d8 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5e96598 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94c98 '__n' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5e965f0 <col:13> 'unsigned long' <IntegralCast>
  |   | |   `-IntegerLiteral 0x5e965b8 <col:13> 'int' 0
  |   | `-ReturnStmt 0x5e96660 <line:453:4, col:11>
  |   |   `-ImplicitCastExpr 0x5e96648 <col:11> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x5e96628 <col:11> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94ba8 '__s1' 'std::char_traits<wchar_t>::char_type *'
  |   `-ReturnStmt 0x5e96850 <line:454:2, col:33>
  |     `-CallExpr 0x5e967d0 <col:9, col:33> 'wchar_t *'
  |       |-ImplicitCastExpr 0x5e967b8 <col:9> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
  |       | `-DeclRefExpr 0x5e96730 <col:9> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x5be1418 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x5bf83d8 'wmemmove')
  |       |-ImplicitCastExpr 0x5e96808 <col:18> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e966d0 <col:18> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94ba8 '__s1' 'std::char_traits<wchar_t>::char_type *'
  |       |-ImplicitCastExpr 0x5e96820 <col:24> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e966f0 <col:24> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94c20 '__s2' 'const std::char_traits<wchar_t>::char_type *'
  |       `-ImplicitCastExpr 0x5e96838 <col:30> 'std::size_t':'unsigned long' <LValueToRValue>
  |         `-DeclRefExpr 0x5e96710 <col:30> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94c98 '__n' 'std::size_t':'unsigned long'
  |-CXXMethodDecl 0x5e94fd0 <line:457:7, line:463:7> line:458:7 copy 'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, const std::char_traits<wchar_t>::char_type *, std::size_t)' static
  | |-ParmVarDecl 0x5e94e40 <col:12, col:23> col:23 used __s1 'std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94eb8 <col:29, col:46> col:46 used __s2 'const std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e94f30 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
  | `-CompoundStmt 0x5e97740 <line:459:7, line:463:7>
  |   |-IfStmt 0x5e96958 <line:460:2, line:461:11>
  |   | |-BinaryOperator 0x5e968f0 <line:460:6, col:13> 'bool' '=='
  |   | | |-ImplicitCastExpr 0x5e968c0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5e96880 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94f30 '__n' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5e968d8 <col:13> 'unsigned long' <IntegralCast>
  |   | |   `-IntegerLiteral 0x5e968a0 <col:13> 'int' 0
  |   | `-ReturnStmt 0x5e96948 <line:461:4, col:11>
  |   |   `-ImplicitCastExpr 0x5e96930 <col:11> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x5e96910 <col:11> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94e40 '__s1' 'std::char_traits<wchar_t>::char_type *'
  |   `-ReturnStmt 0x5e96b00 <line:462:2, col:32>
  |     `-CallExpr 0x5e96a80 <col:9, col:32> 'wchar_t *'
  |       |-ImplicitCastExpr 0x5e96a68 <col:9> 'wchar_t *(*)(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' <FunctionToPointerDecay>
  |       | `-DeclRefExpr 0x5e96a18 <col:9> 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' lvalue Function 0x5be1160 'wmemcpy' 'wchar_t *(wchar_t *__restrict, const wchar_t *__restrict, size_t) throw()' (UsingShadow 0x5bf8328 'wmemcpy')
  |       |-ImplicitCastExpr 0x5e96ab8 <col:17> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e969b8 <col:17> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94e40 '__s1' 'std::char_traits<wchar_t>::char_type *'
  |       |-ImplicitCastExpr 0x5e96ad0 <col:23> 'const std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e969d8 <col:23> 'const std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e94eb8 '__s2' 'const std::char_traits<wchar_t>::char_type *'
  |       `-ImplicitCastExpr 0x5e96ae8 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
  |         `-DeclRefExpr 0x5e969f8 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e94f30 '__n' 'std::size_t':'unsigned long'
  |-CXXMethodDecl 0x5e952a8 <line:465:7, line:471:7> line:466:7 assign 'std::char_traits<wchar_t>::char_type *(std::char_traits<wchar_t>::char_type *, std::size_t, std::char_traits<wchar_t>::char_type)' static
  | |-ParmVarDecl 0x5e95098 <col:14, col:25> col:25 used __s 'std::char_traits<wchar_t>::char_type *'
  | |-ParmVarDecl 0x5e95110 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
  | |-ParmVarDecl 0x5e95188 <col:42, col:52> col:52 used __a 'std::char_traits<wchar_t>::char_type':'wchar_t'
  | `-CompoundStmt 0x5e97a20 <line:467:7, line:471:7>
  |   |-IfStmt 0x5e97838 <line:468:2, line:469:11>
  |   | |-BinaryOperator 0x5e977d0 <line:468:6, col:13> 'bool' '=='
  |   | | |-ImplicitCastExpr 0x5e977a0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5e97760 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e95110 '__n' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5e977b8 <col:13> 'unsigned long' <IntegralCast>
  |   | |   `-IntegerLiteral 0x5e97780 <col:13> 'int' 0
  |   | `-ReturnStmt 0x5e97828 <line:469:4, col:11>
  |   |   `-ImplicitCastExpr 0x5e97810 <col:11> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x5e977f0 <col:11> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e95098 '__s' 'std::char_traits<wchar_t>::char_type *'
  |   `-ReturnStmt 0x5e97a10 <line:470:2, col:30>
  |     `-CallExpr 0x5e97990 <col:9, col:30> 'wchar_t *'
  |       |-ImplicitCastExpr 0x5e97978 <col:9> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
  |       | `-DeclRefExpr 0x5e978f8 <col:9> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x5be1708 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x5bf8488 'wmemset')
  |       |-ImplicitCastExpr 0x5e979c8 <col:17> 'std::char_traits<wchar_t>::char_type *' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e97898 <col:17> 'std::char_traits<wchar_t>::char_type *' lvalue ParmVar 0x5e95098 '__s' 'std::char_traits<wchar_t>::char_type *'
  |       |-ImplicitCastExpr 0x5e979e0 <col:22> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e978b8 <col:22> 'std::char_traits<wchar_t>::char_type':'wchar_t' lvalue ParmVar 0x5e95188 '__a' 'std::char_traits<wchar_t>::char_type':'wchar_t'
  |       `-ImplicitCastExpr 0x5e979f8 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
  |         `-DeclRefExpr 0x5e978d8 <col:27> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e95110 '__n' 'std::size_t':'unsigned long'
  |-CXXMethodDecl 0x5e954e0 <line:473:7, line:475:32> line:474:7 constexpr to_char_type 'std::char_traits<wchar_t>::char_type (const std::char_traits<wchar_t>::int_type &) noexcept' static
  | |-ParmVarDecl 0x5e953e8 <col:20, col:36> col:36 used __c 'const std::char_traits<wchar_t>::int_type &'
  | `-CompoundStmt 0x5e97ad8 <line:475:7, col:32>
  |   `-ReturnStmt 0x5e97ac8 <col:9, col:29>
  |     `-CXXFunctionalCastExpr 0x5e97aa0 <col:16, col:29> 'std::char_traits<wchar_t>::char_type':'wchar_t' functional cast to std::char_traits<wchar_t>::char_type <NoOp>
  |       `-ImplicitCastExpr 0x5e97a88 <col:26> 'std::char_traits<wchar_t>::char_type':'wchar_t' <IntegralCast> part_of_explicit_cast
  |         `-ImplicitCastExpr 0x5e97a70 <col:26> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue> part_of_explicit_cast
  |           `-DeclRefExpr 0x5e97a50 <col:26> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x5e953e8 '__c' 'const std::char_traits<wchar_t>::int_type &'
  |-CXXMethodDecl 0x5e95690 <line:477:7, line:479:31> line:478:7 constexpr to_int_type 'std::char_traits<wchar_t>::int_type (const std::char_traits<wchar_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5e95598 <col:19, col:36> col:36 used __c 'const std::char_traits<wchar_t>::char_type &'
  | `-CompoundStmt 0x5e97b88 <line:479:7, col:31>
  |   `-ReturnStmt 0x5e97b78 <col:9, col:28>
  |     `-CXXFunctionalCastExpr 0x5e97b50 <col:16, col:28> 'std::char_traits<wchar_t>::int_type':'unsigned int' functional cast to std::char_traits<wchar_t>::int_type <NoOp>
  |       `-ImplicitCastExpr 0x5e97b38 <col:25> 'std::char_traits<wchar_t>::int_type':'unsigned int' <IntegralCast> part_of_explicit_cast
  |         `-ImplicitCastExpr 0x5e97b20 <col:25> 'std::char_traits<wchar_t>::char_type':'wchar_t' <LValueToRValue> part_of_explicit_cast
  |           `-DeclRefExpr 0x5e97b00 <col:25> 'const std::char_traits<wchar_t>::char_type':'const wchar_t' lvalue ParmVar 0x5e95598 '__c' 'const std::char_traits<wchar_t>::char_type &'
  |-CXXMethodDecl 0x5e958e0 <line:481:7, line:483:30> line:482:7 used constexpr eq_int_type 'bool (const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept' static
  | |-ParmVarDecl 0x5e95748 <col:19, col:35> col:35 used __c1 'const std::char_traits<wchar_t>::int_type &'
  | |-ParmVarDecl 0x5e957c0 <col:41, col:57> col:57 used __c2 'const std::char_traits<wchar_t>::int_type &'
  | `-CompoundStmt 0x5e97c40 <line:483:7, col:30>
  |   `-ReturnStmt 0x5e97c30 <col:9, col:24>
  |     `-BinaryOperator 0x5e97c10 <col:16, col:24> 'bool' '=='
  |       |-ImplicitCastExpr 0x5e97be0 <col:16> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue>
  |       | `-DeclRefExpr 0x5e97ba0 <col:16> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x5e95748 '__c1' 'const std::char_traits<wchar_t>::int_type &'
  |       `-ImplicitCastExpr 0x5e97bf8 <col:24> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue>
  |         `-DeclRefExpr 0x5e97bc0 <col:24> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x5e957c0 '__c2' 'const std::char_traits<wchar_t>::int_type &'
  |-CXXMethodDecl 0x5e959e0 <line:485:7, line:487:54> line:486:7 used constexpr eof 'std::char_traits<wchar_t>::int_type () noexcept' static
  | `-CompoundStmt 0x5e97ce8 <line:487:7, col:54>
  |   `-ReturnStmt 0x5e97cd8 <col:9, col:51>
  |     `-CXXStaticCastExpr 0x5e97ca8 <col:16, col:51> 'std::char_traits<wchar_t>::int_type':'unsigned int' static_cast<std::char_traits<wchar_t>::int_type> <NoOp>
  |       `-ParenExpr 0x5e97c78 <col:38, col:50> 'unsigned int'
  |         `-IntegerLiteral 0x5e97c58 <col:39> 'unsigned int' 4294967295
  `-CXXMethodDecl 0x5e95b90 <line:489:7, line:491:51> line:490:7 constexpr not_eof 'std::char_traits<wchar_t>::int_type (const std::char_traits<wchar_t>::int_type &) noexcept' static
    |-ParmVarDecl 0x5e95a90 <col:15, col:31> col:31 used __c 'const std::char_traits<wchar_t>::int_type &'
    `-CompoundStmt 0x5e97f70 <line:491:7, col:51>
      `-ReturnStmt 0x5e97f60 <col:9, col:46>
        `-ExprWithCleanups 0x5e97f48 <col:16, col:46> 'unsigned int'
          `-ConditionalOperator 0x5e97f18 <col:16, col:46> 'unsigned int'
            |-CallExpr 0x5e97e60 <col:16, col:38> 'bool'
            | |-ImplicitCastExpr 0x5e97e48 <col:16> 'bool (*)(const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x5e97d00 <col:16> 'bool (const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept' lvalue CXXMethod 0x5e958e0 'eq_int_type' 'bool (const std::char_traits<wchar_t>::int_type &, const std::char_traits<wchar_t>::int_type &) noexcept'
            | |-DeclRefExpr 0x5e97d20 <col:28> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x5e95a90 '__c' 'const std::char_traits<wchar_t>::int_type &'
            | `-MaterializeTemporaryExpr 0x5e97e90 <col:33, col:37> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue
            |   `-CallExpr 0x5e97dd0 <col:33, col:37> 'std::char_traits<wchar_t>::int_type':'unsigned int'
            |     `-ImplicitCastExpr 0x5e97db8 <col:33> 'std::char_traits<wchar_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
            |       `-DeclRefExpr 0x5e97d40 <col:33> 'std::char_traits<wchar_t>::int_type () noexcept' lvalue CXXMethod 0x5e959e0 'eof' 'std::char_traits<wchar_t>::int_type () noexcept'
            |-ImplicitCastExpr 0x5e97f00 <col:42> 'unsigned int' <IntegralCast>
            | `-IntegerLiteral 0x5e97ea8 <col:42> 'int' 0
            `-ImplicitCastExpr 0x5e97ee8 <col:46> 'std::char_traits<wchar_t>::int_type':'unsigned int' <LValueToRValue>
              `-DeclRefExpr 0x5e97ec8 <col:46> 'const std::char_traits<wchar_t>::int_type':'const unsigned int' lvalue ParmVar 0x5e95a90 '__c' 'const std::char_traits<wchar_t>::int_type &'
NamespaceDecl 0x5e97f88 prev 0x5e8d8c8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/cstdint:46:1, line:83:1> line:46:11 std
|-original Namespace 0x5b39a58 'std'
|-UsingDecl 0x5e98000 <line:48:3, col:11> col:11 ::int8_t
|-UsingShadowDecl 0x5e98058 <col:11> col:11 implicit Typedef 0x5b49440 'int8_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e980b0 <line:49:3, col:11> col:11 ::int16_t
|-UsingShadowDecl 0x5e98108 <col:11> col:11 implicit Typedef 0x5b49518 'int16_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e98160 <line:50:3, col:11> col:11 ::int32_t
|-UsingShadowDecl 0x5e981b8 <col:11> col:11 implicit Typedef 0x5b495f0 'int32_t'
| `-TypedefType 0x5b59ec0 'int32_t' sugar
|   |-Typedef 0x5b495f0 'int32_t'
|   `-BuiltinType 0x5aca300 'int'
|-UsingDecl 0x5e98210 <line:51:3, col:11> col:11 ::int64_t
|-UsingShadowDecl 0x5e98268 <col:11> col:11 implicit Typedef 0x5b496c8 'int64_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e982c0 <line:53:3, col:11> col:11 ::int_fast8_t
|-UsingShadowDecl 0x5e98318 <col:11> col:11 implicit Typedef 0x5b9bf40 'int_fast8_t'
| `-TypedefType 0x5bb0b50 'int_fast8_t' sugar
|   |-Typedef 0x5b9bf40 'int_fast8_t'
|   `-BuiltinType 0x5aca2c0 'signed char'
|-UsingDecl 0x5e98370 <line:54:3, col:11> col:11 ::int_fast16_t
|-UsingShadowDecl 0x5e983c8 <col:11> col:11 implicit Typedef 0x5b9bfb0 'int_fast16_t'
| `-TypedefType 0x5bb0cf0 'int_fast16_t' sugar
|   |-Typedef 0x5b9bfb0 'int_fast16_t'
|   `-BuiltinType 0x5aca320 'long'
|-UsingDecl 0x5e98420 <line:55:3, col:11> col:11 ::int_fast32_t
|-UsingShadowDecl 0x5e98478 <col:11> col:11 implicit Typedef 0x5b9c020 'int_fast32_t'
| `-TypedefType 0x5bb0e90 'int_fast32_t' sugar
|   |-Typedef 0x5b9c020 'int_fast32_t'
|   `-BuiltinType 0x5aca320 'long'
|-UsingDecl 0x5e984d0 <line:56:3, col:11> col:11 ::int_fast64_t
|-UsingShadowDecl 0x5e98528 <col:11> col:11 implicit Typedef 0x5b9c090 'int_fast64_t'
| `-TypedefType 0x5bb1030 'int_fast64_t' sugar
|   |-Typedef 0x5b9c090 'int_fast64_t'
|   `-BuiltinType 0x5aca320 'long'
|-UsingDecl 0x5e98580 <line:58:3, col:11> col:11 ::int_least8_t
|-UsingShadowDecl 0x5e985d8 <col:11> col:11 implicit Typedef 0x5b9bbc0 'int_least8_t'
| `-TypedefType 0x5baf510 'int_least8_t' sugar
|   |-Typedef 0x5b9bbc0 'int_least8_t'
|   `-BuiltinType 0x5aca2c0 'signed char'
|-UsingDecl 0x5e98630 <line:59:3, col:11> col:11 ::int_least16_t
|-UsingShadowDecl 0x5e98688 <col:11> col:11 implicit Typedef 0x5b9bc30 'int_least16_t'
| `-TypedefType 0x5baf6b0 'int_least16_t' sugar
|   |-Typedef 0x5b9bc30 'int_least16_t'
|   `-BuiltinType 0x5aca2e0 'short'
|-UsingDecl 0x5e986e0 <line:60:3, col:11> col:11 ::int_least32_t
|-UsingShadowDecl 0x5e98738 <col:11> col:11 implicit Typedef 0x5b9bca0 'int_least32_t'
| `-TypedefType 0x5baf800 'int_least32_t' sugar
|   |-Typedef 0x5b9bca0 'int_least32_t'
|   `-BuiltinType 0x5aca300 'int'
|-UsingDecl 0x5e98790 <line:61:3, col:11> col:11 ::int_least64_t
|-UsingShadowDecl 0x5e987e8 <col:11> col:11 implicit Typedef 0x5b9bd10 'int_least64_t'
| `-TypedefType 0x5baf950 'int_least64_t' sugar
|   |-Typedef 0x5b9bd10 'int_least64_t'
|   `-BuiltinType 0x5aca320 'long'
|-UsingDecl 0x5e98840 <line:63:3, col:11> col:11 ::intmax_t
|-UsingShadowDecl 0x5e98898 <col:11> col:11 implicit Typedef 0x5b9c3a0 'intmax_t'
| `-TypedefType 0x5bb14d0 'intmax_t' sugar
|   |-Typedef 0x5b9c3a0 'intmax_t'
|   `-BuiltinType 0x5aca320 'long'
|-UsingDecl 0x5e988f0 <line:64:3, col:11> col:11 ::intptr_t
|-UsingShadowDecl 0x5e98948 <col:11> col:11 implicit Typedef 0x5b9c2c0 'intptr_t'
| `-TypedefType 0x5bb11d0 'intptr_t' sugar
|   |-Typedef 0x5b9c2c0 'intptr_t'
|   `-BuiltinType 0x5aca320 'long'
|-UsingDecl 0x5e989a0 <line:66:3, col:11> col:11 ::uint8_t
|-UsingShadowDecl 0x5e989f8 <col:11> col:11 implicit Typedef 0x5b9ba00 'uint8_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e98a50 <line:67:3, col:11> col:11 ::uint16_t
|-UsingShadowDecl 0x5e98aa8 <col:11> col:11 implicit Typedef 0x5b9ba70 'uint16_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e98b00 <line:68:3, col:11> col:11 ::uint32_t
|-UsingShadowDecl 0x5e98b58 <col:11> col:11 implicit Typedef 0x5b9bae0 'uint32_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e98bb0 <line:69:3, col:11> col:11 ::uint64_t
|-UsingShadowDecl 0x5e98c08 <col:11> col:11 implicit Typedef 0x5b9bb50 'uint64_t'
| `-<<<NULL>>>
|-UsingDecl 0x5e98c60 <line:71:3, col:11> col:11 ::uint_fast8_t
|-UsingShadowDecl 0x5e98cb8 <col:11> col:11 implicit Typedef 0x5b9c100 'uint_fast8_t'
| `-TypedefType 0x5bb0c20 'uint_fast8_t' sugar
|   |-Typedef 0x5b9c100 'uint_fast8_t'
|   `-BuiltinType 0x5aca360 'unsigned char'
|-UsingDecl 0x5e98d10 <line:72:3, col:11> col:11 ::uint_fast16_t
|-UsingShadowDecl 0x5e98d68 <col:11> col:11 implicit Typedef 0x5b9c170 'uint_fast16_t'
| `-TypedefType 0x5bb0dc0 'uint_fast16_t' sugar
|   |-Typedef 0x5b9c170 'uint_fast16_t'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-UsingDecl 0x5e98dc0 <line:73:3, col:11> col:11 ::uint_fast32_t
|-UsingShadowDecl 0x5e98e18 <col:11> col:11 implicit Typedef 0x5b9c1e0 'uint_fast32_t'
| `-TypedefType 0x5bb0f60 'uint_fast32_t' sugar
|   |-Typedef 0x5b9c1e0 'uint_fast32_t'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-UsingDecl 0x5e98e70 <line:74:3, col:11> col:11 ::uint_fast64_t
|-UsingShadowDecl 0x5e98ec8 <col:11> col:11 implicit Typedef 0x5b9c250 'uint_fast64_t'
| `-TypedefType 0x5bb1100 'uint_fast64_t' sugar
|   |-Typedef 0x5b9c250 'uint_fast64_t'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-UsingDecl 0x5e98f20 <line:76:3, col:11> col:11 ::uint_least8_t
|-UsingShadowDecl 0x5e98f78 <col:11> col:11 implicit Typedef 0x5b9bd80 'uint_least8_t'
| `-TypedefType 0x5baf5e0 'uint_least8_t' sugar
|   |-Typedef 0x5b9bd80 'uint_least8_t'
|   `-BuiltinType 0x5aca360 'unsigned char'
|-UsingDecl 0x5e98fd0 <line:77:3, col:11> col:11 ::uint_least16_t
|-UsingShadowDecl 0x5e99028 <col:11> col:11 implicit Typedef 0x5b9bdf0 'uint_least16_t'
| `-TypedefType 0x5baf2c0 'uint_least16_t' sugar
|   |-Typedef 0x5b9bdf0 'uint_least16_t'
|   `-BuiltinType 0x5aca380 'unsigned short'
|-UsingDecl 0x5e99080 <line:78:3, col:11> col:11 ::uint_least32_t
|-UsingShadowDecl 0x5e990d8 <col:11> col:11 implicit Typedef 0x5b9be60 'uint_least32_t'
| `-TypedefType 0x5baf390 'uint_least32_t' sugar
|   |-Typedef 0x5b9be60 'uint_least32_t'
|   `-BuiltinType 0x5aca3a0 'unsigned int'
|-UsingDecl 0x5e99130 <line:79:3, col:11> col:11 ::uint_least64_t
|-UsingShadowDecl 0x5e99188 <col:11> col:11 implicit Typedef 0x5b9bed0 'uint_least64_t'
| `-TypedefType 0x5bafa20 'uint_least64_t' sugar
|   |-Typedef 0x5b9bed0 'uint_least64_t'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-UsingDecl 0x5e991e0 <line:81:3, col:11> col:11 ::uintmax_t
|-UsingShadowDecl 0x5e99238 <col:11> col:11 implicit Typedef 0x5b9c410 'uintmax_t'
| `-TypedefType 0x5bb15a0 'uintmax_t' sugar
|   |-Typedef 0x5b9c410 'uintmax_t'
|   `-BuiltinType 0x5aca3c0 'unsigned long'
|-UsingDecl 0x5e99290 <line:82:3, col:11> col:11 ::uintptr_t
`-UsingShadowDecl 0x5e992e8 <col:11> col:11 implicit Typedef 0x5b9c330 'uintptr_t'
  `-TypedefType 0x5ba86f0 'uintptr_t' sugar
    |-Typedef 0x5b9c330 'uintptr_t'
    `-BuiltinType 0x5aca3c0 'unsigned long'
NamespaceDecl 0x5e99358 prev 0x5e97f88 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/char_traits.h:503:1, line:702:1> line:503:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5e993c8 <col:31, col:56> Default
|-ClassTemplateSpecializationDecl 0x5e99428 parent 0x5e8d8c8 prev 0x5bd6040 <line:507:3, line:602:5> line:508:12 struct char_traits definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-TemplateArgument type 'char16_t'
| |-CXXRecordDecl 0x5e99628 <col:5, col:12> col:12 implicit struct char_traits
| |-TypedefDecl 0x5e996c8 <line:510:7, col:24> col:24 referenced char_type 'char16_t'
| | `-BuiltinType 0x5aca820 'char16_t'
| |-TypedefDecl 0x5e99730 <line:511:7, col:30> col:30 referenced int_type 'std::uint_least16_t':'unsigned short'
| | `-TypedefType 0x5ce1700 'std::uint_least16_t' sugar
| |   |-Typedef 0x5c27758 'uint_least16_t'
| |   `-BuiltinType 0x5aca380 'unsigned short'
| |-TypedefDecl 0x5e99798 <line:512:7, col:25> col:25 off_type 'std::streamoff':'long'
| | `-TypedefType 0x5bfaeb0 'std::streamoff' sugar
| |   |-Typedef 0x5bfa9a8 'streamoff'
| |   `-BuiltinType 0x5aca320 'long'
| |-TypedefDecl 0x5e99820 <line:513:7, col:28> col:28 pos_type 'std::u16streampos':'std::fpos<__mbstate_t>'
| | `-TypedefType 0x5e997f0 'std::u16streampos' sugar
| |   |-Typedef 0x5bfdef0 'u16streampos'
| |   `-TemplateSpecializationType 0x5bfde50 'fpos<mbstate_t>' sugar fpos
| |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
| |     `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
| |       `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
| |-TypedefDecl 0x5e99888 <line:514:7, col:25> col:25 state_type 'mbstate_t':'__mbstate_t'
| | `-TypedefType 0x5be1dd0 'mbstate_t' sugar
| |   |-Typedef 0x5bd84a8 'mbstate_t'
| |   `-TypedefType 0x5bb7240 '__mbstate_t' sugar
| |     |-Typedef 0x5bb7048 '__mbstate_t'
| |     `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
| |       `-RecordType 0x5bb6be0 '__mbstate_t'
| |         `-CXXRecord 0x5bb6b50 ''
| |-CXXMethodDecl 0x5e99b80 <line:516:7, line:518:22> line:517:7 used assign 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e99968 <col:14, col:25> col:25 used __c1 'std::char_traits<char16_t>::char_type &'
| | |-ParmVarDecl 0x5e99a38 <col:31, col:48> col:48 used __c2 'const std::char_traits<char16_t>::char_type &'
| | `-CompoundStmt 0x5ea06e8 <line:518:7, col:22>
| |   `-BinaryOperator 0x5ea06c8 <col:9, col:16> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue '='
| |     |-DeclRefExpr 0x5ea0670 <col:9> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue ParmVar 0x5e99968 '__c1' 'std::char_traits<char16_t>::char_type &'
| |     `-ImplicitCastExpr 0x5ea06b0 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| |       `-DeclRefExpr 0x5ea0690 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e99a38 '__c2' 'const std::char_traits<char16_t>::char_type &'
| |-CXXMethodDecl 0x5e99dd0 <line:520:7, line:522:30> line:521:7 used constexpr eq 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e99c40 <col:10, col:27> col:27 used __c1 'const std::char_traits<char16_t>::char_type &'
| | |-ParmVarDecl 0x5e99cb8 <col:33, col:50> col:50 used __c2 'const std::char_traits<char16_t>::char_type &'
| | `-CompoundStmt 0x5ea07d0 <line:522:7, col:30>
| |   `-ReturnStmt 0x5ea07c0 <col:9, col:24>
| |     `-BinaryOperator 0x5ea07a0 <col:16, col:24> 'bool' '=='
| |       |-ImplicitCastExpr 0x5ea0770 <col:16> 'int' <IntegralCast>
| |       | `-ImplicitCastExpr 0x5ea0740 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| |       |   `-DeclRefExpr 0x5ea0700 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e99c40 '__c1' 'const std::char_traits<char16_t>::char_type &'
| |       `-ImplicitCastExpr 0x5ea0788 <col:24> 'int' <IntegralCast>
| |         `-ImplicitCastExpr 0x5ea0758 <col:24> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| |           `-DeclRefExpr 0x5ea0720 <col:24> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e99cb8 '__c2' 'const std::char_traits<char16_t>::char_type &'
| |-CXXMethodDecl 0x5e99fa8 <line:524:7, line:526:29> line:525:7 used constexpr lt 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e99e90 <col:10, col:27> col:27 used __c1 'const std::char_traits<char16_t>::char_type &'
| | |-ParmVarDecl 0x5e99f08 <col:33, col:50> col:50 used __c2 'const std::char_traits<char16_t>::char_type &'
| | `-CompoundStmt 0x5ea08b8 <line:526:7, col:29>
| |   `-ReturnStmt 0x5ea08a8 <col:9, col:23>
| |     `-BinaryOperator 0x5ea0888 <col:16, col:23> 'bool' '<'
| |       |-ImplicitCastExpr 0x5ea0858 <col:16> 'int' <IntegralCast>
| |       | `-ImplicitCastExpr 0x5ea0828 <col:16> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| |       |   `-DeclRefExpr 0x5ea07e8 <col:16> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e99e90 '__c1' 'const std::char_traits<char16_t>::char_type &'
| |       `-ImplicitCastExpr 0x5ea0870 <col:23> 'int' <IntegralCast>
| |         `-ImplicitCastExpr 0x5ea0840 <col:23> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue>
| |           `-DeclRefExpr 0x5ea0808 <col:23> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e99f08 '__c2' 'const std::char_traits<char16_t>::char_type &'
| |-CXXMethodDecl 0x5e9a2e0 <line:528:7, line:537:7> line:529:7 compare 'int (const std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' static
| | |-ParmVarDecl 0x5e9a0c8 <col:15, col:32> col:32 used __s1 'const std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9a140 <col:38, col:55> col:55 used __s2 'const std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9a1b8 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x5ea0ee8 <line:530:7, line:537:7>
| |   |-ForStmt 0x5ea0e80 <line:531:2, line:535:13>
| |   | |-DeclStmt 0x5ea0980 <line:531:7, col:21>
| |   | | `-VarDecl 0x5ea08e0 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
| |   | |   `-ImplicitCastExpr 0x5ea0968 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
| |   | |     `-IntegerLiteral 0x5ea0948 <col:20> 'int' 0
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x5ea0a08 <col:23, col:29> 'bool' '<'
| |   | | |-ImplicitCastExpr 0x5ea09d8 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5ea0998 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x5ea08e0 '__i' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5ea09f0 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x5ea09b8 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9a1b8 '__n' 'std::size_t':'unsigned long'
| |   | |-UnaryOperator 0x5ea0a48 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   | | `-DeclRefExpr 0x5ea0a28 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x5ea08e0 '__i' 'std::size_t':'unsigned long'
| |   | `-IfStmt 0x5ea0e58 <line:532:4, line:535:13> has_else
| |   |   |-CallExpr 0x5ea0c10 <line:532:8, col:31> 'bool'
| |   |   | |-ImplicitCastExpr 0x5ea0bf8 <col:8> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   |   | | `-DeclRefExpr 0x5ea0a60 <col:8> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x5e99fa8 'lt' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   |   | |-ArraySubscriptExpr 0x5ea0af0 <col:11, col:19> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   |   | | |-ImplicitCastExpr 0x5ea0ac0 <col:11> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |   | | | `-DeclRefExpr 0x5ea0a80 <col:11> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a0c8 '__s1' 'const std::char_traits<char16_t>::char_type *'
| |   |   | | `-ImplicitCastExpr 0x5ea0ad8 <col:16> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |   | |   `-DeclRefExpr 0x5ea0aa0 <col:16> 'std::size_t':'unsigned long' lvalue Var 0x5ea08e0 '__i' 'std::size_t':'unsigned long'
| |   |   | `-ArraySubscriptExpr 0x5ea0b80 <col:22, col:30> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   |   |   |-ImplicitCastExpr 0x5ea0b50 <col:22> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |   |   | `-DeclRefExpr 0x5ea0b10 <col:22> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a140 '__s2' 'const std::char_traits<char16_t>::char_type *'
| |   |   |   `-ImplicitCastExpr 0x5ea0b68 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |   |     `-DeclRefExpr 0x5ea0b30 <col:27> 'std::size_t':'unsigned long' lvalue Var 0x5ea08e0 '__i' 'std::size_t':'unsigned long'
| |   |   |-ReturnStmt 0x5ea0c78 <line:533:6, col:14>
| |   |   | `-UnaryOperator 0x5ea0c60 <col:13, col:14> 'int' prefix '-'
| |   |   |   `-IntegerLiteral 0x5ea0c40 <col:14> 'int' 1
| |   |   `-IfStmt 0x5ea0e40 <line:534:9, line:535:13>
| |   |     |-CallExpr 0x5ea0de0 <line:534:13, col:36> 'bool'
| |   |     | |-ImplicitCastExpr 0x5ea0dc8 <col:13> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   |     | | `-DeclRefExpr 0x5ea0c88 <col:13> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x5e99fa8 'lt' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   |     | |-ArraySubscriptExpr 0x5ea0d18 <col:16, col:24> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   |     | | |-ImplicitCastExpr 0x5ea0ce8 <col:16> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |     | | | `-DeclRefExpr 0x5ea0ca8 <col:16> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a140 '__s2' 'const std::char_traits<char16_t>::char_type *'
| |   |     | | `-ImplicitCastExpr 0x5ea0d00 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |     | |   `-DeclRefExpr 0x5ea0cc8 <col:21> 'std::size_t':'unsigned long' lvalue Var 0x5ea08e0 '__i' 'std::size_t':'unsigned long'
| |   |     | `-ArraySubscriptExpr 0x5ea0da8 <col:27, col:35> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   |     |   |-ImplicitCastExpr 0x5ea0d78 <col:27> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |     |   | `-DeclRefExpr 0x5ea0d38 <col:27> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a0c8 '__s1' 'const std::char_traits<char16_t>::char_type *'
| |   |     |   `-ImplicitCastExpr 0x5ea0d90 <col:32> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |     |     `-DeclRefExpr 0x5ea0d58 <col:32> 'std::size_t':'unsigned long' lvalue Var 0x5ea08e0 '__i' 'std::size_t':'unsigned long'
| |   |     `-ReturnStmt 0x5ea0e30 <line:535:6, col:13>
| |   |       `-IntegerLiteral 0x5ea0e10 <col:13> 'int' 1
| |   `-ReturnStmt 0x5ea0ed8 <line:536:2, col:9>
| |     `-IntegerLiteral 0x5ea0eb8 <col:9> 'int' 0
| |-CXXMethodDecl 0x5e9a498 <line:539:7, line:546:7> line:540:7 length 'std::size_t (const std::char_traits<char16_t>::char_type *)' static
| | |-ParmVarDecl 0x5e9a3a8 <col:14, col:31> col:31 used __s 'const std::char_traits<char16_t>::char_type *'
| | `-CompoundStmt 0x5ea11d0 <line:541:7, line:546:7>
| |   |-DeclStmt 0x5ea0fb8 <line:542:2, col:16>
| |   | `-VarDecl 0x5ea0f18 <col:2, col:15> col:9 used __i 'std::size_t':'unsigned long' cinit
| |   |   `-ImplicitCastExpr 0x5ea0fa0 <col:15> 'std::size_t':'unsigned long' <IntegralCast>
| |   |     `-IntegerLiteral 0x5ea0f80 <col:15> 'int' 0
| |   |-WhileStmt 0x5ea1170 <line:543:2, line:544:6>
| |   | |-ExprWithCleanups 0x5ea1120 <line:543:9, col:34> 'bool'
| |   | | `-UnaryOperator 0x5ea1108 <col:9, col:34> 'bool' prefix '!' cannot overflow
| |   | |   `-CallExpr 0x5ea10c0 <col:10, col:34> 'bool'
| |   | |     |-ImplicitCastExpr 0x5ea10a8 <col:10> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   | |     | `-DeclRefExpr 0x5ea0fd0 <col:10> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x5e99dd0 'eq' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   | |     |-ArraySubscriptExpr 0x5ea1060 <col:13, col:20> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   | |     | |-ImplicitCastExpr 0x5ea1030 <col:13> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   | |     | | `-DeclRefExpr 0x5ea0ff0 <col:13> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a3a8 '__s' 'const std::char_traits<char16_t>::char_type *'
| |   | |     | `-ImplicitCastExpr 0x5ea1048 <col:17> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | |     |   `-DeclRefExpr 0x5ea1010 <col:17> 'std::size_t':'unsigned long' lvalue Var 0x5ea0f18 '__i' 'std::size_t':'unsigned long'
| |   | |     `-MaterializeTemporaryExpr 0x5ea10f0 <col:23, col:33> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   | |       `-CXXScalarValueInitExpr 0x5ea1090 <col:23, col:33> 'std::char_traits<char16_t>::char_type':'char16_t'
| |   | `-UnaryOperator 0x5ea1158 <line:544:4, col:6> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   |   `-DeclRefExpr 0x5ea1138 <col:6> 'std::size_t':'unsigned long' lvalue Var 0x5ea0f18 '__i' 'std::size_t':'unsigned long'
| |   `-ReturnStmt 0x5ea11c0 <line:545:2, col:9>
| |     `-ImplicitCastExpr 0x5ea11a8 <col:9> 'std::size_t':'unsigned long' <LValueToRValue>
| |       `-DeclRefExpr 0x5ea1188 <col:9> 'std::size_t':'unsigned long' lvalue Var 0x5ea0f18 '__i' 'std::size_t':'unsigned long'
| |-CXXMethodDecl 0x5e9a768 <line:548:7, line:555:7> line:549:7 find 'const std::char_traits<char16_t>::char_type *(const std::char_traits<char16_t>::char_type *, std::size_t, const std::char_traits<char16_t>::char_type &)' static
| | |-ParmVarDecl 0x5e9a550 <col:12, col:29> col:29 used __s 'const std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9a5c8 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5e9a640 <col:46, col:63> col:63 used __a 'const std::char_traits<char16_t>::char_type &'
| | `-CompoundStmt 0x5ea15d8 <line:550:7, line:555:7>
| |   |-ForStmt 0x5ea1558 <line:551:2, line:553:19>
| |   | |-DeclStmt 0x5ea12a8 <line:551:7, col:21>
| |   | | `-VarDecl 0x5ea1208 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
| |   | |   `-ImplicitCastExpr 0x5ea1290 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
| |   | |     `-IntegerLiteral 0x5ea1270 <col:20> 'int' 0
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x5ea1330 <col:23, col:29> 'bool' '<'
| |   | | |-ImplicitCastExpr 0x5ea1300 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5ea12c0 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x5ea1208 '__i' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5ea1318 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x5ea12e0 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9a5c8 '__n' 'std::size_t':'unsigned long'
| |   | |-UnaryOperator 0x5ea1370 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   | | `-DeclRefExpr 0x5ea1350 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x5ea1208 '__i' 'std::size_t':'unsigned long'
| |   | `-IfStmt 0x5ea1540 <line:552:4, line:553:19>
| |   |   |-CallExpr 0x5ea1470 <line:552:8, col:24> 'bool'
| |   |   | |-ImplicitCastExpr 0x5ea1458 <col:8> 'bool (*)(const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   |   | | `-DeclRefExpr 0x5ea1388 <col:8> 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x5e99dd0 'eq' 'bool (const std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   |   | |-ArraySubscriptExpr 0x5ea1418 <col:11, col:18> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue
| |   |   | | |-ImplicitCastExpr 0x5ea13e8 <col:11> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |   | | | `-DeclRefExpr 0x5ea13a8 <col:11> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a550 '__s' 'const std::char_traits<char16_t>::char_type *'
| |   |   | | `-ImplicitCastExpr 0x5ea1400 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |   | |   `-DeclRefExpr 0x5ea13c8 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x5ea1208 '__i' 'std::size_t':'unsigned long'
| |   |   | `-DeclRefExpr 0x5ea1438 <col:21> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e9a640 '__a' 'const std::char_traits<char16_t>::char_type &'
| |   |   `-ReturnStmt 0x5ea1530 <line:553:6, col:19>
| |   |     `-BinaryOperator 0x5ea1510 <col:13, col:19> 'const std::char_traits<char16_t>::char_type *' '+'
| |   |       |-ImplicitCastExpr 0x5ea14e0 <col:13> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x5ea14a0 <col:13> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a550 '__s' 'const std::char_traits<char16_t>::char_type *'
| |   |       `-ImplicitCastExpr 0x5ea14f8 <col:19> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |         `-DeclRefExpr 0x5ea14c0 <col:19> 'std::size_t':'unsigned long' lvalue Var 0x5ea1208 '__i' 'std::size_t':'unsigned long'
| |   `-ReturnStmt 0x5ea15c8 <line:554:2, col:9>
| |     `-ImplicitCastExpr 0x5ea15b0 <col:9> 'const std::char_traits<char16_t>::char_type *' <NullToPointer>
| |       `-IntegerLiteral 0x5ea1590 <col:9> 'int' 0
| |-CXXMethodDecl 0x5e9aa98 <line:557:7, line:564:7> line:558:7 move 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' static
| | |-ParmVarDecl 0x5e9a888 <col:12, col:23> col:23 used __s1 'std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9a900 <col:29, col:46> col:46 used __s2 'const std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9a978 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x5ea1920 <line:559:7, line:564:7>
| |   |-IfStmt 0x5ea16d0 <line:560:2, line:561:11>
| |   | |-BinaryOperator 0x5ea1668 <line:560:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5ea1638 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5ea15f8 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9a978 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5ea1650 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5ea1618 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5ea16c0 <line:561:4, col:11>
| |   |   `-ImplicitCastExpr 0x5ea16a8 <col:11> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x5ea1688 <col:11> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a888 '__s1' 'std::char_traits<char16_t>::char_type *'
| |   `-ReturnStmt 0x5ea1910 <line:562:2, line:563:59>
| |     `-ParenExpr 0x5ea18f0 <line:562:9, line:563:59> 'std::char_traits<char16_t>::char_type *'
| |       `-CXXStaticCastExpr 0x5ea18c0 <line:562:10, line:563:58> 'std::char_traits<char16_t>::char_type *' static_cast<std::char_traits<char16_t>::char_type *> <BitCast>
| |         `-CallExpr 0x5ea1818 <col:4, col:57> 'void *'
| |           |-ImplicitCastExpr 0x5ea1800 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x5ea16e8 <col:4> '<builtin fn type>' Function 0x5e48fc0 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
| |           |-ImplicitCastExpr 0x5ea1868 <col:22> 'void *' <BitCast>
| |           | `-ImplicitCastExpr 0x5ea1850 <col:22> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |           |   `-DeclRefExpr 0x5ea1708 <col:22> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a888 '__s1' 'std::char_traits<char16_t>::char_type *'
| |           |-ImplicitCastExpr 0x5ea1898 <col:28> 'const void *' <BitCast>
| |           | `-ImplicitCastExpr 0x5ea1880 <col:28> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |           |   `-DeclRefExpr 0x5ea1728 <col:28> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9a900 '__s2' 'const std::char_traits<char16_t>::char_type *'
| |           `-BinaryOperator 0x5ea17b0 <col:34, col:56> 'unsigned long' '*'
| |             |-ImplicitCastExpr 0x5ea1798 <col:34> 'std::size_t':'unsigned long' <LValueToRValue>
| |             | `-DeclRefExpr 0x5ea1748 <col:34> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9a978 '__n' 'std::size_t':'unsigned long'
| |             `-UnaryExprOrTypeTraitExpr 0x5ea1778 <col:40, col:56> 'unsigned long' sizeof 'std::char_traits<char16_t>::char_type':'char16_t'
| |-CXXMethodDecl 0x5e9acf0 <line:566:7, line:573:7> line:567:7 copy 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, const std::char_traits<char16_t>::char_type *, std::size_t)' static
| | |-ParmVarDecl 0x5e9ab60 <col:12, col:23> col:23 used __s1 'std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9abd8 <col:29, col:46> col:46 used __s2 'const std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9ac50 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
| | `-CompoundStmt 0x5ea1c68 <line:568:7, line:573:7>
| |   |-IfStmt 0x5ea1a18 <line:569:2, line:570:11>
| |   | |-BinaryOperator 0x5ea19b0 <line:569:6, col:13> 'bool' '=='
| |   | | |-ImplicitCastExpr 0x5ea1980 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5ea1940 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9ac50 '__n' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5ea1998 <col:13> 'unsigned long' <IntegralCast>
| |   | |   `-IntegerLiteral 0x5ea1960 <col:13> 'int' 0
| |   | `-ReturnStmt 0x5ea1a08 <line:570:4, col:11>
| |   |   `-ImplicitCastExpr 0x5ea19f0 <col:11> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |     `-DeclRefExpr 0x5ea19d0 <col:11> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9ab60 '__s1' 'std::char_traits<char16_t>::char_type *'
| |   `-ReturnStmt 0x5ea1c58 <line:571:2, line:572:58>
| |     `-ParenExpr 0x5ea1c38 <line:571:9, line:572:58> 'std::char_traits<char16_t>::char_type *'
| |       `-CXXStaticCastExpr 0x5ea1c08 <line:571:10, line:572:57> 'std::char_traits<char16_t>::char_type *' static_cast<std::char_traits<char16_t>::char_type *> <BitCast>
| |         `-CallExpr 0x5ea1b60 <col:4, col:56> 'void *'
| |           |-ImplicitCastExpr 0x5ea1b48 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
| |           | `-DeclRefExpr 0x5ea1a30 <col:4> '<builtin fn type>' Function 0x5e92b88 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
| |           |-ImplicitCastExpr 0x5ea1bb0 <col:21> 'void *' <BitCast>
| |           | `-ImplicitCastExpr 0x5ea1b98 <col:21> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |           |   `-DeclRefExpr 0x5ea1a50 <col:21> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9ab60 '__s1' 'std::char_traits<char16_t>::char_type *'
| |           |-ImplicitCastExpr 0x5ea1be0 <col:27> 'const void *' <BitCast>
| |           | `-ImplicitCastExpr 0x5ea1bc8 <col:27> 'const std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |           |   `-DeclRefExpr 0x5ea1a70 <col:27> 'const std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9abd8 '__s2' 'const std::char_traits<char16_t>::char_type *'
| |           `-BinaryOperator 0x5ea1af8 <col:33, col:55> 'unsigned long' '*'
| |             |-ImplicitCastExpr 0x5ea1ae0 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
| |             | `-DeclRefExpr 0x5ea1a90 <col:33> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9ac50 '__n' 'std::size_t':'unsigned long'
| |             `-UnaryExprOrTypeTraitExpr 0x5ea1ac0 <col:39, col:55> 'unsigned long' sizeof 'std::char_traits<char16_t>::char_type':'char16_t'
| |-CXXMethodDecl 0x5e9afc8 <line:575:7, line:581:7> line:576:7 assign 'std::char_traits<char16_t>::char_type *(std::char_traits<char16_t>::char_type *, std::size_t, std::char_traits<char16_t>::char_type)' static
| | |-ParmVarDecl 0x5e9adb8 <col:14, col:25> col:25 used __s 'std::char_traits<char16_t>::char_type *'
| | |-ParmVarDecl 0x5e9ae30 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
| | |-ParmVarDecl 0x5e9aea8 <col:42, col:52> col:52 used __a 'std::char_traits<char16_t>::char_type':'char16_t'
| | `-CompoundStmt 0x5ea2078 <line:577:7, line:581:7>
| |   |-ForStmt 0x5ea1ff8 <line:578:2, line:579:24>
| |   | |-DeclStmt 0x5ea1d38 <line:578:7, col:21>
| |   | | `-VarDecl 0x5ea1c98 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
| |   | |   `-ImplicitCastExpr 0x5ea1d20 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
| |   | |     `-IntegerLiteral 0x5ea1d00 <col:20> 'int' 0
| |   | |-<<<NULL>>>
| |   | |-BinaryOperator 0x5ea1dc0 <col:23, col:29> 'bool' '<'
| |   | | |-ImplicitCastExpr 0x5ea1d90 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | | | `-DeclRefExpr 0x5ea1d50 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x5ea1c98 '__i' 'std::size_t':'unsigned long'
| |   | | `-ImplicitCastExpr 0x5ea1da8 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
| |   | |   `-DeclRefExpr 0x5ea1d70 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5e9ae30 '__n' 'std::size_t':'unsigned long'
| |   | |-UnaryOperator 0x5ea1e00 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
| |   | | `-DeclRefExpr 0x5ea1de0 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x5ea1c98 '__i' 'std::size_t':'unsigned long'
| |   | `-CallExpr 0x5ea1fb0 <line:579:4, col:24> 'void'
| |   |   |-ImplicitCastExpr 0x5ea1f98 <col:4> 'void (*)(std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x5ea1f18 <col:4> 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept' lvalue CXXMethod 0x5e99b80 'assign' 'void (std::char_traits<char16_t>::char_type &, const std::char_traits<char16_t>::char_type &) noexcept'
| |   |   |-ArraySubscriptExpr 0x5ea1ed8 <col:11, col:18> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue
| |   |   | |-ImplicitCastExpr 0x5ea1ea8 <col:11> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |   |   | | `-DeclRefExpr 0x5ea1e68 <col:11> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9adb8 '__s' 'std::char_traits<char16_t>::char_type *'
| |   |   | `-ImplicitCastExpr 0x5ea1ec0 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
| |   |   |   `-DeclRefExpr 0x5ea1e88 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x5ea1c98 '__i' 'std::size_t':'unsigned long'
| |   |   `-ImplicitCastExpr 0x5ea1fe0 <col:21> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue <NoOp>
| |   |     `-DeclRefExpr 0x5ea1ef8 <col:21> 'std::char_traits<char16_t>::char_type':'char16_t' lvalue ParmVar 0x5e9aea8 '__a' 'std::char_traits<char16_t>::char_type':'char16_t'
| |   `-ReturnStmt 0x5ea2068 <line:580:2, col:9>
| |     `-ImplicitCastExpr 0x5ea2050 <col:9> 'std::char_traits<char16_t>::char_type *' <LValueToRValue>
| |       `-DeclRefExpr 0x5ea2030 <col:9> 'std::char_traits<char16_t>::char_type *' lvalue ParmVar 0x5e9adb8 '__s' 'std::char_traits<char16_t>::char_type *'
| |-CXXMethodDecl 0x5e9b200 <line:583:7, line:585:32> line:584:7 constexpr to_char_type 'std::char_traits<char16_t>::char_type (const std::char_traits<char16_t>::int_type &) noexcept' static
| | |-ParmVarDecl 0x5e9b108 <col:20, col:36> col:36 used __c 'const std::char_traits<char16_t>::int_type &'
| | `-CompoundStmt 0x5ea2130 <line:585:7, col:32>
| |   `-ReturnStmt 0x5ea2120 <col:9, col:29>
| |     `-CXXFunctionalCastExpr 0x5ea20f8 <col:16, col:29> 'std::char_traits<char16_t>::char_type':'char16_t' functional cast to std::char_traits<char16_t>::char_type <NoOp>
| |       `-ImplicitCastExpr 0x5ea20e0 <col:26> 'std::char_traits<char16_t>::char_type':'char16_t' <IntegralCast> part_of_explicit_cast
| |         `-ImplicitCastExpr 0x5ea20c8 <col:26> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue> part_of_explicit_cast
| |           `-DeclRefExpr 0x5ea20a8 <col:26> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x5e9b108 '__c' 'const std::char_traits<char16_t>::int_type &'
| |-CXXMethodDecl 0x5e9b3b0 <line:587:7, line:589:31> line:588:7 constexpr to_int_type 'std::char_traits<char16_t>::int_type (const std::char_traits<char16_t>::char_type &) noexcept' static
| | |-ParmVarDecl 0x5e9b2b8 <col:19, col:36> col:36 used __c 'const std::char_traits<char16_t>::char_type &'
| | `-CompoundStmt 0x5ea21e0 <line:589:7, col:31>
| |   `-ReturnStmt 0x5ea21d0 <col:9, col:28>
| |     `-CXXFunctionalCastExpr 0x5ea21a8 <col:16, col:28> 'std::char_traits<char16_t>::int_type':'unsigned short' functional cast to std::char_traits<char16_t>::int_type <NoOp>
| |       `-ImplicitCastExpr 0x5ea2190 <col:25> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast> part_of_explicit_cast
| |         `-ImplicitCastExpr 0x5ea2178 <col:25> 'std::char_traits<char16_t>::char_type':'char16_t' <LValueToRValue> part_of_explicit_cast
| |           `-DeclRefExpr 0x5ea2158 <col:25> 'const std::char_traits<char16_t>::char_type':'const char16_t' lvalue ParmVar 0x5e9b2b8 '__c' 'const std::char_traits<char16_t>::char_type &'
| |-CXXMethodDecl 0x5e9b600 <line:591:7, line:593:30> line:592:7 used constexpr eq_int_type 'bool (const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept' static
| | |-ParmVarDecl 0x5e9b468 <col:19, col:35> col:35 used __c1 'const std::char_traits<char16_t>::int_type &'
| | |-ParmVarDecl 0x5e9b4e0 <col:41, col:57> col:57 used __c2 'const std::char_traits<char16_t>::int_type &'
| | `-CompoundStmt 0x5ea22c8 <line:593:7, col:30>
| |   `-ReturnStmt 0x5ea22b8 <col:9, col:24>
| |     `-BinaryOperator 0x5ea2298 <col:16, col:24> 'bool' '=='
| |       |-ImplicitCastExpr 0x5ea2268 <col:16> 'int' <IntegralCast>
| |       | `-ImplicitCastExpr 0x5ea2238 <col:16> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue>
| |       |   `-DeclRefExpr 0x5ea21f8 <col:16> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x5e9b468 '__c1' 'const std::char_traits<char16_t>::int_type &'
| |       `-ImplicitCastExpr 0x5ea2280 <col:24> 'int' <IntegralCast>
| |         `-ImplicitCastExpr 0x5ea2250 <col:24> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue>
| |           `-DeclRefExpr 0x5ea2218 <col:24> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x5e9b4e0 '__c2' 'const std::char_traits<char16_t>::int_type &'
| |-CXXMethodDecl 0x5ea0400 <line:595:7, line:597:43> line:596:7 used constexpr eof 'std::char_traits<char16_t>::int_type () noexcept' static
| | `-CompoundStmt 0x5ea2380 <line:597:7, col:43>
| |   `-ReturnStmt 0x5ea2370 <col:9, col:40>
| |     `-CXXStaticCastExpr 0x5ea2340 <col:16, col:40> 'std::char_traits<char16_t>::int_type':'unsigned short' static_cast<std::char_traits<char16_t>::int_type> <NoOp>
| |       `-ImplicitCastExpr 0x5ea2328 <col:38, col:39> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast> part_of_explicit_cast
| |         `-UnaryOperator 0x5ea2300 <col:38, col:39> 'int' prefix '-'
| |           `-IntegerLiteral 0x5ea22e0 <col:39> 'int' 1
| `-CXXMethodDecl 0x5ea05b0 <line:599:7, line:601:51> line:600:7 constexpr not_eof 'std::char_traits<char16_t>::int_type (const std::char_traits<char16_t>::int_type &) noexcept' static
|   |-ParmVarDecl 0x5ea04b0 <col:15, col:31> col:31 used __c 'const std::char_traits<char16_t>::int_type &'
|   `-CompoundStmt 0x5ea2628 <line:601:7, col:51>
|     `-ReturnStmt 0x5ea2618 <col:9, col:46>
|       `-ExprWithCleanups 0x5ea2600 <col:16, col:46> 'std::char_traits<char16_t>::int_type':'unsigned short'
|         `-ImplicitCastExpr 0x5ea25e8 <col:16, col:46> 'std::char_traits<char16_t>::int_type':'unsigned short' <IntegralCast>
|           `-ConditionalOperator 0x5ea25b8 <col:16, col:46> 'int'
|             |-CallExpr 0x5ea2500 <col:16, col:38> 'bool'
|             | |-ImplicitCastExpr 0x5ea24e8 <col:16> 'bool (*)(const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x5ea2398 <col:16> 'bool (const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept' lvalue CXXMethod 0x5e9b600 'eq_int_type' 'bool (const std::char_traits<char16_t>::int_type &, const std::char_traits<char16_t>::int_type &) noexcept'
|             | |-DeclRefExpr 0x5ea23b8 <col:28> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x5ea04b0 '__c' 'const std::char_traits<char16_t>::int_type &'
|             | `-MaterializeTemporaryExpr 0x5ea2530 <col:33, col:37> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue
|             |   `-CallExpr 0x5ea2470 <col:33, col:37> 'std::char_traits<char16_t>::int_type':'unsigned short'
|             |     `-ImplicitCastExpr 0x5ea2458 <col:33> 'std::char_traits<char16_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
|             |       `-DeclRefExpr 0x5ea23d8 <col:33> 'std::char_traits<char16_t>::int_type () noexcept' lvalue CXXMethod 0x5ea0400 'eof' 'std::char_traits<char16_t>::int_type () noexcept'
|             |-IntegerLiteral 0x5ea2548 <col:42> 'int' 0
|             `-ImplicitCastExpr 0x5ea25a0 <col:46> 'int' <IntegralCast>
|               `-ImplicitCastExpr 0x5ea2588 <col:46> 'std::char_traits<char16_t>::int_type':'unsigned short' <LValueToRValue>
|                 `-DeclRefExpr 0x5ea2568 <col:46> 'const std::char_traits<char16_t>::int_type':'const unsigned short' lvalue ParmVar 0x5ea04b0 '__c' 'const std::char_traits<char16_t>::int_type &'
`-ClassTemplateSpecializationDecl 0x5ea2660 parent 0x5e8d8c8 prev 0x5bd6210 <line:604:3, line:699:5> line:605:12 struct char_traits definition
  |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
  | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
  | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor exists simple trivial needs_implicit
  | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveAssignment exists simple trivial needs_implicit
  | `-Destructor simple irrelevant trivial needs_implicit
  |-TemplateArgument type 'char32_t'
  |-CXXRecordDecl 0x5ea2868 <col:5, col:12> col:12 implicit struct char_traits
  |-TypedefDecl 0x5ea2908 <line:607:7, col:24> col:24 referenced char_type 'char32_t'
  | `-BuiltinType 0x5aca840 'char32_t'
  |-TypedefDecl 0x5ea2970 <line:608:7, col:30> col:30 referenced int_type 'std::uint_least32_t':'unsigned int'
  | `-TypedefType 0x5ce1ac0 'std::uint_least32_t' sugar
  |   |-Typedef 0x5c277d8 'uint_least32_t'
  |   `-BuiltinType 0x5aca3a0 'unsigned int'
  |-TypedefDecl 0x5ea29d8 <line:609:7, col:25> col:25 off_type 'std::streamoff':'long'
  | `-TypedefType 0x5bfaeb0 'std::streamoff' sugar
  |   |-Typedef 0x5bfa9a8 'streamoff'
  |   `-BuiltinType 0x5aca320 'long'
  |-TypedefDecl 0x5ea2a60 <line:610:7, col:28> col:28 pos_type 'std::u32streampos':'std::fpos<__mbstate_t>'
  | `-TypedefType 0x5ea2a30 'std::u32streampos' sugar
  |   |-Typedef 0x5bfe000 'u32streampos'
  |   `-TemplateSpecializationType 0x5bfdf60 'fpos<mbstate_t>' sugar fpos
  |     |-TemplateArgument type 'mbstate_t':'__mbstate_t'
  |     `-RecordType 0x5bfdc10 'std::fpos<__mbstate_t>'
  |       `-ClassTemplateSpecialization 0x5bfdb28 'fpos'
  |-TypedefDecl 0x5ea2ac8 <line:611:7, col:25> col:25 state_type 'mbstate_t':'__mbstate_t'
  | `-TypedefType 0x5be1dd0 'mbstate_t' sugar
  |   |-Typedef 0x5bd84a8 'mbstate_t'
  |   `-TypedefType 0x5bb7240 '__mbstate_t' sugar
  |     |-Typedef 0x5bb7048 '__mbstate_t'
  |     `-ElaboratedType 0x5bb6ff0 'struct __mbstate_t' sugar
  |       `-RecordType 0x5bb6be0 '__mbstate_t'
  |         `-CXXRecord 0x5bb6b50 ''
  |-CXXMethodDecl 0x5ea2dc0 <line:613:7, line:615:22> line:614:7 used assign 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5ea2ba8 <col:14, col:25> col:25 used __c1 'std::char_traits<char32_t>::char_type &'
  | |-ParmVarDecl 0x5ea2c78 <col:31, col:48> col:48 used __c2 'const std::char_traits<char32_t>::char_type &'
  | `-CompoundStmt 0x5ea5648 <line:615:7, col:22>
  |   `-BinaryOperator 0x5ea5628 <col:9, col:16> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue '='
  |     |-DeclRefExpr 0x5ea55d0 <col:9> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue ParmVar 0x5ea2ba8 '__c1' 'std::char_traits<char32_t>::char_type &'
  |     `-ImplicitCastExpr 0x5ea5610 <col:16> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
  |       `-DeclRefExpr 0x5ea55f0 <col:16> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea2c78 '__c2' 'const std::char_traits<char32_t>::char_type &'
  |-CXXMethodDecl 0x5ea3010 <line:617:7, line:619:30> line:618:7 used constexpr eq 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5ea2e80 <col:10, col:27> col:27 used __c1 'const std::char_traits<char32_t>::char_type &'
  | |-ParmVarDecl 0x5ea2ef8 <col:33, col:50> col:50 used __c2 'const std::char_traits<char32_t>::char_type &'
  | `-CompoundStmt 0x5ea5730 <line:619:7, col:30>
  |   `-ReturnStmt 0x5ea5720 <col:9, col:24>
  |     `-BinaryOperator 0x5ea5700 <col:16, col:24> 'bool' '=='
  |       |-ImplicitCastExpr 0x5ea56d0 <col:16> 'unsigned int' <IntegralCast>
  |       | `-ImplicitCastExpr 0x5ea56a0 <col:16> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
  |       |   `-DeclRefExpr 0x5ea5660 <col:16> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea2e80 '__c1' 'const std::char_traits<char32_t>::char_type &'
  |       `-ImplicitCastExpr 0x5ea56e8 <col:24> 'unsigned int' <IntegralCast>
  |         `-ImplicitCastExpr 0x5ea56b8 <col:24> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
  |           `-DeclRefExpr 0x5ea5680 <col:24> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea2ef8 '__c2' 'const std::char_traits<char32_t>::char_type &'
  |-CXXMethodDecl 0x5ea31e8 <line:621:7, line:623:29> line:622:7 used constexpr lt 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5ea30d0 <col:10, col:27> col:27 used __c1 'const std::char_traits<char32_t>::char_type &'
  | |-ParmVarDecl 0x5ea3148 <col:33, col:50> col:50 used __c2 'const std::char_traits<char32_t>::char_type &'
  | `-CompoundStmt 0x5ea5818 <line:623:7, col:29>
  |   `-ReturnStmt 0x5ea5808 <col:9, col:23>
  |     `-BinaryOperator 0x5ea57e8 <col:16, col:23> 'bool' '<'
  |       |-ImplicitCastExpr 0x5ea57b8 <col:16> 'unsigned int' <IntegralCast>
  |       | `-ImplicitCastExpr 0x5ea5788 <col:16> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
  |       |   `-DeclRefExpr 0x5ea5748 <col:16> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea30d0 '__c1' 'const std::char_traits<char32_t>::char_type &'
  |       `-ImplicitCastExpr 0x5ea57d0 <col:23> 'unsigned int' <IntegralCast>
  |         `-ImplicitCastExpr 0x5ea57a0 <col:23> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue>
  |           `-DeclRefExpr 0x5ea5768 <col:23> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea3148 '__c2' 'const std::char_traits<char32_t>::char_type &'
  |-CXXMethodDecl 0x5ea3520 <line:625:7, line:634:7> line:626:7 compare 'int (const std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' static
  | |-ParmVarDecl 0x5ea3308 <col:15, col:32> col:32 used __s1 'const std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea3380 <col:38, col:55> col:55 used __s2 'const std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea33f8 <col:61, col:68> col:68 used __n 'std::size_t':'unsigned long'
  | `-CompoundStmt 0x5ea5e48 <line:627:7, line:634:7>
  |   |-ForStmt 0x5ea5de0 <line:628:2, line:632:13>
  |   | |-DeclStmt 0x5ea58e0 <line:628:7, col:21>
  |   | | `-VarDecl 0x5ea5840 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
  |   | |   `-ImplicitCastExpr 0x5ea58c8 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
  |   | |     `-IntegerLiteral 0x5ea58a8 <col:20> 'int' 0
  |   | |-<<<NULL>>>
  |   | |-BinaryOperator 0x5ea5968 <col:23, col:29> 'bool' '<'
  |   | | |-ImplicitCastExpr 0x5ea5938 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5ea58f8 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x5ea5840 '__i' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5ea5950 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | |   `-DeclRefExpr 0x5ea5918 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea33f8 '__n' 'std::size_t':'unsigned long'
  |   | |-UnaryOperator 0x5ea59a8 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
  |   | | `-DeclRefExpr 0x5ea5988 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x5ea5840 '__i' 'std::size_t':'unsigned long'
  |   | `-IfStmt 0x5ea5db8 <line:629:4, line:632:13> has_else
  |   |   |-CallExpr 0x5ea5b70 <line:629:8, col:31> 'bool'
  |   |   | |-ImplicitCastExpr 0x5ea5b58 <col:8> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
  |   |   | | `-DeclRefExpr 0x5ea59c0 <col:8> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x5ea31e8 'lt' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
  |   |   | |-ArraySubscriptExpr 0x5ea5a50 <col:11, col:19> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   |   | | |-ImplicitCastExpr 0x5ea5a20 <col:11> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |   | | | `-DeclRefExpr 0x5ea59e0 <col:11> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3308 '__s1' 'const std::char_traits<char32_t>::char_type *'
  |   |   | | `-ImplicitCastExpr 0x5ea5a38 <col:16> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |   | |   `-DeclRefExpr 0x5ea5a00 <col:16> 'std::size_t':'unsigned long' lvalue Var 0x5ea5840 '__i' 'std::size_t':'unsigned long'
  |   |   | `-ArraySubscriptExpr 0x5ea5ae0 <col:22, col:30> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   |   |   |-ImplicitCastExpr 0x5ea5ab0 <col:22> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |   |   | `-DeclRefExpr 0x5ea5a70 <col:22> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3380 '__s2' 'const std::char_traits<char32_t>::char_type *'
  |   |   |   `-ImplicitCastExpr 0x5ea5ac8 <col:27> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |   |     `-DeclRefExpr 0x5ea5a90 <col:27> 'std::size_t':'unsigned long' lvalue Var 0x5ea5840 '__i' 'std::size_t':'unsigned long'
  |   |   |-ReturnStmt 0x5ea5bd8 <line:630:6, col:14>
  |   |   | `-UnaryOperator 0x5ea5bc0 <col:13, col:14> 'int' prefix '-'
  |   |   |   `-IntegerLiteral 0x5ea5ba0 <col:14> 'int' 1
  |   |   `-IfStmt 0x5ea5da0 <line:631:9, line:632:13>
  |   |     |-CallExpr 0x5ea5d40 <line:631:13, col:36> 'bool'
  |   |     | |-ImplicitCastExpr 0x5ea5d28 <col:13> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
  |   |     | | `-DeclRefExpr 0x5ea5be8 <col:13> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x5ea31e8 'lt' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
  |   |     | |-ArraySubscriptExpr 0x5ea5c78 <col:16, col:24> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   |     | | |-ImplicitCastExpr 0x5ea5c48 <col:16> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |     | | | `-DeclRefExpr 0x5ea5c08 <col:16> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3380 '__s2' 'const std::char_traits<char32_t>::char_type *'
  |   |     | | `-ImplicitCastExpr 0x5ea5c60 <col:21> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |     | |   `-DeclRefExpr 0x5ea5c28 <col:21> 'std::size_t':'unsigned long' lvalue Var 0x5ea5840 '__i' 'std::size_t':'unsigned long'
  |   |     | `-ArraySubscriptExpr 0x5ea5d08 <col:27, col:35> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   |     |   |-ImplicitCastExpr 0x5ea5cd8 <col:27> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |     |   | `-DeclRefExpr 0x5ea5c98 <col:27> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3308 '__s1' 'const std::char_traits<char32_t>::char_type *'
  |   |     |   `-ImplicitCastExpr 0x5ea5cf0 <col:32> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |     |     `-DeclRefExpr 0x5ea5cb8 <col:32> 'std::size_t':'unsigned long' lvalue Var 0x5ea5840 '__i' 'std::size_t':'unsigned long'
  |   |     `-ReturnStmt 0x5ea5d90 <line:632:6, col:13>
  |   |       `-IntegerLiteral 0x5ea5d70 <col:13> 'int' 1
  |   `-ReturnStmt 0x5ea5e38 <line:633:2, col:9>
  |     `-IntegerLiteral 0x5ea5e18 <col:9> 'int' 0
  |-CXXMethodDecl 0x5ea36d8 <line:636:7, line:643:7> line:637:7 length 'std::size_t (const std::char_traits<char32_t>::char_type *)' static
  | |-ParmVarDecl 0x5ea35e8 <col:14, col:31> col:31 used __s 'const std::char_traits<char32_t>::char_type *'
  | `-CompoundStmt 0x5ea6130 <line:638:7, line:643:7>
  |   |-DeclStmt 0x5ea5f18 <line:639:2, col:16>
  |   | `-VarDecl 0x5ea5e78 <col:2, col:15> col:9 used __i 'std::size_t':'unsigned long' cinit
  |   |   `-ImplicitCastExpr 0x5ea5f00 <col:15> 'std::size_t':'unsigned long' <IntegralCast>
  |   |     `-IntegerLiteral 0x5ea5ee0 <col:15> 'int' 0
  |   |-WhileStmt 0x5ea60d0 <line:640:2, line:641:6>
  |   | |-ExprWithCleanups 0x5ea6080 <line:640:9, col:34> 'bool'
  |   | | `-UnaryOperator 0x5ea6068 <col:9, col:34> 'bool' prefix '!' cannot overflow
  |   | |   `-CallExpr 0x5ea6020 <col:10, col:34> 'bool'
  |   | |     |-ImplicitCastExpr 0x5ea6008 <col:10> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
  |   | |     | `-DeclRefExpr 0x5ea5f30 <col:10> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x5ea3010 'eq' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
  |   | |     |-ArraySubscriptExpr 0x5ea5fc0 <col:13, col:20> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   | |     | |-ImplicitCastExpr 0x5ea5f90 <col:13> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   | |     | | `-DeclRefExpr 0x5ea5f50 <col:13> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea35e8 '__s' 'const std::char_traits<char32_t>::char_type *'
  |   | |     | `-ImplicitCastExpr 0x5ea5fa8 <col:17> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | |     |   `-DeclRefExpr 0x5ea5f70 <col:17> 'std::size_t':'unsigned long' lvalue Var 0x5ea5e78 '__i' 'std::size_t':'unsigned long'
  |   | |     `-MaterializeTemporaryExpr 0x5ea6050 <col:23, col:33> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   | |       `-CXXScalarValueInitExpr 0x5ea5ff0 <col:23, col:33> 'std::char_traits<char32_t>::char_type':'char32_t'
  |   | `-UnaryOperator 0x5ea60b8 <line:641:4, col:6> 'std::size_t':'unsigned long' lvalue prefix '++'
  |   |   `-DeclRefExpr 0x5ea6098 <col:6> 'std::size_t':'unsigned long' lvalue Var 0x5ea5e78 '__i' 'std::size_t':'unsigned long'
  |   `-ReturnStmt 0x5ea6120 <line:642:2, col:9>
  |     `-ImplicitCastExpr 0x5ea6108 <col:9> 'std::size_t':'unsigned long' <LValueToRValue>
  |       `-DeclRefExpr 0x5ea60e8 <col:9> 'std::size_t':'unsigned long' lvalue Var 0x5ea5e78 '__i' 'std::size_t':'unsigned long'
  |-CXXMethodDecl 0x5ea39a8 <line:645:7, line:652:7> line:646:7 find 'const std::char_traits<char32_t>::char_type *(const std::char_traits<char32_t>::char_type *, std::size_t, const std::char_traits<char32_t>::char_type &)' static
  | |-ParmVarDecl 0x5ea3790 <col:12, col:29> col:29 used __s 'const std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea3808 <col:34, col:41> col:41 used __n 'std::size_t':'unsigned long'
  | |-ParmVarDecl 0x5ea3880 <col:46, col:63> col:63 used __a 'const std::char_traits<char32_t>::char_type &'
  | `-CompoundStmt 0x5ea6538 <line:647:7, line:652:7>
  |   |-ForStmt 0x5ea64b8 <line:648:2, line:650:19>
  |   | |-DeclStmt 0x5ea6208 <line:648:7, col:21>
  |   | | `-VarDecl 0x5ea6168 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
  |   | |   `-ImplicitCastExpr 0x5ea61f0 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
  |   | |     `-IntegerLiteral 0x5ea61d0 <col:20> 'int' 0
  |   | |-<<<NULL>>>
  |   | |-BinaryOperator 0x5ea6290 <col:23, col:29> 'bool' '<'
  |   | | |-ImplicitCastExpr 0x5ea6260 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5ea6220 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x5ea6168 '__i' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5ea6278 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | |   `-DeclRefExpr 0x5ea6240 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea3808 '__n' 'std::size_t':'unsigned long'
  |   | |-UnaryOperator 0x5ea62d0 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
  |   | | `-DeclRefExpr 0x5ea62b0 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x5ea6168 '__i' 'std::size_t':'unsigned long'
  |   | `-IfStmt 0x5ea64a0 <line:649:4, line:650:19>
  |   |   |-CallExpr 0x5ea63d0 <line:649:8, col:24> 'bool'
  |   |   | |-ImplicitCastExpr 0x5ea63b8 <col:8> 'bool (*)(const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
  |   |   | | `-DeclRefExpr 0x5ea62e8 <col:8> 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x5ea3010 'eq' 'bool (const std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
  |   |   | |-ArraySubscriptExpr 0x5ea6378 <col:11, col:18> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue
  |   |   | | |-ImplicitCastExpr 0x5ea6348 <col:11> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |   | | | `-DeclRefExpr 0x5ea6308 <col:11> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3790 '__s' 'const std::char_traits<char32_t>::char_type *'
  |   |   | | `-ImplicitCastExpr 0x5ea6360 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |   | |   `-DeclRefExpr 0x5ea6328 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x5ea6168 '__i' 'std::size_t':'unsigned long'
  |   |   | `-DeclRefExpr 0x5ea6398 <col:21> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea3880 '__a' 'const std::char_traits<char32_t>::char_type &'
  |   |   `-ReturnStmt 0x5ea6490 <line:650:6, col:19>
  |   |     `-BinaryOperator 0x5ea6470 <col:13, col:19> 'const std::char_traits<char32_t>::char_type *' '+'
  |   |       |-ImplicitCastExpr 0x5ea6440 <col:13> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |       | `-DeclRefExpr 0x5ea6400 <col:13> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3790 '__s' 'const std::char_traits<char32_t>::char_type *'
  |   |       `-ImplicitCastExpr 0x5ea6458 <col:19> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |         `-DeclRefExpr 0x5ea6420 <col:19> 'std::size_t':'unsigned long' lvalue Var 0x5ea6168 '__i' 'std::size_t':'unsigned long'
  |   `-ReturnStmt 0x5ea6528 <line:651:2, col:9>
  |     `-ImplicitCastExpr 0x5ea6510 <col:9> 'const std::char_traits<char32_t>::char_type *' <NullToPointer>
  |       `-IntegerLiteral 0x5ea64f0 <col:9> 'int' 0
  |-CXXMethodDecl 0x5ea3cd8 <line:654:7, line:661:7> line:655:7 move 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' static
  | |-ParmVarDecl 0x5ea3ac8 <col:12, col:23> col:23 used __s1 'std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea3b40 <col:29, col:46> col:46 used __s2 'const std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea3bb8 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
  | `-CompoundStmt 0x5ea6880 <line:656:7, line:661:7>
  |   |-IfStmt 0x5ea6630 <line:657:2, line:658:11>
  |   | |-BinaryOperator 0x5ea65c8 <line:657:6, col:13> 'bool' '=='
  |   | | |-ImplicitCastExpr 0x5ea6598 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5ea6558 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea3bb8 '__n' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5ea65b0 <col:13> 'unsigned long' <IntegralCast>
  |   | |   `-IntegerLiteral 0x5ea6578 <col:13> 'int' 0
  |   | `-ReturnStmt 0x5ea6620 <line:658:4, col:11>
  |   |   `-ImplicitCastExpr 0x5ea6608 <col:11> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x5ea65e8 <col:11> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3ac8 '__s1' 'std::char_traits<char32_t>::char_type *'
  |   `-ReturnStmt 0x5ea6870 <line:659:2, line:660:59>
  |     `-ParenExpr 0x5ea6850 <line:659:9, line:660:59> 'std::char_traits<char32_t>::char_type *'
  |       `-CXXStaticCastExpr 0x5ea6820 <line:659:10, line:660:58> 'std::char_traits<char32_t>::char_type *' static_cast<std::char_traits<char32_t>::char_type *> <BitCast>
  |         `-CallExpr 0x5ea6778 <col:4, col:57> 'void *'
  |           |-ImplicitCastExpr 0x5ea6760 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
  |           | `-DeclRefExpr 0x5ea6648 <col:4> '<builtin fn type>' Function 0x5e48fc0 '__builtin_memmove' 'void *(void *, const void *, unsigned long) noexcept'
  |           |-ImplicitCastExpr 0x5ea67c8 <col:22> 'void *' <BitCast>
  |           | `-ImplicitCastExpr 0x5ea67b0 <col:22> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |           |   `-DeclRefExpr 0x5ea6668 <col:22> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3ac8 '__s1' 'std::char_traits<char32_t>::char_type *'
  |           |-ImplicitCastExpr 0x5ea67f8 <col:28> 'const void *' <BitCast>
  |           | `-ImplicitCastExpr 0x5ea67e0 <col:28> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |           |   `-DeclRefExpr 0x5ea6688 <col:28> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3b40 '__s2' 'const std::char_traits<char32_t>::char_type *'
  |           `-BinaryOperator 0x5ea6710 <col:34, col:56> 'unsigned long' '*'
  |             |-ImplicitCastExpr 0x5ea66f8 <col:34> 'std::size_t':'unsigned long' <LValueToRValue>
  |             | `-DeclRefExpr 0x5ea66a8 <col:34> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea3bb8 '__n' 'std::size_t':'unsigned long'
  |             `-UnaryExprOrTypeTraitExpr 0x5ea66d8 <col:40, col:56> 'unsigned long' sizeof 'std::char_traits<char32_t>::char_type':'char32_t'
  |-CXXMethodDecl 0x5ea3f30 <line:663:7, line:670:7> line:664:7 copy 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, const std::char_traits<char32_t>::char_type *, std::size_t)' static
  | |-ParmVarDecl 0x5ea3da0 <col:12, col:23> col:23 used __s1 'std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea3e18 <col:29, col:46> col:46 used __s2 'const std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea3e90 <col:52, col:59> col:59 used __n 'std::size_t':'unsigned long'
  | `-CompoundStmt 0x5ea6bc8 <line:665:7, line:670:7>
  |   |-IfStmt 0x5ea6978 <line:666:2, line:667:11>
  |   | |-BinaryOperator 0x5ea6910 <line:666:6, col:13> 'bool' '=='
  |   | | |-ImplicitCastExpr 0x5ea68e0 <col:6> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5ea68a0 <col:6> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea3e90 '__n' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5ea68f8 <col:13> 'unsigned long' <IntegralCast>
  |   | |   `-IntegerLiteral 0x5ea68c0 <col:13> 'int' 0
  |   | `-ReturnStmt 0x5ea6968 <line:667:4, col:11>
  |   |   `-ImplicitCastExpr 0x5ea6950 <col:11> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |     `-DeclRefExpr 0x5ea6930 <col:11> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3da0 '__s1' 'std::char_traits<char32_t>::char_type *'
  |   `-ReturnStmt 0x5ea6bb8 <line:668:2, line:669:58>
  |     `-ParenExpr 0x5ea6b98 <line:668:9, line:669:58> 'std::char_traits<char32_t>::char_type *'
  |       `-CXXStaticCastExpr 0x5ea6b68 <line:668:10, line:669:57> 'std::char_traits<char32_t>::char_type *' static_cast<std::char_traits<char32_t>::char_type *> <BitCast>
  |         `-CallExpr 0x5ea6ac0 <col:4, col:56> 'void *'
  |           |-ImplicitCastExpr 0x5ea6aa8 <col:4> 'void *(*)(void *, const void *, unsigned long) noexcept' <BuiltinFnToFnPtr>
  |           | `-DeclRefExpr 0x5ea6990 <col:4> '<builtin fn type>' Function 0x5e92b88 '__builtin_memcpy' 'void *(void *, const void *, unsigned long) noexcept'
  |           |-ImplicitCastExpr 0x5ea6b10 <col:21> 'void *' <BitCast>
  |           | `-ImplicitCastExpr 0x5ea6af8 <col:21> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |           |   `-DeclRefExpr 0x5ea69b0 <col:21> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3da0 '__s1' 'std::char_traits<char32_t>::char_type *'
  |           |-ImplicitCastExpr 0x5ea6b40 <col:27> 'const void *' <BitCast>
  |           | `-ImplicitCastExpr 0x5ea6b28 <col:27> 'const std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |           |   `-DeclRefExpr 0x5ea69d0 <col:27> 'const std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3e18 '__s2' 'const std::char_traits<char32_t>::char_type *'
  |           `-BinaryOperator 0x5ea6a58 <col:33, col:55> 'unsigned long' '*'
  |             |-ImplicitCastExpr 0x5ea6a40 <col:33> 'std::size_t':'unsigned long' <LValueToRValue>
  |             | `-DeclRefExpr 0x5ea69f0 <col:33> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea3e90 '__n' 'std::size_t':'unsigned long'
  |             `-UnaryExprOrTypeTraitExpr 0x5ea6a20 <col:39, col:55> 'unsigned long' sizeof 'std::char_traits<char32_t>::char_type':'char32_t'
  |-CXXMethodDecl 0x5ea4208 <line:672:7, line:678:7> line:673:7 assign 'std::char_traits<char32_t>::char_type *(std::char_traits<char32_t>::char_type *, std::size_t, std::char_traits<char32_t>::char_type)' static
  | |-ParmVarDecl 0x5ea3ff8 <col:14, col:25> col:25 used __s 'std::char_traits<char32_t>::char_type *'
  | |-ParmVarDecl 0x5ea4070 <col:30, col:37> col:37 used __n 'std::size_t':'unsigned long'
  | |-ParmVarDecl 0x5ea40e8 <col:42, col:52> col:52 used __a 'std::char_traits<char32_t>::char_type':'char32_t'
  | `-CompoundStmt 0x5ea6fd8 <line:674:7, line:678:7>
  |   |-ForStmt 0x5ea6f58 <line:675:2, line:676:24>
  |   | |-DeclStmt 0x5ea6c98 <line:675:7, col:21>
  |   | | `-VarDecl 0x5ea6bf8 <col:7, col:20> col:14 used __i 'std::size_t':'unsigned long' cinit
  |   | |   `-ImplicitCastExpr 0x5ea6c80 <col:20> 'std::size_t':'unsigned long' <IntegralCast>
  |   | |     `-IntegerLiteral 0x5ea6c60 <col:20> 'int' 0
  |   | |-<<<NULL>>>
  |   | |-BinaryOperator 0x5ea6d20 <col:23, col:29> 'bool' '<'
  |   | | |-ImplicitCastExpr 0x5ea6cf0 <col:23> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | | | `-DeclRefExpr 0x5ea6cb0 <col:23> 'std::size_t':'unsigned long' lvalue Var 0x5ea6bf8 '__i' 'std::size_t':'unsigned long'
  |   | | `-ImplicitCastExpr 0x5ea6d08 <col:29> 'std::size_t':'unsigned long' <LValueToRValue>
  |   | |   `-DeclRefExpr 0x5ea6cd0 <col:29> 'std::size_t':'unsigned long' lvalue ParmVar 0x5ea4070 '__n' 'std::size_t':'unsigned long'
  |   | |-UnaryOperator 0x5ea6d60 <col:34, col:36> 'std::size_t':'unsigned long' lvalue prefix '++'
  |   | | `-DeclRefExpr 0x5ea6d40 <col:36> 'std::size_t':'unsigned long' lvalue Var 0x5ea6bf8 '__i' 'std::size_t':'unsigned long'
  |   | `-CallExpr 0x5ea6f10 <line:676:4, col:24> 'void'
  |   |   |-ImplicitCastExpr 0x5ea6ef8 <col:4> 'void (*)(std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' <FunctionToPointerDecay>
  |   |   | `-DeclRefExpr 0x5ea6e78 <col:4> 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept' lvalue CXXMethod 0x5ea2dc0 'assign' 'void (std::char_traits<char32_t>::char_type &, const std::char_traits<char32_t>::char_type &) noexcept'
  |   |   |-ArraySubscriptExpr 0x5ea6e38 <col:11, col:18> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue
  |   |   | |-ImplicitCastExpr 0x5ea6e08 <col:11> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |   |   | | `-DeclRefExpr 0x5ea6dc8 <col:11> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3ff8 '__s' 'std::char_traits<char32_t>::char_type *'
  |   |   | `-ImplicitCastExpr 0x5ea6e20 <col:15> 'std::size_t':'unsigned long' <LValueToRValue>
  |   |   |   `-DeclRefExpr 0x5ea6de8 <col:15> 'std::size_t':'unsigned long' lvalue Var 0x5ea6bf8 '__i' 'std::size_t':'unsigned long'
  |   |   `-ImplicitCastExpr 0x5ea6f40 <col:21> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue <NoOp>
  |   |     `-DeclRefExpr 0x5ea6e58 <col:21> 'std::char_traits<char32_t>::char_type':'char32_t' lvalue ParmVar 0x5ea40e8 '__a' 'std::char_traits<char32_t>::char_type':'char32_t'
  |   `-ReturnStmt 0x5ea6fc8 <line:677:2, col:9>
  |     `-ImplicitCastExpr 0x5ea6fb0 <col:9> 'std::char_traits<char32_t>::char_type *' <LValueToRValue>
  |       `-DeclRefExpr 0x5ea6f90 <col:9> 'std::char_traits<char32_t>::char_type *' lvalue ParmVar 0x5ea3ff8 '__s' 'std::char_traits<char32_t>::char_type *'
  |-CXXMethodDecl 0x5ea4ed0 <line:680:7, line:682:32> line:681:7 constexpr to_char_type 'std::char_traits<char32_t>::char_type (const std::char_traits<char32_t>::int_type &) noexcept' static
  | |-ParmVarDecl 0x5ea4318 <col:20, col:36> col:36 used __c 'const std::char_traits<char32_t>::int_type &'
  | `-CompoundStmt 0x5ea7090 <line:682:7, col:32>
  |   `-ReturnStmt 0x5ea7080 <col:9, col:29>
  |     `-CXXFunctionalCastExpr 0x5ea7058 <col:16, col:29> 'std::char_traits<char32_t>::char_type':'char32_t' functional cast to std::char_traits<char32_t>::char_type <NoOp>
  |       `-ImplicitCastExpr 0x5ea7040 <col:26> 'std::char_traits<char32_t>::char_type':'char32_t' <IntegralCast> part_of_explicit_cast
  |         `-ImplicitCastExpr 0x5ea7028 <col:26> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue> part_of_explicit_cast
  |           `-DeclRefExpr 0x5ea7008 <col:26> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x5ea4318 '__c' 'const std::char_traits<char32_t>::int_type &'
  |-CXXMethodDecl 0x5ea5080 <line:684:7, line:686:31> line:685:7 constexpr to_int_type 'std::char_traits<char32_t>::int_type (const std::char_traits<char32_t>::char_type &) noexcept' static
  | |-ParmVarDecl 0x5ea4f88 <col:19, col:36> col:36 used __c 'const std::char_traits<char32_t>::char_type &'
  | `-CompoundStmt 0x5ea7140 <line:686:7, col:31>
  |   `-ReturnStmt 0x5ea7130 <col:9, col:28>
  |     `-CXXFunctionalCastExpr 0x5ea7108 <col:16, col:28> 'std::char_traits<char32_t>::int_type':'unsigned int' functional cast to std::char_traits<char32_t>::int_type <NoOp>
  |       `-ImplicitCastExpr 0x5ea70f0 <col:25> 'std::char_traits<char32_t>::int_type':'unsigned int' <IntegralCast> part_of_explicit_cast
  |         `-ImplicitCastExpr 0x5ea70d8 <col:25> 'std::char_traits<char32_t>::char_type':'char32_t' <LValueToRValue> part_of_explicit_cast
  |           `-DeclRefExpr 0x5ea70b8 <col:25> 'const std::char_traits<char32_t>::char_type':'const char32_t' lvalue ParmVar 0x5ea4f88 '__c' 'const std::char_traits<char32_t>::char_type &'
  |-CXXMethodDecl 0x5ea5290 <line:688:7, line:690:30> line:689:7 used constexpr eq_int_type 'bool (const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept' static
  | |-ParmVarDecl 0x5ea5138 <col:19, col:35> col:35 used __c1 'const std::char_traits<char32_t>::int_type &'
  | |-ParmVarDecl 0x5ea51b0 <col:41, col:57> col:57 used __c2 'const std::char_traits<char32_t>::int_type &'
  | `-CompoundStmt 0x5ea71f8 <line:690:7, col:30>
  |   `-ReturnStmt 0x5ea71e8 <col:9, col:24>
  |     `-BinaryOperator 0x5ea71c8 <col:16, col:24> 'bool' '=='
  |       |-ImplicitCastExpr 0x5ea7198 <col:16> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue>
  |       | `-DeclRefExpr 0x5ea7158 <col:16> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x5ea5138 '__c1' 'const std::char_traits<char32_t>::int_type &'
  |       `-ImplicitCastExpr 0x5ea71b0 <col:24> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue>
  |         `-DeclRefExpr 0x5ea7178 <col:24> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x5ea51b0 '__c2' 'const std::char_traits<char32_t>::int_type &'
  |-CXXMethodDecl 0x5ea5390 <line:692:7, line:694:43> line:693:7 used constexpr eof 'std::char_traits<char32_t>::int_type () noexcept' static
  | `-CompoundStmt 0x5ea72b0 <line:694:7, col:43>
  |   `-ReturnStmt 0x5ea72a0 <col:9, col:40>
  |     `-CXXStaticCastExpr 0x5ea7270 <col:16, col:40> 'std::char_traits<char32_t>::int_type':'unsigned int' static_cast<std::char_traits<char32_t>::int_type> <NoOp>
  |       `-ImplicitCastExpr 0x5ea7258 <col:38, col:39> 'std::char_traits<char32_t>::int_type':'unsigned int' <IntegralCast> part_of_explicit_cast
  |         `-UnaryOperator 0x5ea7230 <col:38, col:39> 'int' prefix '-'
  |           `-IntegerLiteral 0x5ea7210 <col:39> 'int' 1
  `-CXXMethodDecl 0x5ea5510 <line:696:7, line:698:51> line:697:7 constexpr not_eof 'std::char_traits<char32_t>::int_type (const std::char_traits<char32_t>::int_type &) noexcept' static
    |-ParmVarDecl 0x5ea5440 <col:15, col:31> col:31 used __c 'const std::char_traits<char32_t>::int_type &'
    `-CompoundStmt 0x5ea74e0 <line:698:7, col:51>
      `-ReturnStmt 0x5ea74d0 <col:9, col:46>
        `-ExprWithCleanups 0x5ea74b8 <col:16, col:46> 'unsigned int'
          `-ConditionalOperator 0x5ea7488 <col:16, col:46> 'unsigned int'
            |-CallExpr 0x5ea73d0 <col:16, col:38> 'bool'
            | |-ImplicitCastExpr 0x5ea73b8 <col:16> 'bool (*)(const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept' <FunctionToPointerDecay>
            | | `-DeclRefExpr 0x5ea72c8 <col:16> 'bool (const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept' lvalue CXXMethod 0x5ea5290 'eq_int_type' 'bool (const std::char_traits<char32_t>::int_type &, const std::char_traits<char32_t>::int_type &) noexcept'
            | |-DeclRefExpr 0x5ea72e8 <col:28> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x5ea5440 '__c' 'const std::char_traits<char32_t>::int_type &'
            | `-MaterializeTemporaryExpr 0x5ea7400 <col:33, col:37> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue
            |   `-CallExpr 0x5ea7370 <col:33, col:37> 'std::char_traits<char32_t>::int_type':'unsigned int'
            |     `-ImplicitCastExpr 0x5ea7358 <col:33> 'std::char_traits<char32_t>::int_type (*)() noexcept' <FunctionToPointerDecay>
            |       `-DeclRefExpr 0x5ea7308 <col:33> 'std::char_traits<char32_t>::int_type () noexcept' lvalue CXXMethod 0x5ea5390 'eof' 'std::char_traits<char32_t>::int_type () noexcept'
            |-ImplicitCastExpr 0x5ea7470 <col:42> 'unsigned int' <IntegralCast>
            | `-IntegerLiteral 0x5ea7418 <col:42> 'int' 0
            `-ImplicitCastExpr 0x5ea7458 <col:46> 'std::char_traits<char32_t>::int_type':'unsigned int' <LValueToRValue>
              `-DeclRefExpr 0x5ea7438 <col:46> 'const std::char_traits<char32_t>::int_type':'const unsigned int' lvalue ParmVar 0x5ea5440 '__c' 'const std::char_traits<char32_t>::int_type &'
LinkageSpecDecl 0x5ea7518 </usr/include/locale.h:32:1, line:206:1> line:32:8 C
|-CXXRecordDecl 0x5ea7568 <line:54:1, line:121:1> line:54:8 struct lconv definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5ea7688 <col:1, col:8> col:8 implicit struct lconv
| |-FieldDecl 0x5ea7730 <line:58:3, col:9> col:9 decimal_point 'char *'
| |-FieldDecl 0x5ea7798 <line:59:3, col:9> col:9 thousands_sep 'char *'
| |-FieldDecl 0x5ea7800 <line:65:3, col:9> col:9 grouping 'char *'
| |-FieldDecl 0x5ea7868 <line:71:3, col:9> col:9 int_curr_symbol 'char *'
| |-FieldDecl 0x5ea78d0 <line:72:3, col:9> col:9 currency_symbol 'char *'
| |-FieldDecl 0x5ea7938 <line:73:3, col:9> col:9 mon_decimal_point 'char *'
| |-FieldDecl 0x5ea79a0 <line:74:3, col:9> col:9 mon_thousands_sep 'char *'
| |-FieldDecl 0x5ea7a08 <line:75:3, col:9> col:9 mon_grouping 'char *'
| |-FieldDecl 0x5ea7a70 <line:76:3, col:9> col:9 positive_sign 'char *'
| |-FieldDecl 0x5ea7ad8 <line:77:3, col:9> col:9 negative_sign 'char *'
| |-FieldDecl 0x5ea7b38 <line:78:3, col:8> col:8 int_frac_digits 'char'
| |-FieldDecl 0x5ea7b98 <line:79:3, col:8> col:8 frac_digits 'char'
| |-FieldDecl 0x5ea7bf8 <line:81:3, col:8> col:8 p_cs_precedes 'char'
| |-FieldDecl 0x5ea7c58 <line:83:3, col:8> col:8 p_sep_by_space 'char'
| |-FieldDecl 0x5ea7cb8 <line:85:3, col:8> col:8 n_cs_precedes 'char'
| |-FieldDecl 0x5ea7d18 <line:87:3, col:8> col:8 n_sep_by_space 'char'
| |-FieldDecl 0x5ea7d78 <line:94:3, col:8> col:8 p_sign_posn 'char'
| |-FieldDecl 0x5ea7dd8 <line:95:3, col:8> col:8 n_sign_posn 'char'
| |-FieldDecl 0x5ea7e38 <line:98:3, col:8> col:8 int_p_cs_precedes 'char'
| |-FieldDecl 0x5ea7e98 <line:100:3, col:8> col:8 int_p_sep_by_space 'char'
| |-FieldDecl 0x5ea7ef8 <line:102:3, col:8> col:8 int_n_cs_precedes 'char'
| |-FieldDecl 0x5ea7f58 <line:104:3, col:8> col:8 int_n_sep_by_space 'char'
| |-FieldDecl 0x5ea7fb8 <line:111:3, col:8> col:8 int_p_sign_posn 'char'
| `-FieldDecl 0x5ea8018 <line:112:3, col:8> col:8 int_n_sign_posn 'char'
|-FunctionDecl 0x5ea8238 <line:125:1, col:70> col:14 setlocale 'char *(int, const char *) throw()' extern
| |-ParmVarDecl 0x5ea8098 <col:25, col:29> col:29 __category 'int'
| `-ParmVarDecl 0x5ea8118 <col:41, col:53> col:53 __locale 'const char *'
|-FunctionDecl 0x5ea8488 <line:128:1, col:47> col:22 localeconv 'struct lconv *() throw()' extern
|-FunctionDecl 0x5ea8760 <line:152:1, line:153:35> line:152:19 newlocale '__locale_t (int, const char *, __locale_t) throw()' extern
| |-ParmVarDecl 0x5ea8540 <col:30, col:34> col:34 __category_mask 'int'
| |-ParmVarDecl 0x5ea85c0 <col:51, col:63> col:63 __locale 'const char *'
| `-ParmVarDecl 0x5ea8638 <line:153:9, col:20> col:20 __base '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ea8920 <line:187:1, col:59> col:19 duplocale '__locale_t (__locale_t) throw()' extern
| `-ParmVarDecl 0x5ea8828 <col:30, col:41> col:41 __dataset '__locale_t':'struct __locale_struct *'
|-FunctionDecl 0x5ea8ad0 <line:191:1, col:54> col:13 freelocale 'void (__locale_t) throw()' extern
| `-ParmVarDecl 0x5ea89d8 <col:25, col:36> col:36 __dataset '__locale_t':'struct __locale_struct *'
`-FunctionDecl 0x5ea8c20 <line:198:1, col:59> col:19 uselocale '__locale_t (__locale_t) throw()' extern
  `-ParmVarDecl 0x5ea8b88 <col:30, col:41> col:41 __dataset '__locale_t':'struct __locale_struct *'
NamespaceDecl 0x5ea8cc8 prev 0x5e99358 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/clocale:51:1, line:56:1> line:51:11 std
|-original Namespace 0x5b39a58 'std'
|-UsingDecl 0x5ea8d40 <line:53:3, col:11> col:11 ::lconv
|-UsingShadowDecl 0x5ea8d98 <col:11> col:11 implicit CXXRecord 0x5ea7568 'lconv'
| `-RecordType 0x5ea7600 'lconv'
|   `-CXXRecord 0x5ea7568 'lconv'
|-UsingDecl 0x5ea8df0 <line:54:3, col:11> col:11 ::setlocale
|-UsingShadowDecl 0x5ea8e48 <col:11> col:11 implicit Function 0x5ea8238 'setlocale' 'char *(int, const char *) throw()'
|-UsingDecl 0x5ea9ec0 <line:55:3, col:11> col:11 ::localeconv
`-UsingShadowDecl 0x5ea9f18 <col:11> col:11 implicit Function 0x5ea8488 'localeconv' 'struct lconv *() throw()'
NamespaceDecl 0x5ea9f88 prev 0x5e79d20 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/x86_64-redhat-linux/bits/c++locale.h:48:1, line:55:1> line:48:11 __gnu_cxx
|-original Namespace 0x5b95a90 '__gnu_cxx'
|-VisibilityAttr 0x5ea9ff8 <col:37, col:62> Default
`-LinkageSpecDecl 0x5eaa058 <line:52:3, col:34> col:10 C
  `-FunctionDecl 0x5eaa128 <col:14, col:34> col:34 __uselocale 'typeof (uselocale)':'__locale_t (__locale_t) throw()'
    `-ParmVarDecl 0x5eaa1d8 <col:34> col:34 implicit '__locale_t':'struct __locale_struct *'
NamespaceDecl 0x5eaa268 prev 0x5ea8cc8 </opt/rh/devtoolset-7/root/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/x86_64-redhat-linux/bits/c++locale.h:58:1, line:112:1> line:58:11 std
|-original Namespace 0x5b39a58 'std'
|-VisibilityAttr 0x5eaa2d8 <col:31, col:56> Default
|-TypedefDecl 0x5eaa328 <line:62:3, col:22> col:22 referenced __c_locale '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5b46260 '__locale_t' sugar
|   |-Typedef 0x5b461f0 '__locale_t'
|   `-PointerType 0x5b461a0 'struct __locale_struct *'
|     `-ElaboratedType 0x5b46130 'struct __locale_struct' sugar
|       `-RecordType 0x5b45a80 '__locale_struct'
|         `-CXXRecord 0x5b459e8 '__locale_struct'
`-FunctionDecl 0x5eaa750 <line:68:3, line:109:3> line:69:3 __convert_from_v 'int (const std::__c_locale &, char *, const int, const char *, ...)' inline
  |-ParmVarDecl 0x5eaa408 <col:20, col:38> col:38 used __cloc 'const std::__c_locale &'
  | `-UnusedAttr 0x5eaa470 <col:61> unused
  |-ParmVarDecl 0x5eaa4c8 <line:70:6, col:12> col:12 used __out 'char *'
  |-ParmVarDecl 0x5eaa548 <line:71:6, col:16> col:16 used __size 'const int'
  | `-UnusedAttr 0x5eaa5b0 <col:39> unused
  |-ParmVarDecl 0x5eaa608 <line:72:6, col:18> col:18 used __fmt 'const char *'
  `-CompoundStmt 0x5eabc90 <line:73:3, line:109:3>
    |-DeclStmt 0x5eaa9c0 <line:75:5, col:54>
    | `-VarDecl 0x5eaa820 <col:5, col:53> col:16 used __old 'std::__c_locale':'struct __locale_struct *' cinit
    |   `-CallExpr 0x5eaa980 <col:24, col:53> '__locale_t':'struct __locale_struct *'
    |     |-ImplicitCastExpr 0x5eaa968 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x5eaa8c0 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x5eaa128 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'
    |     `-ImplicitCastExpr 0x5eaa9a8 <col:47> 'std::__c_locale':'struct __locale_struct *' <LValueToRValue>
    |       `-DeclRefExpr 0x5eaa8f0 <col:47> 'const std::__c_locale':'struct __locale_struct *const' lvalue ParmVar 0x5eaa408 '__cloc' 'const std::__c_locale &'
    |-DeclStmt 0x5eaaed0 <line:88:5, col:29>
    | `-VarDecl 0x5eaa9e8 <col:5, col:23> col:23 used __args '__builtin_va_list':'__va_list_tag [1]' callinit
    |   `-CXXConstructExpr 0x5eaaea8 <col:23> '__builtin_va_list':'__va_list_tag [1]' 'void () noexcept'
    |-CallExpr 0x5eab1c0 <line:89:5, col:37> 'void'
    | |-ImplicitCastExpr 0x5eab1a8 <col:5> 'void (*)(__va_list_tag *, ...) noexcept' <BuiltinFnToFnPtr>
    | | `-DeclRefExpr 0x5eab0f0 <col:5> '<builtin fn type>' Function 0x5eaafa0 '__builtin_va_start' 'void (__va_list_tag *, ...) noexcept'
    | |-ImplicitCastExpr 0x5eab1f0 <col:24> '__va_list_tag *' <ArrayToPointerDecay>
    | | `-DeclRefExpr 0x5eab110 <col:24> '__builtin_va_list':'__va_list_tag [1]' lvalue Var 0x5eaa9e8 '__args' '__builtin_va_list':'__va_list_tag [1]'
    | `-DeclRefExpr 0x5eab130 <col:32> 'const char *' lvalue ParmVar 0x5eaa608 '__fmt' 'const char *'
    |-DeclStmt 0x5eab870 <line:92:5, col:72>
    | `-VarDecl 0x5eab220 <col:5, col:71> col:15 used __ret 'const int' cinit
    |   `-CallExpr 0x5eab760 <col:23, col:71> 'int'
    |     |-ImplicitCastExpr 0x5eab748 <col:23> 'int (*)(char *, unsigned long, const char *, __va_list_tag *) noexcept' <BuiltinFnToFnPtr>
    |     | `-DeclRefExpr 0x5eab5e8 <col:23> '<builtin fn type>' Function 0x5eab328 '__builtin_vsnprintf' 'int (char *, unsigned long, const char *, __va_list_tag *) noexcept'
    |     |-ImplicitCastExpr 0x5eab7a0 <col:43> 'char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x5eab608 <col:43> 'char *' lvalue ParmVar 0x5eaa4c8 '__out' 'char *'
    |     |-ImplicitCastExpr 0x5eab7d0 <col:50> 'unsigned long' <IntegralCast>
    |     | `-ImplicitCastExpr 0x5eab7b8 <col:50> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x5eab628 <col:50> 'const int' lvalue ParmVar 0x5eaa548 '__size' 'const int'
    |     |-ImplicitCastExpr 0x5eab7e8 <col:58> 'const char *' <LValueToRValue>
    |     | `-DeclRefExpr 0x5eab648 <col:58> 'const char *' lvalue ParmVar 0x5eaa608 '__fmt' 'const char *'
    |     `-ImplicitCastExpr 0x5eab800 <col:65> '__va_list_tag *' <ArrayToPointerDecay>
    |       `-DeclRefExpr 0x5eab668 <col:65> '__builtin_va_list':'__va_list_tag [1]' lvalue Var 0x5eaa9e8 '__args' '__builtin_va_list':'__va_list_tag [1]'
    |-CallExpr 0x5eabb40 <line:97:5, col:28> 'void'
    | |-ImplicitCastExpr 0x5eabb28 <col:5> 'void (*)(__va_list_tag *) noexcept' <BuiltinFnToFnPtr>
    | | `-DeclRefExpr 0x5eaba90 <col:5> '<builtin fn type>' Function 0x5eab940 '__builtin_va_end' 'void (__va_list_tag *) noexcept'
    | `-ImplicitCastExpr 0x5eabb68 <col:22> '__va_list_tag *' <ArrayToPointerDecay>
    |   `-DeclRefExpr 0x5eabab0 <col:22> '__builtin_va_list':'__va_list_tag [1]' lvalue Var 0x5eaa9e8 '__args' '__builtin_va_list':'__va_list_tag [1]'
    |-CallExpr 0x5eabc08 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    | |-ImplicitCastExpr 0x5eabbf0 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5eabba0 <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x5eaa128 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'
    | `-ImplicitCastExpr 0x5eabc30 <col:28> 'std::__c_locale':'struct __locale_struct *' <LValueToRValue>
    |   `-DeclRefExpr 0x5eabbd0 <col:28> 'std::__c_locale':'struct __locale_struct *' lvalue Var 0x5eaa820 '__old' 'std::__c_locale':'struct __locale_struct *'
    `-ReturnStmt 0x5eabc80 <line:108:5, col:12>
      `-ImplicitCastExpr 0x5eabc68 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x5eabc48 <col:12> 'const int' lvalue Var 0x5eab220 '__ret' 'const int'
LinkageSpecDecl 0x5eabcf8 </usr/include/ctype.h:29:1, line:348:1> line:29:8 C
|-EnumDecl 0x5eabd48 <line:47:1, line:61:1> line:47:1
| |-EnumConstantDecl 0x5eac0f8 <line:49:3, col:62> col:3 _ISupper '(anonymous enum at /usr/include/ctype.h:47:1)'
| | `-ImplicitCastExpr 0x5eae4c0 <col:14, col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5eac0e0 <col:14, col:62> 'int'
| |     `-ParenExpr 0x5eac0c0 <col:14, col:62> 'int'
| |       `-ConditionalOperator 0x5eac090 <col:15, col:61> 'int'
| |         |-BinaryOperator 0x5eabe70 <col:15, col:21> 'bool' '<'
| |         | |-ParenExpr 0x5eabe30 <col:15, col:17> 'int'
| |         | | `-IntegerLiteral 0x5eabe10 <col:16> 'int' 0
| |         | `-IntegerLiteral 0x5eabe50 <col:21> 'int' 8
| |         |-ParenExpr 0x5eabf70 <col:25, col:41> 'int'
| |         | `-BinaryOperator 0x5eabf50 <col:26, col:40> 'int' '<<'
| |         |   |-ParenExpr 0x5eabf10 <col:26, col:35> 'int'
| |         |   | `-BinaryOperator 0x5eabef0 <col:27, col:34> 'int' '<<'
| |         |   |   |-IntegerLiteral 0x5eabe90 <col:27> 'int' 1
| |         |   |   `-ParenExpr 0x5eabed0 <col:32, col:34> 'int'
| |         |   |     `-IntegerLiteral 0x5eabeb0 <col:33> 'int' 0
| |         |   `-IntegerLiteral 0x5eabf30 <col:40> 'int' 8
| |         `-ParenExpr 0x5eac070 <col:45, col:61> 'int'
| |           `-BinaryOperator 0x5eac050 <col:46, col:60> 'int' '>>'
| |             |-ParenExpr 0x5eac010 <col:46, col:55> 'int'
| |             | `-BinaryOperator 0x5eabff0 <col:47, col:54> 'int' '<<'
| |             |   |-IntegerLiteral 0x5eabf90 <col:47> 'int' 1
| |             |   `-ParenExpr 0x5eabfd0 <col:52, col:54> 'int'
| |             |     `-IntegerLiteral 0x5eabfb0 <col:53> 'int' 0
| |             `-IntegerLiteral 0x5eac030 <col:60> 'int' 8
| |-EnumConstantDecl 0x5eac430 <line:50:3, col:62> col:3 _ISlower '(anonymous enum at /usr/include/ctype.h:47:1)'
| | `-ImplicitCastExpr 0x5eae4d8 <col:14, col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5eac418 <col:14, col:62> 'int'
| |     `-ParenExpr 0x5eac3f8 <col:14, col:62> 'int'
| |       `-ConditionalOperator 0x5eac3c8 <col:15, col:61> 'int'
| |         |-BinaryOperator 0x5eac1a8 <col:15, col:21> 'bool' '<'
| |         | |-ParenExpr 0x5eac168 <col:15, col:17> 'int'
| |         | | `-IntegerLiteral 0x5eac148 <col:16> 'int' 1
| |         | `-IntegerLiteral 0x5eac188 <col:21> 'int' 8
| |         |-ParenExpr 0x5eac2a8 <col:25, col:41> 'int'
| |         | `-BinaryOperator 0x5eac288 <col:26, col:40> 'int' '<<'
| |         |   |-ParenExpr 0x5eac248 <col:26, col:35> 'int'
| |         |   | `-BinaryOperator 0x5eac228 <col:27, col:34> 'int' '<<'
| |         |   |   |-IntegerLiteral 0x5eac1c8 <col:27> 'int' 1
| |         |   |   `-ParenExpr 0x5eac208 <col:32, col:34> 'int'
| |         |   |     `-IntegerLiteral 0x5eac1e8 <col:33> 'int' 1
| |         |   `-IntegerLiteral 0x5eac268 <col:40> 'int' 8
| |         `-ParenExpr 0x5eac3a8 <col:45, col:61> 'int'
| |           `-BinaryOperator 0x5eac388 <col:46, col:60> 'int' '>>'
| |             |-ParenExpr 0x5eac348 <col:46, col:55> 'int'
| |             | `-BinaryOperator 0x5eac328 <col:47, col:54> 'int' '<<'
| |             |   |-IntegerLiteral 0x5eac2c8 <col:47> 'int' 1
| |             |   `-ParenExpr 0x5eac308 <col:52, col:54> 'int'
| |             |     `-IntegerLiteral 0x5eac2e8 <col:53> 'int' 1
| |             `-IntegerLiteral 0x5eac368 <col:60> 'int' 8
| |-EnumConstantDecl 0x5eac768 <line:51:3, col:62> col:3 _ISalpha '(anonymous enum at /usr/include/ctype.h:47:1)'
| | `-ImplicitCastExpr 0x5eae4f0 <col:14, col:62> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5eac750